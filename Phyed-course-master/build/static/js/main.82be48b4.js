/*! For license information please see main.82be48b4.js.LICENSE.txt */
!function(){var e={7867:function(e,t,n){"use strict";var a=n(4707),s=i(Error);function i(e){return t.displayName=e.displayName||e.name,t;function t(t){return t&&(t=a.apply(null,arguments)),new e(t)}}e.exports=s,s.eval=i(EvalError),s.range=i(RangeError),s.reference=i(ReferenceError),s.syntax=i(SyntaxError),s.type=i(TypeError),s.uri=i(URIError),s.create=i},4707:function(e){!function(){var t;function n(e){for(var t,n,a,s,i=1,r=[].slice.call(arguments),o=0,l=e.length,c="",d=!1,u=!1,p=function(){return r[i++]},m=function(){for(var n="";/\d/.test(e[o]);)n+=e[o++],t=e[o];return n.length>0?parseInt(n):null};o<l;++o)if(t=e[o],d)switch(d=!1,"."==t?(u=!1,t=e[++o]):"0"==t&&"."==e[o+1]?(u=!0,t=e[o+=2]):u=!0,s=m(),t){case"b":c+=parseInt(p(),10).toString(2);break;case"c":c+="string"===typeof(n=p())||n instanceof String?n:String.fromCharCode(parseInt(n,10));break;case"d":c+=parseInt(p(),10);break;case"f":a=String(parseFloat(p()).toFixed(s||6)),c+=u?a:a.replace(/^0/,"");break;case"j":c+=JSON.stringify(p());break;case"o":c+="0"+parseInt(p(),10).toString(8);break;case"s":c+=p();break;case"x":c+="0x"+parseInt(p(),10).toString(16);break;case"X":c+="0x"+parseInt(p(),10).toString(16).toUpperCase();break;default:c+=t}else"%"===t?d=!0:c+=t;return c}(t=e.exports=n).format=n,t.vsprintf=function(e,t){return n.apply(null,[e].concat(t))},"undefined"!==typeof console&&"function"===typeof console.log&&(t.printf=function(){console.log(n.apply(null,arguments))})}()},478:function(e,t,n){var a=n(7424).default,s=n(861).default,i=n(1655).default,r=n(6389).default,o=n(6690).default,l=n(9728).default;function c(e){return e instanceof Map?e.clear=e.delete=e.set=function(){throw new Error("map is read-only")}:e instanceof Set&&(e.add=e.clear=e.delete=function(){throw new Error("set is read-only")}),Object.freeze(e),Object.getOwnPropertyNames(e).forEach((function(t){var n=e[t];"object"!=typeof n||Object.isFrozen(n)||c(n)})),e}var d=c,u=c;d.default=u;var p=function(){"use strict";function e(t){o(this,e),void 0===t.data&&(t.data={}),this.data=t.data,this.isMatchIgnored=!1}return l(e,[{key:"ignoreMatch",value:function(){this.isMatchIgnored=!0}}]),e}();function m(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function h(e){var t=Object.create(null);for(var n in e)t[n]=e[n];for(var a=arguments.length,s=new Array(a>1?a-1:0),i=1;i<a;i++)s[i-1]=arguments[i];return s.forEach((function(e){for(var n in e)t[n]=e[n]})),t}var f=function(e){return!!e.kind},g=function(){"use strict";function e(t,n){o(this,e),this.buffer="",this.classPrefix=n.classPrefix,t.walk(this)}return l(e,[{key:"addText",value:function(e){this.buffer+=m(e)}},{key:"openNode",value:function(e){if(f(e)){var t=e.kind;e.sublanguage||(t="".concat(this.classPrefix).concat(t)),this.span(t)}}},{key:"closeNode",value:function(e){f(e)&&(this.buffer+="</span>")}},{key:"value",value:function(){return this.buffer}},{key:"span",value:function(e){this.buffer+='<span class="'.concat(e,'">')}}]),e}(),x=function(e){"use strict";i(n,e);var t=r(n);function n(e){var a;return o(this,n),(a=t.call(this)).options=e,a}return l(n,[{key:"addKeyword",value:function(e,t){""!==e&&(this.openNode(t),this.addText(e),this.closeNode())}},{key:"addText",value:function(e){""!==e&&this.add(e)}},{key:"addSublanguage",value:function(e,t){var n=e.root;n.kind=t,n.sublanguage=!0,this.add(n)}},{key:"toHTML",value:function(){return new g(this,this.options).value()}},{key:"finalize",value:function(){return!0}}]),n}(function(){"use strict";function e(){o(this,e),this.rootNode={children:[]},this.stack=[this.rootNode]}return l(e,[{key:"top",get:function(){return this.stack[this.stack.length-1]}},{key:"root",get:function(){return this.rootNode}},{key:"add",value:function(e){this.top.children.push(e)}},{key:"openNode",value:function(e){var t={kind:e,children:[]};this.add(t),this.stack.push(t)}},{key:"closeNode",value:function(){if(this.stack.length>1)return this.stack.pop()}},{key:"closeAllNodes",value:function(){for(;this.closeNode(););}},{key:"toJSON",value:function(){return JSON.stringify(this.rootNode,null,4)}},{key:"walk",value:function(e){return this.constructor._walk(e,this.rootNode)}}],[{key:"_walk",value:function(e,t){var n=this;return"string"===typeof t?e.addText(t):t.children&&(e.openNode(t),t.children.forEach((function(t){return n._walk(e,t)})),e.closeNode(t)),e}},{key:"_collapse",value:function(t){"string"!==typeof t&&t.children&&(t.children.every((function(e){return"string"===typeof e}))?t.children=[t.children.join("")]:t.children.forEach((function(t){e._collapse(t)})))}}]),e}());function _(e){return e?"string"===typeof e?e:e.source:null}function b(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return"("+t.map((function(e){return _(e)})).join("|")+")"}var y=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;var v="[a-zA-Z]\\w*",N="[a-zA-Z_]\\w*",E="\\b\\d+(\\.\\d+)?",S="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",j="\\b(0b[01]+)",T={begin:"\\\\[\\s\\S]",relevance:0},w={className:"string",begin:"'",end:"'",illegal:"\\n",contains:[T]},I={className:"string",begin:'"',end:'"',illegal:"\\n",contains:[T]},C={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},O=function(e,t){var n=h({className:"comment",begin:e,end:t,contains:[]},arguments.length>2&&void 0!==arguments[2]?arguments[2]:{});return n.contains.push(C),n.contains.push({className:"doctag",begin:"(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):",relevance:0}),n},R=O("//","$"),A=O("/\\*","\\*/"),k=O("#","$"),D={className:"number",begin:E,relevance:0},P={className:"number",begin:S,relevance:0},M={className:"number",begin:j,relevance:0},L={className:"number",begin:E+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},F={begin:/(?=\/[^/\n]*\/)/,contains:[{className:"regexp",begin:/\//,end:/\/[gimuy]*/,illegal:/\n/,contains:[T,{begin:/\[/,end:/\]/,relevance:0,contains:[T]}]}]},U={className:"title",begin:v,relevance:0},B={className:"title",begin:N,relevance:0},G={begin:"\\.\\s*"+N,relevance:0},H=Object.freeze({__proto__:null,MATCH_NOTHING_RE:/\b\B/,IDENT_RE:v,UNDERSCORE_IDENT_RE:N,NUMBER_RE:E,C_NUMBER_RE:S,BINARY_NUMBER_RE:j,RE_STARTERS_RE:"!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",SHEBANG:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=/^#![ ]*\//;return e.binary&&(e.begin=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return _(e)})).join("")}(t,/.*\b/,e.binary,/\b.*/)),h({className:"meta",begin:t,end:/$/,relevance:0,"on:begin":function(e,t){0!==e.index&&t.ignoreMatch()}},e)},BACKSLASH_ESCAPE:T,APOS_STRING_MODE:w,QUOTE_STRING_MODE:I,PHRASAL_WORDS_MODE:C,COMMENT:O,C_LINE_COMMENT_MODE:R,C_BLOCK_COMMENT_MODE:A,HASH_COMMENT_MODE:k,NUMBER_MODE:D,C_NUMBER_MODE:P,BINARY_NUMBER_MODE:M,CSS_NUMBER_MODE:L,REGEXP_MODE:F,TITLE_MODE:U,UNDERSCORE_TITLE_MODE:B,METHOD_GUARD:G,END_SAME_AS_BEGIN:function(e){return Object.assign(e,{"on:begin":function(e,t){t.data._beginMatch=e[1]},"on:end":function(e,t){t.data._beginMatch!==e[1]&&t.ignoreMatch()}})}});function z(e,t){"."===e.input[e.index-1]&&t.ignoreMatch()}function Y(e,t){t&&e.beginKeywords&&(e.begin="\\b("+e.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",e.__beforeBegin=z,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,void 0===e.relevance&&(e.relevance=0))}function q(e,t){Array.isArray(e.illegal)&&(e.illegal=b.apply(void 0,s(e.illegal)))}function V(e,t){if(e.match){if(e.begin||e.end)throw new Error("begin & end are not supported with match");e.begin=e.match,delete e.match}}function W(e,t){void 0===e.relevance&&(e.relevance=1)}var Q=["of","and","for","in","not","or","if","then","parent","list","value"],$="keyword";function K(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:$,a={};return"string"===typeof e?s(n,e.split(" ")):Array.isArray(e)?s(n,e):Object.keys(e).forEach((function(n){Object.assign(a,K(e[n],t,n))})),a;function s(e,n){t&&(n=n.map((function(e){return e.toLowerCase()}))),n.forEach((function(t){var n=t.split("|");a[n[0]]=[e,X(n[0],n[1])]}))}}function X(e,t){return t?Number(t):function(e){return Q.includes(e.toLowerCase())}(e)?0:1}function Z(e,t){t.plugins;function n(t,n){return new RegExp(_(t),"m"+(e.case_insensitive?"i":"")+(n?"g":""))}var i=function(){"use strict";function e(){o(this,e),this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}return l(e,[{key:"addRule",value:function(e,t){t.position=this.position++,this.matchIndexes[this.matchAt]=t,this.regexes.push([t,e]),this.matchAt+=function(e){return new RegExp(e.toString()+"|").exec("").length-1}(e)+1}},{key:"compile",value:function(){0===this.regexes.length&&(this.exec=function(){return null});var e=this.regexes.map((function(e){return e[1]}));this.matcherRe=n(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"|",n=0;return e.map((function(e){for(var t=n+=1,a=_(e),s="";a.length>0;){var i=y.exec(a);if(!i){s+=a;break}s+=a.substring(0,i.index),a=a.substring(i.index+i[0].length),"\\"===i[0][0]&&i[1]?s+="\\"+String(Number(i[1])+t):(s+=i[0],"("===i[0]&&n++)}return s})).map((function(e){return"(".concat(e,")")})).join(t)}(e),!0),this.lastIndex=0}},{key:"exec",value:function(e){this.matcherRe.lastIndex=this.lastIndex;var t=this.matcherRe.exec(e);if(!t)return null;var n=t.findIndex((function(e,t){return t>0&&void 0!==e})),a=this.matchIndexes[n];return t.splice(0,n),Object.assign(t,a)}}]),e}(),r=function(){"use strict";function e(){o(this,e),this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}return l(e,[{key:"getMatcher",value:function(e){if(this.multiRegexes[e])return this.multiRegexes[e];var t=new i;return this.rules.slice(e).forEach((function(e){var n=a(e,2),s=n[0],i=n[1];return t.addRule(s,i)})),t.compile(),this.multiRegexes[e]=t,t}},{key:"resumingScanAtSamePosition",value:function(){return 0!==this.regexIndex}},{key:"considerAll",value:function(){this.regexIndex=0}},{key:"addRule",value:function(e,t){this.rules.push([e,t]),"begin"===t.type&&this.count++}},{key:"exec",value:function(e){var t=this.getMatcher(this.regexIndex);t.lastIndex=this.lastIndex;var n=t.exec(e);if(this.resumingScanAtSamePosition())if(n&&n.index===this.lastIndex);else{var a=this.getMatcher(0);a.lastIndex=this.lastIndex+1,n=a.exec(e)}return n&&(this.regexIndex+=n.position+1,this.regexIndex===this.count&&this.considerAll()),n}}]),e}();if(e.compilerExtensions||(e.compilerExtensions=[]),e.contains&&e.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return e.classNameAliases=h(e.classNameAliases||{}),function t(a,i){var o,l=a;if(a.isCompiled)return l;[V].forEach((function(e){return e(a,i)})),e.compilerExtensions.forEach((function(e){return e(a,i)})),a.__beforeBegin=null,[Y,q,W].forEach((function(e){return e(a,i)})),a.isCompiled=!0;var c=null;if("object"===typeof a.keywords&&(c=a.keywords.$pattern,delete a.keywords.$pattern),a.keywords&&(a.keywords=K(a.keywords,e.case_insensitive)),a.lexemes&&c)throw new Error("ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) ");return c=c||a.lexemes||/\w+/,l.keywordPatternRe=n(c,!0),i&&(a.begin||(a.begin=/\B|\b/),l.beginRe=n(a.begin),a.endSameAsBegin&&(a.end=a.begin),a.end||a.endsWithParent||(a.end=/\B|\b/),a.end&&(l.endRe=n(a.end)),l.terminatorEnd=_(a.end)||"",a.endsWithParent&&i.terminatorEnd&&(l.terminatorEnd+=(a.end?"|":"")+i.terminatorEnd)),a.illegal&&(l.illegalRe=n(a.illegal)),a.contains||(a.contains=[]),a.contains=(o=[]).concat.apply(o,s(a.contains.map((function(e){return function(e){e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map((function(t){return h(e,{variants:null},t)})));if(e.cachedVariants)return e.cachedVariants;if(J(e))return h(e,{starts:e.starts?h(e.starts):null});if(Object.isFrozen(e))return h(e);return e}("self"===e?a:e)})))),a.contains.forEach((function(e){t(e,l)})),a.starts&&t(a.starts,i),l.matcher=function(e){var t=new r;return e.contains.forEach((function(e){return t.addRule(e.begin,{rule:e,type:"begin"})})),e.terminatorEnd&&t.addRule(e.terminatorEnd,{type:"end"}),e.illegal&&t.addRule(e.illegal,{type:"illegal"}),t}(l),l}(e)}function J(e){return!!e&&(e.endsWithParent||J(e.starts))}function ee(e){var t={props:["language","code","autodetect"],data:function(){return{detectedLanguage:"",unknownLanguage:!1}},computed:{className:function(){return this.unknownLanguage?"":"hljs "+this.detectedLanguage},highlighted:function(){if(!this.autoDetect&&!e.getLanguage(this.language))return console.warn('The language "'.concat(this.language,'" you specified could not be found.')),this.unknownLanguage=!0,m(this.code);var t={};return this.autoDetect?(t=e.highlightAuto(this.code),this.detectedLanguage=t.language):(t=e.highlight(this.language,this.code,this.ignoreIllegals),this.detectedLanguage=this.language),t.value},autoDetect:function(){return!this.language||(e=this.autodetect,Boolean(e||""===e));var e},ignoreIllegals:function(){return!0}},render:function(e){return e("pre",{},[e("code",{class:this.className,domProps:{innerHTML:this.highlighted}})])}};return{Component:t,VuePlugin:{install:function(e){e.component("highlightjs",t)}}}}var te={"after:highlightElement":function(e){var t=e.el,n=e.result,a=e.text,s=ae(t);if(s.length){var i=document.createElement("div");i.innerHTML=n.value,n.value=function(e,t,n){var a=0,s="",i=[];function r(){return e.length&&t.length?e[0].offset!==t[0].offset?e[0].offset<t[0].offset?e:t:"start"===t[0].event?e:t:e.length?e:t}function o(e){function t(e){return" "+e.nodeName+'="'+m(e.value)+'"'}s+="<"+ne(e)+[].map.call(e.attributes,t).join("")+">"}function l(e){s+="</"+ne(e)+">"}function c(e){("start"===e.event?o:l)(e.node)}for(;e.length||t.length;){var d=r();if(s+=m(n.substring(a,d[0].offset)),a=d[0].offset,d===e){i.reverse().forEach(l);do{c(d.splice(0,1)[0]),d=r()}while(d===e&&d.length&&d[0].offset===a);i.reverse().forEach(o)}else"start"===d[0].event?i.push(d[0].node):i.pop(),c(d.splice(0,1)[0])}return s+m(n.substr(a))}(s,ae(i),a)}}};function ne(e){return e.nodeName.toLowerCase()}function ae(e){var t=[];return function e(n,a){for(var s=n.firstChild;s;s=s.nextSibling)3===s.nodeType?a+=s.nodeValue.length:1===s.nodeType&&(t.push({event:"start",offset:a,node:s}),a=e(s,a),ne(s).match(/br|hr|img|input/)||t.push({event:"stop",offset:a,node:s}));return a}(e,0),t}var se={},ie=function(e){console.error(e)},re=function(e){for(var t,n=arguments.length,a=new Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];(t=console).log.apply(t,["WARN: ".concat(e)].concat(a))},oe=function(e,t){se["".concat(e,"/").concat(t)]||(console.log("Deprecated as of ".concat(e,". ").concat(t)),se["".concat(e,"/").concat(t)]=!0)},le=m,ce=h,de=Symbol("nomatch"),ue=function(e){var t=Object.create(null),n=Object.create(null),s=[],i=!0,r=/(^(<[^>]+>|\t|)+|\n)/gm,o="Could not find the language '{}', did you forget to load/include a language module?",l={disableAutodetect:!0,name:"Plain text",contains:[]},c={noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:null,__emitter:x};function u(e){return c.noHighlightRe.test(e)}function m(e,t,n,a){var s="",i="";"object"===typeof t?(s=e,n=t.ignoreIllegals,i=t.language,a=void 0):(oe("10.7.0","highlight(lang, code, ...args) has been deprecated."),oe("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),i=e,s=t);var r={code:s,language:i};T("before:highlight",r);var o=r.result?r.result:h(r.language,r.code,n,a);return o.code=r.code,T("after:highlight",o),o}function h(e,n,r,l){function d(e,t){var n=N.case_insensitive?t[0].toLowerCase():t[0];return Object.prototype.hasOwnProperty.call(e.keywords,n)&&e.keywords[n]}function u(){null!=T.subLanguage?function(){if(""!==C){var e=null;if("string"===typeof T.subLanguage){if(!t[T.subLanguage])return void I.addText(C);e=h(T.subLanguage,C,!0,w[T.subLanguage]),w[T.subLanguage]=e.top}else e=f(C,T.subLanguage.length?T.subLanguage:null);T.relevance>0&&(O+=e.relevance),I.addSublanguage(e.emitter,e.language)}}():function(){if(T.keywords){var e=0;T.keywordPatternRe.lastIndex=0;for(var t=T.keywordPatternRe.exec(C),n="";t;){n+=C.substring(e,t.index);var s=d(T,t);if(s){var i=a(s,2),r=i[0],o=i[1];if(I.addText(n),n="",O+=o,r.startsWith("_"))n+=t[0];else{var l=N.classNameAliases[r]||r;I.addKeyword(t[0],l)}}else n+=t[0];e=T.keywordPatternRe.lastIndex,t=T.keywordPatternRe.exec(C)}n+=C.substr(e),I.addText(n)}else I.addText(C)}(),C=""}function m(e){return e.className&&I.openNode(N.classNameAliases[e.className]||e.className),T=Object.create(e,{parent:{value:T}})}function g(e,t,n){var a=function(e,t){var n=e&&e.exec(t);return n&&0===n.index}(e.endRe,n);if(a){if(e["on:end"]){var s=new p(e);e["on:end"](t,s),s.isMatchIgnored&&(a=!1)}if(a){for(;e.endsParent&&e.parent;)e=e.parent;return e}}if(e.endsWithParent)return g(e.parent,t,n)}function x(e){return 0===T.matcher.regexIndex?(C+=e[0],1):(k=!0,0)}function _(e){for(var t=e[0],n=e.rule,a=new p(n),s=0,i=[n.__beforeBegin,n["on:begin"]];s<i.length;s++){var r=i[s];if(r&&(r(e,a),a.isMatchIgnored))return x(t)}return n&&n.endSameAsBegin&&(n.endRe=new RegExp(t.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),"m")),n.skip?C+=t:(n.excludeBegin&&(C+=t),u(),n.returnBegin||n.excludeBegin||(C=t)),m(n),n.returnBegin?0:t.length}function b(e){var t=e[0],a=n.substr(e.index),s=g(T,e,a);if(!s)return de;var i=T;i.skip?C+=t:(i.returnEnd||i.excludeEnd||(C+=t),u(),i.excludeEnd&&(C=t));do{T.className&&I.closeNode(),T.skip||T.subLanguage||(O+=T.relevance),T=T.parent}while(T!==s.parent);return s.starts&&(s.endSameAsBegin&&(s.starts.endRe=s.endRe),m(s.starts)),i.returnEnd?0:t.length}var y={};function v(t,a){var s=a&&a[0];if(C+=t,null==s)return u(),0;if("begin"===y.type&&"end"===a.type&&y.index===a.index&&""===s){if(C+=n.slice(a.index,a.index+1),!i){var o=new Error("0 width match regex");throw o.languageName=e,o.badRule=y.rule,o}return 1}if(y=a,"begin"===a.type)return _(a);if("illegal"===a.type&&!r){var l=new Error('Illegal lexeme "'+s+'" for mode "'+(T.className||"<unnamed>")+'"');throw l.mode=T,l}if("end"===a.type){var c=b(a);if(c!==de)return c}if("illegal"===a.type&&""===s)return 1;if(A>1e5&&A>3*a.index)throw new Error("potential infinite loop, way more iterations than matches");return C+=s,s.length}var N=E(e);if(!N)throw ie(o.replace("{}",e)),new Error('Unknown language: "'+e+'"');var S=Z(N,{plugins:s}),j="",T=l||S,w={},I=new c.__emitter(c);!function(){for(var e=[],t=T;t!==N;t=t.parent)t.className&&e.unshift(t.className);e.forEach((function(e){return I.openNode(e)}))}();var C="",O=0,R=0,A=0,k=!1;try{for(T.matcher.considerAll();;){A++,k?k=!1:T.matcher.considerAll(),T.matcher.lastIndex=R;var D=T.matcher.exec(n);if(!D)break;var P=v(n.substring(R,D.index),D);R=D.index+P}return v(n.substr(R)),I.closeAllNodes(),I.finalize(),j=I.toHTML(),{relevance:Math.floor(O),value:j,language:e,illegal:!1,emitter:I,top:T}}catch(M){if(M.message&&M.message.includes("Illegal"))return{illegal:!0,illegalBy:{msg:M.message,context:n.slice(R-100,R+100),mode:M.mode},sofar:j,relevance:0,value:le(n),emitter:I};if(i)return{illegal:!1,relevance:0,value:le(n),emitter:I,language:e,top:T,errorRaised:M};throw M}}function f(e,n){n=n||c.languages||Object.keys(t);var s=function(e){var t={relevance:0,emitter:new c.__emitter(c),value:le(e),illegal:!1,top:l};return t.emitter.addText(e),t}(e),i=n.filter(E).filter(j).map((function(t){return h(t,e,!1)}));i.unshift(s);var r=i.sort((function(e,t){if(e.relevance!==t.relevance)return t.relevance-e.relevance;if(e.language&&t.language){if(E(e.language).supersetOf===t.language)return 1;if(E(t.language).supersetOf===e.language)return-1}return 0})),o=a(r,2),d=o[0],u=o[1],p=d;return p.second_best=u,p}var g={"before:highlightElement":function(e){var t=e.el;c.useBR&&(t.innerHTML=t.innerHTML.replace(/\n/g,"").replace(/<br[ /]*>/g,"\n"))},"after:highlightElement":function(e){var t=e.result;c.useBR&&(t.value=t.value.replace(/\n/g,"<br>"))}},_=/^(<[^>]+>|\t)+/gm,b={"after:highlightElement":function(e){var t=e.result;c.tabReplace&&(t.value=t.value.replace(_,(function(e){return e.replace(/\t/g,c.tabReplace)})))}};function y(e){var t=function(e){var t=e.className+" ";t+=e.parentNode?e.parentNode.className:"";var n=c.languageDetectRe.exec(t);if(n){var a=E(n[1]);return a||(re(o.replace("{}",n[1])),re("Falling back to no-highlight mode for this block.",e)),a?n[1]:"no-highlight"}return t.split(/\s+/).find((function(e){return u(e)||E(e)}))}(e);if(!u(t)){T("before:highlightElement",{el:e,language:t});var a=e.textContent,s=t?m(a,{language:t,ignoreIllegals:!0}):f(a);T("after:highlightElement",{el:e,result:s,text:a}),e.innerHTML=s.value,function(e,t,a){var s=t?n[t]:a;e.classList.add("hljs"),s&&e.classList.add(s)}(e,t,s.language),e.result={language:s.language,re:s.relevance,relavance:s.relevance},s.second_best&&(e.second_best={language:s.second_best.language,re:s.second_best.relevance,relavance:s.second_best.relevance})}}var v=!1;function N(){"loading"!==document.readyState?document.querySelectorAll("pre code").forEach(y):v=!0}function E(e){return e=(e||"").toLowerCase(),t[e]||t[n[e]]}function S(e,t){var a=t.languageName;"string"===typeof e&&(e=[e]),e.forEach((function(e){n[e.toLowerCase()]=a}))}function j(e){var t=E(e);return t&&!t.disableAutodetect}function T(e,t){var n=e;s.forEach((function(e){e[n]&&e[n](t)}))}for(var w in"undefined"!==typeof window&&window.addEventListener&&window.addEventListener("DOMContentLoaded",(function(){v&&N()}),!1),Object.assign(e,{highlight:m,highlightAuto:f,highlightAll:N,fixMarkup:function(e){return oe("10.2.0","fixMarkup will be removed entirely in v11.0"),oe("10.2.0","Please see https://github.com/highlightjs/highlight.js/issues/2534"),t=e,c.tabReplace||c.useBR?t.replace(r,(function(e){return"\n"===e?c.useBR?"<br>":e:c.tabReplace?e.replace(/\t/g,c.tabReplace):e})):t;var t},highlightElement:y,highlightBlock:function(e){return oe("10.7.0","highlightBlock will be removed entirely in v12.0"),oe("10.7.0","Please use highlightElement now."),y(e)},configure:function(e){e.useBR&&(oe("10.3.0","'useBR' will be removed entirely in v11.0"),oe("10.3.0","Please see https://github.com/highlightjs/highlight.js/issues/2559")),c=ce(c,e)},initHighlighting:function e(){e.called||(e.called=!0,oe("10.6.0","initHighlighting() is deprecated.  Use highlightAll() instead."),document.querySelectorAll("pre code").forEach(y))},initHighlightingOnLoad:function(){oe("10.6.0","initHighlightingOnLoad() is deprecated.  Use highlightAll() instead."),v=!0},registerLanguage:function(n,a){var s=null;try{s=a(e)}catch(r){if(ie("Language definition for '{}' could not be registered.".replace("{}",n)),!i)throw r;ie(r),s=l}s.name||(s.name=n),t[n]=s,s.rawDefinition=a.bind(null,e),s.aliases&&S(s.aliases,{languageName:n})},unregisterLanguage:function(e){delete t[e];for(var a=0,s=Object.keys(n);a<s.length;a++){var i=s[a];n[i]===e&&delete n[i]}},listLanguages:function(){return Object.keys(t)},getLanguage:E,registerAliases:S,requireLanguage:function(e){oe("10.4.0","requireLanguage will be removed entirely in v11."),oe("10.4.0","Please see https://github.com/highlightjs/highlight.js/pull/2844");var t=E(e);if(t)return t;throw new Error("The '{}' language is required, but not loaded.".replace("{}",e))},autoDetection:j,inherit:ce,addPlugin:function(e){!function(e){e["before:highlightBlock"]&&!e["before:highlightElement"]&&(e["before:highlightElement"]=function(t){e["before:highlightBlock"](Object.assign({block:t.el},t))}),e["after:highlightBlock"]&&!e["after:highlightElement"]&&(e["after:highlightElement"]=function(t){e["after:highlightBlock"](Object.assign({block:t.el},t))})}(e),s.push(e)},vuePlugin:ee(e).VuePlugin}),e.debugMode=function(){i=!1},e.safeMode=function(){i=!0},e.versionString="10.7.3",H)"object"===typeof H[w]&&d(H[w]);return Object.assign(e,H),e.addPlugin(g),e.addPlugin(te),e.addPlugin(b),e}({});e.exports=ue},6078:function(e){e.exports=function(e){var t="[A-Za-z\u0410-\u042f\u0430-\u044f\u0451\u0401_][A-Za-z\u0410-\u042f\u0430-\u044f\u0451\u0401_0-9]+",n="\u0434\u0430\u043b\u0435\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u043b\u044f \u0435\u0441\u043b\u0438 \u0438 \u0438\u0437 \u0438\u043b\u0438 \u0438\u043d\u0430\u0447\u0435 \u0438\u043d\u0430\u0447\u0435\u0435\u0441\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043e\u043d\u0435\u0446\u0435\u0441\u043b\u0438 \u043a\u043e\u043d\u0435\u0446\u043f\u043e\u043f\u044b\u0442\u043a\u0438 \u043a\u043e\u043d\u0435\u0446\u0446\u0438\u043a\u043b\u0430 \u043d\u0435 \u043d\u043e\u0432\u044b\u0439 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043f\u0435\u0440\u0435\u043c \u043f\u043e \u043f\u043e\u043a\u0430 \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043f\u0440\u0435\u0440\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0442\u043e\u0433\u0434\u0430 \u0446\u0438\u043a\u043b \u044d\u043a\u0441\u043f\u043e\u0440\u0442 ",a="null \u0438\u0441\u0442\u0438\u043d\u0430 \u043b\u043e\u0436\u044c \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e",s=e.inherit(e.NUMBER_MODE),i={className:"string",begin:'"|\\|',end:'"|$',contains:[{begin:'""'}]},r={begin:"'",end:"'",excludeBegin:!0,excludeEnd:!0,contains:[{className:"number",begin:"\\d{4}([\\.\\\\/:-]?\\d{2}){0,5}"}]},o=e.inherit(e.C_LINE_COMMENT_MODE);return{name:"1C:Enterprise",case_insensitive:!0,keywords:{$pattern:t,keyword:n,built_in:"\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0440\u043e\u043a \u0441\u0438\u043c\u0432\u043e\u043b\u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438 ansitooem oemtoansi \u0432\u0432\u0435\u0441\u0442\u0438\u0432\u0438\u0434\u0441\u0443\u0431\u043a\u043e\u043d\u0442\u043e \u0432\u0432\u0435\u0441\u0442\u0438\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0441\u0442\u0438\u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0432\u0435\u0441\u0442\u0438\u043f\u043b\u0430\u043d\u0441\u0447\u0435\u0442\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439\u043f\u043b\u0430\u043d\u0441\u0447\u0435\u0442\u043e\u0432 \u0434\u0430\u0442\u0430\u0433\u043e\u0434 \u0434\u0430\u0442\u0430\u043c\u0435\u0441\u044f\u0446 \u0434\u0430\u0442\u0430\u0447\u0438\u0441\u043b\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0432\u0441\u0442\u0440\u043e\u043a\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0438\u0437\u0441\u0442\u0440\u043e\u043a\u0438 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0438\u0431 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u0434\u0441\u0438\u043c\u0432 \u043a\u043e\u043d\u0433\u043e\u0434\u0430 \u043a\u043e\u043d\u0435\u0446\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u0431\u0438 \u043a\u043e\u043d\u0435\u0446\u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0433\u043e\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u0431\u0438 \u043a\u043e\u043d\u0435\u0446\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u043a\u043e\u043d\u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430 \u043a\u043e\u043d\u043c\u0435\u0441\u044f\u0446\u0430 \u043a\u043e\u043d\u043d\u0435\u0434\u0435\u043b\u0438 \u043b\u043e\u0433 \u043b\u043e\u043310 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u0441\u0443\u0431\u043a\u043e\u043d\u0442\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043d\u0430\u0431\u043e\u0440\u0430\u043f\u0440\u0430\u0432 \u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c\u0432\u0438\u0434 \u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c\u0441\u0447\u0435\u0442 \u043d\u0430\u0439\u0442\u0438\u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430\u0447\u0430\u043b\u043e\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u0431\u0438 \u043d\u0430\u0447\u0430\u043b\u043e\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u043d\u0430\u0447\u0433\u043e\u0434\u0430 \u043d\u0430\u0447\u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430 \u043d\u0430\u0447\u043c\u0435\u0441\u044f\u0446\u0430 \u043d\u0430\u0447\u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u043e\u043c\u0435\u0440\u0434\u043d\u044f\u0433\u043e\u0434\u0430 \u043d\u043e\u043c\u0435\u0440\u0434\u043d\u044f\u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u043e\u043c\u0435\u0440\u043d\u0435\u0434\u0435\u043b\u0438\u0433\u043e\u0434\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439\u0436\u0443\u0440\u043d\u0430\u043b\u0440\u0430\u0441\u0447\u0435\u0442\u043e\u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439\u043f\u043b\u0430\u043d\u0441\u0447\u0435\u0442\u043e\u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439\u044f\u0437\u044b\u043a \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c\u043e\u043a\u043d\u043e\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043f\u0435\u0440\u0438\u043e\u0434\u0441\u0442\u0440 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0434\u0430\u0442\u0443\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043e\u0442\u0431\u043e\u0440\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043f\u043e\u0437\u0438\u0446\u0438\u044e\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043f\u0443\u0441\u0442\u043e\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0442\u0430 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430\u0432\u0442\u043e\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u043f\u0438\u0441\u044c \u043f\u0443\u0441\u0442\u043e\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u043f\u043e\u0437\u0438\u0446\u0438\u044e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u044b\u043d\u0430 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u044b\u043f\u043e \u0441\u0438\u043c\u0432 \u0441\u043e\u0437\u0434\u0430\u0442\u044c\u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u0442\u0430\u0442\u0443\u0441\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0441\u0442\u0440\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u0441\u0442\u0440\u043e\u043a \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u043f\u043e\u0437\u0438\u0446\u0438\u044e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u0447\u0435\u0442\u043f\u043e\u043a\u043e\u0434\u0443 \u0442\u0435\u043a\u0443\u0449\u0435\u0435\u0432\u0440\u0435\u043c\u044f \u0442\u0438\u043f\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0441\u0442\u0440 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0442\u0430\u043d\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0442\u0430\u043f\u043e \u0444\u0438\u043a\u0441\u0448\u0430\u0431\u043b\u043e\u043d \u0448\u0430\u0431\u043b\u043e\u043d acos asin atan base64\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 base64\u0441\u0442\u0440\u043e\u043a\u0430 cos exp log log10 pow sin sqrt tan xml\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 xml\u0441\u0442\u0440\u043e\u043a\u0430 xml\u0442\u0438\u043f xml\u0442\u0438\u043f\u0437\u043d\u0447 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0435\u043e\u043a\u043d\u043e \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0443\u043b\u0435\u0432\u043e \u0432\u0432\u0435\u0441\u0442\u0438\u0434\u0430\u0442\u0443 \u0432\u0432\u0435\u0441\u0442\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0441\u0442\u0438\u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u0432\u0435\u0441\u0442\u0438\u0447\u0438\u0441\u043b\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u0447\u0442\u0435\u043d\u0438\u044fxml \u0432\u043e\u043f\u0440\u043e\u0441 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u0433 \u0432\u044b\u0433\u0440\u0443\u0437\u0438\u0442\u044c\u0436\u0443\u0440\u043d\u0430\u043b\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443\u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\u043f\u0440\u0430\u0432\u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0433\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0435\u0444\u043e\u0440\u043c\u044b\u0432\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u0430 \u0434\u0435\u043d\u044c \u0434\u0435\u043d\u044c\u0433\u043e\u0434\u0430 \u0434\u0435\u043d\u044c\u043d\u0435\u0434\u0435\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c\u043c\u0435\u0441\u044f\u0446 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0434\u0430\u043d\u043d\u044b\u0435\u0434\u043b\u044f\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0440\u0430\u0431\u043e\u0442\u0443\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\u0440\u0430\u0431\u043e\u0442\u0443\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c\u0432\u043d\u0435\u0448\u043d\u044e\u044e\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443 \u0437\u0430\u043a\u0440\u044b\u0442\u044c\u0441\u043f\u0440\u0430\u0432\u043a\u0443 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044cjson \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044cxml \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0434\u0430\u0442\u0443json \u0437\u0430\u043f\u0438\u0441\u044c\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c\u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c\u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0432\u0434\u0430\u043d\u043d\u044b\u0435\u0444\u043e\u0440\u043c\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0432\u0441\u0442\u0440\u043e\u043a\u0443\u0432\u043d\u0443\u0442\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0432\u0444\u0430\u0439\u043b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0438\u0437\u0441\u0442\u0440\u043e\u043a\u0438\u0432\u043d\u0443\u0442\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0438\u0437\u0444\u0430\u0439\u043b\u0430 \u0438\u0437xml\u0442\u0438\u043f\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u043c\u043e\u0434\u0435\u043b\u0438xdto \u0438\u043c\u044f\u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0438\u043c\u044f\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\u043e\u0431\u043e\u0448\u0438\u0431\u043a\u0435 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0433\u043e\u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\u0444\u0430\u0439\u043b\u043e\u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u0442\u0440\u043e\u043a\u0443 \u043a\u043e\u0434\u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043a\u043e\u0434\u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043a\u043e\u043d\u0435\u0446\u0433\u043e\u0434\u0430 \u043a\u043e\u043d\u0435\u0446\u0434\u043d\u044f \u043a\u043e\u043d\u0435\u0446\u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430 \u043a\u043e\u043d\u0435\u0446\u043c\u0435\u0441\u044f\u0446\u0430 \u043a\u043e\u043d\u0435\u0446\u043c\u0438\u043d\u0443\u0442\u044b \u043a\u043e\u043d\u0435\u0446\u043d\u0435\u0434\u0435\u043b\u0438 \u043a\u043e\u043d\u0435\u0446\u0447\u0430\u0441\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f\u0431\u0430\u0437\u044b\u0434\u0430\u043d\u043d\u044b\u0445\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430\u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0434\u0430\u043d\u043d\u044b\u0435\u0444\u043e\u0440\u043c\u044b \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0444\u0430\u0439\u043b \u043a\u0440\u0430\u0442\u043a\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043e\u0448\u0438\u0431\u043a\u0438 \u043b\u0435\u0432 \u043c\u0430\u043a\u0441 \u043c\u0435\u0441\u0442\u043d\u043e\u0435\u0432\u0440\u0435\u043c\u044f \u043c\u0435\u0441\u044f\u0446 \u043c\u0438\u043d \u043c\u0438\u043d\u0443\u0442\u0430 \u043c\u043e\u043d\u043e\u043f\u043e\u043b\u044c\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c \u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0439\u0442\u0438\u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435\u0441\u0438\u043c\u0432\u043e\u043b\u044bxml \u043d\u0430\u0439\u0442\u0438\u043e\u043a\u043d\u043e\u043f\u043e\u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0441\u0441\u044b\u043b\u043a\u0435 \u043d\u0430\u0439\u0442\u0438\u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0435\u043d\u0430\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0439\u0442\u0438\u043f\u043e\u0441\u0441\u044b\u043b\u043a\u0430\u043c \u043d\u0430\u0439\u0442\u0438\u0444\u0430\u0439\u043b\u044b \u043d\u0430\u0447\u0430\u043b\u043e\u0433\u043e\u0434\u0430 \u043d\u0430\u0447\u0430\u043b\u043e\u0434\u043d\u044f \u043d\u0430\u0447\u0430\u043b\u043e\u043a\u0432\u0430\u0440\u0442\u0430\u043b\u0430 \u043d\u0430\u0447\u0430\u043b\u043e\u043c\u0435\u0441\u044f\u0446\u0430 \u043d\u0430\u0447\u0430\u043b\u043e\u043c\u0438\u043d\u0443\u0442\u044b \u043d\u0430\u0447\u0430\u043b\u043e\u043d\u0435\u0434\u0435\u043b\u0438 \u043d\u0430\u0447\u0430\u043b\u043e\u0447\u0430\u0441\u0430 \u043d\u0430\u0447\u0430\u0442\u044c\u0437\u0430\u043f\u0440\u043e\u0441\u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430\u0447\u0430\u0442\u044c\u0437\u0430\u043f\u0443\u0441\u043a\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u0447\u0430\u0442\u044c\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u0444\u0430\u0439\u043b\u0430 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u0444\u0430\u0439\u043b\u0430 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u0432\u043d\u0435\u0448\u043d\u0435\u0439\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0435\u0439 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u0438\u0441\u043a\u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435\u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435\u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u0444\u0430\u0439\u043b\u0430 \u043d\u0430\u0447\u0430\u0442\u044c\u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0447\u0430\u0442\u044c\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445\u0438\u0437\u0444\u0430\u0439\u043b\u0430 \u043d\u0430\u0447\u0430\u0442\u044c\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u043d\u0430\u0447\u0430\u0442\u044c\u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u043d\u0430\u0447\u0430\u0442\u044c\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0447\u0430\u0442\u044c\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443\u0432\u043d\u0435\u0448\u043d\u0435\u0439\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043d\u0430\u0447\u0430\u0442\u044c\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0435\u0439 \u043d\u0430\u0447\u0430\u0442\u044c\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043d\u0435\u0434\u0435\u043b\u044f\u0433\u043e\u0434\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u0441\u0435\u0430\u043d\u0441\u0430\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043d\u043e\u043c\u0435\u0440\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043d\u0440\u0435\u0433 \u043d\u0441\u0442\u0440 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044e\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c\u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u044f\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c\u0444\u0430\u0439\u043b\u044b \u043e\u043a\u0440 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043e\u0448\u0438\u0431\u043a\u0438 \u043e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u043e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c\u043e\u0431\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0438\u043d\u0434\u0435\u043a\u0441\u0441\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u0441\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0441\u043f\u0440\u0430\u0432\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0444\u043e\u0440\u043c\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u044c\u0444\u043e\u0440\u043c\u0443\u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c\u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c\u0436\u0443\u0440\u043d\u0430\u043b\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043f\u0435\u0440\u0435\u0439\u0442\u0438\u043f\u043e\u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0441\u0441\u044b\u043b\u043a\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0444\u0430\u0439\u043b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0432\u043d\u0435\u0448\u043d\u044e\u044e\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0435\u0439 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0432\u0432\u043e\u0434\u0434\u0430\u0442\u044b \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0432\u0432\u043e\u0434\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0432\u0432\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0432\u0432\u043e\u0434\u0447\u0438\u0441\u043b\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0432\u043e\u043f\u0440\u043e\u0441 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e\u043e\u0431\u043e\u0448\u0438\u0431\u043a\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u043d\u0430\u043a\u0430\u0440\u0442\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0435\u0438\u043c\u044f\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044ccom\u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044cxml\u0442\u0438\u043f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0430\u0434\u0440\u0435\u0441\u043f\u043e\u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0443\u0441\u0435\u0430\u043d\u0441\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f\u0441\u043f\u044f\u0449\u0435\u0433\u043e\u0441\u0435\u0430\u043d\u0441\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u0437\u0430\u0441\u044b\u043f\u0430\u043d\u0438\u044f\u043f\u0430\u0441\u0441\u0438\u0432\u043d\u043e\u0433\u043e\u0441\u0435\u0430\u043d\u0441\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0434\u0430\u043d\u043d\u044b\u0435\u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435\u043a\u043e\u0434\u044b\u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435\u0447\u0430\u0441\u043e\u0432\u044b\u0435\u043f\u043e\u044f\u0441\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043e\u0442\u0431\u043e\u0440\u0430\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u0437\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u043c\u044f\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0444\u0430\u0439\u043b\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u043c\u044f\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e\u044d\u043a\u0440\u0430\u043d\u043e\u0432\u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043a\u0440\u0430\u0442\u043a\u0438\u0439\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043c\u0430\u043a\u0435\u0442\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043c\u0430\u0441\u043a\u0443\u0432\u0441\u0435\u0444\u0430\u0439\u043b\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043c\u0430\u0441\u043a\u0443\u0432\u0441\u0435\u0444\u0430\u0439\u043b\u044b\u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043c\u0430\u0441\u043a\u0443\u0432\u0441\u0435\u0444\u0430\u0439\u043b\u044b\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043f\u043e\u0430\u0434\u0440\u0435\u0441\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e\u0434\u043b\u0438\u043d\u0443\u043f\u0430\u0440\u043e\u043b\u0435\u0439\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\u0441\u0441\u044b\u043b\u043a\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u0443\u044e\u0441\u0441\u044b\u043b\u043a\u0443\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\u0431\u0430\u0437\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u0431\u0449\u0438\u0439\u043c\u0430\u043a\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u0431\u0449\u0443\u044e\u0444\u043e\u0440\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u043a\u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u0443\u044e\u043e\u0442\u043c\u0435\u0442\u043a\u0443\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e\u0440\u0435\u0436\u0438\u043c\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0445\u043e\u043f\u0446\u0438\u0439\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043f\u043e\u043b\u043d\u043e\u0435\u0438\u043c\u044f\u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445\u0441\u0441\u044b\u043b\u043e\u043a \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438\u043f\u0430\u0440\u043e\u043b\u0435\u0439\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c\u043f\u0443\u0442\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c\u043f\u0443\u0442\u0438\u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c\u043f\u0443\u0442\u0438\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u0435\u0430\u043d\u0441\u044b\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435\u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0438\u0444\u043e\u0440\u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u043e\u0441\u0442\u0430\u0432\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430odata \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f\u0431\u0430\u0437\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0442\u0435\u043a\u0443\u0449\u0438\u0439\u0441\u0435\u0430\u043d\u0441\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0444\u0430\u0439\u043b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0444\u0430\u0439\u043b\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0444\u043e\u0440\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0443\u044e\u043e\u043f\u0446\u0438\u044e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0443\u044e\u043e\u043f\u0446\u0438\u044e\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0447\u0430\u0441\u043e\u0432\u043e\u0439\u043f\u043e\u044f\u0441\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438\u043e\u0441 \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0432\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0444\u0430\u0439\u043b \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0444\u0430\u0439\u043b\u044b \u043f\u0440\u0430\u0432 \u043f\u0440\u0430\u0432\u043e\u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043a\u043e\u0434\u0430\u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0435\u0440\u0438\u043e\u0434\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0430\u0432\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0447\u0430\u0441\u043e\u0432\u043e\u0433\u043e\u043f\u043e\u044f\u0441\u0430 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u043a\u0440\u0430\u0442\u0438\u0442\u044c\u0440\u0430\u0431\u043e\u0442\u0443\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043f\u0440\u0438\u0432\u0438\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c\u0432\u044b\u0437\u043e\u0432 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044cjson \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044cxml \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c\u0434\u0430\u0442\u0443json \u043f\u0443\u0441\u0442\u0430\u044f\u0441\u0442\u0440\u043e\u043a\u0430 \u0440\u0430\u0431\u043e\u0447\u0438\u0439\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0434\u0430\u043d\u043d\u044b\u0435\u0434\u043b\u044f\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c\u0444\u0430\u0439\u043b \u0440\u0430\u0437\u043e\u0440\u0432\u0430\u0442\u044c\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u0441\u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u043c\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u043e\u043b\u044c\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u0430 \u0441\u0438\u0433\u043d\u0430\u043b \u0441\u0438\u043c\u0432\u043e\u043b \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0436\u0443\u0440\u043d\u0430\u043b\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u043b\u0435\u0442\u043d\u0435\u0433\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c\u0431\u0443\u0444\u0435\u0440\u044b\u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0437\u0434\u0430\u0442\u044c\u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0441\u043e\u0437\u0434\u0430\u0442\u044c\u0444\u0430\u0431\u0440\u0438\u043a\u0443xdto \u0441\u043e\u043a\u0440\u043b \u0441\u043e\u043a\u0440\u043b\u043f \u0441\u043e\u043a\u0440\u043f \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434 \u0441\u0442\u0440\u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f\u043d\u0430 \u0441\u0442\u0440\u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0442\u0440\u043d\u0430\u0439\u0442\u0438 \u0441\u0442\u0440\u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f\u0441 \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u0442\u0440\u043e\u043a\u0430\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u0441\u0442\u0440\u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u0442\u0440\u043e\u043a\u0443 \u0441\u0442\u0440\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0441\u0442\u0440\u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0441\u0442\u0440\u0447\u0438\u0441\u043b\u043e\u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u0441\u0442\u0440\u0447\u0438\u0441\u043b\u043e\u0441\u0442\u0440\u043e\u043a \u0441\u0442\u0440\u0448\u0430\u0431\u043b\u043e\u043d \u0442\u0435\u043a\u0443\u0449\u0430\u044f\u0434\u0430\u0442\u0430 \u0442\u0435\u043a\u0443\u0449\u0430\u044f\u0434\u0430\u0442\u0430\u0441\u0435\u0430\u043d\u0441\u0430 \u0442\u0435\u043a\u0443\u0449\u0430\u044f\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0430\u044f\u0434\u0430\u0442\u0430 \u0442\u0435\u043a\u0443\u0449\u0430\u044f\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u0430\u044f\u0434\u0430\u0442\u0430\u0432\u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0438\u0439\u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0443\u0449\u0438\u0439\u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e\u0448\u0440\u0438\u0444\u0442\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0443\u0449\u0438\u0439\u043a\u043e\u0434\u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0435\u043a\u0443\u0449\u0438\u0439\u0440\u0435\u0436\u0438\u043c\u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0439\u044f\u0437\u044b\u043a \u0442\u0435\u043a\u0443\u0449\u0438\u0439\u044f\u0437\u044b\u043a\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0442\u0438\u043f \u0442\u0438\u043f\u0437\u043d\u0447 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u0430\u043a\u0442\u0438\u0432\u043d\u0430 \u0442\u0440\u0435\u0433 \u0443\u0434\u0430\u043b\u0438\u0442\u044c\u0434\u0430\u043d\u043d\u044b\u0435\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c\u0438\u0437\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0443\u0434\u0430\u043b\u0438\u0442\u044c\u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c\u0444\u0430\u0439\u043b\u044b \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u043e\u0435\u0432\u0440\u0435\u043c\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0443\u0441\u0435\u0430\u043d\u0441\u043e\u0432 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0432\u043d\u0435\u0448\u043d\u044e\u044e\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f\u0441\u043f\u044f\u0449\u0435\u0433\u043e\u0441\u0435\u0430\u043d\u0441\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u0437\u0430\u0441\u044b\u043f\u0430\u043d\u0438\u044f\u043f\u0430\u0441\u0441\u0438\u0432\u043d\u043e\u0433\u043e\u0441\u0435\u0430\u043d\u0441\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0432\u0440\u0435\u043c\u044f\u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043a\u0440\u0430\u0442\u043a\u0438\u0439\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e\u0434\u043b\u0438\u043d\u0443\u043f\u0430\u0440\u043e\u043b\u0435\u0439\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043c\u043e\u043d\u043e\u043f\u043e\u043b\u044c\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e\u0440\u0435\u0436\u0438\u043c\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0445\u043e\u043f\u0446\u0438\u0439\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043f\u0440\u0438\u0432\u0438\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438\u043f\u0430\u0440\u043e\u043b\u0435\u0439\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0435\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435\u0440\u0430\u0431\u043e\u0442\u044b\u0441\u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u0441\u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u043c\u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435\u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0438\u0444\u043e\u0440\u043c\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u043e\u0441\u0442\u0430\u0432\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430odata \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0447\u0430\u0441\u043e\u0432\u043e\u0439\u043f\u043e\u044f\u0441\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0447\u0430\u0441\u043e\u0432\u043e\u0439\u043f\u043e\u044f\u0441\u0441\u0435\u0430\u043d\u0441\u0430 \u0444\u043e\u0440\u043c\u0430\u0442 \u0446\u0435\u043b \u0447\u0430\u0441 \u0447\u0430\u0441\u043e\u0432\u043e\u0439\u043f\u043e\u044f\u0441 \u0447\u0430\u0441\u043e\u0432\u043e\u0439\u043f\u043e\u044f\u0441\u0441\u0435\u0430\u043d\u0441\u0430 \u0447\u0438\u0441\u043b\u043e \u0447\u0438\u0441\u043b\u043e\u043f\u0440\u043e\u043f\u0438\u0441\u044c\u044e \u044d\u0442\u043e\u0430\u0434\u0440\u0435\u0441\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 ws\u0441\u0441\u044b\u043b\u043a\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043c\u0430\u043a\u0435\u0442\u043e\u0432\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u0441\u0442\u0438\u043b\u0435\u0439 \u0431\u0438\u0437\u043d\u0435\u0441\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b \u0432\u043d\u0435\u0448\u043d\u0438\u0435\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u043d\u0435\u0448\u043d\u0438\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u043d\u0435\u0448\u043d\u0438\u0435\u043e\u0442\u0447\u0435\u0442\u044b \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435\u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0433\u043b\u0430\u0432\u043d\u044b\u0439\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0433\u043b\u0430\u0432\u043d\u044b\u0439\u0441\u0442\u0438\u043b\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0436\u0443\u0440\u043d\u0430\u043b\u044b\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\u043e\u0431\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0440\u0430\u0431\u043e\u0447\u0435\u0439\u0434\u0430\u0442\u044b \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0440\u0430\u0431\u043e\u0442\u044b\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0438\u043e\u0442\u0431\u043e\u0440\u0430 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0440\u0435\u043a\u043b\u0430\u043c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043e\u0442\u0447\u0435\u0442\u044b \u043f\u0430\u043d\u0435\u043b\u044c\u0437\u0430\u0434\u0430\u0447\u043e\u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0441\u0435\u0430\u043d\u0441\u0430 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u043d\u044b\u0432\u0438\u0434\u043e\u0432\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u043f\u043b\u0430\u043d\u044b\u0432\u0438\u0434\u043e\u0432\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a \u043f\u043b\u0430\u043d\u044b\u043e\u0431\u043c\u0435\u043d\u0430 \u043f\u043b\u0430\u043d\u044b\u0441\u0447\u0435\u0442\u043e\u0432 \u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439\u043f\u043e\u0438\u0441\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439\u0431\u0430\u0437\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445\u043f\u043e\u043a\u0443\u043f\u043e\u043a \u0440\u0430\u0431\u043e\u0447\u0430\u044f\u0434\u0430\u0442\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u044b\u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u044b\u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u044b\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u044b\u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u0440\u0435\u0433\u043b\u0430\u043c\u0435\u043d\u0442\u043d\u044b\u0435\u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440xdto \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u0433\u0435\u043e\u043f\u043e\u0437\u0438\u0446\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0443\u043b\u044c\u0442\u0438\u043c\u0435\u0434\u0438\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0440\u0435\u043a\u043b\u0430\u043c\u044b \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043f\u043e\u0447\u0442\u044b \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0438\u0438 \u0444\u0430\u0431\u0440\u0438\u043a\u0430xdto \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0435\u043f\u043e\u0442\u043e\u043a\u0438 \u0444\u043e\u043d\u043e\u0432\u044b\u0435\u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432\u043e\u0442\u0447\u0435\u0442\u043e\u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u0434\u0430\u043d\u043d\u044b\u0445\u0444\u043e\u0440\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043e\u0431\u0449\u0438\u0445\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445\u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043e\u0442\u0447\u0435\u0442\u043e\u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a ",class:"web\u0446\u0432\u0435\u0442\u0430 windows\u0446\u0432\u0435\u0442\u0430 windows\u0448\u0440\u0438\u0444\u0442\u044b \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u0440\u0430\u043c\u043a\u0438\u0441\u0442\u0438\u043b\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0446\u0432\u0435\u0442\u0430\u0441\u0442\u0438\u043b\u044f \u0448\u0440\u0438\u0444\u0442\u044b\u0441\u0442\u0438\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u0434\u0430\u043d\u043d\u044b\u0445\u0444\u043e\u0440\u043c\u044b\u0432\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445 \u0430\u0432\u0442\u043e\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f\u0432\u0444\u043e\u0440\u043c\u0435 \u0430\u0432\u0442\u043e\u0440\u0430\u0437\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0435\u0441\u0435\u0440\u0438\u0439 \u0430\u043d\u0438\u043c\u0430\u0446\u0438\u044f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u044f\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u0438\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0432\u044b\u0441\u043e\u0442\u043e\u0439\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u0430\u044f\u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0430\u0444\u043e\u0440\u043c\u044b \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432\u0438\u0434\u0433\u0440\u0443\u043f\u043f\u044b\u0444\u043e\u0440\u043c\u044b \u0432\u0438\u0434\u0434\u0435\u043a\u043e\u0440\u0430\u0446\u0438\u0438\u0444\u043e\u0440\u043c\u044b \u0432\u0438\u0434\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0444\u043e\u0440\u043c\u044b \u0432\u0438\u0434\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0438\u0434\u043a\u043d\u043e\u043f\u043a\u0438\u0444\u043e\u0440\u043c\u044b \u0432\u0438\u0434\u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u0435\u043b\u044f \u0432\u0438\u0434\u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439\u043a\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435 \u0432\u0438\u0434\u043f\u043e\u043b\u044f\u0444\u043e\u0440\u043c\u044b \u0432\u0438\u0434\u0444\u043b\u0430\u0436\u043a\u0430 \u0432\u043b\u0438\u044f\u043d\u0438\u0435\u0440\u0430\u0437\u043c\u0435\u0440\u0430\u043d\u0430\u043f\u0443\u0437\u044b\u0440\u0435\u043a\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430\u043a\u043e\u043b\u043e\u043d\u043e\u043a \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430\u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u043d\u044b\u0445\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u0444\u043e\u0440\u043c\u044b \u0433\u0440\u0443\u043f\u043f\u044b\u0438\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043f\u0435\u0440\u0435\u0442\u0430\u0441\u043a\u0438\u0432\u0430\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439\u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\u043f\u0435\u0440\u0435\u0442\u0430\u0441\u043a\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043c\u0435\u0436\u0434\u0443\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438\u0444\u043e\u0440\u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043f\u043e\u043b\u043e\u0441\u044b\u043f\u0440\u043e\u043a\u0440\u0443\u0442\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0442\u043e\u0447\u043a\u0438\u0431\u0438\u0440\u0436\u0435\u0432\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0432\u044b\u0431\u043e\u0440\u0430\u043f\u0440\u0438\u0432\u0432\u043e\u0434\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u043e\u0441\u0438\u0442\u043e\u0447\u0435\u043a\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0440\u0430\u0437\u043c\u0435\u0440\u0430\u043f\u0443\u0437\u044b\u0440\u044c\u043a\u0430\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u0433\u0440\u0443\u043f\u043f\u044b\u043a\u043e\u043c\u0430\u043d\u0434 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c\u0441\u0435\u0440\u0438\u0439 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0434\u0435\u0440\u0435\u0432\u0430 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u0442\u0435\u043a\u0441\u0442\u0430\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f\u0434\u0435\u043d\u0434\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f\u043c\u0435\u0442\u043e\u043a\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f\u043c\u0435\u0442\u043e\u043a\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0444\u043e\u0440\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0432\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0432\u043b\u0435\u0433\u0435\u043d\u0434\u0435\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0433\u0440\u0443\u043f\u043f\u044b\u043a\u043d\u043e\u043f\u043e\u043a \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0448\u043a\u0430\u043b\u044b\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0438\u0437\u043c\u0435\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\u0433\u0430\u043d\u0442\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043a\u043d\u043e\u043f\u043a\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043a\u043d\u043e\u043f\u043a\u0438\u0432\u044b\u0431\u043e\u0440\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u0439\u0444\u043e\u0440\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043e\u0431\u044b\u0447\u043d\u043e\u0439\u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u043f\u0443\u0437\u044b\u0440\u044c\u043a\u043e\u0432\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043f\u0430\u043d\u0435\u043b\u0438\u043f\u043e\u0438\u0441\u043a\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f\u043f\u0440\u0438\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438\u043f\u043e\u043b\u043e\u0441\u044b\u0440\u0435\u0433\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0444\u043e\u0440\u043c\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0442\u0435\u043a\u0441\u0442\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\u0433\u0430\u043d\u0442\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043e\u0431\u044b\u0447\u043d\u043e\u0439\u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0444\u0438\u0433\u0443\u0440\u044b\u043a\u043d\u043e\u043f\u043a\u0438 \u043f\u0430\u043b\u0438\u0442\u0440\u0430\u0446\u0432\u0435\u0442\u043e\u0432\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043e\u0431\u044b\u0447\u043d\u043e\u0439\u0433\u0440\u0443\u043f\u043f\u044b \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430\u0434\u0435\u043d\u0434\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\u0433\u0430\u043d\u0442\u0430 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0438\u0441\u043a\u0432\u0442\u0430\u0431\u043b\u0438\u0446\u0435\u043f\u0440\u0438\u0432\u0432\u043e\u0434\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0444\u043e\u0440\u043c\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438\u043a\u043d\u043e\u043f\u043a\u0438\u0444\u043e\u0440\u043c\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439\u043f\u0430\u043d\u0435\u043b\u0438\u0444\u043e\u0440\u043c\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439\u043f\u0430\u043d\u0435\u043b\u0438\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0444\u043e\u0440\u043c\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043e\u043f\u043e\u0440\u043d\u043e\u0439\u0442\u043e\u0447\u043a\u0438\u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439\u043a\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043f\u043e\u0434\u043f\u0438\u0441\u0435\u0439\u0448\u043a\u0430\u043b\u044b\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u0438\u0437\u043c\u0435\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0441\u0442\u0440\u043e\u043a\u0438\u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0442\u0435\u043a\u0441\u0442\u0430\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439\u043b\u0438\u043d\u0438\u0438 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043f\u043e\u0438\u0441\u043a\u043e\u043c \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0448\u043a\u0430\u043b\u044b\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0440\u044f\u0434\u043e\u043a\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0442\u043e\u0447\u0435\u043a\u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0439\u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u043e\u0440\u044f\u0434\u043e\u043a\u0441\u0435\u0440\u0438\u0439\u0432\u043b\u0435\u0433\u0435\u043d\u0434\u0435\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0440\u0430\u0437\u043c\u0435\u0440\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0448\u043a\u0430\u043b\u044b\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0440\u0430\u0441\u0442\u044f\u0433\u0438\u0432\u0430\u043d\u0438\u0435\u043f\u043e\u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u0438\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\u0433\u0430\u043d\u0442\u0430 \u0440\u0435\u0436\u0438\u043c\u0430\u0432\u0442\u043e\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0432\u0432\u043e\u0434\u0430\u0441\u0442\u0440\u043e\u043a\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0440\u0435\u0436\u0438\u043c\u0432\u044b\u0431\u043e\u0440\u0430\u043d\u0435\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0436\u0438\u043c\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u0434\u0430\u0442\u044b \u0440\u0435\u0436\u0438\u043c\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u0441\u0442\u0440\u043e\u043a\u0438\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0440\u0435\u0436\u0438\u043c\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0440\u0435\u0436\u0438\u043c\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0440\u0435\u0436\u0438\u043c\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0434\u0438\u0430\u043b\u043e\u0433\u0430\u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0435\u0436\u0438\u043c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0440\u0435\u0436\u0438\u043c\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0440\u0435\u0436\u0438\u043c\u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e\u043e\u043a\u043d\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f\u043e\u043a\u043d\u0430\u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u0441\u0435\u0440\u0438\u0438 \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438\u0441\u0435\u0442\u043a\u0438\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0440\u0435\u0436\u0438\u043c\u043f\u043e\u043b\u0443\u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u043e\u0441\u0442\u0438\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0440\u0435\u0436\u0438\u043c\u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0440\u0435\u0436\u0438\u043c\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u043d\u0430\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0440\u0435\u0436\u0438\u043c\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0440\u0435\u0436\u0438\u043c\u0441\u0433\u043b\u0430\u0436\u0438\u0432\u0430\u043d\u0438\u044f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0440\u0435\u0436\u0438\u043c\u0441\u0433\u043b\u0430\u0436\u0438\u0432\u0430\u043d\u0438\u044f\u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u0440\u0435\u0436\u0438\u043c\u0441\u043f\u0438\u0441\u043a\u0430\u0437\u0430\u0434\u0430\u0447 \u0441\u043a\u0432\u043e\u0437\u043d\u043e\u0435\u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u0434\u0430\u043d\u043d\u044b\u0445\u0444\u043e\u0440\u043c\u044b\u0432\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445 \u0441\u043f\u043e\u0441\u043e\u0431\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u0442\u0435\u043a\u0441\u0442\u0430\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0448\u043a\u0430\u043b\u044b\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u044e\u0449\u0435\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f\u0433\u0440\u0443\u043f\u043f\u0430\u043a\u043e\u043c\u0430\u043d\u0434 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0435\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u0442\u0438\u043b\u044c\u0441\u0442\u0440\u0435\u043b\u043a\u0438 \u0442\u0438\u043f\u0430\u043f\u043f\u0440\u043e\u043a\u0441\u0438\u043c\u0430\u0446\u0438\u0438\u043b\u0438\u043d\u0438\u0438\u0442\u0440\u0435\u043d\u0434\u0430\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u0435\u0434\u0438\u043d\u0438\u0446\u044b\u0448\u043a\u0430\u043b\u044b\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0442\u0438\u043f\u0438\u043c\u043f\u043e\u0440\u0442\u0430\u0441\u0435\u0440\u0438\u0439\u0441\u043b\u043e\u044f\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043b\u0438\u043d\u0438\u0438\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043b\u0438\u043d\u0438\u0438\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u043c\u0430\u0440\u043a\u0435\u0440\u0430\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043c\u0430\u0440\u043a\u0435\u0440\u0430\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u043e\u0431\u043b\u0430\u0441\u0442\u0438\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0441\u0435\u0440\u0438\u0438\u0441\u043b\u043e\u044f\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0442\u043e\u0447\u0435\u0447\u043d\u043e\u0433\u043e\u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0448\u043a\u0430\u043b\u044b\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043b\u0435\u0433\u0435\u043d\u0434\u044b\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043f\u043e\u0438\u0441\u043a\u0430\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u043f\u0440\u043e\u0435\u043a\u0446\u0438\u0438\u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439 \u0442\u0438\u043f\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u043e\u0432\u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439 \u0442\u0438\u043f\u0440\u0430\u043c\u043a\u0438\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u0441\u0432\u044f\u0437\u0438\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\u0433\u0430\u043d\u0442\u0430 \u0442\u0438\u043f\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u043f\u043e\u0441\u0435\u0440\u0438\u044f\u043c\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0442\u043e\u0447\u0435\u043a\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0442\u0438\u043f\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439\u043b\u0438\u043d\u0438\u0438 \u0442\u0438\u043f\u0441\u0442\u043e\u0440\u043e\u043d\u044b\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0442\u0438\u043f\u0444\u043e\u0440\u043c\u044b\u043e\u0442\u0447\u0435\u0442\u0430 \u0442\u0438\u043f\u0448\u043a\u0430\u043b\u044b\u0440\u0430\u0434\u0430\u0440\u043d\u043e\u0439\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0444\u0430\u043a\u0442\u043e\u0440\u043b\u0438\u043d\u0438\u0438\u0442\u0440\u0435\u043d\u0434\u0430\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0444\u0438\u0433\u0443\u0440\u0430\u043a\u043d\u043e\u043f\u043a\u0438 \u0444\u0438\u0433\u0443\u0440\u044b\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0439\u0441\u0445\u0435\u043c\u044b \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u044f\u0432\u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0434\u043d\u044f\u0448\u043a\u0430\u043b\u044b\u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0448\u0438\u0440\u0438\u043d\u0430\u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u043d\u044b\u0445\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u0444\u043e\u0440\u043c\u044b \u0432\u0438\u0434\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u044f\u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u0438 \u0432\u0438\u0434\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u044f\u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0432\u0438\u0434\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0432\u0438\u0434\u0441\u0447\u0435\u0442\u0430 \u0432\u0438\u0434\u0442\u043e\u0447\u043a\u0438\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430\u0431\u0438\u0437\u043d\u0435\u0441\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0433\u0440\u0443\u043f\u043f\u0438\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0440\u0435\u0436\u0438\u043c\u0430\u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0441\u0440\u0435\u0437\u0430 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c\u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0430\u0432\u0442\u043e\u0432\u0440\u0435\u043c\u044f \u0440\u0435\u0436\u0438\u043c\u0437\u0430\u043f\u0438\u0441\u0438\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0440\u0435\u0436\u0438\u043c\u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0430\u0432\u0442\u043e\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439\u043d\u043e\u043c\u0435\u0440\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0438\u0442\u043e\u0433\u043e\u0432\u043a\u043e\u043b\u043e\u043d\u043e\u043a\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0438\u0442\u043e\u0433\u043e\u0432\u0441\u0442\u0440\u043e\u043a\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0442\u0435\u043a\u0441\u0442\u0430\u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0447\u0442\u0435\u043d\u0438\u044f\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u0434\u0432\u0443\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0435\u0439\u043f\u0435\u0447\u0430\u0442\u0438 \u0442\u0438\u043f\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u043e\u0431\u043b\u0430\u0441\u0442\u0438\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043a\u0443\u0440\u0441\u043e\u0440\u043e\u0432\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043b\u0438\u043d\u0438\u0438\u0440\u0438\u0441\u0443\u043d\u043a\u0430\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043b\u0438\u043d\u0438\u0438\u044f\u0447\u0435\u0439\u043a\u0438\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043b\u0438\u043d\u0438\u0439\u0441\u0432\u043e\u0434\u043d\u043e\u0439\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0442\u0438\u043f\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u0442\u0435\u043a\u0441\u0442\u0430\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u0440\u0438\u0441\u0443\u043d\u043a\u0430\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u0441\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u0443\u0437\u043e\u0440\u0430\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u0444\u0430\u0439\u043b\u0430\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u043f\u0435\u0447\u0430\u0442\u0438 \u0447\u0435\u0440\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435\u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u0432\u0440\u0435\u043c\u0435\u043d\u0438\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0449\u0438\u043a\u0430 \u0442\u0438\u043f\u0444\u0430\u0439\u043b\u0430\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043e\u0431\u0445\u043e\u0434\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u0437\u0430\u043f\u0438\u0441\u0438\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u0438\u0434\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044f\u043e\u0442\u0447\u0435\u0442\u0430 \u0442\u0438\u043f\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0442\u0438\u043f\u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044f\u043e\u0442\u0447\u0435\u0442\u0430 \u0442\u0438\u043f\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u0438\u0442\u043e\u0433\u043e\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u043a\u0444\u0430\u0439\u043b\u0443 \u0440\u0435\u0436\u0438\u043c\u0434\u0438\u0430\u043b\u043e\u0433\u0430\u0432\u044b\u0431\u043e\u0440\u0430\u0444\u0430\u0439\u043b\u0430 \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f\u0444\u0430\u0439\u043b\u0430 \u0442\u0438\u043f\u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044f\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u0438\u0434\u0434\u0430\u043d\u043d\u044b\u0445\u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043c\u0435\u0442\u043e\u0434\u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u0435\u0434\u0438\u043d\u0438\u0446\u044b\u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430\u0432\u0440\u0435\u043c\u0435\u043d\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u0442\u0430\u0431\u043b\u0438\u0446\u044b\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u0438\u0441\u043a\u0430\u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0439 \u0442\u0438\u043f\u043a\u043e\u043b\u043e\u043d\u043a\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u0434\u0435\u0440\u0435\u0432\u043e\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0442\u0438\u043f\u043a\u043e\u043b\u043e\u043d\u043a\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0442\u0438\u043f\u043a\u043e\u043b\u043e\u043d\u043a\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043e\u0431\u0449\u0430\u044f\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0442\u0438\u043f\u043a\u043e\u043b\u043e\u043d\u043a\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u0438\u0441\u043a\u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0439 \u0442\u0438\u043f\u043a\u043e\u043b\u043e\u043d\u043a\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u0438\u0441\u043a\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439 \u0442\u0438\u043f\u043a\u043e\u043b\u043e\u043d\u043a\u0438\u043c\u043e\u0434\u0435\u043b\u0438\u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430 \u0442\u0438\u043f\u043c\u0435\u0440\u044b\u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0442\u0441\u0435\u0447\u0435\u043d\u0438\u044f\u043f\u0440\u0430\u0432\u0438\u043b\u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u043f\u043e\u043b\u044f\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u044f\u043f\u0440\u0430\u0432\u0438\u043b\u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u044f\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u044f\u0434\u0435\u0440\u0435\u0432\u0430\u0440\u0435\u0448\u0435\u043d\u0438\u0439 ws\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442xpathxs \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0437\u0430\u043f\u0438\u0441\u0438\u0434\u0430\u0442\u044bjson \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e\u0442\u0438\u043f\u0430xs \u0432\u0438\u0434\u0433\u0440\u0443\u043f\u043f\u044b\u043c\u043e\u0434\u0435\u043b\u0438xs \u0432\u0438\u0434\u0444\u0430\u0441\u0435\u0442\u0430xdto \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044fdom \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e\u0441\u0442\u044c\u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e\u0442\u0438\u043f\u0430xs \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e\u0441\u0442\u044c\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0433\u043e\u0442\u0438\u043f\u0430xs \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e\u0441\u0442\u044c\u0441\u0445\u0435\u043c\u044bxs \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u044b\u0435\u043f\u043e\u0434\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438xs \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u0433\u0440\u0443\u043f\u043f\u043f\u043e\u0434\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438xs \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430xs \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u0438xs \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0438\u043c\u0435\u043dxs \u043c\u0435\u0442\u043e\u0434\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044fxs \u043c\u043e\u0434\u0435\u043b\u044c\u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043exs \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0442\u0438\u043f\u0430xml \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435\u043f\u043e\u0434\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438xs \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432xs \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043exs \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044fxs \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u043e\u0442\u0431\u043e\u0440\u0430\u0443\u0437\u043b\u043e\u0432dom \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0441\u0442\u0440\u043e\u043ajson \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0432\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435dom \u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0435\u0441\u0438\u043c\u0432\u043e\u043b\u044bxml \u0442\u0438\u043f\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430xml \u0442\u0438\u043f\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044fjson \u0442\u0438\u043f\u043a\u0430\u043d\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043exml \u0442\u0438\u043f\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044bxs \u0442\u0438\u043f\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438xml \u0442\u0438\u043f\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430domxpath \u0442\u0438\u043f\u0443\u0437\u043b\u0430dom \u0442\u0438\u043f\u0443\u0437\u043b\u0430xml \u0444\u043e\u0440\u043c\u0430xml \u0444\u043e\u0440\u043c\u0430\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044fxs \u0444\u043e\u0440\u043c\u0430\u0442\u0434\u0430\u0442\u044bjson \u044d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432json \u0432\u0438\u0434\u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0438\u0442\u043e\u0433\u043e\u0432\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043f\u043e\u043b\u0435\u0439\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043f\u043e\u043b\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u043e\u0432\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0441\u043a\u043e\u0433\u043e\u043e\u0441\u0442\u0430\u0442\u043a\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0432\u044b\u0432\u043e\u0434\u0430\u0442\u0435\u043a\u0441\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0433\u0440\u0443\u043f\u043f\u044b\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u043e\u0442\u0431\u043e\u0440\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043f\u043e\u043b\u0435\u0439\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043c\u0430\u043a\u0435\u0442\u0430\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043c\u0430\u043a\u0435\u0442\u0430\u043e\u0431\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0441\u0442\u0430\u0442\u043a\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f\u0442\u0435\u043a\u0441\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u0441\u0432\u044f\u0437\u0438\u043d\u0430\u0431\u043e\u0440\u043e\u0432\u0434\u0430\u043d\u043d\u044b\u0445\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043b\u0435\u0433\u0435\u043d\u0434\u044b\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043e\u0442\u0431\u043e\u0440\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043f\u043e\u0441\u043e\u0431\u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0435\u0436\u0438\u043c\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432\u0432\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0443\u0441\u043b\u043e\u0432\u043d\u043e\u0433\u043e\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u0442\u0435\u043a\u0441\u0442\u0430\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0441\u043f\u043e\u0441\u043e\u0431\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e\u0432\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u043f\u043e\u0441\u043e\u0431\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u043d\u0435ascii\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0442\u0435\u043a\u0441\u0442\u0430\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u044b \u0441\u0442\u0430\u0442\u0443\u0441\u0440\u0430\u0437\u0431\u043e\u0440\u0430\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0433\u043e\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438\u0437\u0430\u043f\u0438\u0441\u0438\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438\u0437\u0430\u043f\u0438\u0441\u0438\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0440\u043e\u0432\u0435\u043d\u044c\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0432\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0440\u0435\u0436\u0438\u043c\u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0432\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0440\u0435\u0436\u0438\u043c\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u0430\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0442\u0438\u043f\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0432\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\u0438\u043c\u0435\u043d\u0444\u0430\u0439\u043b\u043e\u0432\u0432zip\u0444\u0430\u0439\u043b\u0435 \u043c\u0435\u0442\u043e\u0434\u0441\u0436\u0430\u0442\u0438\u044fzip \u043c\u0435\u0442\u043e\u0434\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044fzip \u0440\u0435\u0436\u0438\u043c\u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f\u043f\u0443\u0442\u0435\u0439\u0444\u0430\u0439\u043b\u043e\u0432zip \u0440\u0435\u0436\u0438\u043c\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\u043f\u043e\u0434\u043a\u0430\u0442\u0430\u043b\u043e\u0433\u043e\u0432zip \u0440\u0435\u0436\u0438\u043c\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f\u043f\u0443\u0442\u0435\u0439zip \u0443\u0440\u043e\u0432\u0435\u043d\u044c\u0441\u0436\u0430\u0442\u0438\u044fzip \u0437\u0432\u0443\u043a\u043e\u0432\u043e\u0435\u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430\u043a\u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0432\u043f\u043e\u0442\u043e\u043a\u0435 \u043f\u043e\u0440\u044f\u0434\u043e\u043a\u0431\u0430\u0439\u0442\u043e\u0432 \u0440\u0435\u0436\u0438\u043c\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0435\u0436\u0438\u043c\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u043e\u0439\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445\u043f\u043e\u043a\u0443\u043f\u043e\u043a \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0444\u043e\u043d\u043e\u0432\u043e\u0433\u043e\u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u0430\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0433\u043e\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044fftp \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u043e\u0440\u044f\u0434\u043a\u0430\u0441\u0445\u0435\u043c\u044b\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u043f\u0435\u0440\u0438\u043e\u0434\u0430\u043c\u0438\u0441\u0445\u0435\u043c\u044b\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u043e\u0439\u0442\u043e\u0447\u043a\u0438\u0441\u0445\u0435\u043c\u044b\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0441\u0445\u0435\u043c\u044b\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439\u0442\u0430\u0431\u043b\u0438\u0446\u044b\u0441\u0445\u0435\u043c\u044b\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f\u0441\u0445\u0435\u043c\u044b\u0437\u0430\u043f\u0440\u043e\u0441\u0430 http\u043c\u0435\u0442\u043e\u0434 \u0430\u0432\u0442\u043e\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043e\u0431\u0449\u0435\u0433\u043e\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u0430\u0432\u0442\u043e\u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u043e\u043c\u0435\u0440\u0430\u0437\u0430\u0434\u0430\u0447\u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0433\u043e\u044f\u0437\u044b\u043a\u0430 \u0432\u0438\u0434\u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0438 \u0432\u0438\u0434\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0432\u0438\u0434\u0442\u0430\u0431\u043b\u0438\u0446\u044b\u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u044c\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0439\u043f\u0440\u0438\u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0431\u0430\u0437\u044b\u043f\u043b\u0430\u043d\u0430\u0432\u0438\u0434\u043e\u0432\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e\u0432\u044b\u0431\u043e\u0440\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043e\u0431\u0449\u0435\u0433\u043e\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e\u043f\u043e\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445\u043e\u0431\u0449\u0435\u0433\u043e\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0435\u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0432\u0438\u0434\u0430\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0432\u0438\u0434\u0430\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0437\u0430\u0434\u0430\u0447\u0438 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u043b\u0430\u043d\u0430\u043e\u0431\u043c\u0435\u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0441\u0447\u0435\u0442\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u0433\u0440\u0430\u043d\u0438\u0446\u044b\u043f\u0440\u0438\u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c\u043d\u043e\u043c\u0435\u0440\u0430\u0431\u0438\u0437\u043d\u0435\u0441\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c\u043d\u043e\u043c\u0435\u0440\u0430\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u043d\u043e\u0441\u0442\u044c\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439\u043f\u043e\u0438\u0441\u043a\u043f\u0440\u0438\u0432\u0432\u043e\u0434\u0435\u043f\u043e\u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u044c\u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438\u043e\u0431\u0449\u0435\u0433\u043e\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0434\u0430\u043d\u043d\u044b\u0445\u043e\u0431\u0449\u0435\u0433\u043e\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\u043e\u0431\u0449\u0435\u0433\u043e\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u0430 \u0440\u0435\u0436\u0438\u043c\u0430\u0432\u0442\u043e\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u0438\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0440\u0435\u0436\u0438\u043c\u0437\u0430\u043f\u0438\u0441\u0438\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u0440\u0435\u0436\u0438\u043c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0440\u0435\u0436\u0438\u043c\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445\u0432\u044b\u0437\u043e\u0432\u043e\u0432\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u044b\u0438\u0432\u043d\u0435\u0448\u043d\u0438\u0445\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0440\u0435\u0436\u0438\u043c\u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0441\u0435\u0430\u043d\u0441\u043e\u0432 \u0440\u0435\u0436\u0438\u043c\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f\u0434\u0430\u043d\u043d\u044b\u0445\u0432\u044b\u0431\u043e\u0440\u0430\u043f\u0440\u0438\u0432\u0432\u043e\u0434\u0435\u043f\u043e\u0441\u0442\u0440\u043e\u043a\u0435 \u0440\u0435\u0436\u0438\u043c\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438 \u0440\u0435\u0436\u0438\u043c\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0440\u0435\u0436\u0438\u043c\u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u043e\u0439\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0435\u0440\u0438\u0438\u043a\u043e\u0434\u043e\u0432\u043f\u043b\u0430\u043d\u0430\u0432\u0438\u0434\u043e\u0432\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a \u0441\u0435\u0440\u0438\u0438\u043a\u043e\u0434\u043e\u0432\u043f\u043b\u0430\u043d\u0430\u0441\u0447\u0435\u0442\u043e\u0432 \u0441\u0435\u0440\u0438\u0438\u043a\u043e\u0434\u043e\u0432\u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043f\u0440\u0438\u0432\u0432\u043e\u0434\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u043f\u043e\u0438\u0441\u043a\u0430\u0441\u0442\u0440\u043e\u043a\u0438\u043f\u0440\u0438\u0432\u0432\u043e\u0434\u0435\u043f\u043e\u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u0434\u0430\u043d\u043d\u044b\u0445\u0442\u0430\u0431\u043b\u0438\u0446\u044b\u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043a\u043e\u0434\u0430\u043f\u043b\u0430\u043d\u0430\u0432\u0438\u0434\u043e\u0432\u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0442\u0438\u043f\u043a\u043e\u0434\u0430\u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430 \u0442\u0438\u043f\u043c\u0430\u043a\u0435\u0442\u0430 \u0442\u0438\u043f\u043d\u043e\u043c\u0435\u0440\u0430\u0431\u0438\u0437\u043d\u0435\u0441\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0442\u0438\u043f\u043d\u043e\u043c\u0435\u0440\u0430\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0442\u0438\u043f\u043d\u043e\u043c\u0435\u0440\u0430\u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0444\u043e\u0440\u043c\u044b \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0439 \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430\u0444\u043e\u0440\u043c\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e\u0448\u0440\u0438\u0444\u0442\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u043f\u0435\u0440\u0438\u043e\u0434\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0439\u0434\u0430\u0442\u044b\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0438\u0434\u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u0438\u0434\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0432\u0438\u0434\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e\u043f\u043e\u0438\u0441\u043a\u0430 \u0432\u0438\u0434\u0440\u0430\u043c\u043a\u0438 \u0432\u0438\u0434\u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u0438\u0434\u0446\u0432\u0435\u0442\u0430 \u0432\u0438\u0434\u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u0438\u0434\u0448\u0440\u0438\u0444\u0442\u0430 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f\u0434\u043b\u0438\u043d\u0430 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439\u0437\u043d\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435byteordermark \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445\u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e\u043f\u043e\u0438\u0441\u043a\u0430 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u043a\u043e\u0434\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430\u0434\u0438\u0430\u043b\u043e\u0433\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430xbase \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430\u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u043e\u0438\u0441\u043a\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u0438\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043f\u0430\u043d\u0435\u043b\u0438\u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0434\u0438\u0430\u043b\u043e\u0433\u0430\u0432\u043e\u043f\u0440\u043e\u0441 \u0440\u0435\u0436\u0438\u043c\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f\u0444\u043e\u0440\u043c\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e\u043f\u043e\u0438\u0441\u043a\u0430 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\u0431\u0430\u0437\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043f\u043e\u0441\u043e\u0431\u0432\u044b\u0431\u043e\u0440\u0430\u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u0430windows \u0441\u043f\u043e\u0441\u043e\u0431\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0432\u043d\u0435\u0448\u043d\u0435\u0439\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u044b \u0442\u0438\u043f\u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f\u043a\u043b\u0430\u0432\u0438\u0448\u0438enter \u0442\u0438\u043f\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438\u043e\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\u0431\u0430\u0437\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0440\u043e\u0432\u0435\u043d\u044c\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438\u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0445\u0435\u0448\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0447\u0430\u0441\u0442\u0438\u0434\u0430\u0442\u044b",type:"com\u043e\u0431\u044a\u0435\u043a\u0442 ftp\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 http\u0437\u0430\u043f\u0440\u043e\u0441 http\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0442\u0432\u0435\u0442 http\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 ws\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f ws\u043f\u0440\u043e\u043a\u0441\u0438 xbase \u0430\u043d\u0430\u043b\u0438\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044fxs \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u0443\u0444\u0435\u0440\u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435xs \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445\u0447\u0438\u0441\u0435\u043b \u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0430\u044f\u0441\u0445\u0435\u043c\u0430 \u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0430\u044f\u0441\u0445\u0435\u043c\u0430 \u0433\u0440\u0443\u043f\u043f\u0430\u043c\u043e\u0434\u0435\u043b\u0438xs \u0434\u0430\u043d\u043d\u044b\u0435\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u0435\u043d\u0434\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430\u0433\u0430\u043d\u0442\u0430 \u0434\u0438\u0430\u043b\u043e\u0433\u0432\u044b\u0431\u043e\u0440\u0430\u0444\u0430\u0439\u043b\u0430 \u0434\u0438\u0430\u043b\u043e\u0433\u0432\u044b\u0431\u043e\u0440\u0430\u0446\u0432\u0435\u0442\u0430 \u0434\u0438\u0430\u043b\u043e\u0433\u0432\u044b\u0431\u043e\u0440\u0430\u0448\u0440\u0438\u0444\u0442\u0430 \u0434\u0438\u0430\u043b\u043e\u0433\u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f\u0440\u0435\u0433\u043b\u0430\u043c\u0435\u043d\u0442\u043d\u043e\u0433\u043e\u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e\u043f\u0435\u0440\u0438\u043e\u0434\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442dom \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442html \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044fxs \u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0435\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u044cdom \u0437\u0430\u043f\u0438\u0441\u044cfastinfoset \u0437\u0430\u043f\u0438\u0441\u044chtml \u0437\u0430\u043f\u0438\u0441\u044cjson \u0437\u0430\u043f\u0438\u0441\u044cxml \u0437\u0430\u043f\u0438\u0441\u044czip\u0444\u0430\u0439\u043b\u0430 \u0437\u0430\u043f\u0438\u0441\u044c\u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u044c\u0442\u0435\u043a\u0441\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u044c\u0443\u0437\u043b\u043e\u0432dom \u0437\u0430\u043f\u0440\u043e\u0441 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0435\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435openssl \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043f\u043e\u043b\u0435\u0439\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435\u0442\u0435\u043a\u0441\u0442\u0430 \u0438\u043c\u043f\u043e\u0440\u0442xs \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0435\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u043e\u0447\u0442\u043e\u0432\u044b\u0439\u043f\u0440\u043e\u0444\u0438\u043b\u044c \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043f\u0440\u043e\u043a\u0441\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\u0434\u043b\u044f\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044fxs \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430xs \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0442\u0435\u0440\u0430\u0442\u043e\u0440\u0443\u0437\u043b\u043e\u0432dom \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430 \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b\u0434\u0430\u0442\u044b \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b\u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b\u0441\u0442\u0440\u043e\u043a\u0438 \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b\u0447\u0438\u0441\u043b\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u0449\u0438\u043a\u043c\u0430\u043a\u0435\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u0449\u0438\u043a\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u043c\u0430\u043a\u0435\u0442\u0430\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0444\u043e\u0440\u043c\u0430\u0442\u043d\u043e\u0439\u0441\u0442\u0440\u043e\u043a\u0438 \u043b\u0438\u043d\u0438\u044f \u043c\u0430\u043a\u0435\u0442\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u043a\u0435\u0442\u043e\u0431\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u043a\u0435\u0442\u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u043a\u0430xs \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043d\u0430\u0431\u043e\u0440\u0441\u0445\u0435\u043cxml \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438json \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u0445\u043e\u0434\u0434\u0435\u0440\u0435\u0432\u0430dom \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430xs \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435\u043d\u043e\u0442\u0430\u0446\u0438\u0438xs \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430xs \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u0434\u043e\u0441\u0442\u0443\u043f\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\u0441\u043e\u0431\u044b\u0442\u0438\u044f\u043e\u0442\u043a\u0430\u0437\u0432\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u0436\u0443\u0440\u043d\u0430\u043b\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e\u0444\u0430\u0439\u043b\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u0442\u0438\u043f\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0433\u0440\u0443\u043f\u043f\u044b\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432xs \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0433\u0440\u0443\u043f\u043f\u044b\u043c\u043e\u0434\u0435\u043b\u0438xs \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u0438xs \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e\u0442\u0438\u043f\u0430xs \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0433\u043e\u0442\u0438\u043f\u0430xs \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u0442\u0438\u043f\u0430\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430dom \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044fxpathxs \u043e\u0442\u0431\u043e\u0440\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u043a\u0435\u0442\u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u044b\u0445\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0437\u0430\u043f\u0438\u0441\u0438json \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0437\u0430\u043f\u0438\u0441\u0438xml \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0447\u0442\u0435\u043d\u0438\u044fxml \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435xs \u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0449\u0438\u043a \u043f\u043e\u043b\u0435\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044cdom \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043e\u0442\u0447\u0435\u0442\u0430\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0445\u0435\u043cxml \u043f\u043e\u0442\u043e\u043a \u043f\u043e\u0442\u043e\u043a\u0432\u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u043e\u0447\u0442\u0430 \u043f\u043e\u0447\u0442\u043e\u0432\u043e\u0435\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435xsl \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043a\u043a\u0430\u043d\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u043c\u0443xml \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0432\u044b\u0432\u043e\u0434\u0430\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445\u0432\u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0432\u044b\u0432\u043e\u0434\u0430\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445\u0432\u0442\u0430\u0431\u043b\u0438\u0447\u043d\u044b\u0439\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u044b\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0438\u043c\u0435\u043ddom \u0440\u0430\u043c\u043a\u0430 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u0440\u0435\u0433\u043b\u0430\u043c\u0435\u043d\u0442\u043d\u043e\u0433\u043e\u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0435\u0438\u043c\u044fxml \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0447\u0442\u0435\u043d\u0438\u044f\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0432\u043e\u0434\u043d\u0430\u044f\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u0432\u044f\u0437\u044c\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u0432\u044f\u0437\u044c\u043f\u043e\u0442\u0438\u043f\u0443 \u0441\u0432\u044f\u0437\u044c\u043f\u043e\u0442\u0438\u043f\u0443\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440xdto \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043a\u043b\u0438\u0435\u043d\u0442\u0430windows \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0444\u0430\u0439\u043b \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u044b\u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0445\u0446\u0435\u043d\u0442\u0440\u043e\u0432windows \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u044b\u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0445\u0446\u0435\u043d\u0442\u0440\u043e\u0432\u0444\u0430\u0439\u043b \u0441\u0436\u0430\u0442\u0438\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0430\u044f\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u0435\u043a\u043b\u0430\u0432\u0438\u0448 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f\u0434\u0430\u0442\u0430\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439\u043f\u0435\u0440\u0438\u043e\u0434 \u0441\u0445\u0435\u043c\u0430xml \u0441\u0445\u0435\u043c\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0447\u043d\u044b\u0439\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0435\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u0434\u0430\u043d\u043d\u044b\u0445xml \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0444\u0430\u0431\u0440\u0438\u043a\u0430xdto \u0444\u0430\u0439\u043b \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439\u043f\u043e\u0442\u043e\u043a \u0444\u0430\u0441\u0435\u0442\u0434\u043b\u0438\u043d\u044bxs \u0444\u0430\u0441\u0435\u0442\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430\u0440\u0430\u0437\u0440\u044f\u0434\u043e\u0432\u0434\u0440\u043e\u0431\u043d\u043e\u0439\u0447\u0430\u0441\u0442\u0438xs \u0444\u0430\u0441\u0435\u0442\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e\u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044fxs \u0444\u0430\u0441\u0435\u0442\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e\u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044fxs \u0444\u0430\u0441\u0435\u0442\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439\u0434\u043b\u0438\u043d\u044bxs \u0444\u0430\u0441\u0435\u0442\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e\u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044fxs \u0444\u0430\u0441\u0435\u0442\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e\u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044fxs \u0444\u0430\u0441\u0435\u0442\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439\u0434\u043b\u0438\u043d\u044bxs \u0444\u0430\u0441\u0435\u0442\u043e\u0431\u0440\u0430\u0437\u0446\u0430xs \u0444\u0430\u0441\u0435\u0442\u043e\u0431\u0449\u0435\u0433\u043e\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430\u0440\u0430\u0437\u0440\u044f\u0434\u043e\u0432xs \u0444\u0430\u0441\u0435\u0442\u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044fxs \u0444\u0430\u0441\u0435\u0442\u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0445\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432xs \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0437\u043b\u043e\u0432dom \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f\u0441\u0442\u0440\u043e\u043a\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442xs \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442 \u0447\u0442\u0435\u043d\u0438\u0435fastinfoset \u0447\u0442\u0435\u043d\u0438\u0435html \u0447\u0442\u0435\u043d\u0438\u0435json \u0447\u0442\u0435\u043d\u0438\u0435xml \u0447\u0442\u0435\u043d\u0438\u0435zip\u0444\u0430\u0439\u043b\u0430 \u0447\u0442\u0435\u043d\u0438\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0447\u0442\u0435\u043d\u0438\u0435\u0442\u0435\u043a\u0441\u0442\u0430 \u0447\u0442\u0435\u043d\u0438\u0435\u0443\u0437\u043b\u043e\u0432dom \u0448\u0440\u0438\u0444\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043a\u043e\u043c\u043f\u043e\u043d\u043e\u0432\u043a\u0438\u0434\u0430\u043d\u043d\u044b\u0445 comsafearray \u0434\u0435\u0440\u0435\u0432\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u043f\u0438\u0441\u043e\u043a\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439\u043c\u0430\u0441\u0441\u0438\u0432 ",literal:a},contains:[{className:"meta",begin:"#|&",end:"$",keywords:{$pattern:t,"meta-keyword":n+"\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c\u0438\u0437\u0444\u0430\u0439\u043b\u0430 \u0432\u0435\u0431\u043a\u043b\u0438\u0435\u043d\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \u0432\u043d\u0435\u0448\u043d\u0435\u0435\u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 \u043a\u043e\u043d\u0435\u0446\u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0435 \u043d\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0435\u043d\u0430\u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u043d\u0430\u043a\u043b\u0438\u0435\u043d\u0442\u0435\u043d\u0430\u0441\u0435\u0440\u0432\u0435\u0440\u0435\u0431\u0435\u0437\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430\u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u043d\u0430\u0441\u0435\u0440\u0432\u0435\u0440\u0435\u0431\u0435\u0437\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0441\u043b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440 \u0442\u043e\u043b\u0441\u0442\u044b\u0439\u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0431\u044b\u0447\u043d\u043e\u0435\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u0441\u0442\u044b\u0439\u043a\u043b\u0438\u0435\u043d\u0442\u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0435\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0442\u043e\u043d\u043a\u0438\u0439\u043a\u043b\u0438\u0435\u043d\u0442 "},contains:[o]},{className:"function",variants:[{begin:"\u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430|\u0444\u0443\u043d\u043a\u0446\u0438\u044f",end:"\\)",keywords:"\u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f"},{begin:"\u043a\u043e\u043d\u0435\u0446\u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b|\u043a\u043e\u043d\u0435\u0446\u0444\u0443\u043d\u043a\u0446\u0438\u0438",keywords:"\u043a\u043e\u043d\u0435\u0446\u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b \u043a\u043e\u043d\u0435\u0446\u0444\u0443\u043d\u043a\u0446\u0438\u0438"}],contains:[{begin:"\\(",end:"\\)",endsParent:!0,contains:[{className:"params",begin:t,end:",",excludeEnd:!0,endsWithParent:!0,keywords:{$pattern:t,keyword:"\u0437\u043d\u0430\u0447",literal:a},contains:[s,i,r]},o]},e.inherit(e.TITLE_MODE,{begin:t})]},o,{className:"symbol",begin:"~",end:";|:",excludeEnd:!0},s,i,r]}}},1290:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n={ruleDeclaration:/^[a-zA-Z][a-zA-Z0-9-]*/,unexpectedChars:/[!@#$^&',?+~`|:]/},a=e.COMMENT(/;/,/$/),s={className:"attribute",begin:t(n.ruleDeclaration,/(?=\s*=)/)};return{name:"Augmented Backus-Naur Form",illegal:n.unexpectedChars,keywords:["ALPHA","BIT","CHAR","CR","CRLF","CTL","DIGIT","DQUOTE","HEXDIG","HTAB","LF","LWSP","OCTET","SP","VCHAR","WSP"],contains:[s,a,{className:"symbol",begin:/%b[0-1]+(-[0-1]+|(\.[0-1]+)+){0,1}/},{className:"symbol",begin:/%d[0-9]+(-[0-9]+|(\.[0-9]+)+){0,1}/},{className:"symbol",begin:/%x[0-9A-F]+(-[0-9A-F]+|(\.[0-9A-F]+)+){0,1}/},{className:"symbol",begin:/%[si]/},e.QUOTE_STRING_MODE,e.NUMBER_MODE]}}},5187:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function a(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}e.exports=function(e){var t=["GET","POST","HEAD","PUT","DELETE","CONNECT","OPTIONS","PATCH","TRACE"];return{name:"Apache Access Log",contains:[{className:"number",begin:/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?\b/,relevance:5},{className:"number",begin:/\b\d+\b/,relevance:0},{className:"string",begin:n(/"/,a.apply(void 0,t)),end:/"/,keywords:t,illegal:/\n/,relevance:5,contains:[{begin:/HTTP\/[12]\.\d'/,relevance:5}]},{className:"string",begin:/\[\d[^\]\n]{8,}\]/,illegal:/\n/,relevance:1},{className:"string",begin:/\[/,end:/\]/,illegal:/\n/,relevance:0},{className:"string",begin:/"Mozilla\/\d\.\d \(/,end:/"/,illegal:/\n/,relevance:3},{className:"string",begin:/"/,end:/"/,illegal:/\n/,relevance:0}]}}},4235:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n={className:"rest_arg",begin:/[.]{3}/,end:/[a-zA-Z_$][a-zA-Z0-9_$]*/,relevance:10};return{name:"ActionScript",aliases:["as"],keywords:{keyword:"as break case catch class const continue default delete do dynamic each else extends final finally for function get if implements import in include instanceof interface internal is namespace native new override package private protected public return set static super switch this throw try typeof use var void while with",literal:"true false null undefined"},contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,{className:"class",beginKeywords:"package",end:/\{/,contains:[e.TITLE_MODE]},{className:"class",beginKeywords:"class interface",end:/\{/,excludeEnd:!0,contains:[{beginKeywords:"extends implements"},e.TITLE_MODE]},{className:"meta",beginKeywords:"import include",end:/;/,keywords:{"meta-keyword":"import include"}},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,illegal:/\S/,contains:[e.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n]},{begin:t(/:\s*/,/([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/)}]},e.METHOD_GUARD],illegal:/#/}}},8985:function(e){e.exports=function(e){var t="\\d(_|\\d)*",n="[eE][-+]?"+t,a="\\b("+(t+"#\\w+(\\.\\w+)?#("+n+")?")+"|"+(t+"(\\."+t+")?("+n+")?")+")",s="[A-Za-z](_?[A-Za-z0-9.])*",i="[]\\{\\}%#'\"",r=e.COMMENT("--","$"),o={begin:"\\s+:\\s+",end:"\\s*(:=|;|\\)|=>|$)",illegal:i,contains:[{beginKeywords:"loop for declare others",endsParent:!0},{className:"keyword",beginKeywords:"not null constant access function procedure in out aliased exception"},{className:"type",begin:s,endsParent:!0,relevance:0}]};return{name:"Ada",case_insensitive:!0,keywords:{keyword:"abort else new return abs elsif not reverse abstract end accept entry select access exception of separate aliased exit or some all others subtype and for out synchronized array function overriding at tagged generic package task begin goto pragma terminate body private then if procedure type case in protected constant interface is raise use declare range delay limited record when delta loop rem while digits renames with do mod requeue xor",literal:"True False"},contains:[r,{className:"string",begin:/"/,end:/"/,contains:[{begin:/""/,relevance:0}]},{className:"string",begin:/'.'/},{className:"number",begin:a,relevance:0},{className:"symbol",begin:"'"+s},{className:"title",begin:"(\\bwith\\s+)?(\\bprivate\\s+)?\\bpackage\\s+(\\bbody\\s+)?",end:"(is|$)",keywords:"package body",excludeBegin:!0,excludeEnd:!0,illegal:i},{begin:"(\\b(with|overriding)\\s+)?\\b(function|procedure)\\s+",end:"(\\bis|\\bwith|\\brenames|\\)\\s*;)",keywords:"overriding function procedure with is renames return",returnBegin:!0,contains:[r,{className:"title",begin:"(\\bwith\\s+)?\\b(function|procedure)\\s+",end:"(\\(|\\s+|$)",excludeBegin:!0,excludeEnd:!0,illegal:i},o,{className:"type",begin:"\\breturn\\s+",end:"(\\s+|;|$)",keywords:"return",excludeBegin:!0,excludeEnd:!0,endsParent:!0,illegal:i}]},{className:"type",begin:"\\b(sub)?type\\s+",end:"\\s+",keywords:"type",excludeBegin:!0,illegal:i},o]}}},6591:function(e){e.exports=function(e){var t={className:"built_in",begin:"\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)"},n={className:"symbol",begin:"[a-zA-Z0-9_]+@"},a={className:"keyword",begin:"<",end:">",contains:[t,n]};return t.contains=[a],n.contains=[a],{name:"AngelScript",aliases:["asc"],keywords:"for in|0 break continue while do|0 return if else case switch namespace is cast or and xor not get|0 in inout|10 out override set|0 private public const default|0 final shared external mixin|10 enum typedef funcdef this super import from interface abstract|0 try catch protected explicit property",illegal:"(^using\\s+[A-Za-z0-9_\\.]+;$|\\bfunction\\s*[^\\(])",contains:[{className:"string",begin:"'",end:"'",illegal:"\\n",contains:[e.BACKSLASH_ESCAPE],relevance:0},{className:"string",begin:'"""',end:'"""'},{className:"string",begin:'"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE],relevance:0},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"string",begin:"^\\s*\\[",end:"\\]"},{beginKeywords:"interface namespace",end:/\{/,illegal:"[;.\\-]",contains:[{className:"symbol",begin:"[a-zA-Z0-9_]+"}]},{beginKeywords:"class",end:/\{/,illegal:"[;.\\-]",contains:[{className:"symbol",begin:"[a-zA-Z0-9_]+",contains:[{begin:"[:,]\\s*",contains:[{className:"symbol",begin:"[a-zA-Z0-9_]+"}]}]}]},t,n,{className:"literal",begin:"\\b(null|true|false)"},{className:"number",relevance:0,begin:"(-?)(\\b0[xXbBoOdD][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?f?|\\.\\d+f?)([eE][-+]?\\d+f?)?)"}]}}},1957:function(e){e.exports=function(e){var t={className:"number",begin:/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?/};return{name:"Apache config",aliases:["apacheconf"],case_insensitive:!0,contains:[e.HASH_COMMENT_MODE,{className:"section",begin:/<\/?/,end:/>/,contains:[t,{className:"number",begin:/:\d{1,5}/},e.inherit(e.QUOTE_STRING_MODE,{relevance:0})]},{className:"attribute",begin:/\w+/,relevance:0,keywords:{nomarkup:"order deny allow setenv rewriterule rewriteengine rewritecond documentroot sethandler errordocument loadmodule options header listen serverroot servername"},starts:{end:/$/,relevance:0,keywords:{literal:"on off all deny allow"},contains:[{className:"meta",begin:/\s\[/,end:/\]$/},{className:"variable",begin:/[\$%]\{/,end:/\}/,contains:["self",{className:"number",begin:/[$%]\d+/}]},t,{className:"number",begin:/\d+/},e.QUOTE_STRING_MODE]}}],illegal:/\S/}}},3965:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function a(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}e.exports=function(e){var t=e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),s={className:"params",begin:/\(/,end:/\)/,contains:["self",e.C_NUMBER_MODE,t]},i=e.COMMENT(/--/,/$/),r=[i,e.COMMENT(/\(\*/,/\*\)/,{contains:["self",i]}),e.HASH_COMMENT_MODE];return{name:"AppleScript",aliases:["osascript"],keywords:{keyword:"about above after against and around as at back before beginning behind below beneath beside between but by considering contain contains continue copy div does eighth else end equal equals error every exit fifth first for fourth from front get given global if ignoring in into is it its last local me middle mod my ninth not of on onto or over prop property put ref reference repeat returning script second set seventh since sixth some tell tenth that the|0 then third through thru timeout times to transaction try until where while whose with without",literal:"AppleScript false linefeed return pi quote result space tab true",built_in:"alias application boolean class constant date file integer list number real record string text activate beep count delay launch log offset read round run say summarize write character characters contents day frontmost id item length month name paragraph paragraphs rest reverse running time version weekday word words year"},contains:[t,e.C_NUMBER_MODE,{className:"built_in",begin:n(/\b/,a.apply(void 0,[/clipboard info/,/the clipboard/,/info for/,/list (disks|folder)/,/mount volume/,/path to/,/(close|open for) access/,/(get|set) eof/,/current date/,/do shell script/,/get volume settings/,/random number/,/set volume/,/system attribute/,/system info/,/time to GMT/,/(load|run|store) script/,/scripting components/,/ASCII (character|number)/,/localized string/,/choose (application|color|file|file name|folder|from list|remote application|URL)/,/display (alert|dialog)/]),/\b/)},{className:"built_in",begin:/^\s*return\b/},{className:"literal",begin:/\b(text item delimiters|current application|missing value)\b/},{className:"keyword",begin:n(/\b/,a.apply(void 0,[/apart from/,/aside from/,/instead of/,/out of/,/greater than/,/isn't|(doesn't|does not) (equal|come before|come after|contain)/,/(greater|less) than( or equal)?/,/(starts?|ends|begins?) with/,/contained by/,/comes (before|after)/,/a (ref|reference)/,/POSIX (file|path)/,/(date|time) string/,/quoted form/]),/\b/)},{beginKeywords:"on",illegal:/[${=;\n]/,contains:[e.UNDERSCORE_TITLE_MODE,s]}].concat(r),illegal:/\/\/|->|=>|\[\[/}}},6158:function(e){e.exports=function(e){var t="[A-Za-z_][0-9A-Za-z_]*",n={keyword:"if for while var new function do return void else break",literal:"BackSlash DoubleQuote false ForwardSlash Infinity NaN NewLine null PI SingleQuote Tab TextFormatting true undefined",built_in:"Abs Acos Angle Attachments Area AreaGeodetic Asin Atan Atan2 Average Bearing Boolean Buffer BufferGeodetic Ceil Centroid Clip Console Constrain Contains Cos Count Crosses Cut Date DateAdd DateDiff Day Decode DefaultValue Dictionary Difference Disjoint Distance DistanceGeodetic Distinct DomainCode DomainName Equals Exp Extent Feature FeatureSet FeatureSetByAssociation FeatureSetById FeatureSetByPortalItem FeatureSetByRelationshipName FeatureSetByTitle FeatureSetByUrl Filter First Floor Geometry GroupBy Guid HasKey Hour IIf IndexOf Intersection Intersects IsEmpty IsNan IsSelfIntersecting Length LengthGeodetic Log Max Mean Millisecond Min Minute Month MultiPartToSinglePart Multipoint NextSequenceValue Now Number OrderBy Overlaps Point Polygon Polyline Portal Pow Random Relate Reverse RingIsClockWise Round Second SetGeometry Sin Sort Sqrt Stdev Sum SymmetricDifference Tan Text Timestamp Today ToLocal Top Touches ToUTC TrackCurrentTime TrackGeometryWindow TrackIndex TrackStartTime TrackWindow TypeOf Union UrlEncode Variance Weekday When Within Year "},a={className:"number",variants:[{begin:"\\b(0[bB][01]+)"},{begin:"\\b(0[oO][0-7]+)"},{begin:e.C_NUMBER_RE}],relevance:0},s={className:"subst",begin:"\\$\\{",end:"\\}",keywords:n,contains:[]},i={className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE,s]};s.contains=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,i,a,e.REGEXP_MODE];var r=s.contains.concat([e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]);return{name:"ArcGIS Arcade",keywords:n,contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,i,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"symbol",begin:"\\$[datastore|feature|layer|map|measure|sourcefeature|sourcelayer|targetfeature|targetlayer|value|view]+"},a,{begin:/[{,]\s*/,relevance:0,contains:[{begin:t+"\\s*:",returnBegin:!0,relevance:0,contains:[{className:"attr",begin:t,relevance:0}]}]},{begin:"("+e.RE_STARTERS_RE+"|\\b(return)\\b)\\s*",keywords:"return",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.REGEXP_MODE,{className:"function",begin:"(\\(.*?\\)|"+t+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:t},{begin:/\(\s*\)/},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,contains:r}]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/\{/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:t}),{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,contains:r}],illegal:/\[|%/},{begin:/\$[(.]/}],illegal:/#(?!!)/}}},7108:function(e){function t(e){return n("(",e,")?")}function n(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var a="boolean byte word String",s="KeyboardController MouseController SoftwareSerial EthernetServer EthernetClient LiquidCrystal RobotControl GSMVoiceCall EthernetUDP EsploraTFT HttpClient RobotMotor WiFiClient GSMScanner FileSystem Scheduler GSMServer YunClient YunServer IPAddress GSMClient GSMModem Keyboard Ethernet Console GSMBand Esplora Stepper Process WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage Client Server GSMPIN FileIO Bridge Serial EEPROM Stream Mouse Audio Servo File Task GPRS WiFi Wire TFT GSM SPI SD ",i="setup loop runShellCommandAsynchronously analogWriteResolution retrieveCallingNumber printFirmwareVersion analogReadResolution sendDigitalPortPair noListenOnLocalhost readJoystickButton setFirmwareVersion readJoystickSwitch scrollDisplayRight getVoiceCallStatus scrollDisplayLeft writeMicroseconds delayMicroseconds beginTransmission getSignalStrength runAsynchronously getAsynchronously listenOnLocalhost getCurrentCarrier readAccelerometer messageAvailable sendDigitalPorts lineFollowConfig countryNameWrite runShellCommand readStringUntil rewindDirectory readTemperature setClockDivider readLightSensor endTransmission analogReference detachInterrupt countryNameRead attachInterrupt encryptionType readBytesUntil robotNameWrite readMicrophone robotNameRead cityNameWrite userNameWrite readJoystickY readJoystickX mouseReleased openNextFile scanNetworks noInterrupts digitalWrite beginSpeaker mousePressed isActionDone mouseDragged displayLogos noAutoscroll addParameter remoteNumber getModifiers keyboardRead userNameRead waitContinue processInput parseCommand printVersion readNetworks writeMessage blinkVersion cityNameRead readMessage setDataMode parsePacket isListening setBitOrder beginPacket isDirectory motorsWrite drawCompass digitalRead clearScreen serialEvent rightToLeft setTextSize leftToRight requestFrom keyReleased compassRead analogWrite interrupts WiFiServer disconnect playMelody parseFloat autoscroll getPINUsed setPINUsed setTimeout sendAnalog readSlider analogRead beginWrite createChar motorsStop keyPressed tempoWrite readButton subnetMask debugPrint macAddress writeGreen randomSeed attachGPRS readString sendString remotePort releaseAll mouseMoved background getXChange getYChange answerCall getResult voiceCall endPacket constrain getSocket writeJSON getButton available connected findUntil readBytes exitValue readGreen writeBlue startLoop IPAddress isPressed sendSysex pauseMode gatewayIP setCursor getOemKey tuneWrite noDisplay loadImage switchPIN onRequest onReceive changePIN playFile noBuffer parseInt overflow checkPIN knobRead beginTFT bitClear updateIR bitWrite position writeRGB highByte writeRed setSpeed readBlue noStroke remoteIP transfer shutdown hangCall beginSMS endWrite attached maintain noCursor checkReg checkPUK shiftOut isValid shiftIn pulseIn connect println localIP pinMode getIMEI display noBlink process getBand running beginSD drawBMP lowByte setBand release bitRead prepare pointTo readRed setMode noFill remove listen stroke detach attach noTone exists buffer height bitSet circle config cursor random IRread setDNS endSMS getKey micros millis begin print write ready flush width isPIN blink clear press mkdir rmdir close point yield image BSSID click delay read text move peek beep rect line open seek fill size turn stop home find step tone sqrt RSSI SSID end bit tan cos sin pow map abs max min get run put",r="DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL DEFAULT OUTPUT INPUT HIGH LOW",o=function(e){var a,s=e.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),i="decltype\\(auto\\)",r="[a-zA-Z_]\\w*::",o="("+i+"|"+t(r)+"[a-zA-Z_]\\w*"+t("<[^<>]+>")+")",l={className:"keyword",begin:"\\b[a-z\\d_]*_t\\b"},c={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},e.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},d={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},u={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{"meta-keyword":"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(c,{className:"meta-string"}),{className:"meta-string",begin:/<.*?>/},s,e.C_BLOCK_COMMENT_MODE]},p={className:"title",begin:t(r)+e.IDENT_RE,relevance:0},m=t(r)+e.IDENT_RE+"\\s*\\(",h={keyword:"int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using asm case typeid wchar_t short reinterpret_cast|10 default double register explicit signed typename try this switch continue inline delete alignas alignof constexpr consteval constinit decltype concept co_await co_return co_yield requires noexcept static_assert thread_local restrict final override atomic_bool atomic_char atomic_schar atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong atomic_ullong new throw return and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq",built_in:"_Bool _Complex _Imaginary",_relevance_hints:["asin","atan2","atan","calloc","ceil","cosh","cos","exit","exp","fabs","floor","fmod","fprintf","fputs","free","frexp","auto_ptr","deque","list","queue","stack","vector","map","set","pair","bitset","multiset","multimap","unordered_set","fscanf","future","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","tolower","toupper","labs","ldexp","log10","log","malloc","realloc","memchr","memcmp","memcpy","memset","modf","pow","printf","putchar","puts","scanf","sinh","sin","snprintf","sprintf","sqrt","sscanf","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","tanh","tan","unordered_map","unordered_multiset","unordered_multimap","priority_queue","make_pair","array","shared_ptr","abort","terminate","abs","acos","vfprintf","vprintf","vsprintf","endl","initializer_list","unique_ptr","complex","imaginary","std","string","wstring","cin","cout","cerr","clog","stdin","stdout","stderr","stringstream","istringstream","ostringstream"],literal:"true false nullptr NULL"},f={className:"function.dispatch",relevance:0,keywords:h,begin:n(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!while)/,e.IDENT_RE,(a=/\s*\(/,n("(?=",a,")")))},g=[f,u,l,s,e.C_BLOCK_COMMENT_MODE,d,c],x={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:h,contains:g.concat([{begin:/\(/,end:/\)/,keywords:h,contains:g.concat(["self"]),relevance:0}]),relevance:0},_={className:"function",begin:"("+o+"[\\*&\\s]+)+"+m,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:h,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:i,keywords:h,relevance:0},{begin:m,returnBegin:!0,contains:[p],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[c,d]},{className:"params",begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:[s,e.C_BLOCK_COMMENT_MODE,c,d,l,{begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:["self",s,e.C_BLOCK_COMMENT_MODE,c,d,l]}]},l,s,e.C_BLOCK_COMMENT_MODE,u]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:h,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(x,_,f,g,[u,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",end:">",keywords:h,contains:["self",l]},{begin:e.IDENT_RE+"::",keywords:h},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},e.TITLE_MODE]}]),exports:{preprocessor:u,strings:c,keywords:h}}}(e),l=o.keywords;return l.keyword+=" "+a,l.literal+=" "+r,l.built_in+=" "+s,l._+=" "+i,o.name="Arduino",o.aliases=["ino"],o.supersetOf="cpp",o}},2436:function(e){e.exports=function(e){var t={variants:[e.COMMENT("^[ \\t]*(?=#)","$",{relevance:0,excludeBegin:!0}),e.COMMENT("[;@]","$",{relevance:0}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]};return{name:"ARM Assembly",case_insensitive:!0,aliases:["arm"],keywords:{$pattern:"\\.?"+e.IDENT_RE,meta:".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ",built_in:"r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 pc lr sp ip sl sb fp a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 {PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @"},contains:[{className:"keyword",begin:"\\b(adc|(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|wfe|wfi|yield)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?[sptrx]?(?=\\s)"},t,e.QUOTE_STRING_MODE,{className:"string",begin:"'",end:"[^\\\\]'",relevance:0},{className:"title",begin:"\\|",end:"\\|",illegal:"\\n",relevance:0},{className:"number",variants:[{begin:"[#$=]?0x[0-9a-f]+"},{begin:"[#$=]?0b[01]+"},{begin:"[#$=]\\d+"},{begin:"\\b\\d+"}],relevance:0},{className:"symbol",variants:[{begin:"^[ \\t]*[a-z_\\.\\$][a-z0-9_\\.\\$]+:"},{begin:"^[a-z_\\.\\$][a-z0-9_\\.\\$]+"},{begin:"[=#]\\w+"}],relevance:0}]}}},6513:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n=[{className:"strong",begin:/\*{2}([^\n]+?)\*{2}/},{className:"strong",begin:t(/\*\*/,/((\*(?!\*)|\\[^\n]|[^*\n\\])+\n)+/,/(\*(?!\*)|\\[^\n]|[^*\n\\])*/,/\*\*/),relevance:0},{className:"strong",begin:/\B\*(\S|\S[^\n]*?\S)\*(?!\w)/},{className:"strong",begin:/\*[^\s]([^\n]+\n)+([^\n]+)\*/}],a=[{className:"emphasis",begin:/_{2}([^\n]+?)_{2}/},{className:"emphasis",begin:t(/__/,/((_(?!_)|\\[^\n]|[^_\n\\])+\n)+/,/(_(?!_)|\\[^\n]|[^_\n\\])*/,/__/),relevance:0},{className:"emphasis",begin:/\b_(\S|\S[^\n]*?\S)_(?!\w)/},{className:"emphasis",begin:/_[^\s]([^\n]+\n)+([^\n]+)_/},{className:"emphasis",begin:"\\B'(?!['\\s])",end:"(\\n{2}|')",contains:[{begin:"\\\\'\\w",relevance:0}],relevance:0}];return{name:"AsciiDoc",aliases:["adoc"],contains:[e.COMMENT("^/{4,}\\n","\\n/{4,}$",{relevance:10}),e.COMMENT("^//","$",{relevance:0}),{className:"title",begin:"^\\.\\w.*$"},{begin:"^[=\\*]{4,}\\n",end:"\\n^[=\\*]{4,}$",relevance:10},{className:"section",relevance:10,variants:[{begin:"^(={1,6})[ \t].+?([ \t]\\1)?$"},{begin:"^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$"}]},{className:"meta",begin:"^:.+?:",end:"\\s",excludeEnd:!0,relevance:10},{className:"meta",begin:"^\\[.+?\\]$",relevance:0},{className:"quote",begin:"^_{4,}\\n",end:"\\n_{4,}$",relevance:10},{className:"code",begin:"^[\\-\\.]{4,}\\n",end:"\\n[\\-\\.]{4,}$",relevance:10},{begin:"^\\+{4,}\\n",end:"\\n\\+{4,}$",contains:[{begin:"<",end:">",subLanguage:"xml",relevance:0}],relevance:10},{className:"bullet",begin:"^(\\*+|-+|\\.+|[^\\n]+?::)\\s+"},{className:"symbol",begin:"^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+",relevance:10}].concat([{begin:/\\[*_`]/},{begin:/\\\\\*{2}[^\n]*?\*{2}/},{begin:/\\\\_{2}[^\n]*_{2}/},{begin:/\\\\`{2}[^\n]*`{2}/},{begin:/[:;}][*_`](?![*_`])/}],n,a,[{className:"string",variants:[{begin:"``.+?''"},{begin:"`.+?'"}]},{className:"code",begin:/`{2}/,end:/(\n{2}|`{2})/},{className:"code",begin:"(`.+?`|\\+.+?\\+)",relevance:0},{className:"code",begin:"^[ \\t]",end:"$",relevance:0},{begin:"^'{3,}[ \\t]*$",relevance:10},{begin:"(link:)?(http|https|ftp|file|irc|image:?):\\S+?\\[[^[]*?\\]",returnBegin:!0,contains:[{begin:"(link|image:?):",relevance:0},{className:"link",begin:"\\w",end:"[^\\[]+",relevance:0},{className:"string",begin:"\\[",end:"\\]",excludeBegin:!0,excludeEnd:!0,relevance:0}],relevance:10}])}}},8830:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n="false synchronized int abstract float private char boolean static null if const for true while long throw strictfp finally protected import native final return void enum else extends implements break transient new catch instanceof byte super volatile case assert short package default double public try this switch continue throws privileged aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization staticinitialization withincode target within execution getWithinTypeName handler thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents warning error soft precedence thisAspectInstance",a="get set args call";return{name:"AspectJ",keywords:n,illegal:/<\/|#/,contains:[e.COMMENT(/\/\*\*/,/\*\//,{relevance:0,contains:[{begin:/\w+@/,relevance:0},{className:"doctag",begin:/@[A-Za-z]+/}]}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"class",beginKeywords:"aspect",end:/[{;=]/,excludeEnd:!0,illegal:/[:;"\[\]]/,contains:[{beginKeywords:"extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton"},e.UNDERSCORE_TITLE_MODE,{begin:/\([^\)]*/,end:/[)]+/,keywords:n+" "+a,excludeEnd:!1}]},{className:"class",beginKeywords:"class interface",end:/[{;=]/,excludeEnd:!0,relevance:0,keywords:"class interface",illegal:/[:"\[\]]/,contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{beginKeywords:"pointcut after before around throwing returning",end:/[)]/,excludeEnd:!1,illegal:/["\[\]]/,contains:[{begin:t(e.UNDERSCORE_IDENT_RE,/\s*\(/),returnBegin:!0,contains:[e.UNDERSCORE_TITLE_MODE]}]},{begin:/[:]/,returnBegin:!0,end:/[{;]/,relevance:0,excludeEnd:!1,keywords:n,illegal:/["\[\]]/,contains:[{begin:t(e.UNDERSCORE_IDENT_RE,/\s*\(/),keywords:n+" "+a,relevance:0},e.QUOTE_STRING_MODE]},{beginKeywords:"new throw",relevance:0},{className:"function",begin:/\w+ +\w+(\.\w+)?\s*\([^\)]*\)\s*((throws)[\w\s,]+)?[\{;]/,returnBegin:!0,end:/[{;=]/,keywords:n,excludeEnd:!0,contains:[{begin:t(e.UNDERSCORE_IDENT_RE,/\s*\(/),returnBegin:!0,relevance:0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"params",begin:/\(/,end:/\)/,relevance:0,keywords:n,contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},e.C_NUMBER_MODE,{className:"meta",begin:/@[A-Za-z]+/}]}}},3189:function(e){e.exports=function(e){var t={begin:"`[\\s\\S]"};return{name:"AutoHotkey",case_insensitive:!0,aliases:["ahk"],keywords:{keyword:"Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group",literal:"true false NOT AND OR",built_in:"ComSpec Clipboard ClipboardAll ErrorLevel"},contains:[t,e.inherit(e.QUOTE_STRING_MODE,{contains:[t]}),e.COMMENT(";","$",{relevance:0}),e.C_BLOCK_COMMENT_MODE,{className:"number",begin:e.NUMBER_RE,relevance:0},{className:"variable",begin:"%[a-zA-Z0-9#_$@]+%"},{className:"built_in",begin:"^\\s*\\w+\\s*(,|%)"},{className:"title",variants:[{begin:'^[^\\n";]+::(?!=)'},{begin:'^[^\\n";]+:(?!=)',relevance:0}]},{className:"meta",begin:"^\\s*#\\w+",end:"$",relevance:0},{className:"built_in",begin:"A_[a-zA-Z0-9]+"},{begin:",\\s*,"}]}}},3501:function(e){e.exports=function(e){var t={variants:[e.COMMENT(";","$",{relevance:0}),e.COMMENT("#cs","#ce"),e.COMMENT("#comments-start","#comments-end")]},n={begin:"\\$[A-z0-9_]+"},a={className:"string",variants:[{begin:/"/,end:/"/,contains:[{begin:/""/,relevance:0}]},{begin:/'/,end:/'/,contains:[{begin:/''/,relevance:0}]}]},s={variants:[e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE]};return{name:"AutoIt",case_insensitive:!0,illegal:/\/\*/,keywords:{keyword:"ByRef Case Const ContinueCase ContinueLoop Dim Do Else ElseIf EndFunc EndIf EndSelect EndSwitch EndWith Enum Exit ExitLoop For Func Global If In Local Next ReDim Return Select Static Step Switch Then To Until Volatile WEnd While With",built_in:"Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait WinWaitActive WinWaitClose WinWaitNotActive",literal:"True False And Null Not Or Default"},contains:[t,n,a,s,{className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":["EndRegion","forcedef","forceref","ignorefunc","include","include-once","NoTrayIcon","OnAutoItStartRegister","pragma","Region","RequireAdmin","Tidy_Off","Tidy_On","Tidy_Parameters"]},contains:[{begin:/\\\n/,relevance:0},{beginKeywords:"include",keywords:{"meta-keyword":"include"},end:"$",contains:[a,{className:"meta-string",variants:[{begin:"<",end:">"},{begin:/"/,end:/"/,contains:[{begin:/""/,relevance:0}]},{begin:/'/,end:/'/,contains:[{begin:/''/,relevance:0}]}]}]},a,t]},{className:"symbol",begin:"@[A-z0-9_]+"},{className:"function",beginKeywords:"Func",end:"$",illegal:"\\$|\\[|%",contains:[e.UNDERSCORE_TITLE_MODE,{className:"params",begin:"\\(",end:"\\)",contains:[n,a,s]}]}]}}},2204:function(e){e.exports=function(e){return{name:"AVR Assembly",case_insensitive:!0,keywords:{$pattern:"\\.?"+e.IDENT_RE,keyword:"adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub subi swap tst wdr",built_in:"r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf",meta:".byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list .listmac .macro .nolist .org .set"},contains:[e.C_BLOCK_COMMENT_MODE,e.COMMENT(";","$",{relevance:0}),e.C_NUMBER_MODE,e.BINARY_NUMBER_MODE,{className:"number",begin:"\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)"},e.QUOTE_STRING_MODE,{className:"string",begin:"'",end:"[^\\\\]'",illegal:"[^\\\\][^']"},{className:"symbol",begin:"^[A-Za-z0-9_.$]+:"},{className:"meta",begin:"#",end:"$"},{className:"subst",begin:"@[0-9]+"}]}}},5014:function(e){e.exports=function(e){return{name:"Awk",keywords:{keyword:"BEGIN END if else while do for in break continue delete next nextfile function func exit|10"},contains:[{className:"variable",variants:[{begin:/\$[\w\d#@][\w\d_]*/},{begin:/\$\{(.*?)\}/}]},{className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:/(u|b)?r?'''/,end:/'''/,relevance:10},{begin:/(u|b)?r?"""/,end:/"""/,relevance:10},{begin:/(u|r|ur)'/,end:/'/,relevance:10},{begin:/(u|r|ur)"/,end:/"/,relevance:10},{begin:/(b|br)'/,end:/'/},{begin:/(b|br)"/,end:/"/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},e.REGEXP_MODE,e.HASH_COMMENT_MODE,e.NUMBER_MODE]}}},5957:function(e){e.exports=function(e){return{name:"X++",aliases:["x++"],keywords:{keyword:["abstract","as","asc","avg","break","breakpoint","by","byref","case","catch","changecompany","class","client","client","common","const","continue","count","crosscompany","delegate","delete_from","desc","display","div","do","edit","else","eventhandler","exists","extends","final","finally","firstfast","firstonly","firstonly1","firstonly10","firstonly100","firstonly1000","flush","for","forceliterals","forcenestedloop","forceplaceholders","forceselectorder","forupdate","from","generateonly","group","hint","if","implements","in","index","insert_recordset","interface","internal","is","join","like","maxof","minof","mod","namespace","new","next","nofetch","notexists","optimisticlock","order","outer","pessimisticlock","print","private","protected","public","readonly","repeatableread","retry","return","reverse","select","server","setting","static","sum","super","switch","this","throw","try","ttsabort","ttsbegin","ttscommit","unchecked","update_recordset","using","validtimestate","void","where","while"],built_in:["anytype","boolean","byte","char","container","date","double","enum","guid","int","int64","long","real","short","str","utcdatetime","var"],literal:["default","false","null","true"]},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,{className:"meta",begin:"#",end:"$"},{className:"class",beginKeywords:"class interface",end:/\{/,excludeEnd:!0,illegal:":",contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]}]}}},6734:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n={},a={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[n]}]};Object.assign(n,{className:"variable",variants:[{begin:t(/\$[\w\d#@][\w\d_]*/,"(?![\\w\\d])(?![$])")},a]});var s={className:"subst",begin:/\$\(/,end:/\)/,contains:[e.BACKSLASH_ESCAPE]},i={begin:/<<-?\s*(?=\w+)/,starts:{contains:[e.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:"string"})]}},r={className:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,n,s]};s.contains.push(r);var o={begin:/\$\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},e.NUMBER_MODE,n]},l=e.SHEBANG({binary:"(".concat(["fish","bash","zsh","sh","csh","ksh","tcsh","dash","scsh"].join("|"),")"),relevance:10}),c={className:"function",begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:!0,contains:[e.inherit(e.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0};return{name:"Bash",aliases:["sh","zsh"],keywords:{$pattern:/\b[a-z._-]+\b/,keyword:"if then else elif fi for while in do done case esac function",literal:"true false",built_in:"break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp"},contains:[l,e.SHEBANG(),c,o,e.HASH_COMMENT_MODE,i,r,{className:"",begin:/\\"/},{className:"string",begin:/'/,end:/'/},n]}}},1782:function(e){e.exports=function(e){return{name:"BASIC",case_insensitive:!0,illegal:"^.",keywords:{$pattern:"[a-zA-Z][a-zA-Z0-9_$%!#]*",keyword:"ABS ASC AND ATN AUTO|0 BEEP BLOAD|10 BSAVE|10 CALL CALLS CDBL CHAIN CHDIR CHR$|10 CINT CIRCLE CLEAR CLOSE CLS COLOR COM COMMON CONT COS CSNG CSRLIN CVD CVI CVS DATA DATE$ DEFDBL DEFINT DEFSNG DEFSTR DEF|0 SEG USR DELETE DIM DRAW EDIT END ENVIRON ENVIRON$ EOF EQV ERASE ERDEV ERDEV$ ERL ERR ERROR EXP FIELD FILES FIX FOR|0 FRE GET GOSUB|10 GOTO HEX$ IF THEN ELSE|0 INKEY$ INP INPUT INPUT# INPUT$ INSTR IMP INT IOCTL IOCTL$ KEY ON OFF LIST KILL LEFT$ LEN LET LINE LLIST LOAD LOC LOCATE LOF LOG LPRINT USING LSET MERGE MID$ MKDIR MKD$ MKI$ MKS$ MOD NAME NEW NEXT NOISE NOT OCT$ ON OR PEN PLAY STRIG OPEN OPTION BASE OUT PAINT PALETTE PCOPY PEEK PMAP POINT POKE POS PRINT PRINT] PSET PRESET PUT RANDOMIZE READ REM RENUM RESET|0 RESTORE RESUME RETURN|0 RIGHT$ RMDIR RND RSET RUN SAVE SCREEN SGN SHELL SIN SOUND SPACE$ SPC SQR STEP STICK STOP STR$ STRING$ SWAP SYSTEM TAB TAN TIME$ TIMER TROFF TRON TO USR VAL VARPTR VARPTR$ VIEW WAIT WHILE WEND WIDTH WINDOW WRITE XOR"},contains:[e.QUOTE_STRING_MODE,e.COMMENT("REM","$",{relevance:10}),e.COMMENT("'","$",{relevance:0}),{className:"symbol",begin:"^[0-9]+ ",relevance:10},{className:"number",begin:"\\b\\d+(\\.\\d+)?([edED]\\d+)?[#!]?",relevance:0},{className:"number",begin:"(&[hH][0-9a-fA-F]{1,4})"},{className:"number",begin:"(&[oO][0-7]{1,6})"}]}}},8683:function(e){e.exports=function(e){return{name:"Backus\u2013Naur Form",contains:[{className:"attribute",begin:/</,end:/>/},{begin:/::=/,end:/$/,contains:[{begin:/</,end:/>/},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}]}}},9532:function(e){e.exports=function(e){var t={className:"literal",begin:/[+-]/,relevance:0};return{name:"Brainfuck",aliases:["bf"],contains:[e.COMMENT("[^\\[\\]\\.,\\+\\-<> \r\n]","[\\[\\]\\.,\\+\\-<> \r\n]",{returnEnd:!0,relevance:0}),{className:"title",begin:"[\\[\\]]",relevance:0},{className:"string",begin:"[\\.,]",relevance:0},{begin:/(?:\+\+|--)/,contains:[t]},t]}}},6670:function(e){function t(e){return n("(",e,")?")}function n(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var a,s,i=function(e){var a,s=e.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),i="decltype\\(auto\\)",r="[a-zA-Z_]\\w*::",o="("+i+"|"+t(r)+"[a-zA-Z_]\\w*"+t("<[^<>]+>")+")",l={className:"keyword",begin:"\\b[a-z\\d_]*_t\\b"},c={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},e.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},d={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},u={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{"meta-keyword":"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(c,{className:"meta-string"}),{className:"meta-string",begin:/<.*?>/},s,e.C_BLOCK_COMMENT_MODE]},p={className:"title",begin:t(r)+e.IDENT_RE,relevance:0},m=t(r)+e.IDENT_RE+"\\s*\\(",h={keyword:"int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using asm case typeid wchar_t short reinterpret_cast|10 default double register explicit signed typename try this switch continue inline delete alignas alignof constexpr consteval constinit decltype concept co_await co_return co_yield requires noexcept static_assert thread_local restrict final override atomic_bool atomic_char atomic_schar atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong atomic_ullong new throw return and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq",built_in:"_Bool _Complex _Imaginary",_relevance_hints:["asin","atan2","atan","calloc","ceil","cosh","cos","exit","exp","fabs","floor","fmod","fprintf","fputs","free","frexp","auto_ptr","deque","list","queue","stack","vector","map","set","pair","bitset","multiset","multimap","unordered_set","fscanf","future","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","tolower","toupper","labs","ldexp","log10","log","malloc","realloc","memchr","memcmp","memcpy","memset","modf","pow","printf","putchar","puts","scanf","sinh","sin","snprintf","sprintf","sqrt","sscanf","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","tanh","tan","unordered_map","unordered_multiset","unordered_multimap","priority_queue","make_pair","array","shared_ptr","abort","terminate","abs","acos","vfprintf","vprintf","vsprintf","endl","initializer_list","unique_ptr","complex","imaginary","std","string","wstring","cin","cout","cerr","clog","stdin","stdout","stderr","stringstream","istringstream","ostringstream"],literal:"true false nullptr NULL"},f={className:"function.dispatch",relevance:0,keywords:h,begin:n(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!while)/,e.IDENT_RE,(a=/\s*\(/,n("(?=",a,")")))},g=[f,u,l,s,e.C_BLOCK_COMMENT_MODE,d,c],x={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:h,contains:g.concat([{begin:/\(/,end:/\)/,keywords:h,contains:g.concat(["self"]),relevance:0}]),relevance:0},_={className:"function",begin:"("+o+"[\\*&\\s]+)+"+m,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:h,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:i,keywords:h,relevance:0},{begin:m,returnBegin:!0,contains:[p],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[c,d]},{className:"params",begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:[s,e.C_BLOCK_COMMENT_MODE,c,d,l,{begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:["self",s,e.C_BLOCK_COMMENT_MODE,c,d,l]}]},l,s,e.C_BLOCK_COMMENT_MODE,u]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:h,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(x,_,f,g,[u,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",end:">",keywords:h,contains:["self",l]},{begin:e.IDENT_RE+"::",keywords:h},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},e.TITLE_MODE]}]),exports:{preprocessor:u,strings:c,keywords:h}}}(e);return i.disableAutodetect=!0,i.aliases=[],e.getLanguage("c")||(a=i.aliases).push.apply(a,["c","h"]),e.getLanguage("cpp")||(s=i.aliases).push.apply(s,["cc","c++","h++","hpp","hh","hxx","cxx"]),i}},7133:function(e){function t(e){return function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return function(e){return e?"string"===typeof e?e:e.source:null}(e)})).join("")}("(",e,")?")}e.exports=function(e){var n=e.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),a="decltype\\(auto\\)",s="[a-zA-Z_]\\w*::",i="("+a+"|"+t(s)+"[a-zA-Z_]\\w*"+t("<[^<>]+>")+")",r={className:"keyword",begin:"\\b[a-z\\d_]*_t\\b"},o={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},e.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},l={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},c={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{"meta-keyword":"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(o,{className:"meta-string"}),{className:"meta-string",begin:/<.*?>/},n,e.C_BLOCK_COMMENT_MODE]},d={className:"title",begin:t(s)+e.IDENT_RE,relevance:0},u=t(s)+e.IDENT_RE+"\\s*\\(",p={keyword:"int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using asm case typeid wchar_t short reinterpret_cast|10 default double register explicit signed typename try this switch continue inline delete alignas alignof constexpr consteval constinit decltype concept co_await co_return co_yield requires noexcept static_assert thread_local restrict final override atomic_bool atomic_char atomic_schar atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong atomic_ullong new throw return and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq",built_in:"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr _Bool complex _Complex imaginary _Imaginary",literal:"true false nullptr NULL"},m=[c,r,n,e.C_BLOCK_COMMENT_MODE,l,o],h={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:p,contains:m.concat([{begin:/\(/,end:/\)/,keywords:p,contains:m.concat(["self"]),relevance:0}]),relevance:0},f={className:"function",begin:"("+i+"[\\*&\\s]+)+"+u,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:p,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:a,keywords:p,relevance:0},{begin:u,returnBegin:!0,contains:[d],relevance:0},{className:"params",begin:/\(/,end:/\)/,keywords:p,relevance:0,contains:[n,e.C_BLOCK_COMMENT_MODE,o,l,r,{begin:/\(/,end:/\)/,keywords:p,relevance:0,contains:["self",n,e.C_BLOCK_COMMENT_MODE,o,l,r]}]},r,n,e.C_BLOCK_COMMENT_MODE,c]};return{name:"C",aliases:["h"],keywords:p,disableAutodetect:!0,illegal:"</",contains:[].concat(h,f,m,[c,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",end:">",keywords:p,contains:["self",r]},{begin:e.IDENT_RE+"::",keywords:p},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},e.TITLE_MODE]}]),exports:{preprocessor:c,strings:o,keywords:p}}}},5546:function(e){e.exports=function(e){var t="div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to until while with var",n=[e.C_LINE_COMMENT_MODE,e.COMMENT(/\{/,/\}/,{relevance:0}),e.COMMENT(/\(\*/,/\*\)/,{relevance:10})],a={className:"string",begin:/'/,end:/'/,contains:[{begin:/''/}]},s={className:"string",begin:/(#\d+)+/},i={className:"function",beginKeywords:"procedure",end:/[:;]/,keywords:"procedure|10",contains:[e.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,keywords:t,contains:[a,s]}].concat(n)},r={className:"class",begin:"OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)",returnBegin:!0,contains:[e.TITLE_MODE,i]};return{name:"C/AL",case_insensitive:!0,keywords:{keyword:t,literal:"false true"},illegal:/\/\*/,contains:[a,s,{className:"number",begin:"\\b\\d+(\\.\\d+)?(DT|D|T)",relevance:0},{className:"string",begin:'"',end:'"'},e.NUMBER_MODE,r,i]}}},4052:function(e){e.exports=function(e){return{name:"Cap\u2019n Proto",aliases:["capnp"],keywords:{keyword:"struct enum interface union group import using const annotation extends in of on as with from fixed",built_in:"Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 Text Data AnyPointer AnyStruct Capability List",literal:"true false"},contains:[e.QUOTE_STRING_MODE,e.NUMBER_MODE,e.HASH_COMMENT_MODE,{className:"meta",begin:/@0x[\w\d]{16};/,illegal:/\n/},{className:"symbol",begin:/@\d+\b/},{className:"class",beginKeywords:"struct enum",end:/\{/,illegal:/\n/,contains:[e.inherit(e.TITLE_MODE,{starts:{endsWithParent:!0,excludeEnd:!0}})]},{className:"class",beginKeywords:"interface",end:/\{/,illegal:/\n/,contains:[e.inherit(e.TITLE_MODE,{starts:{endsWithParent:!0,excludeEnd:!0}})]}]}}},7263:function(e){e.exports=function(e){var t="assembly module package import alias class interface object given value assign void function new of extends satisfies abstracts in out return break continue throw assert dynamic if else switch case for while try catch finally then let this outer super is exists nonempty",n={className:"subst",excludeBegin:!0,excludeEnd:!0,begin:/``/,end:/``/,keywords:t,relevance:10},a=[{className:"string",begin:'"""',end:'"""',relevance:10},{className:"string",begin:'"',end:'"',contains:[n]},{className:"string",begin:"'",end:"'"},{className:"number",begin:"#[0-9a-fA-F_]+|\\$[01_]+|[0-9_]+(?:\\.[0-9_](?:[eE][+-]?\\d+)?)?[kMGTPmunpf]?",relevance:0}];return n.contains=a,{name:"Ceylon",keywords:{keyword:t+" shared abstract formal default actual variable late native deprecated final sealed annotation suppressWarnings small",meta:"doc by license see throws tagged"},illegal:"\\$[^01]|#[^0-9a-fA-F]",contains:[e.C_LINE_COMMENT_MODE,e.COMMENT("/\\*","\\*/",{contains:["self"]}),{className:"meta",begin:'@[a-z]\\w*(?::"[^"]*")?'}].concat(a)}}},3270:function(e){e.exports=function(e){return{name:"Clean",aliases:["icl","dcl"],keywords:{keyword:"if let in with where case of class instance otherwise implementation definition system module from import qualified as special code inline foreign export ccall stdcall generic derive infix infixl infixr",built_in:"Int Real Char Bool",literal:"True False"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,{begin:"->|<-[|:]?|#!?|>>=|\\{\\||\\|\\}|:==|=:|<>"}]}}},7217:function(e){e.exports=function(e){return{name:"Clojure REPL",contains:[{className:"meta",begin:/^([\w.-]+|\s*#_)?=>/,starts:{end:/$/,subLanguage:"clojure"}}]}}},7672:function(e){e.exports=function(e){var t="a-zA-Z_\\-!.?+*=<>&#'",n="["+t+"]["+t+"0-9/;:]*",a="def defonce defprotocol defstruct defmulti defmethod defn- defn defmacro deftype defrecord",s={$pattern:n,"builtin-name":a+" cond apply if-not if-let if not not= =|0 <|0 >|0 <=|0 >=|0 ==|0 +|0 /|0 *|0 -|0 rem quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last drop-while while intern condp case reduced cycle split-at split-with repeat replicate iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter monitor-exit macroexpand macroexpand-1 for dosync and or when when-not when-let comp juxt partial sequence memoize constantly complement identity assert peek pop doto proxy first rest cons cast coll last butlast sigs reify second ffirst fnext nfirst nnext meta with-meta ns in-ns create-ns import refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize"},i={begin:n,relevance:0},r={className:"number",begin:"[-+]?\\d+(\\.\\d+)?",relevance:0},o=e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),l=e.COMMENT(";","$",{relevance:0}),c={className:"literal",begin:/\b(true|false|nil)\b/},d={begin:"[\\[\\{]",end:"[\\]\\}]"},u={className:"comment",begin:"\\^"+n},p=e.COMMENT("\\^\\{","\\}"),m={className:"symbol",begin:"[:]{1,2}"+n},h={begin:"\\(",end:"\\)"},f={endsWithParent:!0,relevance:0},g={keywords:s,className:"name",begin:n,relevance:0,starts:f},x=[h,o,u,p,l,m,d,r,c,i],_={beginKeywords:a,lexemes:n,end:'(\\[|#|\\d|"|:|\\{|\\)|\\(|$)',contains:[{className:"title",begin:n,relevance:0,excludeEnd:!0,endsParent:!0}].concat(x)};return h.contains=[e.COMMENT("comment",""),_,g,f],f.contains=x,d.contains=x,p.contains=[d],{name:"Clojure",aliases:["clj"],illegal:/\S/,contains:[h,o,u,p,l,m,d,r,c]}}},9469:function(e){e.exports=function(e){return{name:"CMake",aliases:["cmake.in"],case_insensitive:!0,keywords:{keyword:"break cmake_host_system_information cmake_minimum_required cmake_parse_arguments cmake_policy configure_file continue elseif else endforeach endfunction endif endmacro endwhile execute_process file find_file find_library find_package find_path find_program foreach function get_cmake_property get_directory_property get_filename_component get_property if include include_guard list macro mark_as_advanced math message option return separate_arguments set_directory_properties set_property set site_name string unset variable_watch while add_compile_definitions add_compile_options add_custom_command add_custom_target add_definitions add_dependencies add_executable add_library add_link_options add_subdirectory add_test aux_source_directory build_command create_test_sourcelist define_property enable_language enable_testing export fltk_wrap_ui get_source_file_property get_target_property get_test_property include_directories include_external_msproject include_regular_expression install link_directories link_libraries load_cache project qt_wrap_cpp qt_wrap_ui remove_definitions set_source_files_properties set_target_properties set_tests_properties source_group target_compile_definitions target_compile_features target_compile_options target_include_directories target_link_directories target_link_libraries target_link_options target_sources try_compile try_run ctest_build ctest_configure ctest_coverage ctest_empty_binary_directory ctest_memcheck ctest_read_custom_files ctest_run_script ctest_sleep ctest_start ctest_submit ctest_test ctest_update ctest_upload build_name exec_program export_library_dependencies install_files install_programs install_targets load_command make_directory output_required_files remove subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or not command policy target test exists is_newer_than is_directory is_symlink is_absolute matches less greater equal less_equal greater_equal strless strgreater strequal strless_equal strgreater_equal version_less version_greater version_equal version_less_equal version_greater_equal in_list defined"},contains:[{className:"variable",begin:/\$\{/,end:/\}/},e.HASH_COMMENT_MODE,e.QUOTE_STRING_MODE,e.NUMBER_MODE]}}},4585:function(e){var t=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],n=["true","false","null","undefined","NaN","Infinity"],a=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"]);e.exports=function(e){var s,i={keyword:t.concat(["then","unless","until","loop","by","when","and","or","is","isnt","not"]).filter((s=["var","const","let","function","static"],function(e){return!s.includes(e)})),literal:n.concat(["yes","no","on","off"]),built_in:a.concat(["npm","print"])},r="[A-Za-z$_][0-9A-Za-z$_]*",o={className:"subst",begin:/#\{/,end:/\}/,keywords:i},l=[e.BINARY_NUMBER_MODE,e.inherit(e.C_NUMBER_MODE,{starts:{end:"(\\s*/)?",relevance:0}}),{className:"string",variants:[{begin:/'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE]},{begin:/'/,end:/'/,contains:[e.BACKSLASH_ESCAPE]},{begin:/"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,o]},{begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,o]}]},{className:"regexp",variants:[{begin:"///",end:"///",contains:[o,e.HASH_COMMENT_MODE]},{begin:"//[gim]{0,3}(?=\\W)",relevance:0},{begin:/\/(?![ *]).*?(?![\\]).\/[gim]{0,3}(?=\W)/}]},{begin:"@"+r},{subLanguage:"javascript",excludeBegin:!0,excludeEnd:!0,variants:[{begin:"```",end:"```"},{begin:"`",end:"`"}]}];o.contains=l;var c=e.inherit(e.TITLE_MODE,{begin:r}),d="(\\(.*\\)\\s*)?\\B[-=]>",u={className:"params",begin:"\\([^\\(]",returnBegin:!0,contains:[{begin:/\(/,end:/\)/,keywords:i,contains:["self"].concat(l)}]};return{name:"CoffeeScript",aliases:["coffee","cson","iced"],keywords:i,illegal:/\/\*/,contains:l.concat([e.COMMENT("###","###"),e.HASH_COMMENT_MODE,{className:"function",begin:"^\\s*"+r+"\\s*=\\s*"+d,end:"[-=]>",returnBegin:!0,contains:[c,u]},{begin:/[:\(,=]\s*/,relevance:0,contains:[{className:"function",begin:d,end:"[-=]>",returnBegin:!0,contains:[u]}]},{className:"class",beginKeywords:"class",end:"$",illegal:/[:="\[\]]/,contains:[{beginKeywords:"extends",endsWithParent:!0,illegal:/[:="\[\]]/,contains:[c]},c]},{begin:r+":",end:":",returnBegin:!0,returnEnd:!0,relevance:0}])}}},741:function(e){e.exports=function(e){return{name:"Coq",keywords:{keyword:"_|0 as at cofix else end exists exists2 fix for forall fun if IF in let match mod Prop return Set then Type using where with Abort About Add Admit Admitted All Arguments Assumptions Axiom Back BackTo Backtrack Bind Blacklist Canonical Cd Check Class Classes Close Coercion Coercions CoFixpoint CoInductive Collection Combined Compute Conjecture Conjectures Constant constr Constraint Constructors Context Corollary CreateHintDb Cut Declare Defined Definition Delimit Dependencies Dependent Derive Drop eauto End Equality Eval Example Existential Existentials Existing Export exporting Extern Extract Extraction Fact Field Fields File Fixpoint Focus for From Function Functional Generalizable Global Goal Grab Grammar Graph Guarded Heap Hint HintDb Hints Hypotheses Hypothesis ident Identity If Immediate Implicit Import Include Inductive Infix Info Initial Inline Inspect Instance Instances Intro Intros Inversion Inversion_clear Language Left Lemma Let Libraries Library Load LoadPath Local Locate Ltac ML Mode Module Modules Monomorphic Morphism Next NoInline Notation Obligation Obligations Opaque Open Optimize Options Parameter Parameters Parametric Path Paths pattern Polymorphic Preterm Print Printing Program Projections Proof Proposition Pwd Qed Quit Rec Record Recursive Redirect Relation Remark Remove Require Reserved Reset Resolve Restart Rewrite Right Ring Rings Save Scheme Scope Scopes Script Search SearchAbout SearchHead SearchPattern SearchRewrite Section Separate Set Setoid Show Solve Sorted Step Strategies Strategy Structure SubClass Table Tables Tactic Term Test Theorem Time Timeout Transparent Type Typeclasses Types Undelimit Undo Unfocus Unfocused Unfold Universe Universes Unset Unshelve using Variable Variables Variant Verbose Visibility where with",built_in:"abstract absurd admit after apply as assert assumption at auto autorewrite autounfold before bottom btauto by case case_eq cbn cbv change classical_left classical_right clear clearbody cofix compare compute congruence constr_eq constructor contradict contradiction cut cutrewrite cycle decide decompose dependent destruct destruction dintuition discriminate discrR do double dtauto eapply eassumption eauto ecase econstructor edestruct ediscriminate eelim eexact eexists einduction einjection eleft elim elimtype enough equality erewrite eright esimplify_eq esplit evar exact exactly_once exfalso exists f_equal fail field field_simplify field_simplify_eq first firstorder fix fold fourier functional generalize generalizing gfail give_up has_evar hnf idtac in induction injection instantiate intro intro_pattern intros intuition inversion inversion_clear is_evar is_var lapply lazy left lia lra move native_compute nia nsatz omega once pattern pose progress proof psatz quote record red refine reflexivity remember rename repeat replace revert revgoals rewrite rewrite_strat right ring ring_simplify rtauto set setoid_reflexivity setoid_replace setoid_rewrite setoid_symmetry setoid_transitivity shelve shelve_unifiable simpl simple simplify_eq solve specialize split split_Rabs split_Rmult stepl stepr subst sum swap symmetry tactic tauto time timeout top transitivity trivial try tryif unfold unify until using vm_compute with"},contains:[e.QUOTE_STRING_MODE,e.COMMENT("\\(\\*","\\*\\)"),e.C_NUMBER_MODE,{className:"type",excludeBegin:!0,begin:"\\|\\s*",end:"\\w+"},{begin:/[-=]>/}]}}},3979:function(e){e.exports=function(e){return{name:"Cach\xe9 Object Script",case_insensitive:!0,aliases:["cls"],keywords:"property parameter class classmethod clientmethod extends as break catch close continue do d|0 else elseif for goto halt hang h|0 if job j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 tcommit throw trollback try tstart use view while write w|0 xecute x|0 zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit zsync ascii",contains:[{className:"number",begin:"\\b(\\d+(\\.\\d*)?|\\.\\d+)",relevance:0},{className:"string",variants:[{begin:'"',end:'"',contains:[{begin:'""',relevance:0}]}]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"comment",begin:/;/,end:"$",relevance:0},{className:"built_in",begin:/(?:\$\$?|\.\.)\^?[a-zA-Z]+/},{className:"built_in",begin:/\$\$\$[a-zA-Z]+/},{className:"built_in",begin:/%[a-z]+(?:\.[a-z]+)*/},{className:"symbol",begin:/\^%?[a-zA-Z][\w]*/},{className:"keyword",begin:/##class|##super|#define|#dim/},{begin:/&sql\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,subLanguage:"sql"},{begin:/&(js|jscript|javascript)</,end:/>/,excludeBegin:!0,excludeEnd:!0,subLanguage:"javascript"},{begin:/&html<\s*</,end:/>\s*>/,subLanguage:"xml"}]}}},4709:function(e){function t(e){return n("(",e,")?")}function n(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var a,s=e.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),i="decltype\\(auto\\)",r="[a-zA-Z_]\\w*::",o="("+i+"|"+t(r)+"[a-zA-Z_]\\w*"+t("<[^<>]+>")+")",l={className:"keyword",begin:"\\b[a-z\\d_]*_t\\b"},c={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},e.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},d={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},u={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{"meta-keyword":"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(c,{className:"meta-string"}),{className:"meta-string",begin:/<.*?>/},s,e.C_BLOCK_COMMENT_MODE]},p={className:"title",begin:t(r)+e.IDENT_RE,relevance:0},m=t(r)+e.IDENT_RE+"\\s*\\(",h={keyword:"int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using asm case typeid wchar_t short reinterpret_cast|10 default double register explicit signed typename try this switch continue inline delete alignas alignof constexpr consteval constinit decltype concept co_await co_return co_yield requires noexcept static_assert thread_local restrict final override atomic_bool atomic_char atomic_schar atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong atomic_ullong new throw return and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq",built_in:"_Bool _Complex _Imaginary",_relevance_hints:["asin","atan2","atan","calloc","ceil","cosh","cos","exit","exp","fabs","floor","fmod","fprintf","fputs","free","frexp","auto_ptr","deque","list","queue","stack","vector","map","set","pair","bitset","multiset","multimap","unordered_set","fscanf","future","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","tolower","toupper","labs","ldexp","log10","log","malloc","realloc","memchr","memcmp","memcpy","memset","modf","pow","printf","putchar","puts","scanf","sinh","sin","snprintf","sprintf","sqrt","sscanf","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","tanh","tan","unordered_map","unordered_multiset","unordered_multimap","priority_queue","make_pair","array","shared_ptr","abort","terminate","abs","acos","vfprintf","vprintf","vsprintf","endl","initializer_list","unique_ptr","complex","imaginary","std","string","wstring","cin","cout","cerr","clog","stdin","stdout","stderr","stringstream","istringstream","ostringstream"],literal:"true false nullptr NULL"},f={className:"function.dispatch",relevance:0,keywords:h,begin:n(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!while)/,e.IDENT_RE,(a=/\s*\(/,n("(?=",a,")")))},g=[f,u,l,s,e.C_BLOCK_COMMENT_MODE,d,c],x={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:h,contains:g.concat([{begin:/\(/,end:/\)/,keywords:h,contains:g.concat(["self"]),relevance:0}]),relevance:0},_={className:"function",begin:"("+o+"[\\*&\\s]+)+"+m,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:h,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:i,keywords:h,relevance:0},{begin:m,returnBegin:!0,contains:[p],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[c,d]},{className:"params",begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:[s,e.C_BLOCK_COMMENT_MODE,c,d,l,{begin:/\(/,end:/\)/,keywords:h,relevance:0,contains:["self",s,e.C_BLOCK_COMMENT_MODE,c,d,l]}]},l,s,e.C_BLOCK_COMMENT_MODE,u]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:h,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(x,_,f,g,[u,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",end:">",keywords:h,contains:["self",l]},{begin:e.IDENT_RE+"::",keywords:h},{className:"class",beginKeywords:"enum class struct union",end:/[{;:<>=]/,contains:[{beginKeywords:"final class struct"},e.TITLE_MODE]}]),exports:{preprocessor:u,strings:c,keywords:h}}}},815:function(e){e.exports=function(e){var t="group clone ms master location colocation order fencing_topology rsc_ticket acl_target acl_group user role tag xml";return{name:"crmsh",aliases:["crm","pcmk"],case_insensitive:!0,keywords:{keyword:"params meta operations op rule attributes utilization read write deny defined not_defined in_range date spec in ref reference attribute type xpath version and or lt gt tag lte gte eq ne \\ number string",literal:"Master Started Slave Stopped start promote demote stop monitor true false"},contains:[e.HASH_COMMENT_MODE,{beginKeywords:"node",starts:{end:"\\s*([\\w_-]+:)?",starts:{className:"title",end:"\\s*[\\$\\w_][\\w_-]*"}}},{beginKeywords:"primitive rsc_template",starts:{className:"title",end:"\\s*[\\$\\w_][\\w_-]*",starts:{end:"\\s*@?[\\w_][\\w_\\.:-]*"}}},{begin:"\\b("+t.split(" ").join("|")+")\\s+",keywords:t,starts:{className:"title",end:"[\\$\\w_][\\w_-]*"}},{beginKeywords:"property rsc_defaults op_defaults",starts:{className:"title",end:"\\s*([\\w_-]+:)?"}},e.QUOTE_STRING_MODE,{className:"meta",begin:"(ocf|systemd|service|lsb):[\\w_:-]+",relevance:0},{className:"number",begin:"\\b\\d+(\\.\\d+)?(ms|s|h|m)?",relevance:0},{className:"literal",begin:"[-]?(infinity|inf)",relevance:0},{className:"attr",begin:/([A-Za-z$_#][\w_-]+)=/,relevance:0},{className:"tag",begin:"</?",end:"/?>",relevance:0}]}}},763:function(e){e.exports=function(e){var t="(_?[ui](8|16|32|64|128))?",n="[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\*\\*|\\[\\][=?]?",a="[A-Za-z_]\\w*(::\\w+)*(\\?|!)?",s={$pattern:"[a-zA-Z_]\\w*[!?=]?",keyword:"abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__",literal:"false nil true"},i={className:"subst",begin:/#\{/,end:/\}/,keywords:s},r={className:"template-variable",variants:[{begin:"\\{\\{",end:"\\}\\}"},{begin:"\\{%",end:"%\\}"}],keywords:s};function o(e,t){var n=[{begin:e,end:t}];return n[0].contains=n,n}var l={className:"string",contains:[e.BACKSLASH_ESCAPE,i],variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/`/,end:/`/},{begin:"%[Qwi]?\\(",end:"\\)",contains:o("\\(","\\)")},{begin:"%[Qwi]?\\[",end:"\\]",contains:o("\\[","\\]")},{begin:"%[Qwi]?\\{",end:/\}/,contains:o(/\{/,/\}/)},{begin:"%[Qwi]?<",end:">",contains:o("<",">")},{begin:"%[Qwi]?\\|",end:"\\|"},{begin:/<<-\w+$/,end:/^\s*\w+$/}],relevance:0},c={className:"string",variants:[{begin:"%q\\(",end:"\\)",contains:o("\\(","\\)")},{begin:"%q\\[",end:"\\]",contains:o("\\[","\\]")},{begin:"%q\\{",end:/\}/,contains:o(/\{/,/\}/)},{begin:"%q<",end:">",contains:o("<",">")},{begin:"%q\\|",end:"\\|"},{begin:/<<-'\w+'$/,end:/^\s*\w+$/}],relevance:0},d={begin:"(?!%\\})("+e.RE_STARTERS_RE+"|\\n|\\b(case|if|select|unless|until|when|while)\\b)\\s*",keywords:"case if select unless until when while",contains:[{className:"regexp",contains:[e.BACKSLASH_ESCAPE,i],variants:[{begin:"//[a-z]*",relevance:0},{begin:"/(?!\\/)",end:"/[a-z]*"}]}],relevance:0},u=[r,l,c,{className:"regexp",contains:[e.BACKSLASH_ESCAPE,i],variants:[{begin:"%r\\(",end:"\\)",contains:o("\\(","\\)")},{begin:"%r\\[",end:"\\]",contains:o("\\[","\\]")},{begin:"%r\\{",end:/\}/,contains:o(/\{/,/\}/)},{begin:"%r<",end:">",contains:o("<",">")},{begin:"%r\\|",end:"\\|"}],relevance:0},d,{className:"meta",begin:"@\\[",end:"\\]",contains:[e.inherit(e.QUOTE_STRING_MODE,{className:"meta-string"})]},e.HASH_COMMENT_MODE,{className:"class",beginKeywords:"class module struct",end:"$|;",illegal:/=/,contains:[e.HASH_COMMENT_MODE,e.inherit(e.TITLE_MODE,{begin:a}),{begin:"<"}]},{className:"class",beginKeywords:"lib enum union",end:"$|;",illegal:/=/,contains:[e.HASH_COMMENT_MODE,e.inherit(e.TITLE_MODE,{begin:a})]},{beginKeywords:"annotation",end:"$|;",illegal:/=/,contains:[e.HASH_COMMENT_MODE,e.inherit(e.TITLE_MODE,{begin:a})],relevance:2},{className:"function",beginKeywords:"def",end:/\B\b/,contains:[e.inherit(e.TITLE_MODE,{begin:n,endsParent:!0})]},{className:"function",beginKeywords:"fun macro",end:/\B\b/,contains:[e.inherit(e.TITLE_MODE,{begin:n,endsParent:!0})],relevance:2},{className:"symbol",begin:e.UNDERSCORE_IDENT_RE+"(!|\\?)?:",relevance:0},{className:"symbol",begin:":",contains:[l,{begin:n}],relevance:0},{className:"number",variants:[{begin:"\\b0b([01_]+)"+t},{begin:"\\b0o([0-7_]+)"+t},{begin:"\\b0x([A-Fa-f0-9_]+)"+t},{begin:"\\b([1-9][0-9_]*[0-9]|[0-9])(\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?(_?f(32|64))?(?!_)"},{begin:"\\b([1-9][0-9_]*|0)"+t}],relevance:0}];return i.contains=u,r.contains=u.slice(1),{name:"Crystal",aliases:["cr"],keywords:s,contains:u}}},6385:function(e){e.exports=function(e){var t={keyword:["abstract","as","base","break","case","class","const","continue","do","else","event","explicit","extern","finally","fixed","for","foreach","goto","if","implicit","in","interface","internal","is","lock","namespace","new","operator","out","override","params","private","protected","public","readonly","record","ref","return","sealed","sizeof","stackalloc","static","struct","switch","this","throw","try","typeof","unchecked","unsafe","using","virtual","void","volatile","while"].concat(["add","alias","and","ascending","async","await","by","descending","equals","from","get","global","group","init","into","join","let","nameof","not","notnull","on","or","orderby","partial","remove","select","set","unmanaged","value|0","var","when","where","with","yield"]),built_in:["bool","byte","char","decimal","delegate","double","dynamic","enum","float","int","long","nint","nuint","object","sbyte","short","string","ulong","uint","ushort"],literal:["default","false","null","true"]},n=e.inherit(e.TITLE_MODE,{begin:"[a-zA-Z](\\.?\\w)*"}),a={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},s={className:"string",begin:'@"',end:'"',contains:[{begin:'""'}]},i=e.inherit(s,{illegal:/\n/}),r={className:"subst",begin:/\{/,end:/\}/,keywords:t},o=e.inherit(r,{illegal:/\n/}),l={className:"string",begin:/\$"/,end:'"',illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},e.BACKSLASH_ESCAPE,o]},c={className:"string",begin:/\$@"/,end:'"',contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},r]},d=e.inherit(c,{illegal:/\n/,contains:[{begin:/\{\{/},{begin:/\}\}/},{begin:'""'},o]});r.contains=[c,l,s,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.C_BLOCK_COMMENT_MODE],o.contains=[d,l,i,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.inherit(e.C_BLOCK_COMMENT_MODE,{illegal:/\n/})];var u={variants:[c,l,s,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},p={begin:"<",end:">",contains:[{beginKeywords:"in out"},n]},m=e.IDENT_RE+"(<"+e.IDENT_RE+"(\\s*,\\s*"+e.IDENT_RE+")*>)?(\\[\\])?",h={begin:"@"+e.IDENT_RE,relevance:0};return{name:"C#",aliases:["cs","c#"],keywords:t,illegal:/::/,contains:[e.COMMENT("///","$",{returnBegin:!0,contains:[{className:"doctag",variants:[{begin:"///",relevance:0},{begin:"\x3c!--|--\x3e"},{begin:"</?",end:">"}]}]}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":"if else elif endif define undef warning error line region endregion pragma checksum"}},u,a,{beginKeywords:"class interface",relevance:0,end:/[{;=]/,illegal:/[^\s:,]/,contains:[{beginKeywords:"where class"},n,p,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:"namespace",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[n,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:"record",relevance:0,end:/[{;=]/,illegal:/[^\s:]/,contains:[n,p,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:"meta",begin:"^\\s*\\[",excludeBegin:!0,end:"\\]",excludeEnd:!0,contains:[{className:"meta-string",begin:/"/,end:/"/}]},{beginKeywords:"new return throw await else",relevance:0},{className:"function",begin:"("+m+"\\s+)+"+e.IDENT_RE+"\\s*(<.+>\\s*)?\\(",returnBegin:!0,end:/\s*[{;=]/,excludeEnd:!0,keywords:t,contains:[{beginKeywords:["public","private","protected","static","internal","protected","abstract","async","extern","override","unsafe","virtual","new","sealed","partial"].join(" "),relevance:0},{begin:e.IDENT_RE+"\\s*(<.+>\\s*)?\\(",returnBegin:!0,contains:[e.TITLE_MODE,p],relevance:0},{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:t,relevance:0,contains:[u,a,e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},h]}}},5343:function(e){e.exports=function(e){return{name:"CSP",case_insensitive:!1,keywords:{$pattern:"[a-zA-Z][a-zA-Z0-9_-]*",keyword:"base-uri child-src connect-src default-src font-src form-action frame-ancestors frame-src img-src media-src object-src plugin-types report-uri sandbox script-src style-src"},contains:[{className:"string",begin:"'",end:"'"},{className:"attribute",begin:"^Content",end:":",excludeEnd:!0}]}}},8575:function(e){var t=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],n=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],a=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],s=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],i=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","auto","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","clip-path","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-variant","font-variant-ligatures","font-variation-settings","font-weight","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inherit","initial","justify-content","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marks","mask","max-height","max-width","min-height","min-width","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","perspective","perspective-origin","pointer-events","position","quotes","resize","right","src","tab-size","table-layout","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-indent","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"].reverse();function r(e){return function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return function(e){return e?"string"===typeof e?e:e.source:null}(e)})).join("")}("(?=",e,")")}e.exports=function(e){var o=function(e){return{IMPORTANT:{className:"meta",begin:"!important"},HEXCOLOR:{className:"number",begin:"#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})"},ATTRIBUTE_SELECTOR_MODE:{className:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}}}(e),l=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE];return{name:"CSS",case_insensitive:!0,illegal:/[=|'\$]/,keywords:{keyframePosition:"from to"},classNameAliases:{keyframePosition:"selector-tag"},contains:[e.C_BLOCK_COMMENT_MODE,{begin:/-(webkit|moz|ms|o)-(?=[a-z])/},e.CSS_NUMBER_MODE,{className:"selector-id",begin:/#[A-Za-z0-9_-]+/,relevance:0},{className:"selector-class",begin:"\\.[a-zA-Z-][a-zA-Z0-9_-]*",relevance:0},o.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",variants:[{begin:":("+a.join("|")+")"},{begin:"::("+s.join("|")+")"}]},{className:"attribute",begin:"\\b("+i.join("|")+")\\b"},{begin:":",end:"[;}]",contains:[o.HEXCOLOR,o.IMPORTANT,e.CSS_NUMBER_MODE].concat(l,[{begin:/(url|data-uri)\(/,end:/\)/,relevance:0,keywords:{built_in:"url data-uri"},contains:[{className:"string",begin:/[^)]/,endsWithParent:!0,excludeEnd:!0}]},{className:"built_in",begin:/[\w-]+(?=\()/}])},{begin:r(/@/),end:"[{;]",relevance:0,illegal:/:/,contains:[{className:"keyword",begin:/@-?\w[\w]*(-\w+)*/},{begin:/\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:n.join(" ")},contains:[{begin:/[a-z-]+(?=:)/,className:"attribute"}].concat(l,[e.CSS_NUMBER_MODE])}]},{className:"selector-tag",begin:"\\b("+t.join("|")+")\\b"}]}}},3128:function(e){e.exports=function(e){var t={$pattern:e.UNDERSCORE_IDENT_RE,keyword:"abstract alias align asm assert auto body break byte case cast catch class const continue debug default delete deprecated do else enum export extern final finally for foreach foreach_reverse|10 goto if immutable import in inout int interface invariant is lazy macro mixin module new nothrow out override package pragma private protected public pure ref return scope shared static struct super switch synchronized template this throw try typedef typeid typeof union unittest version void volatile while with __FILE__ __LINE__ __gshared|10 __thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__",built_in:"bool cdouble cent cfloat char creal dchar delegate double dstring float function idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar wstring",literal:"false null true"},n="(0|[1-9][\\d_]*)",a="(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)",s="([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)",i="([eE][+-]?"+a+")",r="("+n+"|0[bB][01_]+|"+("0[xX]"+s)+")",o="\\\\(['\"\\?\\\\abfnrtv]|u[\\dA-Fa-f]{4}|[0-7]{1,3}|x[\\dA-Fa-f]{2}|U[\\dA-Fa-f]{8})|&[a-zA-Z\\d]{2,};",l={className:"number",begin:"\\b"+r+"(L|u|U|Lu|LU|uL|UL)?",relevance:0},c={className:"number",begin:"\\b("+("("+("(0[xX]("+s+"\\."+s+"|\\.?"+s+")[pP][+-]?"+a+")")+"|"+("("+a+"(\\.\\d*|"+i+")|\\d+\\."+a+"|\\."+n+i+"?)")+")")+"([fF]|L|i|[fF]i|Li)?|"+r+"(i|[fF]i|Li))",relevance:0},d={className:"string",begin:"'("+o+"|.)",end:"'",illegal:"."},u={className:"string",begin:'"',contains:[{begin:o,relevance:0}],end:'"[cwd]?'},p=e.COMMENT("\\/\\+","\\+\\/",{contains:["self"],relevance:10});return{name:"D",keywords:t,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,p,{className:"string",begin:'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',relevance:10},u,{className:"string",begin:'[rq]"',end:'"[cwd]?',relevance:5},{className:"string",begin:"`",end:"`[cwd]?"},{className:"string",begin:'q"\\{',end:'\\}"'},c,l,d,{className:"meta",begin:"^#!",end:"$",relevance:5},{className:"meta",begin:"#(line)",end:"$",relevance:5},{className:"keyword",begin:"@[a-zA-Z_][a-zA-Z_\\d]*"}]}}},4881:function(e){e.exports=function(e){var t={className:"subst",variants:[{begin:"\\$[A-Za-z0-9_]+"}]},n={className:"subst",variants:[{begin:/\$\{/,end:/\}/}],keywords:"true false null this is new super"},a={className:"string",variants:[{begin:"r'''",end:"'''"},{begin:'r"""',end:'"""'},{begin:"r'",end:"'",illegal:"\\n"},{begin:'r"',end:'"',illegal:"\\n"},{begin:"'''",end:"'''",contains:[e.BACKSLASH_ESCAPE,t,n]},{begin:'"""',end:'"""',contains:[e.BACKSLASH_ESCAPE,t,n]},{begin:"'",end:"'",illegal:"\\n",contains:[e.BACKSLASH_ESCAPE,t,n]},{begin:'"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE,t,n]}]};n.contains=[e.C_NUMBER_MODE,a];var s=["Comparable","DateTime","Duration","Function","Iterable","Iterator","List","Map","Match","Object","Pattern","RegExp","Set","Stopwatch","String","StringBuffer","StringSink","Symbol","Type","Uri","bool","double","int","num","Element","ElementList"],i=s.map((function(e){return"".concat(e,"?")}));return{name:"Dart",keywords:{keyword:"abstract as assert async await break case catch class const continue covariant default deferred do dynamic else enum export extends extension external factory false final finally for Function get hide if implements import in inferface is late library mixin new null on operator part required rethrow return set show static super switch sync this throw true try typedef var void while with yield",built_in:s.concat(i).concat(["Never","Null","dynamic","print","document","querySelector","querySelectorAll","window"]),$pattern:/[A-Za-z][A-Za-z0-9_]*\??/},contains:[a,e.COMMENT(/\/\*\*(?!\/)/,/\*\//,{subLanguage:"markdown",relevance:0}),e.COMMENT(/\/{3,} ?/,/$/,{contains:[{subLanguage:"markdown",begin:".",end:"$",relevance:0}]}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"class",beginKeywords:"class interface",end:/\{/,excludeEnd:!0,contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},e.C_NUMBER_MODE,{className:"meta",begin:"@[A-Za-z]+"},{begin:"=>"}]}}},6088:function(e){e.exports=function(e){var t="exports register file shl array record property for mod while set ally label uses raise not stored class safecall var interface or private static exit index inherited to else stdcall override shr asm far resourcestring finalization packed virtual out and protected library do xorwrite goto near function end div overload object unit begin string on inline repeat until destructor write message program with read initialization except default nil if case cdecl in downto threadvar of try pascal const external constructor type public then implementation finally published procedure absolute reintroduce operator as is abstract alias assembler bitpacked break continue cppdecl cvar enumerator experimental platform deprecated unimplemented dynamic export far16 forward generic helper implements interrupt iochecks local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat specialize strict unaligned varargs ",n=[e.C_LINE_COMMENT_MODE,e.COMMENT(/\{/,/\}/,{relevance:0}),e.COMMENT(/\(\*/,/\*\)/,{relevance:10})],a={className:"meta",variants:[{begin:/\{\$/,end:/\}/},{begin:/\(\*\$/,end:/\*\)/}]},s={className:"string",begin:/'/,end:/'/,contains:[{begin:/''/}]},i={className:"string",begin:/(#\d+)+/},r={begin:e.IDENT_RE+"\\s*=\\s*class\\s*\\(",returnBegin:!0,contains:[e.TITLE_MODE]},o={className:"function",beginKeywords:"function constructor destructor procedure",end:/[:;]/,keywords:"function constructor|10 destructor|10 procedure|10",contains:[e.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,keywords:t,contains:[s,i,a].concat(n)},a].concat(n)};return{name:"Delphi",aliases:["dpr","dfm","pas","pascal","freepascal","lazarus","lpr","lfm"],case_insensitive:!0,keywords:t,illegal:/"|\$[G-Zg-z]|\/\*|<\/|\|/,contains:[s,i,e.NUMBER_MODE,{className:"number",relevance:0,variants:[{begin:"\\$[0-9A-Fa-f]+"},{begin:"&[0-7]+"},{begin:"%[01]+"}]},r,o,a].concat(n)}}},9682:function(e){e.exports=function(e){return{name:"Diff",aliases:["patch"],contains:[{className:"meta",relevance:10,variants:[{begin:/^@@ +-\d+,\d+ +\+\d+,\d+ +@@/},{begin:/^\*\*\* +\d+,\d+ +\*\*\*\*$/},{begin:/^--- +\d+,\d+ +----$/}]},{className:"comment",variants:[{begin:/Index: /,end:/$/},{begin:/^index/,end:/$/},{begin:/={3,}/,end:/$/},{begin:/^-{3}/,end:/$/},{begin:/^\*{3} /,end:/$/},{begin:/^\+{3}/,end:/$/},{begin:/^\*{15}$/},{begin:/^diff --git/,end:/$/}]},{className:"addition",begin:/^\+/,end:/$/},{className:"deletion",begin:/^-/,end:/$/},{className:"addition",begin:/^!/,end:/$/}]}}},5547:function(e){e.exports=function(e){var t={begin:/\|[A-Za-z]+:?/,keywords:{name:"truncatewords removetags linebreaksbr yesno get_digit timesince random striptags filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort dictsortreversed default_if_none pluralize lower join center default truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize localtime utc timezone"},contains:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE]};return{name:"Django",aliases:["jinja"],case_insensitive:!0,subLanguage:"xml",contains:[e.COMMENT(/\{%\s*comment\s*%\}/,/\{%\s*endcomment\s*%\}/),e.COMMENT(/\{#/,/#\}/),{className:"template-tag",begin:/\{%/,end:/%\}/,contains:[{className:"name",begin:/\w+/,keywords:{name:"comment endcomment load templatetag ifchanged endifchanged if endif firstof for endfor ifnotequal endifnotequal widthratio extends include spaceless endspaceless regroup ifequal endifequal ssi now with cycle url filter endfilter debug block endblock else autoescape endautoescape csrf_token empty elif endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix plural get_current_language language get_available_languages get_current_language_bidi get_language_info get_language_info_list localize endlocalize localtime endlocaltime timezone endtimezone get_current_timezone verbatim"},starts:{endsWithParent:!0,keywords:"in by as",contains:[t],relevance:0}}]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[t]}]}}},1868:function(e){e.exports=function(e){return{name:"DNS Zone",aliases:["bind","zone"],keywords:{keyword:"IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT"},contains:[e.COMMENT(";","$",{relevance:0}),{className:"meta",begin:/^\$(TTL|GENERATE|INCLUDE|ORIGIN)\b/},{className:"number",begin:"((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))\\b"},{className:"number",begin:"((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b"},e.inherit(e.NUMBER_MODE,{begin:/\b\d+[dhwm]?/})]}}},1715:function(e){e.exports=function(e){return{name:"Dockerfile",aliases:["docker"],case_insensitive:!0,keywords:"from maintainer expose env arg user onbuild stopsignal",contains:[e.HASH_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.NUMBER_MODE,{beginKeywords:"run cmd entrypoint volume add copy workdir label healthcheck shell",starts:{end:/[^\\]$/,subLanguage:"bash"}}],illegal:"</"}}},8030:function(e){e.exports=function(e){var t=e.COMMENT(/^\s*@?rem\b/,/$/,{relevance:10});return{name:"Batch file (DOS)",aliases:["bat","cmd"],case_insensitive:!0,illegal:/\/\*/,keywords:{keyword:"if else goto for in do call exit not exist errorlevel defined equ neq lss leq gtr geq",built_in:"prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux shift cd dir echo setlocal endlocal set pause copy append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color comp compact convert date dir diskcomp diskcopy doskey erase fs find findstr format ftype graftabl help keyb label md mkdir mode more move path pause print popd pushd promt rd recover rem rename replace restore rmdir shift sort start subst time title tree type ver verify vol ping net ipconfig taskkill xcopy ren del"},contains:[{className:"variable",begin:/%%[^ ]|%[^ ]+?%|![^ ]+?!/},{className:"function",begin:"^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)",end:"goto:eof",contains:[e.inherit(e.TITLE_MODE,{begin:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"}),t]},{className:"number",begin:"\\b\\d+",relevance:0},t]}}},7572:function(e){e.exports=function(e){return{keywords:"dsconfig",contains:[{className:"keyword",begin:"^dsconfig",end:/\s/,excludeEnd:!0,relevance:10},{className:"built_in",begin:/(list|create|get|set|delete)-(\w+)/,end:/\s/,excludeEnd:!0,illegal:"!@#$%^&*()",relevance:10},{className:"built_in",begin:/--(\w+)/,end:/\s/,excludeEnd:!0},{className:"string",begin:/"/,end:/"/},{className:"string",begin:/'/,end:/'/},{className:"string",begin:/[\w\-?]+:\w+/,end:/\W/,relevance:0},{className:"string",begin:/\w+(\-\w+)*/,end:/(?=\W)/,relevance:0},e.HASH_COMMENT_MODE]}}},8829:function(e){e.exports=function(e){var t={className:"string",variants:[e.inherit(e.QUOTE_STRING_MODE,{begin:'((u8?|U)|L)?"'}),{begin:'(u8?|U)?R"',end:'"',contains:[e.BACKSLASH_ESCAPE]},{begin:"'\\\\?.",end:"'",illegal:"."}]},n={className:"number",variants:[{begin:"\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)"},{begin:e.C_NUMBER_RE}],relevance:0},a={className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":"if else elif endif define undef ifdef ifndef"},contains:[{begin:/\\\n/,relevance:0},{beginKeywords:"include",end:"$",keywords:{"meta-keyword":"include"},contains:[e.inherit(t,{className:"meta-string"}),{className:"meta-string",begin:"<",end:">",illegal:"\\n"}]},t,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},s={className:"variable",begin:/&[a-z\d_]*\b/},i={className:"meta-keyword",begin:"/[a-z][a-z\\d-]*/"},r={className:"symbol",begin:"^\\s*[a-zA-Z_][a-zA-Z\\d_]*:"},o={className:"params",begin:"<",end:">",contains:[n,s]},l={className:"class",begin:/[a-zA-Z_][a-zA-Z\d_@]*\s\{/,end:/[{;=]/,returnBegin:!0,excludeEnd:!0};return{name:"Device Tree",keywords:"",contains:[{className:"class",begin:"/\\s*\\{",end:/\};/,relevance:10,contains:[s,i,r,l,o,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n,t]},s,i,r,l,o,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n,t,a,{begin:e.IDENT_RE+"::",keywords:""}]}}},8378:function(e){e.exports=function(e){return{name:"Dust",aliases:["dst"],case_insensitive:!0,subLanguage:"xml",contains:[{className:"template-tag",begin:/\{[#\/]/,end:/\}/,illegal:/;/,contains:[{className:"name",begin:/[a-zA-Z\.-]+/,starts:{endsWithParent:!0,relevance:0,contains:[e.QUOTE_STRING_MODE]}}]},{className:"template-variable",begin:/\{/,end:/\}/,illegal:/;/,keywords:"if eq ne lt lte gt gte select default math sep"}]}}},1755:function(e){e.exports=function(e){var t=e.COMMENT(/\(\*/,/\*\)/);return{name:"Extended Backus-Naur Form",illegal:/\S/,contains:[t,{className:"attribute",begin:/^[ ]*[a-zA-Z]+([\s_-]+[a-zA-Z]+)*/},{begin:/=/,end:/[.;]/,contains:[t,{className:"meta",begin:/\?.*\?/},{className:"string",variants:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{begin:"`",end:"`"}]}]}]}}},718:function(e){e.exports=function(e){var t="[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?",n={$pattern:t,keyword:"and false then defined module in return redo retry end for true self when next until do begin unless nil break not case cond alias while ensure or include use alias fn quote require import with|0"},a={className:"subst",begin:/#\{/,end:/\}/,keywords:n},s={className:"number",begin:"(\\b0o[0-7_]+)|(\\b0b[01_]+)|(\\b0x[0-9a-fA-F_]+)|(-?\\b[1-9][0-9_]*(\\.[0-9_]+([eE][-+]?[0-9]+)?)?)",relevance:0},i="[/|([{<\"']",r={className:"string",begin:"~[a-z](?="+i+")",contains:[{endsParent:!0,contains:[{contains:[e.BACKSLASH_ESCAPE,a],variants:[{begin:/"/,end:/"/},{begin:/'/,end:/'/},{begin:/\//,end:/\//},{begin:/\|/,end:/\|/},{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/},{begin:/\{/,end:/\}/},{begin:/</,end:/>/}]}]}]},o={className:"string",begin:"~[A-Z](?="+i+")",contains:[{begin:/"/,end:/"/},{begin:/'/,end:/'/},{begin:/\//,end:/\//},{begin:/\|/,end:/\|/},{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/},{begin:/\{/,end:/\}/},{begin:/</,end:/>/}]},l={className:"string",contains:[e.BACKSLASH_ESCAPE,a],variants:[{begin:/"""/,end:/"""/},{begin:/'''/,end:/'''/},{begin:/~S"""/,end:/"""/,contains:[]},{begin:/~S"/,end:/"/,contains:[]},{begin:/~S'''/,end:/'''/,contains:[]},{begin:/~S'/,end:/'/,contains:[]},{begin:/'/,end:/'/},{begin:/"/,end:/"/}]},c={className:"function",beginKeywords:"def defp defmacro",end:/\B\b/,contains:[e.inherit(e.TITLE_MODE,{begin:t,endsParent:!0})]},d=e.inherit(c,{className:"class",beginKeywords:"defimpl defmodule defprotocol defrecord",end:/\bdo\b|$|;/}),u=[l,o,r,e.HASH_COMMENT_MODE,d,c,{begin:"::"},{className:"symbol",begin:":(?![\\s:])",contains:[l,{begin:"[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?"}],relevance:0},{className:"symbol",begin:t+":(?!:)",relevance:0},s,{className:"variable",begin:"(\\$\\W)|((\\$|@@?)(\\w+))"},{begin:"->"},{begin:"("+e.RE_STARTERS_RE+")\\s*",contains:[e.HASH_COMMENT_MODE,{begin:/\/: (?=\d+\s*[,\]])/,relevance:0,contains:[s]},{className:"regexp",illegal:"\\n",contains:[e.BACKSLASH_ESCAPE,a],variants:[{begin:"/",end:"/[a-z]*"},{begin:"%r\\[",end:"\\][a-z]*"}]}],relevance:0}];return a.contains=u,{name:"Elixir",keywords:n,contains:u}}},9280:function(e){e.exports=function(e){var t={variants:[e.COMMENT("--","$"),e.COMMENT(/\{-/,/-\}/,{contains:["self"]})]},n={className:"type",begin:"\\b[A-Z][\\w']*",relevance:0},a={begin:"\\(",end:"\\)",illegal:'"',contains:[{className:"type",begin:"\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"},t]};return{name:"Elm",keywords:"let in if then else case of where module import exposing type alias as infix infixl infixr port effect command subscription",contains:[{beginKeywords:"port effect module",end:"exposing",keywords:"port effect module where command subscription exposing",contains:[a,t],illegal:"\\W\\.|;"},{begin:"import",end:"$",keywords:"import as exposing",contains:[a,t],illegal:"\\W\\.|;"},{begin:"type",end:"$",keywords:"type alias",contains:[n,a,{begin:/\{/,end:/\}/,contains:a.contains},t]},{beginKeywords:"infix infixl infixr",end:"$",contains:[e.C_NUMBER_MODE,t]},{begin:"port",end:"$",keywords:"port",contains:[t]},{className:"string",begin:"'\\\\?.",end:"'",illegal:"."},e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,n,e.inherit(e.TITLE_MODE,{begin:"^[_a-z][\\w']*"}),t,{begin:"->|<-"}],illegal:/;/}}},1879:function(e){e.exports=function(e){return{name:"ERB",subLanguage:"xml",contains:[e.COMMENT("<%#","%>"),{begin:"<%[%=-]?",end:"[%-]?%>",subLanguage:"ruby",excludeBegin:!0,excludeEnd:!0}]}}},5217:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){return{name:"Erlang REPL",keywords:{built_in:"spawn spawn_link self",keyword:"after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse|10 query receive rem try when xor"},contains:[{className:"meta",begin:"^[0-9]+> ",relevance:10},e.COMMENT("%","$"),{className:"number",begin:"\\b(\\d+(_\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?([eE][-+]?\\d+)?)",relevance:0},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{begin:t(/\?(::)?/,/([A-Z]\w*)/,/((::)[A-Z]\w*)*/)},{begin:"->"},{begin:"ok"},{begin:"!"},{begin:"(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",relevance:0},{begin:"[A-Z][a-zA-Z0-9_']*",relevance:0}]}}},1160:function(e){e.exports=function(e){var t="[a-z'][a-zA-Z0-9_']*",n="("+t+":"+t+"|"+t+")",a={keyword:"after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if let not of orelse|10 query receive rem try when xor",literal:"false true"},s=e.COMMENT("%","$"),i={className:"number",begin:"\\b(\\d+(_\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?([eE][-+]?\\d+)?)",relevance:0},r={begin:"fun\\s+"+t+"/\\d+"},o={begin:n+"\\(",end:"\\)",returnBegin:!0,relevance:0,contains:[{begin:n,relevance:0},{begin:"\\(",end:"\\)",endsWithParent:!0,returnEnd:!0,relevance:0}]},l={begin:/\{/,end:/\}/,relevance:0},c={begin:"\\b_([A-Z][A-Za-z0-9_]*)?",relevance:0},d={begin:"[A-Z][a-zA-Z0-9_]*",relevance:0},u={begin:"#"+e.UNDERSCORE_IDENT_RE,relevance:0,returnBegin:!0,contains:[{begin:"#"+e.UNDERSCORE_IDENT_RE,relevance:0},{begin:/\{/,end:/\}/,relevance:0}]},p={beginKeywords:"fun receive if try case",end:"end",keywords:a};p.contains=[s,r,e.inherit(e.APOS_STRING_MODE,{className:""}),p,o,e.QUOTE_STRING_MODE,i,l,c,d,u];var m=[s,r,p,o,e.QUOTE_STRING_MODE,i,l,c,d,u];o.contains[1].contains=m,l.contains=m,u.contains[1].contains=m;var h={className:"params",begin:"\\(",end:"\\)",contains:m};return{name:"Erlang",aliases:["erl"],keywords:a,illegal:"(</|\\*=|\\+=|-=|/\\*|\\*/|\\(\\*|\\*\\))",contains:[{className:"function",begin:"^"+t+"\\s*\\(",end:"->",returnBegin:!0,illegal:"\\(|#|//|/\\*|\\\\|:|;",contains:[h,e.inherit(e.TITLE_MODE,{begin:t})],starts:{end:";|\\.",keywords:a,contains:m}},s,{begin:"^-",end:"\\.",relevance:0,excludeEnd:!0,returnBegin:!0,keywords:{$pattern:"-"+e.IDENT_RE,keyword:["-module","-record","-undef","-export","-ifdef","-ifndef","-author","-copyright","-doc","-vsn","-import","-include","-include_lib","-compile","-define","-else","-endif","-file","-behaviour","-behavior","-spec"].map((function(e){return"".concat(e,"|1.5")})).join(" ")},contains:[h]},i,e.QUOTE_STRING_MODE,u,c,d,l,{begin:/\.$/}]}}},2680:function(e){e.exports=function(e){return{name:"Excel formulae",aliases:["xlsx","xls"],case_insensitive:!0,keywords:{$pattern:/[a-zA-Z][\w\.]*/,built_in:"ABS ACCRINT ACCRINTM ACOS ACOSH ACOT ACOTH AGGREGATE ADDRESS AMORDEGRC AMORLINC AND ARABIC AREAS ASC ASIN ASINH ATAN ATAN2 ATANH AVEDEV AVERAGE AVERAGEA AVERAGEIF AVERAGEIFS BAHTTEXT BASE BESSELI BESSELJ BESSELK BESSELY BETADIST BETA.DIST BETAINV BETA.INV BIN2DEC BIN2HEX BIN2OCT BINOMDIST BINOM.DIST BINOM.DIST.RANGE BINOM.INV BITAND BITLSHIFT BITOR BITRSHIFT BITXOR CALL CEILING CEILING.MATH CEILING.PRECISE CELL CHAR CHIDIST CHIINV CHITEST CHISQ.DIST CHISQ.DIST.RT CHISQ.INV CHISQ.INV.RT CHISQ.TEST CHOOSE CLEAN CODE COLUMN COLUMNS COMBIN COMBINA COMPLEX CONCAT CONCATENATE CONFIDENCE CONFIDENCE.NORM CONFIDENCE.T CONVERT CORREL COS COSH COT COTH COUNT COUNTA COUNTBLANK COUNTIF COUNTIFS COUPDAYBS COUPDAYS COUPDAYSNC COUPNCD COUPNUM COUPPCD COVAR COVARIANCE.P COVARIANCE.S CRITBINOM CSC CSCH CUBEKPIMEMBER CUBEMEMBER CUBEMEMBERPROPERTY CUBERANKEDMEMBER CUBESET CUBESETCOUNT CUBEVALUE CUMIPMT CUMPRINC DATE DATEDIF DATEVALUE DAVERAGE DAY DAYS DAYS360 DB DBCS DCOUNT DCOUNTA DDB DEC2BIN DEC2HEX DEC2OCT DECIMAL DEGREES DELTA DEVSQ DGET DISC DMAX DMIN DOLLAR DOLLARDE DOLLARFR DPRODUCT DSTDEV DSTDEVP DSUM DURATION DVAR DVARP EDATE EFFECT ENCODEURL EOMONTH ERF ERF.PRECISE ERFC ERFC.PRECISE ERROR.TYPE EUROCONVERT EVEN EXACT EXP EXPON.DIST EXPONDIST FACT FACTDOUBLE FALSE|0 F.DIST FDIST F.DIST.RT FILTERXML FIND FINDB F.INV F.INV.RT FINV FISHER FISHERINV FIXED FLOOR FLOOR.MATH FLOOR.PRECISE FORECAST FORECAST.ETS FORECAST.ETS.CONFINT FORECAST.ETS.SEASONALITY FORECAST.ETS.STAT FORECAST.LINEAR FORMULATEXT FREQUENCY F.TEST FTEST FV FVSCHEDULE GAMMA GAMMA.DIST GAMMADIST GAMMA.INV GAMMAINV GAMMALN GAMMALN.PRECISE GAUSS GCD GEOMEAN GESTEP GETPIVOTDATA GROWTH HARMEAN HEX2BIN HEX2DEC HEX2OCT HLOOKUP HOUR HYPERLINK HYPGEOM.DIST HYPGEOMDIST IF IFERROR IFNA IFS IMABS IMAGINARY IMARGUMENT IMCONJUGATE IMCOS IMCOSH IMCOT IMCSC IMCSCH IMDIV IMEXP IMLN IMLOG10 IMLOG2 IMPOWER IMPRODUCT IMREAL IMSEC IMSECH IMSIN IMSINH IMSQRT IMSUB IMSUM IMTAN INDEX INDIRECT INFO INT INTERCEPT INTRATE IPMT IRR ISBLANK ISERR ISERROR ISEVEN ISFORMULA ISLOGICAL ISNA ISNONTEXT ISNUMBER ISODD ISREF ISTEXT ISO.CEILING ISOWEEKNUM ISPMT JIS KURT LARGE LCM LEFT LEFTB LEN LENB LINEST LN LOG LOG10 LOGEST LOGINV LOGNORM.DIST LOGNORMDIST LOGNORM.INV LOOKUP LOWER MATCH MAX MAXA MAXIFS MDETERM MDURATION MEDIAN MID MIDBs MIN MINIFS MINA MINUTE MINVERSE MIRR MMULT MOD MODE MODE.MULT MODE.SNGL MONTH MROUND MULTINOMIAL MUNIT N NA NEGBINOM.DIST NEGBINOMDIST NETWORKDAYS NETWORKDAYS.INTL NOMINAL NORM.DIST NORMDIST NORMINV NORM.INV NORM.S.DIST NORMSDIST NORM.S.INV NORMSINV NOT NOW NPER NPV NUMBERVALUE OCT2BIN OCT2DEC OCT2HEX ODD ODDFPRICE ODDFYIELD ODDLPRICE ODDLYIELD OFFSET OR PDURATION PEARSON PERCENTILE.EXC PERCENTILE.INC PERCENTILE PERCENTRANK.EXC PERCENTRANK.INC PERCENTRANK PERMUT PERMUTATIONA PHI PHONETIC PI PMT POISSON.DIST POISSON POWER PPMT PRICE PRICEDISC PRICEMAT PROB PRODUCT PROPER PV QUARTILE QUARTILE.EXC QUARTILE.INC QUOTIENT RADIANS RAND RANDBETWEEN RANK.AVG RANK.EQ RANK RATE RECEIVED REGISTER.ID REPLACE REPLACEB REPT RIGHT RIGHTB ROMAN ROUND ROUNDDOWN ROUNDUP ROW ROWS RRI RSQ RTD SEARCH SEARCHB SEC SECH SECOND SERIESSUM SHEET SHEETS SIGN SIN SINH SKEW SKEW.P SLN SLOPE SMALL SQL.REQUEST SQRT SQRTPI STANDARDIZE STDEV STDEV.P STDEV.S STDEVA STDEVP STDEVPA STEYX SUBSTITUTE SUBTOTAL SUM SUMIF SUMIFS SUMPRODUCT SUMSQ SUMX2MY2 SUMX2PY2 SUMXMY2 SWITCH SYD T TAN TANH TBILLEQ TBILLPRICE TBILLYIELD T.DIST T.DIST.2T T.DIST.RT TDIST TEXT TEXTJOIN TIME TIMEVALUE T.INV T.INV.2T TINV TODAY TRANSPOSE TREND TRIM TRIMMEAN TRUE|0 TRUNC T.TEST TTEST TYPE UNICHAR UNICODE UPPER VALUE VAR VAR.P VAR.S VARA VARP VARPA VDB VLOOKUP WEBSERVICE WEEKDAY WEEKNUM WEIBULL WEIBULL.DIST WORKDAY WORKDAY.INTL XIRR XNPV XOR YEAR YEARFRAC YIELD YIELDDISC YIELDMAT Z.TEST ZTEST"},contains:[{begin:/^=/,end:/[^=]/,returnEnd:!0,illegal:/=/,relevance:10},{className:"symbol",begin:/\b[A-Z]{1,2}\d+\b/,end:/[^\d]/,excludeEnd:!0,relevance:0},{className:"symbol",begin:/[A-Z]{0,2}\d*:[A-Z]{0,2}\d*/,relevance:0},e.BACKSLASH_ESCAPE,e.QUOTE_STRING_MODE,{className:"number",begin:e.NUMBER_RE+"(%)?",relevance:0},e.COMMENT(/\bN\(/,/\)/,{excludeBegin:!0,excludeEnd:!0,illegal:/\n/})]}}},3960:function(e){e.exports=function(e){return{name:"FIX",contains:[{begin:/[^\u2401\u0001]+/,end:/[\u2401\u0001]/,excludeEnd:!0,returnBegin:!0,returnEnd:!1,contains:[{begin:/([^\u2401\u0001=]+)/,end:/=([^\u2401\u0001=]+)/,returnEnd:!0,returnBegin:!1,className:"attr"},{begin:/=/,end:/([\u2401\u0001])/,excludeEnd:!0,excludeBegin:!0,className:"string"}]}],case_insensitive:!0}}},6985:function(e){e.exports=function(e){var t={className:"function",beginKeywords:"def",end:/[:={\[(\n;]/,excludeEnd:!0,contains:[{className:"title",relevance:0,begin:/[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/}]};return{name:"Flix",keywords:{literal:"true false",keyword:"case class def else enum if impl import in lat rel index let match namespace switch type yield with"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"string",begin:/'(.|\\[xXuU][a-zA-Z0-9]+)'/},{className:"string",variants:[{begin:'"',end:'"'}]},t,e.C_NUMBER_MODE]}}},8563:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n={variants:[e.COMMENT("!","$",{relevance:0}),e.COMMENT("^C[ ]","$",{relevance:0}),e.COMMENT("^C$","$",{relevance:0})]},a=/(_[a-z_\d]+)?/,s=/([de][+-]?\d+)?/,i={className:"number",variants:[{begin:t(/\b\d+/,/\.(\d*)/,s,a)},{begin:t(/\b\d+/,s,a)},{begin:t(/\.\d+/,s,a)}],relevance:0},r={className:"function",beginKeywords:"subroutine function program",illegal:"[${=\\n]",contains:[e.UNDERSCORE_TITLE_MODE,{className:"params",begin:"\\(",end:"\\)"}]};return{name:"Fortran",case_insensitive:!0,aliases:["f90","f95"],keywords:{literal:".False. .True.",keyword:"kind do concurrent local shared while private call intrinsic where elsewhere type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then block endblock endassociate public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. goto save else use module select case access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit continue format pause cycle exit c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg synchronous nopass non_overridable pass protected volatile abstract extends import non_intrinsic value deferred generic final enumerator class associate bind enum c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure impure integer real character complex logical codimension dimension allocatable|10 parameter external implicit|10 none double precision assign intent optional pointer target in out common equivalence data",built_in:"alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr num_images parity popcnt poppar shifta shiftl shiftr this_image sync change team co_broadcast co_max co_min co_sum co_reduce"},illegal:/\/\*/,contains:[{className:"string",relevance:0,variants:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},r,{begin:/^C\s*=(?!=)/,relevance:0},n,i]}}},9333:function(e){e.exports=function(e){var t={begin:"<",end:">",contains:[e.inherit(e.TITLE_MODE,{begin:/'[a-zA-Z0-9_]+/})]};return{name:"F#",aliases:["fs"],keywords:"abstract and as assert base begin class default delegate do done downcast downto elif else end exception extern false finally for fun function global if in inherit inline interface internal lazy let match member module mutable namespace new null of open or override private public rec return sig static struct then to true try type upcast use val void when while with yield",illegal:/\/\*/,contains:[{className:"keyword",begin:/\b(yield|return|let|do)!/},{className:"string",begin:'@"',end:'"',contains:[{begin:'""'}]},{className:"string",begin:'"""',end:'"""'},e.COMMENT("\\(\\*(\\s)","\\*\\)",{contains:["self"]}),{className:"class",beginKeywords:"type",end:"\\(|=|$",excludeEnd:!0,contains:[e.UNDERSCORE_TITLE_MODE,t]},{className:"meta",begin:"\\[<",end:">\\]",relevance:10},{className:"symbol",begin:"\\B('[A-Za-z])\\b",contains:[e.BACKSLASH_ESCAPE]},e.C_LINE_COMMENT_MODE,e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),e.C_NUMBER_MODE]}}},3907:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n,a={keyword:"abort acronym acronyms alias all and assign binary card diag display else eq file files for free ge gt if integer le loop lt maximizing minimizing model models ne negative no not option options or ord positive prod put putpage puttl repeat sameas semicont semiint smax smin solve sos1 sos2 sum system table then until using while xor yes",literal:"eps inf na",built_in:"abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power randBinomial randLinear randTriangle round rPower sigmoid sign signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion handleCollect handleDelete handleStatus handleSubmit heapFree heapLimit heapSize jobHandle jobKill jobStatus jobTerminate licenseLevel licenseStatus maxExecError sleep timeClose timeComp timeElapsed timeExec timeStart"},s={className:"symbol",variants:[{begin:/=[lgenxc]=/},{begin:/\$/}]},i={className:"comment",variants:[{begin:"'",end:"'"},{begin:'"',end:'"'}],illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},r={begin:"/",end:"/",keywords:a,contains:[i,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.C_NUMBER_MODE]},o=/[a-z0-9&#*=?@\\><:,()$[\]_.{}!+%^-]+/,l={begin:/[a-z][a-z0-9_]*(\([a-z0-9_, ]*\))?[ \t]+/,excludeBegin:!0,end:"$",endsWithParent:!0,contains:[i,r,{className:"comment",begin:t(o,(n=t(/[ ]+/,o),t("(",n,")*"))),relevance:0}]};return{name:"GAMS",aliases:["gms"],case_insensitive:!0,keywords:a,contains:[e.COMMENT(/^\$ontext/,/^\$offtext/),{className:"meta",begin:"^\\$[a-z0-9]+",end:"$",returnBegin:!0,contains:[{className:"meta-keyword",begin:"^\\$[a-z0-9]+"}]},e.COMMENT("^\\*","$"),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{beginKeywords:"set sets parameter parameters variable variables scalar scalars equation equations",end:";",contains:[e.COMMENT("^\\*","$"),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,r,l]},{beginKeywords:"table",end:";",returnBegin:!0,contains:[{beginKeywords:"table",end:"$",contains:[l]},e.COMMENT("^\\*","$"),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.C_NUMBER_MODE]},{className:"function",begin:/^[a-z][a-z0-9_,\-+' ()$]+\.{2}/,returnBegin:!0,contains:[{className:"title",begin:/^[a-z0-9_]+/},{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0},s]},e.C_NUMBER_MODE,s]}}},6301:function(e){e.exports=function(e){var t={keyword:"bool break call callexe checkinterrupt clear clearg closeall cls comlog compile continue create debug declare delete disable dlibrary dllcall do dos ed edit else elseif enable end endfor endif endp endo errorlog errorlogat expr external fn for format goto gosub graph if keyword let lib library line load loadarray loadexe loadf loadk loadm loadp loads loadx local locate loopnextindex lprint lpwidth lshow matrix msym ndpclex new open output outwidth plot plotsym pop prcsn print printdos proc push retp return rndcon rndmod rndmult rndseed run save saveall screen scroll setarray show sparse stop string struct system trace trap threadfor threadendfor threadbegin threadjoin threadstat threadend until use while winprint ne ge le gt lt and xor or not eq eqv",built_in:"abs acf aconcat aeye amax amean AmericanBinomCall AmericanBinomCall_Greeks AmericanBinomCall_ImpVol AmericanBinomPut AmericanBinomPut_Greeks AmericanBinomPut_ImpVol AmericanBSCall AmericanBSCall_Greeks AmericanBSCall_ImpVol AmericanBSPut AmericanBSPut_Greeks AmericanBSPut_ImpVol amin amult annotationGetDefaults annotationSetBkd annotationSetFont annotationSetLineColor annotationSetLineStyle annotationSetLineThickness annualTradingDays arccos arcsin areshape arrayalloc arrayindex arrayinit arraytomat asciiload asclabel astd astds asum atan atan2 atranspose axmargin balance band bandchol bandcholsol bandltsol bandrv bandsolpd bar base10 begwind besselj bessely beta box boxcox cdfBeta cdfBetaInv cdfBinomial cdfBinomialInv cdfBvn cdfBvn2 cdfBvn2e cdfCauchy cdfCauchyInv cdfChic cdfChii cdfChinc cdfChincInv cdfExp cdfExpInv cdfFc cdfFnc cdfFncInv cdfGam cdfGenPareto cdfHyperGeo cdfLaplace cdfLaplaceInv cdfLogistic cdfLogisticInv cdfmControlCreate cdfMvn cdfMvn2e cdfMvnce cdfMvne cdfMvt2e cdfMvtce cdfMvte cdfN cdfN2 cdfNc cdfNegBinomial cdfNegBinomialInv cdfNi cdfPoisson cdfPoissonInv cdfRayleigh cdfRayleighInv cdfTc cdfTci cdfTnc cdfTvn cdfWeibull cdfWeibullInv cdir ceil ChangeDir chdir chiBarSquare chol choldn cholsol cholup chrs close code cols colsf combinate combinated complex con cond conj cons ConScore contour conv convertsatostr convertstrtosa corrm corrms corrvc corrx corrxs cos cosh counts countwts crossprd crout croutp csrcol csrlin csvReadM csvReadSA cumprodc cumsumc curve cvtos datacreate datacreatecomplex datalist dataload dataloop dataopen datasave date datestr datestring datestrymd dayinyr dayofweek dbAddDatabase dbClose dbCommit dbCreateQuery dbExecQuery dbGetConnectOptions dbGetDatabaseName dbGetDriverName dbGetDrivers dbGetHostName dbGetLastErrorNum dbGetLastErrorText dbGetNumericalPrecPolicy dbGetPassword dbGetPort dbGetTableHeaders dbGetTables dbGetUserName dbHasFeature dbIsDriverAvailable dbIsOpen dbIsOpenError dbOpen dbQueryBindValue dbQueryClear dbQueryCols dbQueryExecPrepared dbQueryFetchAllM dbQueryFetchAllSA dbQueryFetchOneM dbQueryFetchOneSA dbQueryFinish dbQueryGetBoundValue dbQueryGetBoundValues dbQueryGetField dbQueryGetLastErrorNum dbQueryGetLastErrorText dbQueryGetLastInsertID dbQueryGetLastQuery dbQueryGetPosition dbQueryIsActive dbQueryIsForwardOnly dbQueryIsNull dbQueryIsSelect dbQueryIsValid dbQueryPrepare dbQueryRows dbQuerySeek dbQuerySeekFirst dbQuerySeekLast dbQuerySeekNext dbQuerySeekPrevious dbQuerySetForwardOnly dbRemoveDatabase dbRollback dbSetConnectOptions dbSetDatabaseName dbSetHostName dbSetNumericalPrecPolicy dbSetPort dbSetUserName dbTransaction DeleteFile delif delrows denseToSp denseToSpRE denToZero design det detl dfft dffti diag diagrv digamma doswin DOSWinCloseall DOSWinOpen dotfeq dotfeqmt dotfge dotfgemt dotfgt dotfgtmt dotfle dotflemt dotflt dotfltmt dotfne dotfnemt draw drop dsCreate dstat dstatmt dstatmtControlCreate dtdate dtday dttime dttodtv dttostr dttoutc dtvnormal dtvtodt dtvtoutc dummy dummybr dummydn eig eigh eighv eigv elapsedTradingDays endwind envget eof eqSolve eqSolvemt eqSolvemtControlCreate eqSolvemtOutCreate eqSolveset erf erfc erfccplx erfcplx error etdays ethsec etstr EuropeanBinomCall EuropeanBinomCall_Greeks EuropeanBinomCall_ImpVol EuropeanBinomPut EuropeanBinomPut_Greeks EuropeanBinomPut_ImpVol EuropeanBSCall EuropeanBSCall_Greeks EuropeanBSCall_ImpVol EuropeanBSPut EuropeanBSPut_Greeks EuropeanBSPut_ImpVol exctsmpl exec execbg exp extern eye fcheckerr fclearerr feq feqmt fflush fft ffti fftm fftmi fftn fge fgemt fgets fgetsa fgetsat fgetst fgt fgtmt fileinfo filesa fle flemt floor flt fltmt fmod fne fnemt fonts fopen formatcv formatnv fputs fputst fseek fstrerror ftell ftocv ftos ftostrC gamma gammacplx gammaii gausset gdaAppend gdaCreate gdaDStat gdaDStatMat gdaGetIndex gdaGetName gdaGetNames gdaGetOrders gdaGetType gdaGetTypes gdaGetVarInfo gdaIsCplx gdaLoad gdaPack gdaRead gdaReadByIndex gdaReadSome gdaReadSparse gdaReadStruct gdaReportVarInfo gdaSave gdaUpdate gdaUpdateAndPack gdaVars gdaWrite gdaWrite32 gdaWriteSome getarray getdims getf getGAUSShome getmatrix getmatrix4D getname getnamef getNextTradingDay getNextWeekDay getnr getorders getpath getPreviousTradingDay getPreviousWeekDay getRow getscalar3D getscalar4D getTrRow getwind glm gradcplx gradMT gradMTm gradMTT gradMTTm gradp graphprt graphset hasimag header headermt hess hessMT hessMTg hessMTgw hessMTm hessMTmw hessMTT hessMTTg hessMTTgw hessMTTm hessMTw hessp hist histf histp hsec imag indcv indexcat indices indices2 indicesf indicesfn indnv indsav integrate1d integrateControlCreate intgrat2 intgrat3 inthp1 inthp2 inthp3 inthp4 inthpControlCreate intquad1 intquad2 intquad3 intrleav intrleavsa intrsect intsimp inv invpd invswp iscplx iscplxf isden isinfnanmiss ismiss key keyav keyw lag lag1 lagn lapEighb lapEighi lapEighvb lapEighvi lapgEig lapgEigh lapgEighv lapgEigv lapgSchur lapgSvdcst lapgSvds lapgSvdst lapSvdcusv lapSvds lapSvdusv ldlp ldlsol linSolve listwise ln lncdfbvn lncdfbvn2 lncdfmvn lncdfn lncdfn2 lncdfnc lnfact lngammacplx lnpdfmvn lnpdfmvt lnpdfn lnpdft loadd loadstruct loadwind loess loessmt loessmtControlCreate log loglog logx logy lower lowmat lowmat1 ltrisol lu lusol machEpsilon make makevars makewind margin matalloc matinit mattoarray maxbytes maxc maxindc maxv maxvec mbesselei mbesselei0 mbesselei1 mbesseli mbesseli0 mbesseli1 meanc median mergeby mergevar minc minindc minv miss missex missrv moment momentd movingave movingaveExpwgt movingaveWgt nextindex nextn nextnevn nextwind ntos null null1 numCombinations ols olsmt olsmtControlCreate olsqr olsqr2 olsqrmt ones optn optnevn orth outtyp pacf packedToSp packr parse pause pdfCauchy pdfChi pdfExp pdfGenPareto pdfHyperGeo pdfLaplace pdfLogistic pdfn pdfPoisson pdfRayleigh pdfWeibull pi pinv pinvmt plotAddArrow plotAddBar plotAddBox plotAddHist plotAddHistF plotAddHistP plotAddPolar plotAddScatter plotAddShape plotAddTextbox plotAddTS plotAddXY plotArea plotBar plotBox plotClearLayout plotContour plotCustomLayout plotGetDefaults plotHist plotHistF plotHistP plotLayout plotLogLog plotLogX plotLogY plotOpenWindow plotPolar plotSave plotScatter plotSetAxesPen plotSetBar plotSetBarFill plotSetBarStacked plotSetBkdColor plotSetFill plotSetGrid plotSetLegend plotSetLineColor plotSetLineStyle plotSetLineSymbol plotSetLineThickness plotSetNewWindow plotSetTitle plotSetWhichYAxis plotSetXAxisShow plotSetXLabel plotSetXRange plotSetXTicInterval plotSetXTicLabel plotSetYAxisShow plotSetYLabel plotSetYRange plotSetZAxisShow plotSetZLabel plotSurface plotTS plotXY polar polychar polyeval polygamma polyint polymake polymat polymroot polymult polyroot pqgwin previousindex princomp printfm printfmt prodc psi putarray putf putvals pvCreate pvGetIndex pvGetParNames pvGetParVector pvLength pvList pvPack pvPacki pvPackm pvPackmi pvPacks pvPacksi pvPacksm pvPacksmi pvPutParVector pvTest pvUnpack QNewton QNewtonmt QNewtonmtControlCreate QNewtonmtOutCreate QNewtonSet QProg QProgmt QProgmtInCreate qqr qqre qqrep qr qre qrep qrsol qrtsol qtyr qtyre qtyrep quantile quantiled qyr qyre qyrep qz rank rankindx readr real reclassify reclassifyCuts recode recserar recsercp recserrc rerun rescale reshape rets rev rfft rffti rfftip rfftn rfftnp rfftp rndBernoulli rndBeta rndBinomial rndCauchy rndChiSquare rndCon rndCreateState rndExp rndGamma rndGeo rndGumbel rndHyperGeo rndi rndKMbeta rndKMgam rndKMi rndKMn rndKMnb rndKMp rndKMu rndKMvm rndLaplace rndLCbeta rndLCgam rndLCi rndLCn rndLCnb rndLCp rndLCu rndLCvm rndLogNorm rndMTu rndMVn rndMVt rndn rndnb rndNegBinomial rndp rndPoisson rndRayleigh rndStateSkip rndu rndvm rndWeibull rndWishart rotater round rows rowsf rref sampleData satostrC saved saveStruct savewind scale scale3d scalerr scalinfnanmiss scalmiss schtoc schur searchsourcepath seekr select selif seqa seqm setdif setdifsa setvars setvwrmode setwind shell shiftr sin singleindex sinh sleep solpd sortc sortcc sortd sorthc sorthcc sortind sortindc sortmc sortr sortrc spBiconjGradSol spChol spConjGradSol spCreate spDenseSubmat spDiagRvMat spEigv spEye spLDL spline spLU spNumNZE spOnes spreadSheetReadM spreadSheetReadSA spreadSheetWrite spScale spSubmat spToDense spTrTDense spTScalar spZeros sqpSolve sqpSolveMT sqpSolveMTControlCreate sqpSolveMTlagrangeCreate sqpSolveMToutCreate sqpSolveSet sqrt statements stdc stdsc stocv stof strcombine strindx strlen strput strrindx strsect strsplit strsplitPad strtodt strtof strtofcplx strtriml strtrimr strtrunc strtruncl strtruncpad strtruncr submat subscat substute subvec sumc sumr surface svd svd1 svd2 svdcusv svds svdusv sysstate tab tan tanh tempname time timedt timestr timeutc title tkf2eps tkf2ps tocart todaydt toeplitz token topolar trapchk trigamma trimr trunc type typecv typef union unionsa uniqindx uniqindxsa unique uniquesa upmat upmat1 upper utctodt utctodtv utrisol vals varCovMS varCovXS varget vargetl varmall varmares varput varputl vartypef vcm vcms vcx vcxs vec vech vecr vector vget view viewxyz vlist vnamecv volume vput vread vtypecv wait waitc walkindex where window writer xlabel xlsGetSheetCount xlsGetSheetSize xlsGetSheetTypes xlsMakeRange xlsReadM xlsReadSA xlsWrite xlsWriteM xlsWriteSA xpnd xtics xy xyz ylabel ytics zeros zeta zlabel ztics cdfEmpirical dot h5create h5open h5read h5readAttribute h5write h5writeAttribute ldl plotAddErrorBar plotAddSurface plotCDFEmpirical plotSetColormap plotSetContourLabels plotSetLegendFont plotSetTextInterpreter plotSetXTicCount plotSetYTicCount plotSetZLevels powerm strjoin sylvester strtrim",literal:"DB_AFTER_LAST_ROW DB_ALL_TABLES DB_BATCH_OPERATIONS DB_BEFORE_FIRST_ROW DB_BLOB DB_EVENT_NOTIFICATIONS DB_FINISH_QUERY DB_HIGH_PRECISION DB_LAST_INSERT_ID DB_LOW_PRECISION_DOUBLE DB_LOW_PRECISION_INT32 DB_LOW_PRECISION_INT64 DB_LOW_PRECISION_NUMBERS DB_MULTIPLE_RESULT_SETS DB_NAMED_PLACEHOLDERS DB_POSITIONAL_PLACEHOLDERS DB_PREPARED_QUERIES DB_QUERY_SIZE DB_SIMPLE_LOCKING DB_SYSTEM_TABLES DB_TABLES DB_TRANSACTIONS DB_UNICODE DB_VIEWS __STDIN __STDOUT __STDERR __FILE_DIR"},n=e.COMMENT("@","@"),a={className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":"define definecs|10 undef ifdef ifndef iflight ifdllcall ifmac ifos2win ifunix else endif lineson linesoff srcfile srcline"},contains:[{begin:/\\\n/,relevance:0},{beginKeywords:"include",end:"$",keywords:{"meta-keyword":"include"},contains:[{className:"meta-string",begin:'"',end:'"',illegal:"\\n"}]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n]},s={begin:/\bstruct\s+/,end:/\s/,keywords:"struct",contains:[{className:"type",begin:e.UNDERSCORE_IDENT_RE,relevance:0}]},i=[{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,endsWithParent:!0,relevance:0,contains:[{className:"literal",begin:/\.\.\./},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,n,s]}],r={className:"title",begin:e.UNDERSCORE_IDENT_RE,relevance:0},o=function(t,a,s){var o=e.inherit({className:"function",beginKeywords:t,end:a,excludeEnd:!0,contains:[].concat(i)},s||{});return o.contains.push(r),o.contains.push(e.C_NUMBER_MODE),o.contains.push(e.C_BLOCK_COMMENT_MODE),o.contains.push(n),o},l={className:"built_in",begin:"\\b("+t.built_in.split(" ").join("|")+")\\b"},c={className:"string",begin:'"',end:'"',contains:[e.BACKSLASH_ESCAPE],relevance:0},d={begin:e.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,keywords:t,relevance:0,contains:[{beginKeywords:t.keyword},l,{className:"built_in",begin:e.UNDERSCORE_IDENT_RE,relevance:0}]},u={begin:/\(/,end:/\)/,relevance:0,keywords:{built_in:t.built_in,literal:t.literal},contains:[e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,n,l,d,c,"self"]};return d.contains.push(u),{name:"GAUSS",aliases:["gss"],case_insensitive:!0,keywords:t,illegal:/(\{[%#]|[%#]\}| <- )/,contains:[e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n,c,a,{className:"keyword",begin:/\bexternal (matrix|string|array|sparse matrix|struct|proc|keyword|fn)/},o("proc keyword",";"),o("fn","="),{beginKeywords:"for threadfor",end:/;/,relevance:0,contains:[e.C_BLOCK_COMMENT_MODE,n,u]},{variants:[{begin:e.UNDERSCORE_IDENT_RE+"\\."+e.UNDERSCORE_IDENT_RE},{begin:e.UNDERSCORE_IDENT_RE+"\\s*="}],relevance:0},d,s]}}},7285:function(e){e.exports=function(e){var t={$pattern:"[A-Z_][A-Z0-9_.]*",keyword:"IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT EQ LT GT NE GE LE OR XOR"},n=e.inherit(e.C_NUMBER_MODE,{begin:"([-+]?((\\.\\d+)|(\\d+)(\\.\\d*)?))|"+e.C_NUMBER_RE}),a=[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.COMMENT(/\(/,/\)/),n,e.inherit(e.APOS_STRING_MODE,{illegal:null}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),{className:"name",begin:"([G])([0-9]+\\.?[0-9]?)"},{className:"name",begin:"([M])([0-9]+\\.?[0-9]?)"},{className:"attr",begin:"(VC|VS|#)",end:"(\\d+)"},{className:"attr",begin:"(VZOFX|VZOFY|VZOFZ)"},{className:"built_in",begin:"(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\[)",contains:[n],end:"\\]"},{className:"symbol",variants:[{begin:"N",end:"\\d+",illegal:"\\W"}]}];return{name:"G-code (ISO 6983)",aliases:["nc"],case_insensitive:!0,keywords:t,contains:[{className:"meta",begin:"%"},{className:"meta",begin:"([O])([0-9]+)"}].concat(a)}}},2274:function(e){e.exports=function(e){return{name:"Gherkin",aliases:["feature"],keywords:"Feature Background Ability Business Need Scenario Scenarios Scenario Outline Scenario Template Examples Given And Then But When",contains:[{className:"symbol",begin:"\\*",relevance:0},{className:"meta",begin:"@[^@\\s]+"},{begin:"\\|",end:"\\|\\w*$",contains:[{className:"string",begin:"[^|]+"}]},{className:"variable",begin:"<",end:">"},e.HASH_COMMENT_MODE,{className:"string",begin:'"""',end:'"""'},e.QUOTE_STRING_MODE]}}},7216:function(e){e.exports=function(e){return{name:"GLSL",keywords:{keyword:"break continue discard do else for if return while switch case default attribute binding buffer ccw centroid centroid varying coherent column_major const cw depth_any depth_greater depth_less depth_unchanged early_fragment_tests equal_spacing flat fractional_even_spacing fractional_odd_spacing highp in index inout invariant invocations isolines layout line_strip lines lines_adjacency local_size_x local_size_y local_size_z location lowp max_vertices mediump noperspective offset origin_upper_left out packed patch pixel_center_integer point_mode points precise precision quads r11f_g11f_b10f r16 r16_snorm r16f r16i r16ui r32f r32i r32ui r8 r8_snorm r8i r8ui readonly restrict rg16 rg16_snorm rg16f rg16i rg16ui rg32f rg32i rg32ui rg8 rg8_snorm rg8i rg8ui rgb10_a2 rgb10_a2ui rgba16 rgba16_snorm rgba16f rgba16i rgba16ui rgba32f rgba32i rgba32ui rgba8 rgba8_snorm rgba8i rgba8ui row_major sample shared smooth std140 std430 stream triangle_strip triangles triangles_adjacency uniform varying vertices volatile writeonly",type:"atomic_uint bool bvec2 bvec3 bvec4 dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 double dvec2 dvec3 dvec4 float iimage1D iimage1DArray iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect image3D imageBuffer imageCube imageCubeArray int isampler1D isampler1DArray isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow image1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint usampler1D usampler1DArray usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D samplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 vec2 vec3 vec4 void",built_in:"gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxComputeAtomicCounterBuffers gl_MaxComputeAtomicCounters gl_MaxComputeImageUniforms gl_MaxComputeTextureImageUnits gl_MaxComputeUniformComponents gl_MaxComputeWorkGroupCount gl_MaxComputeWorkGroupSize gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentInputVectors gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexOutputVectors gl_MaxVertexTextureImageUnits gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial gl_FrontSecondaryColor gl_GlobalInvocationID gl_InstanceID gl_InvocationID gl_Layer gl_LightModel gl_LightSource gl_LocalInvocationID gl_LocalInvocationIndex gl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix gl_NormalScale gl_NumSamples gl_NumWorkGroups gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor gl_TextureMatrix gl_TextureMatrixInverse gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_WorkGroupID gl_WorkGroupSize gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin asinh atan atanh atomicAdd atomicAnd atomicCompSwap atomicCounter atomicCounterDecrement atomicCounterIncrement atomicExchange atomicMax atomicMin atomicOr atomicXor barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan greaterThanEqual groupMemoryBarrier imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageSize imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier memoryBarrierAtomicCounter memoryBarrierBuffer memoryBarrierImage memoryBarrierShared min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod textureProjLodOffset textureProjOffset textureQueryLevels textureQueryLod textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow",literal:"true false"},illegal:'"',contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,{className:"meta",begin:"#",end:"$"}]}}},776:function(e){e.exports=function(e){return{name:"GML",case_insensitive:!1,keywords:{keyword:"begin end if then else while do for break continue with until repeat exit and or xor not return mod div switch case default var globalvar enum function constructor delete #macro #region #endregion",built_in:"is_real is_string is_array is_undefined is_int32 is_int64 is_ptr is_vec3 is_vec4 is_matrix is_bool is_method is_struct is_infinity is_nan is_numeric typeof variable_global_exists variable_global_get variable_global_set variable_instance_exists variable_instance_get variable_instance_set variable_instance_get_names variable_struct_exists variable_struct_get variable_struct_get_names variable_struct_names_count variable_struct_remove variable_struct_set array_delete array_insert array_length array_length_1d array_length_2d array_height_2d array_equals array_create array_copy array_pop array_push array_resize array_sort random random_range irandom irandom_range random_set_seed random_get_seed randomize randomise choose abs round floor ceil sign frac sqrt sqr exp ln log2 log10 sin cos tan arcsin arccos arctan arctan2 dsin dcos dtan darcsin darccos darctan darctan2 degtorad radtodeg power logn min max mean median clamp lerp dot_product dot_product_3d dot_product_normalised dot_product_3d_normalised dot_product_normalized dot_product_3d_normalized math_set_epsilon math_get_epsilon angle_difference point_distance_3d point_distance point_direction lengthdir_x lengthdir_y real string int64 ptr string_format chr ansi_char ord string_length string_byte_length string_pos string_copy string_char_at string_ord_at string_byte_at string_set_byte_at string_delete string_insert string_lower string_upper string_repeat string_letters string_digits string_lettersdigits string_replace string_replace_all string_count string_hash_to_newline clipboard_has_text clipboard_set_text clipboard_get_text date_current_datetime date_create_datetime date_valid_datetime date_inc_year date_inc_month date_inc_week date_inc_day date_inc_hour date_inc_minute date_inc_second date_get_year date_get_month date_get_week date_get_day date_get_hour date_get_minute date_get_second date_get_weekday date_get_day_of_year date_get_hour_of_year date_get_minute_of_year date_get_second_of_year date_year_span date_month_span date_week_span date_day_span date_hour_span date_minute_span date_second_span date_compare_datetime date_compare_date date_compare_time date_date_of date_time_of date_datetime_string date_date_string date_time_string date_days_in_month date_days_in_year date_leap_year date_is_today date_set_timezone date_get_timezone game_set_speed game_get_speed motion_set motion_add place_free place_empty place_meeting place_snapped move_random move_snap move_towards_point move_contact_solid move_contact_all move_outside_solid move_outside_all move_bounce_solid move_bounce_all move_wrap distance_to_point distance_to_object position_empty position_meeting path_start path_end mp_linear_step mp_potential_step mp_linear_step_object mp_potential_step_object mp_potential_settings mp_linear_path mp_potential_path mp_linear_path_object mp_potential_path_object mp_grid_create mp_grid_destroy mp_grid_clear_all mp_grid_clear_cell mp_grid_clear_rectangle mp_grid_add_cell mp_grid_get_cell mp_grid_add_rectangle mp_grid_add_instances mp_grid_path mp_grid_draw mp_grid_to_ds_grid collision_point collision_rectangle collision_circle collision_ellipse collision_line collision_point_list collision_rectangle_list collision_circle_list collision_ellipse_list collision_line_list instance_position_list instance_place_list point_in_rectangle point_in_triangle point_in_circle rectangle_in_rectangle rectangle_in_triangle rectangle_in_circle instance_find instance_exists instance_number instance_position instance_nearest instance_furthest instance_place instance_create_depth instance_create_layer instance_copy instance_change instance_destroy position_destroy position_change instance_id_get instance_deactivate_all instance_deactivate_object instance_deactivate_region instance_activate_all instance_activate_object instance_activate_region room_goto room_goto_previous room_goto_next room_previous room_next room_restart game_end game_restart game_load game_save game_save_buffer game_load_buffer event_perform event_user event_perform_object event_inherited show_debug_message show_debug_overlay debug_event debug_get_callstack alarm_get alarm_set font_texture_page_size keyboard_set_map keyboard_get_map keyboard_unset_map keyboard_check keyboard_check_pressed keyboard_check_released keyboard_check_direct keyboard_get_numlock keyboard_set_numlock keyboard_key_press keyboard_key_release keyboard_clear io_clear mouse_check_button mouse_check_button_pressed mouse_check_button_released mouse_wheel_up mouse_wheel_down mouse_clear draw_self draw_sprite draw_sprite_pos draw_sprite_ext draw_sprite_stretched draw_sprite_stretched_ext draw_sprite_tiled draw_sprite_tiled_ext draw_sprite_part draw_sprite_part_ext draw_sprite_general draw_clear draw_clear_alpha draw_point draw_line draw_line_width draw_rectangle draw_roundrect draw_roundrect_ext draw_triangle draw_circle draw_ellipse draw_set_circle_precision draw_arrow draw_button draw_path draw_healthbar draw_getpixel draw_getpixel_ext draw_set_colour draw_set_color draw_set_alpha draw_get_colour draw_get_color draw_get_alpha merge_colour make_colour_rgb make_colour_hsv colour_get_red colour_get_green colour_get_blue colour_get_hue colour_get_saturation colour_get_value merge_color make_color_rgb make_color_hsv color_get_red color_get_green color_get_blue color_get_hue color_get_saturation color_get_value merge_color screen_save screen_save_part draw_set_font draw_set_halign draw_set_valign draw_text draw_text_ext string_width string_height string_width_ext string_height_ext draw_text_transformed draw_text_ext_transformed draw_text_colour draw_text_ext_colour draw_text_transformed_colour draw_text_ext_transformed_colour draw_text_color draw_text_ext_color draw_text_transformed_color draw_text_ext_transformed_color draw_point_colour draw_line_colour draw_line_width_colour draw_rectangle_colour draw_roundrect_colour draw_roundrect_colour_ext draw_triangle_colour draw_circle_colour draw_ellipse_colour draw_point_color draw_line_color draw_line_width_color draw_rectangle_color draw_roundrect_color draw_roundrect_color_ext draw_triangle_color draw_circle_color draw_ellipse_color draw_primitive_begin draw_vertex draw_vertex_colour draw_vertex_color draw_primitive_end sprite_get_uvs font_get_uvs sprite_get_texture font_get_texture texture_get_width texture_get_height texture_get_uvs draw_primitive_begin_texture draw_vertex_texture draw_vertex_texture_colour draw_vertex_texture_color texture_global_scale surface_create surface_create_ext surface_resize surface_free surface_exists surface_get_width surface_get_height surface_get_texture surface_set_target surface_set_target_ext surface_reset_target surface_depth_disable surface_get_depth_disable draw_surface draw_surface_stretched draw_surface_tiled draw_surface_part draw_surface_ext draw_surface_stretched_ext draw_surface_tiled_ext draw_surface_part_ext draw_surface_general surface_getpixel surface_getpixel_ext surface_save surface_save_part surface_copy surface_copy_part application_surface_draw_enable application_get_position application_surface_enable application_surface_is_enabled display_get_width display_get_height display_get_orientation display_get_gui_width display_get_gui_height display_reset display_mouse_get_x display_mouse_get_y display_mouse_set display_set_ui_visibility window_set_fullscreen window_get_fullscreen window_set_caption window_set_min_width window_set_max_width window_set_min_height window_set_max_height window_get_visible_rects window_get_caption window_set_cursor window_get_cursor window_set_colour window_get_colour window_set_color window_get_color window_set_position window_set_size window_set_rectangle window_center window_get_x window_get_y window_get_width window_get_height window_mouse_get_x window_mouse_get_y window_mouse_set window_view_mouse_get_x window_view_mouse_get_y window_views_mouse_get_x window_views_mouse_get_y audio_listener_position audio_listener_velocity audio_listener_orientation audio_emitter_position audio_emitter_create audio_emitter_free audio_emitter_exists audio_emitter_pitch audio_emitter_velocity audio_emitter_falloff audio_emitter_gain audio_play_sound audio_play_sound_on audio_play_sound_at audio_stop_sound audio_resume_music audio_music_is_playing audio_resume_sound audio_pause_sound audio_pause_music audio_channel_num audio_sound_length audio_get_type audio_falloff_set_model audio_play_music audio_stop_music audio_master_gain audio_music_gain audio_sound_gain audio_sound_pitch audio_stop_all audio_resume_all audio_pause_all audio_is_playing audio_is_paused audio_exists audio_sound_set_track_position audio_sound_get_track_position audio_emitter_get_gain audio_emitter_get_pitch audio_emitter_get_x audio_emitter_get_y audio_emitter_get_z audio_emitter_get_vx audio_emitter_get_vy audio_emitter_get_vz audio_listener_set_position audio_listener_set_velocity audio_listener_set_orientation audio_listener_get_data audio_set_master_gain audio_get_master_gain audio_sound_get_gain audio_sound_get_pitch audio_get_name audio_sound_set_track_position audio_sound_get_track_position audio_create_stream audio_destroy_stream audio_create_sync_group audio_destroy_sync_group audio_play_in_sync_group audio_start_sync_group audio_stop_sync_group audio_pause_sync_group audio_resume_sync_group audio_sync_group_get_track_pos audio_sync_group_debug audio_sync_group_is_playing audio_debug audio_group_load audio_group_unload audio_group_is_loaded audio_group_load_progress audio_group_name audio_group_stop_all audio_group_set_gain audio_create_buffer_sound audio_free_buffer_sound audio_create_play_queue audio_free_play_queue audio_queue_sound audio_get_recorder_count audio_get_recorder_info audio_start_recording audio_stop_recording audio_sound_get_listener_mask audio_emitter_get_listener_mask audio_get_listener_mask audio_sound_set_listener_mask audio_emitter_set_listener_mask audio_set_listener_mask audio_get_listener_count audio_get_listener_info audio_system show_message show_message_async clickable_add clickable_add_ext clickable_change clickable_change_ext clickable_delete clickable_exists clickable_set_style show_question show_question_async get_integer get_string get_integer_async get_string_async get_login_async get_open_filename get_save_filename get_open_filename_ext get_save_filename_ext show_error highscore_clear highscore_add highscore_value highscore_name draw_highscore sprite_exists sprite_get_name sprite_get_number sprite_get_width sprite_get_height sprite_get_xoffset sprite_get_yoffset sprite_get_bbox_left sprite_get_bbox_right sprite_get_bbox_top sprite_get_bbox_bottom sprite_save sprite_save_strip sprite_set_cache_size sprite_set_cache_size_ext sprite_get_tpe sprite_prefetch sprite_prefetch_multi sprite_flush sprite_flush_multi sprite_set_speed sprite_get_speed_type sprite_get_speed font_exists font_get_name font_get_fontname font_get_bold font_get_italic font_get_first font_get_last font_get_size font_set_cache_size path_exists path_get_name path_get_length path_get_time path_get_kind path_get_closed path_get_precision path_get_number path_get_point_x path_get_point_y path_get_point_speed path_get_x path_get_y path_get_speed script_exists script_get_name timeline_add timeline_delete timeline_clear timeline_exists timeline_get_name timeline_moment_clear timeline_moment_add_script timeline_size timeline_max_moment object_exists object_get_name object_get_sprite object_get_solid object_get_visible object_get_persistent object_get_mask object_get_parent object_get_physics object_is_ancestor room_exists room_get_name sprite_set_offset sprite_duplicate sprite_assign sprite_merge sprite_add sprite_replace sprite_create_from_surface sprite_add_from_surface sprite_delete sprite_set_alpha_from_sprite sprite_collision_mask font_add_enable_aa font_add_get_enable_aa font_add font_add_sprite font_add_sprite_ext font_replace font_replace_sprite font_replace_sprite_ext font_delete path_set_kind path_set_closed path_set_precision path_add path_assign path_duplicate path_append path_delete path_add_point path_insert_point path_change_point path_delete_point path_clear_points path_reverse path_mirror path_flip path_rotate path_rescale path_shift script_execute object_set_sprite object_set_solid object_set_visible object_set_persistent object_set_mask room_set_width room_set_height room_set_persistent room_set_background_colour room_set_background_color room_set_view room_set_viewport room_get_viewport room_set_view_enabled room_add room_duplicate room_assign room_instance_add room_instance_clear room_get_camera room_set_camera asset_get_index asset_get_type file_text_open_from_string file_text_open_read file_text_open_write file_text_open_append file_text_close file_text_write_string file_text_write_real file_text_writeln file_text_read_string file_text_read_real file_text_readln file_text_eof file_text_eoln file_exists file_delete file_rename file_copy directory_exists directory_create directory_destroy file_find_first file_find_next file_find_close file_attributes filename_name filename_path filename_dir filename_drive filename_ext filename_change_ext file_bin_open file_bin_rewrite file_bin_close file_bin_position file_bin_size file_bin_seek file_bin_write_byte file_bin_read_byte parameter_count parameter_string environment_get_variable ini_open_from_string ini_open ini_close ini_read_string ini_read_real ini_write_string ini_write_real ini_key_exists ini_section_exists ini_key_delete ini_section_delete ds_set_precision ds_exists ds_stack_create ds_stack_destroy ds_stack_clear ds_stack_copy ds_stack_size ds_stack_empty ds_stack_push ds_stack_pop ds_stack_top ds_stack_write ds_stack_read ds_queue_create ds_queue_destroy ds_queue_clear ds_queue_copy ds_queue_size ds_queue_empty ds_queue_enqueue ds_queue_dequeue ds_queue_head ds_queue_tail ds_queue_write ds_queue_read ds_list_create ds_list_destroy ds_list_clear ds_list_copy ds_list_size ds_list_empty ds_list_add ds_list_insert ds_list_replace ds_list_delete ds_list_find_index ds_list_find_value ds_list_mark_as_list ds_list_mark_as_map ds_list_sort ds_list_shuffle ds_list_write ds_list_read ds_list_set ds_map_create ds_map_destroy ds_map_clear ds_map_copy ds_map_size ds_map_empty ds_map_add ds_map_add_list ds_map_add_map ds_map_replace ds_map_replace_map ds_map_replace_list ds_map_delete ds_map_exists ds_map_find_value ds_map_find_previous ds_map_find_next ds_map_find_first ds_map_find_last ds_map_write ds_map_read ds_map_secure_save ds_map_secure_load ds_map_secure_load_buffer ds_map_secure_save_buffer ds_map_set ds_priority_create ds_priority_destroy ds_priority_clear ds_priority_copy ds_priority_size ds_priority_empty ds_priority_add ds_priority_change_priority ds_priority_find_priority ds_priority_delete_value ds_priority_delete_min ds_priority_find_min ds_priority_delete_max ds_priority_find_max ds_priority_write ds_priority_read ds_grid_create ds_grid_destroy ds_grid_copy ds_grid_resize ds_grid_width ds_grid_height ds_grid_clear ds_grid_set ds_grid_add ds_grid_multiply ds_grid_set_region ds_grid_add_region ds_grid_multiply_region ds_grid_set_disk ds_grid_add_disk ds_grid_multiply_disk ds_grid_set_grid_region ds_grid_add_grid_region ds_grid_multiply_grid_region ds_grid_get ds_grid_get_sum ds_grid_get_max ds_grid_get_min ds_grid_get_mean ds_grid_get_disk_sum ds_grid_get_disk_min ds_grid_get_disk_max ds_grid_get_disk_mean ds_grid_value_exists ds_grid_value_x ds_grid_value_y ds_grid_value_disk_exists ds_grid_value_disk_x ds_grid_value_disk_y ds_grid_shuffle ds_grid_write ds_grid_read ds_grid_sort ds_grid_set ds_grid_get effect_create_below effect_create_above effect_clear part_type_create part_type_destroy part_type_exists part_type_clear part_type_shape part_type_sprite part_type_size part_type_scale part_type_orientation part_type_life part_type_step part_type_death part_type_speed part_type_direction part_type_gravity part_type_colour1 part_type_colour2 part_type_colour3 part_type_colour_mix part_type_colour_rgb part_type_colour_hsv part_type_color1 part_type_color2 part_type_color3 part_type_color_mix part_type_color_rgb part_type_color_hsv part_type_alpha1 part_type_alpha2 part_type_alpha3 part_type_blend part_system_create part_system_create_layer part_system_destroy part_system_exists part_system_clear part_system_draw_order part_system_depth part_system_position part_system_automatic_update part_system_automatic_draw part_system_update part_system_drawit part_system_get_layer part_system_layer part_particles_create part_particles_create_colour part_particles_create_color part_particles_clear part_particles_count part_emitter_create part_emitter_destroy part_emitter_destroy_all part_emitter_exists part_emitter_clear part_emitter_region part_emitter_burst part_emitter_stream external_call external_define external_free window_handle window_device matrix_get matrix_set matrix_build_identity matrix_build matrix_build_lookat matrix_build_projection_ortho matrix_build_projection_perspective matrix_build_projection_perspective_fov matrix_multiply matrix_transform_vertex matrix_stack_push matrix_stack_pop matrix_stack_multiply matrix_stack_set matrix_stack_clear matrix_stack_top matrix_stack_is_empty browser_input_capture os_get_config os_get_info os_get_language os_get_region os_lock_orientation display_get_dpi_x display_get_dpi_y display_set_gui_size display_set_gui_maximise display_set_gui_maximize device_mouse_dbclick_enable display_set_timing_method display_get_timing_method display_set_sleep_margin display_get_sleep_margin virtual_key_add virtual_key_hide virtual_key_delete virtual_key_show draw_enable_drawevent draw_enable_swf_aa draw_set_swf_aa_level draw_get_swf_aa_level draw_texture_flush draw_flush gpu_set_blendenable gpu_set_ztestenable gpu_set_zfunc gpu_set_zwriteenable gpu_set_lightingenable gpu_set_fog gpu_set_cullmode gpu_set_blendmode gpu_set_blendmode_ext gpu_set_blendmode_ext_sepalpha gpu_set_colorwriteenable gpu_set_colourwriteenable gpu_set_alphatestenable gpu_set_alphatestref gpu_set_alphatestfunc gpu_set_texfilter gpu_set_texfilter_ext gpu_set_texrepeat gpu_set_texrepeat_ext gpu_set_tex_filter gpu_set_tex_filter_ext gpu_set_tex_repeat gpu_set_tex_repeat_ext gpu_set_tex_mip_filter gpu_set_tex_mip_filter_ext gpu_set_tex_mip_bias gpu_set_tex_mip_bias_ext gpu_set_tex_min_mip gpu_set_tex_min_mip_ext gpu_set_tex_max_mip gpu_set_tex_max_mip_ext gpu_set_tex_max_aniso gpu_set_tex_max_aniso_ext gpu_set_tex_mip_enable gpu_set_tex_mip_enable_ext gpu_get_blendenable gpu_get_ztestenable gpu_get_zfunc gpu_get_zwriteenable gpu_get_lightingenable gpu_get_fog gpu_get_cullmode gpu_get_blendmode gpu_get_blendmode_ext gpu_get_blendmode_ext_sepalpha gpu_get_blendmode_src gpu_get_blendmode_dest gpu_get_blendmode_srcalpha gpu_get_blendmode_destalpha gpu_get_colorwriteenable gpu_get_colourwriteenable gpu_get_alphatestenable gpu_get_alphatestref gpu_get_alphatestfunc gpu_get_texfilter gpu_get_texfilter_ext gpu_get_texrepeat gpu_get_texrepeat_ext gpu_get_tex_filter gpu_get_tex_filter_ext gpu_get_tex_repeat gpu_get_tex_repeat_ext gpu_get_tex_mip_filter gpu_get_tex_mip_filter_ext gpu_get_tex_mip_bias gpu_get_tex_mip_bias_ext gpu_get_tex_min_mip gpu_get_tex_min_mip_ext gpu_get_tex_max_mip gpu_get_tex_max_mip_ext gpu_get_tex_max_aniso gpu_get_tex_max_aniso_ext gpu_get_tex_mip_enable gpu_get_tex_mip_enable_ext gpu_push_state gpu_pop_state gpu_get_state gpu_set_state draw_light_define_ambient draw_light_define_direction draw_light_define_point draw_light_enable draw_set_lighting draw_light_get_ambient draw_light_get draw_get_lighting shop_leave_rating url_get_domain url_open url_open_ext url_open_full get_timer achievement_login achievement_logout achievement_post achievement_increment achievement_post_score achievement_available achievement_show_achievements achievement_show_leaderboards achievement_load_friends achievement_load_leaderboard achievement_send_challenge achievement_load_progress achievement_reset achievement_login_status achievement_get_pic achievement_show_challenge_notifications achievement_get_challenges achievement_event achievement_show achievement_get_info cloud_file_save cloud_string_save cloud_synchronise ads_enable ads_disable ads_setup ads_engagement_launch ads_engagement_available ads_engagement_active ads_event ads_event_preload ads_set_reward_callback ads_get_display_height ads_get_display_width ads_move ads_interstitial_available ads_interstitial_display device_get_tilt_x device_get_tilt_y device_get_tilt_z device_is_keypad_open device_mouse_check_button device_mouse_check_button_pressed device_mouse_check_button_released device_mouse_x device_mouse_y device_mouse_raw_x device_mouse_raw_y device_mouse_x_to_gui device_mouse_y_to_gui iap_activate iap_status iap_enumerate_products iap_restore_all iap_acquire iap_consume iap_product_details iap_purchase_details facebook_init facebook_login facebook_status facebook_graph_request facebook_dialog facebook_logout facebook_launch_offerwall facebook_post_message facebook_send_invite facebook_user_id facebook_accesstoken facebook_check_permission facebook_request_read_permissions facebook_request_publish_permissions gamepad_is_supported gamepad_get_device_count gamepad_is_connected gamepad_get_description gamepad_get_button_threshold gamepad_set_button_threshold gamepad_get_axis_deadzone gamepad_set_axis_deadzone gamepad_button_count gamepad_button_check gamepad_button_check_pressed gamepad_button_check_released gamepad_button_value gamepad_axis_count gamepad_axis_value gamepad_set_vibration gamepad_set_colour gamepad_set_color os_is_paused window_has_focus code_is_compiled http_get http_get_file http_post_string http_request json_encode json_decode zip_unzip load_csv base64_encode base64_decode md5_string_unicode md5_string_utf8 md5_file os_is_network_connected sha1_string_unicode sha1_string_utf8 sha1_file os_powersave_enable analytics_event analytics_event_ext win8_livetile_tile_notification win8_livetile_tile_clear win8_livetile_badge_notification win8_livetile_badge_clear win8_livetile_queue_enable win8_secondarytile_pin win8_secondarytile_badge_notification win8_secondarytile_delete win8_livetile_notification_begin win8_livetile_notification_secondary_begin win8_livetile_notification_expiry win8_livetile_notification_tag win8_livetile_notification_text_add win8_livetile_notification_image_add win8_livetile_notification_end win8_appbar_enable win8_appbar_add_element win8_appbar_remove_element win8_settingscharm_add_entry win8_settingscharm_add_html_entry win8_settingscharm_add_xaml_entry win8_settingscharm_set_xaml_property win8_settingscharm_get_xaml_property win8_settingscharm_remove_entry win8_share_image win8_share_screenshot win8_share_file win8_share_url win8_share_text win8_search_enable win8_search_disable win8_search_add_suggestions win8_device_touchscreen_available win8_license_initialize_sandbox win8_license_trial_version winphone_license_trial_version winphone_tile_title winphone_tile_count winphone_tile_back_title winphone_tile_back_content winphone_tile_back_content_wide winphone_tile_front_image winphone_tile_front_image_small winphone_tile_front_image_wide winphone_tile_back_image winphone_tile_back_image_wide winphone_tile_background_colour winphone_tile_background_color winphone_tile_icon_image winphone_tile_small_icon_image winphone_tile_wide_content winphone_tile_cycle_images winphone_tile_small_background_image physics_world_create physics_world_gravity physics_world_update_speed physics_world_update_iterations physics_world_draw_debug physics_pause_enable physics_fixture_create physics_fixture_set_kinematic physics_fixture_set_density physics_fixture_set_awake physics_fixture_set_restitution physics_fixture_set_friction physics_fixture_set_collision_group physics_fixture_set_sensor physics_fixture_set_linear_damping physics_fixture_set_angular_damping physics_fixture_set_circle_shape physics_fixture_set_box_shape physics_fixture_set_edge_shape physics_fixture_set_polygon_shape physics_fixture_set_chain_shape physics_fixture_add_point physics_fixture_bind physics_fixture_bind_ext physics_fixture_delete physics_apply_force physics_apply_impulse physics_apply_angular_impulse physics_apply_local_force physics_apply_local_impulse physics_apply_torque physics_mass_properties physics_draw_debug physics_test_overlap physics_remove_fixture physics_set_friction physics_set_density physics_set_restitution physics_get_friction physics_get_density physics_get_restitution physics_joint_distance_create physics_joint_rope_create physics_joint_revolute_create physics_joint_prismatic_create physics_joint_pulley_create physics_joint_wheel_create physics_joint_weld_create physics_joint_friction_create physics_joint_gear_create physics_joint_enable_motor physics_joint_get_value physics_joint_set_value physics_joint_delete physics_particle_create physics_particle_delete physics_particle_delete_region_circle physics_particle_delete_region_box physics_particle_delete_region_poly physics_particle_set_flags physics_particle_set_category_flags physics_particle_draw physics_particle_draw_ext physics_particle_count physics_particle_get_data physics_particle_get_data_particle physics_particle_group_begin physics_particle_group_circle physics_particle_group_box physics_particle_group_polygon physics_particle_group_add_point physics_particle_group_end physics_particle_group_join physics_particle_group_delete physics_particle_group_count physics_particle_group_get_data physics_particle_group_get_mass physics_particle_group_get_inertia physics_particle_group_get_centre_x physics_particle_group_get_centre_y physics_particle_group_get_vel_x physics_particle_group_get_vel_y physics_particle_group_get_ang_vel physics_particle_group_get_x physics_particle_group_get_y physics_particle_group_get_angle physics_particle_set_group_flags physics_particle_get_group_flags physics_particle_get_max_count physics_particle_get_radius physics_particle_get_density physics_particle_get_damping physics_particle_get_gravity_scale physics_particle_set_max_count physics_particle_set_radius physics_particle_set_density physics_particle_set_damping physics_particle_set_gravity_scale network_create_socket network_create_socket_ext network_create_server network_create_server_raw network_connect network_connect_raw network_send_packet network_send_raw network_send_broadcast network_send_udp network_send_udp_raw network_set_timeout network_set_config network_resolve network_destroy buffer_create buffer_write buffer_read buffer_seek buffer_get_surface buffer_set_surface buffer_delete buffer_exists buffer_get_type buffer_get_alignment buffer_poke buffer_peek buffer_save buffer_save_ext buffer_load buffer_load_ext buffer_load_partial buffer_copy buffer_fill buffer_get_size buffer_tell buffer_resize buffer_md5 buffer_sha1 buffer_base64_encode buffer_base64_decode buffer_base64_decode_ext buffer_sizeof buffer_get_address buffer_create_from_vertex_buffer buffer_create_from_vertex_buffer_ext buffer_copy_from_vertex_buffer buffer_async_group_begin buffer_async_group_option buffer_async_group_end buffer_load_async buffer_save_async gml_release_mode gml_pragma steam_activate_overlay steam_is_overlay_enabled steam_is_overlay_activated steam_get_persona_name steam_initialised steam_is_cloud_enabled_for_app steam_is_cloud_enabled_for_account steam_file_persisted steam_get_quota_total steam_get_quota_free steam_file_write steam_file_write_file steam_file_read steam_file_delete steam_file_exists steam_file_size steam_file_share steam_is_screenshot_requested steam_send_screenshot steam_is_user_logged_on steam_get_user_steam_id steam_user_owns_dlc steam_user_installed_dlc steam_set_achievement steam_get_achievement steam_clear_achievement steam_set_stat_int steam_set_stat_float steam_set_stat_avg_rate steam_get_stat_int steam_get_stat_float steam_get_stat_avg_rate steam_reset_all_stats steam_reset_all_stats_achievements steam_stats_ready steam_create_leaderboard steam_upload_score steam_upload_score_ext steam_download_scores_around_user steam_download_scores steam_download_friends_scores steam_upload_score_buffer steam_upload_score_buffer_ext steam_current_game_language steam_available_languages steam_activate_overlay_browser steam_activate_overlay_user steam_activate_overlay_store steam_get_user_persona_name steam_get_app_id steam_get_user_account_id steam_ugc_download steam_ugc_create_item steam_ugc_start_item_update steam_ugc_set_item_title steam_ugc_set_item_description steam_ugc_set_item_visibility steam_ugc_set_item_tags steam_ugc_set_item_content steam_ugc_set_item_preview steam_ugc_submit_item_update steam_ugc_get_item_update_progress steam_ugc_subscribe_item steam_ugc_unsubscribe_item steam_ugc_num_subscribed_items steam_ugc_get_subscribed_items steam_ugc_get_item_install_info steam_ugc_get_item_update_info steam_ugc_request_item_details steam_ugc_create_query_user steam_ugc_create_query_user_ex steam_ugc_create_query_all steam_ugc_create_query_all_ex steam_ugc_query_set_cloud_filename_filter steam_ugc_query_set_match_any_tag steam_ugc_query_set_search_text steam_ugc_query_set_ranked_by_trend_days steam_ugc_query_add_required_tag steam_ugc_query_add_excluded_tag steam_ugc_query_set_return_long_description steam_ugc_query_set_return_total_only steam_ugc_query_set_allow_cached_response steam_ugc_send_query shader_set shader_get_name shader_reset shader_current shader_is_compiled shader_get_sampler_index shader_get_uniform shader_set_uniform_i shader_set_uniform_i_array shader_set_uniform_f shader_set_uniform_f_array shader_set_uniform_matrix shader_set_uniform_matrix_array shader_enable_corner_id texture_set_stage texture_get_texel_width texture_get_texel_height shaders_are_supported vertex_format_begin vertex_format_end vertex_format_delete vertex_format_add_position vertex_format_add_position_3d vertex_format_add_colour vertex_format_add_color vertex_format_add_normal vertex_format_add_texcoord vertex_format_add_textcoord vertex_format_add_custom vertex_create_buffer vertex_create_buffer_ext vertex_delete_buffer vertex_begin vertex_end vertex_position vertex_position_3d vertex_colour vertex_color vertex_argb vertex_texcoord vertex_normal vertex_float1 vertex_float2 vertex_float3 vertex_float4 vertex_ubyte4 vertex_submit vertex_freeze vertex_get_number vertex_get_buffer_size vertex_create_buffer_from_buffer vertex_create_buffer_from_buffer_ext push_local_notification push_get_first_local_notification push_get_next_local_notification push_cancel_local_notification skeleton_animation_set skeleton_animation_get skeleton_animation_mix skeleton_animation_set_ext skeleton_animation_get_ext skeleton_animation_get_duration skeleton_animation_get_frames skeleton_animation_clear skeleton_skin_set skeleton_skin_get skeleton_attachment_set skeleton_attachment_get skeleton_attachment_create skeleton_collision_draw_set skeleton_bone_data_get skeleton_bone_data_set skeleton_bone_state_get skeleton_bone_state_set skeleton_get_minmax skeleton_get_num_bounds skeleton_get_bounds skeleton_animation_get_frame skeleton_animation_set_frame draw_skeleton draw_skeleton_time draw_skeleton_instance draw_skeleton_collision skeleton_animation_list skeleton_skin_list skeleton_slot_data layer_get_id layer_get_id_at_depth layer_get_depth layer_create layer_destroy layer_destroy_instances layer_add_instance layer_has_instance layer_set_visible layer_get_visible layer_exists layer_x layer_y layer_get_x layer_get_y layer_hspeed layer_vspeed layer_get_hspeed layer_get_vspeed layer_script_begin layer_script_end layer_shader layer_get_script_begin layer_get_script_end layer_get_shader layer_set_target_room layer_get_target_room layer_reset_target_room layer_get_all layer_get_all_elements layer_get_name layer_depth layer_get_element_layer layer_get_element_type layer_element_move layer_force_draw_depth layer_is_draw_depth_forced layer_get_forced_depth layer_background_get_id layer_background_exists layer_background_create layer_background_destroy layer_background_visible layer_background_change layer_background_sprite layer_background_htiled layer_background_vtiled layer_background_stretch layer_background_yscale layer_background_xscale layer_background_blend layer_background_alpha layer_background_index layer_background_speed layer_background_get_visible layer_background_get_sprite layer_background_get_htiled layer_background_get_vtiled layer_background_get_stretch layer_background_get_yscale layer_background_get_xscale layer_background_get_blend layer_background_get_alpha layer_background_get_index layer_background_get_speed layer_sprite_get_id layer_sprite_exists layer_sprite_create layer_sprite_destroy layer_sprite_change layer_sprite_index layer_sprite_speed layer_sprite_xscale layer_sprite_yscale layer_sprite_angle layer_sprite_blend layer_sprite_alpha layer_sprite_x layer_sprite_y layer_sprite_get_sprite layer_sprite_get_index layer_sprite_get_speed layer_sprite_get_xscale layer_sprite_get_yscale layer_sprite_get_angle layer_sprite_get_blend layer_sprite_get_alpha layer_sprite_get_x layer_sprite_get_y layer_tilemap_get_id layer_tilemap_exists layer_tilemap_create layer_tilemap_destroy tilemap_tileset tilemap_x tilemap_y tilemap_set tilemap_set_at_pixel tilemap_get_tileset tilemap_get_tile_width tilemap_get_tile_height tilemap_get_width tilemap_get_height tilemap_get_x tilemap_get_y tilemap_get tilemap_get_at_pixel tilemap_get_cell_x_at_pixel tilemap_get_cell_y_at_pixel tilemap_clear draw_tilemap draw_tile tilemap_set_global_mask tilemap_get_global_mask tilemap_set_mask tilemap_get_mask tilemap_get_frame tile_set_empty tile_set_index tile_set_flip tile_set_mirror tile_set_rotate tile_get_empty tile_get_index tile_get_flip tile_get_mirror tile_get_rotate layer_tile_exists layer_tile_create layer_tile_destroy layer_tile_change layer_tile_xscale layer_tile_yscale layer_tile_blend layer_tile_alpha layer_tile_x layer_tile_y layer_tile_region layer_tile_visible layer_tile_get_sprite layer_tile_get_xscale layer_tile_get_yscale layer_tile_get_blend layer_tile_get_alpha layer_tile_get_x layer_tile_get_y layer_tile_get_region layer_tile_get_visible layer_instance_get_instance instance_activate_layer instance_deactivate_layer camera_create camera_create_view camera_destroy camera_apply camera_get_active camera_get_default camera_set_default camera_set_view_mat camera_set_proj_mat camera_set_update_script camera_set_begin_script camera_set_end_script camera_set_view_pos camera_set_view_size camera_set_view_speed camera_set_view_border camera_set_view_angle camera_set_view_target camera_get_view_mat camera_get_proj_mat camera_get_update_script camera_get_begin_script camera_get_end_script camera_get_view_x camera_get_view_y camera_get_view_width camera_get_view_height camera_get_view_speed_x camera_get_view_speed_y camera_get_view_border_x camera_get_view_border_y camera_get_view_angle camera_get_view_target view_get_camera view_get_visible view_get_xport view_get_yport view_get_wport view_get_hport view_get_surface_id view_set_camera view_set_visible view_set_xport view_set_yport view_set_wport view_set_hport view_set_surface_id gesture_drag_time gesture_drag_distance gesture_flick_speed gesture_double_tap_time gesture_double_tap_distance gesture_pinch_distance gesture_pinch_angle_towards gesture_pinch_angle_away gesture_rotate_time gesture_rotate_angle gesture_tap_count gesture_get_drag_time gesture_get_drag_distance gesture_get_flick_speed gesture_get_double_tap_time gesture_get_double_tap_distance gesture_get_pinch_distance gesture_get_pinch_angle_towards gesture_get_pinch_angle_away gesture_get_rotate_time gesture_get_rotate_angle gesture_get_tap_count keyboard_virtual_show keyboard_virtual_hide keyboard_virtual_status keyboard_virtual_height",literal:"self other all noone global local undefined pointer_invalid pointer_null path_action_stop path_action_restart path_action_continue path_action_reverse true false pi GM_build_date GM_version GM_runtime_version  timezone_local timezone_utc gamespeed_fps gamespeed_microseconds  ev_create ev_destroy ev_step ev_alarm ev_keyboard ev_mouse ev_collision ev_other ev_draw ev_draw_begin ev_draw_end ev_draw_pre ev_draw_post ev_keypress ev_keyrelease ev_trigger ev_left_button ev_right_button ev_middle_button ev_no_button ev_left_press ev_right_press ev_middle_press ev_left_release ev_right_release ev_middle_release ev_mouse_enter ev_mouse_leave ev_mouse_wheel_up ev_mouse_wheel_down ev_global_left_button ev_global_right_button ev_global_middle_button ev_global_left_press ev_global_right_press ev_global_middle_press ev_global_left_release ev_global_right_release ev_global_middle_release ev_joystick1_left ev_joystick1_right ev_joystick1_up ev_joystick1_down ev_joystick1_button1 ev_joystick1_button2 ev_joystick1_button3 ev_joystick1_button4 ev_joystick1_button5 ev_joystick1_button6 ev_joystick1_button7 ev_joystick1_button8 ev_joystick2_left ev_joystick2_right ev_joystick2_up ev_joystick2_down ev_joystick2_button1 ev_joystick2_button2 ev_joystick2_button3 ev_joystick2_button4 ev_joystick2_button5 ev_joystick2_button6 ev_joystick2_button7 ev_joystick2_button8 ev_outside ev_boundary ev_game_start ev_game_end ev_room_start ev_room_end ev_no_more_lives ev_animation_end ev_end_of_path ev_no_more_health ev_close_button ev_user0 ev_user1 ev_user2 ev_user3 ev_user4 ev_user5 ev_user6 ev_user7 ev_user8 ev_user9 ev_user10 ev_user11 ev_user12 ev_user13 ev_user14 ev_user15 ev_step_normal ev_step_begin ev_step_end ev_gui ev_gui_begin ev_gui_end ev_cleanup ev_gesture ev_gesture_tap ev_gesture_double_tap ev_gesture_drag_start ev_gesture_dragging ev_gesture_drag_end ev_gesture_flick ev_gesture_pinch_start ev_gesture_pinch_in ev_gesture_pinch_out ev_gesture_pinch_end ev_gesture_rotate_start ev_gesture_rotating ev_gesture_rotate_end ev_global_gesture_tap ev_global_gesture_double_tap ev_global_gesture_drag_start ev_global_gesture_dragging ev_global_gesture_drag_end ev_global_gesture_flick ev_global_gesture_pinch_start ev_global_gesture_pinch_in ev_global_gesture_pinch_out ev_global_gesture_pinch_end ev_global_gesture_rotate_start ev_global_gesture_rotating ev_global_gesture_rotate_end vk_nokey vk_anykey vk_enter vk_return vk_shift vk_control vk_alt vk_escape vk_space vk_backspace vk_tab vk_pause vk_printscreen vk_left vk_right vk_up vk_down vk_home vk_end vk_delete vk_insert vk_pageup vk_pagedown vk_f1 vk_f2 vk_f3 vk_f4 vk_f5 vk_f6 vk_f7 vk_f8 vk_f9 vk_f10 vk_f11 vk_f12 vk_numpad0 vk_numpad1 vk_numpad2 vk_numpad3 vk_numpad4 vk_numpad5 vk_numpad6 vk_numpad7 vk_numpad8 vk_numpad9 vk_divide vk_multiply vk_subtract vk_add vk_decimal vk_lshift vk_lcontrol vk_lalt vk_rshift vk_rcontrol vk_ralt  mb_any mb_none mb_left mb_right mb_middle c_aqua c_black c_blue c_dkgray c_fuchsia c_gray c_green c_lime c_ltgray c_maroon c_navy c_olive c_purple c_red c_silver c_teal c_white c_yellow c_orange fa_left fa_center fa_right fa_top fa_middle fa_bottom pr_pointlist pr_linelist pr_linestrip pr_trianglelist pr_trianglestrip pr_trianglefan bm_complex bm_normal bm_add bm_max bm_subtract bm_zero bm_one bm_src_colour bm_inv_src_colour bm_src_color bm_inv_src_color bm_src_alpha bm_inv_src_alpha bm_dest_alpha bm_inv_dest_alpha bm_dest_colour bm_inv_dest_colour bm_dest_color bm_inv_dest_color bm_src_alpha_sat tf_point tf_linear tf_anisotropic mip_off mip_on mip_markedonly audio_falloff_none audio_falloff_inverse_distance audio_falloff_inverse_distance_clamped audio_falloff_linear_distance audio_falloff_linear_distance_clamped audio_falloff_exponent_distance audio_falloff_exponent_distance_clamped audio_old_system audio_new_system audio_mono audio_stereo audio_3d cr_default cr_none cr_arrow cr_cross cr_beam cr_size_nesw cr_size_ns cr_size_nwse cr_size_we cr_uparrow cr_hourglass cr_drag cr_appstart cr_handpoint cr_size_all spritespeed_framespersecond spritespeed_framespergameframe asset_object asset_unknown asset_sprite asset_sound asset_room asset_path asset_script asset_font asset_timeline asset_tiles asset_shader fa_readonly fa_hidden fa_sysfile fa_volumeid fa_directory fa_archive  ds_type_map ds_type_list ds_type_stack ds_type_queue ds_type_grid ds_type_priority ef_explosion ef_ring ef_ellipse ef_firework ef_smoke ef_smokeup ef_star ef_spark ef_flare ef_cloud ef_rain ef_snow pt_shape_pixel pt_shape_disk pt_shape_square pt_shape_line pt_shape_star pt_shape_circle pt_shape_ring pt_shape_sphere pt_shape_flare pt_shape_spark pt_shape_explosion pt_shape_cloud pt_shape_smoke pt_shape_snow ps_distr_linear ps_distr_gaussian ps_distr_invgaussian ps_shape_rectangle ps_shape_ellipse ps_shape_diamond ps_shape_line ty_real ty_string dll_cdecl dll_stdcall matrix_view matrix_projection matrix_world os_win32 os_windows os_macosx os_ios os_android os_symbian os_linux os_unknown os_winphone os_tizen os_win8native os_wiiu os_3ds  os_psvita os_bb10 os_ps4 os_xboxone os_ps3 os_xbox360 os_uwp os_tvos os_switch browser_not_a_browser browser_unknown browser_ie browser_firefox browser_chrome browser_safari browser_safari_mobile browser_opera browser_tizen browser_edge browser_windows_store browser_ie_mobile  device_ios_unknown device_ios_iphone device_ios_iphone_retina device_ios_ipad device_ios_ipad_retina device_ios_iphone5 device_ios_iphone6 device_ios_iphone6plus device_emulator device_tablet display_landscape display_landscape_flipped display_portrait display_portrait_flipped tm_sleep tm_countvsyncs of_challenge_win of_challen ge_lose of_challenge_tie leaderboard_type_number leaderboard_type_time_mins_secs cmpfunc_never cmpfunc_less cmpfunc_equal cmpfunc_lessequal cmpfunc_greater cmpfunc_notequal cmpfunc_greaterequal cmpfunc_always cull_noculling cull_clockwise cull_counterclockwise lighttype_dir lighttype_point iap_ev_storeload iap_ev_product iap_ev_purchase iap_ev_consume iap_ev_restore iap_storeload_ok iap_storeload_failed iap_status_uninitialised iap_status_unavailable iap_status_loading iap_status_available iap_status_processing iap_status_restoring iap_failed iap_unavailable iap_available iap_purchased iap_canceled iap_refunded fb_login_default fb_login_fallback_to_webview fb_login_no_fallback_to_webview fb_login_forcing_webview fb_login_use_system_account fb_login_forcing_safari  phy_joint_anchor_1_x phy_joint_anchor_1_y phy_joint_anchor_2_x phy_joint_anchor_2_y phy_joint_reaction_force_x phy_joint_reaction_force_y phy_joint_reaction_torque phy_joint_motor_speed phy_joint_angle phy_joint_motor_torque phy_joint_max_motor_torque phy_joint_translation phy_joint_speed phy_joint_motor_force phy_joint_max_motor_force phy_joint_length_1 phy_joint_length_2 phy_joint_damping_ratio phy_joint_frequency phy_joint_lower_angle_limit phy_joint_upper_angle_limit phy_joint_angle_limits phy_joint_max_length phy_joint_max_torque phy_joint_max_force phy_debug_render_aabb phy_debug_render_collision_pairs phy_debug_render_coms phy_debug_render_core_shapes phy_debug_render_joints phy_debug_render_obb phy_debug_render_shapes  phy_particle_flag_water phy_particle_flag_zombie phy_particle_flag_wall phy_particle_flag_spring phy_particle_flag_elastic phy_particle_flag_viscous phy_particle_flag_powder phy_particle_flag_tensile phy_particle_flag_colourmixing phy_particle_flag_colormixing phy_particle_group_flag_solid phy_particle_group_flag_rigid phy_particle_data_flag_typeflags phy_particle_data_flag_position phy_particle_data_flag_velocity phy_particle_data_flag_colour phy_particle_data_flag_color phy_particle_data_flag_category  achievement_our_info achievement_friends_info achievement_leaderboard_info achievement_achievement_info achievement_filter_all_players achievement_filter_friends_only achievement_filter_favorites_only achievement_type_achievement_challenge achievement_type_score_challenge achievement_pic_loaded  achievement_show_ui achievement_show_profile achievement_show_leaderboard achievement_show_achievement achievement_show_bank achievement_show_friend_picker achievement_show_purchase_prompt network_socket_tcp network_socket_udp network_socket_bluetooth network_type_connect network_type_disconnect network_type_data network_type_non_blocking_connect network_config_connect_timeout network_config_use_non_blocking_socket network_config_enable_reliable_udp network_config_disable_reliable_udp buffer_fixed buffer_grow buffer_wrap buffer_fast buffer_vbuffer buffer_network buffer_u8 buffer_s8 buffer_u16 buffer_s16 buffer_u32 buffer_s32 buffer_u64 buffer_f16 buffer_f32 buffer_f64 buffer_bool buffer_text buffer_string buffer_surface_copy buffer_seek_start buffer_seek_relative buffer_seek_end buffer_generalerror buffer_outofspace buffer_outofbounds buffer_invalidtype  text_type button_type input_type ANSI_CHARSET DEFAULT_CHARSET EASTEUROPE_CHARSET RUSSIAN_CHARSET SYMBOL_CHARSET SHIFTJIS_CHARSET HANGEUL_CHARSET GB2312_CHARSET CHINESEBIG5_CHARSET JOHAB_CHARSET HEBREW_CHARSET ARABIC_CHARSET GREEK_CHARSET TURKISH_CHARSET VIETNAMESE_CHARSET THAI_CHARSET MAC_CHARSET BALTIC_CHARSET OEM_CHARSET  gp_face1 gp_face2 gp_face3 gp_face4 gp_shoulderl gp_shoulderr gp_shoulderlb gp_shoulderrb gp_select gp_start gp_stickl gp_stickr gp_padu gp_padd gp_padl gp_padr gp_axislh gp_axislv gp_axisrh gp_axisrv ov_friends ov_community ov_players ov_settings ov_gamegroup ov_achievements lb_sort_none lb_sort_ascending lb_sort_descending lb_disp_none lb_disp_numeric lb_disp_time_sec lb_disp_time_ms ugc_result_success ugc_filetype_community ugc_filetype_microtrans ugc_visibility_public ugc_visibility_friends_only ugc_visibility_private ugc_query_RankedByVote ugc_query_RankedByPublicationDate ugc_query_AcceptedForGameRankedByAcceptanceDate ugc_query_RankedByTrend ugc_query_FavoritedByFriendsRankedByPublicationDate ugc_query_CreatedByFriendsRankedByPublicationDate ugc_query_RankedByNumTimesReported ugc_query_CreatedByFollowedUsersRankedByPublicationDate ugc_query_NotYetRated ugc_query_RankedByTotalVotesAsc ugc_query_RankedByVotesUp ugc_query_RankedByTextSearch ugc_sortorder_CreationOrderDesc ugc_sortorder_CreationOrderAsc ugc_sortorder_TitleAsc ugc_sortorder_LastUpdatedDesc ugc_sortorder_SubscriptionDateDesc ugc_sortorder_VoteScoreDesc ugc_sortorder_ForModeration ugc_list_Published ugc_list_VotedOn ugc_list_VotedUp ugc_list_VotedDown ugc_list_WillVoteLater ugc_list_Favorited ugc_list_Subscribed ugc_list_UsedOrPlayed ugc_list_Followed ugc_match_Items ugc_match_Items_Mtx ugc_match_Items_ReadyToUse ugc_match_Collections ugc_match_Artwork ugc_match_Videos ugc_match_Screenshots ugc_match_AllGuides ugc_match_WebGuides ugc_match_IntegratedGuides ugc_match_UsableInGame ugc_match_ControllerBindings  vertex_usage_position vertex_usage_colour vertex_usage_color vertex_usage_normal vertex_usage_texcoord vertex_usage_textcoord vertex_usage_blendweight vertex_usage_blendindices vertex_usage_psize vertex_usage_tangent vertex_usage_binormal vertex_usage_fog vertex_usage_depth vertex_usage_sample vertex_type_float1 vertex_type_float2 vertex_type_float3 vertex_type_float4 vertex_type_colour vertex_type_color vertex_type_ubyte4 layerelementtype_undefined layerelementtype_background layerelementtype_instance layerelementtype_oldtilemap layerelementtype_sprite layerelementtype_tilemap layerelementtype_particlesystem layerelementtype_tile tile_rotate tile_flip tile_mirror tile_index_mask kbv_type_default kbv_type_ascii kbv_type_url kbv_type_email kbv_type_numbers kbv_type_phone kbv_type_phone_name kbv_returnkey_default kbv_returnkey_go kbv_returnkey_google kbv_returnkey_join kbv_returnkey_next kbv_returnkey_route kbv_returnkey_search kbv_returnkey_send kbv_returnkey_yahoo kbv_returnkey_done kbv_returnkey_continue kbv_returnkey_emergency kbv_autocapitalize_none kbv_autocapitalize_words kbv_autocapitalize_sentences kbv_autocapitalize_characters",symbol:"argument_relative argument argument0 argument1 argument2 argument3 argument4 argument5 argument6 argument7 argument8 argument9 argument10 argument11 argument12 argument13 argument14 argument15 argument_count x|0 y|0 xprevious yprevious xstart ystart hspeed vspeed direction speed friction gravity gravity_direction path_index path_position path_positionprevious path_speed path_scale path_orientation path_endaction object_index id solid persistent mask_index instance_count instance_id room_speed fps fps_real current_time current_year current_month current_day current_weekday current_hour current_minute current_second alarm timeline_index timeline_position timeline_speed timeline_running timeline_loop room room_first room_last room_width room_height room_caption room_persistent score lives health show_score show_lives show_health caption_score caption_lives caption_health event_type event_number event_object event_action application_surface gamemaker_pro gamemaker_registered gamemaker_version error_occurred error_last debug_mode keyboard_key keyboard_lastkey keyboard_lastchar keyboard_string mouse_x mouse_y mouse_button mouse_lastbutton cursor_sprite visible sprite_index sprite_width sprite_height sprite_xoffset sprite_yoffset image_number image_index image_speed depth image_xscale image_yscale image_angle image_alpha image_blend bbox_left bbox_right bbox_top bbox_bottom layer background_colour  background_showcolour background_color background_showcolor view_enabled view_current view_visible view_xview view_yview view_wview view_hview view_xport view_yport view_wport view_hport view_angle view_hborder view_vborder view_hspeed view_vspeed view_object view_surface_id view_camera game_id game_display_name game_project_name game_save_id working_directory temp_directory program_directory browser_width browser_height os_type os_device os_browser os_version display_aa async_load delta_time webgl_enabled event_data iap_data phy_rotation phy_position_x phy_position_y phy_angular_velocity phy_linear_velocity_x phy_linear_velocity_y phy_speed_x phy_speed_y phy_speed phy_angular_damping phy_linear_damping phy_bullet phy_fixed_rotation phy_active phy_mass phy_inertia phy_com_x phy_com_y phy_dynamic phy_kinematic phy_sleeping phy_collision_points phy_collision_x phy_collision_y phy_col_normal_x phy_col_normal_y phy_position_xprevious phy_position_yprevious"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE]}}},5196:function(e){e.exports=function(e){var t={keyword:"break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune",literal:"true false iota nil",built_in:"append cap close complex copy imag len make new panic print println real recover delete"};return{name:"Go",aliases:["golang"],keywords:t,illegal:"</",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"string",variants:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:"`",end:"`"}]},{className:"number",variants:[{begin:e.C_NUMBER_RE+"[i]",relevance:1},e.C_NUMBER_MODE]},{begin:/:=/},{className:"function",beginKeywords:"func",end:"\\s*(\\{|$)",excludeEnd:!0,contains:[e.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,keywords:t,illegal:/["']/}]}]}}},8305:function(e){e.exports=function(e){return{name:"Golo",keywords:{keyword:"println readln print import module function local return let var while for foreach times in case when match with break continue augment augmentation each find filter reduce if then else otherwise try catch finally raise throw orIfNull DynamicObject|10 DynamicVariable struct Observable map set vector list array",literal:"true false null"},contains:[e.HASH_COMMENT_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,{className:"meta",begin:"@[A-Za-z]+"}]}}},5909:function(e){e.exports=function(e){return{name:"Gradle",case_insensitive:!0,keywords:{keyword:"task project allprojects subprojects artifacts buildscript configurations dependencies repositories sourceSets description delete from into include exclude source classpath destinationDir includes options sourceCompatibility targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant def abstract break case catch continue default do else extends final finally for if implements instanceof native new private protected public return static switch synchronized throw throws transient try volatile while strictfp package import false null super this true antlrtask checkstyle codenarc copy boolean byte char class double float int interface long short void compile runTime file fileTree abs any append asList asWritable call collect compareTo count div dump each eachByte eachFile eachLine every find findAll flatten getAt getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter newReader newWriter next plus pop power previous print println push putAt read readBytes readLines reverse reverseEach round size sort splitEachLine step subMap times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader withStream withWriter withWriterAppend write writeLine"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.NUMBER_MODE,e.REGEXP_MODE]}}},8018:function(e){function t(e){return function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return function(e){return e?"string"===typeof e?e:e.source:null}(e)})).join("")}("(?=",e,")")}function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.variants=e,t}e.exports=function(e){var a="[A-Za-z0-9_$]+",s=n([e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{begin:/\w+@/,relevance:0},{className:"doctag",begin:"@[A-Za-z]+"}]})]),i={className:"regexp",begin:/~?\/[^\/\n]+\//,contains:[e.BACKSLASH_ESCAPE]},r=n([e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE]),o=n([{begin:/"""/,end:/"""/},{begin:/'''/,end:/'''/},{begin:"\\$/",end:"/\\$",relevance:10},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE],{className:"string"});return{name:"Groovy",keywords:{built_in:"this super",literal:"true false null",keyword:"byte short char int long boolean float double void def as in assert trait abstract static volatile transient public private protected synchronized final class interface enum if else for while switch case break default continue throw throws try catch finally implements extends new import package return instanceof"},contains:[e.SHEBANG({binary:"groovy",relevance:10}),s,o,i,r,{className:"class",beginKeywords:"class interface trait enum",end:/\{/,illegal:":",contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{className:"meta",begin:"@[A-Za-z]+",relevance:0},{className:"attr",begin:a+"[ \t]*:",relevance:0},{begin:/\?/,end:/:/,relevance:0,contains:[s,o,i,r,"self"]},{className:"symbol",begin:"^[ \t]*"+t(a+":"),excludeBegin:!0,end:a+":",relevance:0}],illegal:/#|<\//}}},2160:function(e){e.exports=function(e){return{name:"HAML",case_insensitive:!0,contains:[{className:"meta",begin:"^!!!( (5|1\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\b.*))?$",relevance:10},e.COMMENT("^\\s*(!=#|=#|-#|/).*$",!1,{relevance:0}),{begin:"^\\s*(-|=|!=)(?!#)",starts:{end:"\\n",subLanguage:"ruby"}},{className:"tag",begin:"^\\s*%",contains:[{className:"selector-tag",begin:"\\w+"},{className:"selector-id",begin:"#[\\w-]+"},{className:"selector-class",begin:"\\.[\\w-]+"},{begin:/\{\s*/,end:/\s*\}/,contains:[{begin:":\\w+\\s*=>",end:",\\s+",returnBegin:!0,endsWithParent:!0,contains:[{className:"attr",begin:":\\w+"},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{begin:"\\w+",relevance:0}]}]},{begin:"\\(\\s*",end:"\\s*\\)",excludeEnd:!0,contains:[{begin:"\\w+\\s*=",end:"\\s+",returnBegin:!0,endsWithParent:!0,contains:[{className:"attr",begin:"\\w+",relevance:0},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{begin:"\\w+",relevance:0}]}]}]},{begin:"^\\s*[=~]\\s*"},{begin:/#\{/,starts:{end:/\}/,subLanguage:"ruby"}}]}}},2778:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}e.exports=function(e){var a={"builtin-name":["action","bindattr","collection","component","concat","debugger","each","each-in","get","hash","if","in","input","link-to","loc","log","lookup","mut","outlet","partial","query-params","render","template","textarea","unbound","unless","view","with","yield"]},s=/\[\]|\[[^\]]+\]/,i=/[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/,r=function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}(/""|"[^"]+"/,/''|'[^']+'/,s,i),o=n(n("(",/\.|\.\/|\//,")?"),r,function(e){return n("(",e,")*")}(n(/(\.|\/)/,r))),l=n("(",s,"|",i,")(?==)"),c={begin:o,lexemes:/[\w.\/]+/},d=e.inherit(c,{keywords:{literal:["true","false","undefined","null"]}}),u={begin:/\(/,end:/\)/},p={className:"attr",begin:l,relevance:0,starts:{begin:/=/,end:/=/,starts:{contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,d,u]}}},m={contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{begin:/\w+/}]},p,d,u],returnEnd:!0},h=e.inherit(c,{className:"name",keywords:a,starts:e.inherit(m,{end:/\)/})});u.contains=[h];var f=e.inherit(c,{keywords:a,className:"name",starts:e.inherit(m,{end:/\}\}/})}),g=e.inherit(c,{keywords:a,className:"name"}),x=e.inherit(c,{className:"name",keywords:a,starts:e.inherit(m,{end:/\}\}/})});return{name:"Handlebars",aliases:["hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,subLanguage:"xml",contains:[{begin:/\\\{\{/,skip:!0},{begin:/\\\\(?=\{\{)/,skip:!0},e.COMMENT(/\{\{!--/,/--\}\}/),e.COMMENT(/\{\{!/,/\}\}/),{className:"template-tag",begin:/\{\{\{\{(?!\/)/,end:/\}\}\}\}/,contains:[f],starts:{end:/\{\{\{\{\//,returnEnd:!0,subLanguage:"xml"}},{className:"template-tag",begin:/\{\{\{\{\//,end:/\}\}\}\}/,contains:[g]},{className:"template-tag",begin:/\{\{#/,end:/\}\}/,contains:[f]},{className:"template-tag",begin:/\{\{(?=else\}\})/,end:/\}\}/,keywords:"else"},{className:"template-tag",begin:/\{\{(?=else if)/,end:/\}\}/,keywords:"else if"},{className:"template-tag",begin:/\{\{\//,end:/\}\}/,contains:[g]},{className:"template-variable",begin:/\{\{\{/,end:/\}\}\}/,contains:[x]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[x]}]}}},8862:function(e){e.exports=function(e){var t={variants:[e.COMMENT("--","$"),e.COMMENT(/\{-/,/-\}/,{contains:["self"]})]},n={className:"meta",begin:/\{-#/,end:/#-\}/},a={className:"meta",begin:"^#",end:"$"},s={className:"type",begin:"\\b[A-Z][\\w']*",relevance:0},i={begin:"\\(",end:"\\)",illegal:'"',contains:[n,a,{className:"type",begin:"\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"},e.inherit(e.TITLE_MODE,{begin:"[_a-z][\\w']*"}),t]};return{name:"Haskell",aliases:["hs"],keywords:"let in if then else case of where do module import hiding qualified type data newtype deriving class instance as default infix infixl infixr foreign export ccall stdcall cplusplus jvm dotnet safe unsafe family forall mdo proc rec",contains:[{beginKeywords:"module",end:"where",keywords:"module where",contains:[i,t],illegal:"\\W\\.|;"},{begin:"\\bimport\\b",end:"$",keywords:"import qualified as hiding",contains:[i,t],illegal:"\\W\\.|;"},{className:"class",begin:"^(\\s*)?(class|instance)\\b",end:"where",keywords:"class family instance where",contains:[s,i,t]},{className:"class",begin:"\\b(data|(new)?type)\\b",end:"$",keywords:"data family type newtype deriving",contains:[n,s,i,{begin:/\{/,end:/\}/,contains:i.contains},t]},{beginKeywords:"default",end:"$",contains:[s,i,t]},{beginKeywords:"infix infixl infixr",end:"$",contains:[e.C_NUMBER_MODE,t]},{begin:"\\bforeign\\b",end:"$",keywords:"foreign import export ccall stdcall cplusplus jvm dotnet safe unsafe",contains:[s,e.QUOTE_STRING_MODE,t]},{className:"meta",begin:"#!\\/usr\\/bin\\/env runhaskell",end:"$"},n,a,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,s,e.inherit(e.TITLE_MODE,{begin:"^[_a-z][\\w']*"}),t,{begin:"->|<-"}]}}},6174:function(e){e.exports=function(e){return{name:"Haxe",aliases:["hx"],keywords:{keyword:"break case cast catch continue default do dynamic else enum extern for function here if import in inline never new override package private get set public return static super switch this throw trace try typedef untyped using var while Int Float String Bool Dynamic Void Array ",built_in:"trace this",literal:"true false null _"},contains:[{className:"string",begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE,{className:"subst",begin:"\\$\\{",end:"\\}"},{className:"subst",begin:"\\$",end:/\W\}/}]},e.QUOTE_STRING_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,{className:"meta",begin:"@:",end:"$"},{className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":"if else elseif end error"}},{className:"type",begin:":[ \t]*",end:"[^A-Za-z0-9_ \t\\->]",excludeBegin:!0,excludeEnd:!0,relevance:0},{className:"type",begin:":[ \t]*",end:"\\W",excludeBegin:!0,excludeEnd:!0},{className:"type",begin:"new *",end:"\\W",excludeBegin:!0,excludeEnd:!0},{className:"class",beginKeywords:"enum",end:"\\{",contains:[e.TITLE_MODE]},{className:"class",beginKeywords:"abstract",end:"[\\{$]",contains:[{className:"type",begin:"\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0},{className:"type",begin:"from +",end:"\\W",excludeBegin:!0,excludeEnd:!0},{className:"type",begin:"to +",end:"\\W",excludeBegin:!0,excludeEnd:!0},e.TITLE_MODE],keywords:{keyword:"abstract from to"}},{className:"class",begin:"\\b(class|interface) +",end:"[\\{$]",excludeEnd:!0,keywords:"class interface",contains:[{className:"keyword",begin:"\\b(extends|implements) +",keywords:"extends implements",contains:[{className:"type",begin:e.IDENT_RE,relevance:0}]},e.TITLE_MODE]},{className:"function",beginKeywords:"function",end:"\\(",excludeEnd:!0,illegal:"\\S",contains:[e.TITLE_MODE]}],illegal:/<\//}}},5765:function(e){e.exports=function(e){return{name:"HSP",case_insensitive:!0,keywords:{$pattern:/[\w._]+/,keyword:"goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{className:"string",begin:/\{"/,end:/"\}/,contains:[e.BACKSLASH_ESCAPE]},e.COMMENT(";","$",{relevance:0}),{className:"meta",begin:"#",end:"$",keywords:{"meta-keyword":"addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib"},contains:[e.inherit(e.QUOTE_STRING_MODE,{className:"meta-string"}),e.NUMBER_MODE,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:"symbol",begin:"^\\*(\\w+|@)"},e.NUMBER_MODE,e.C_NUMBER_MODE]}}},5627:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function a(e){var a={"builtin-name":["action","bindattr","collection","component","concat","debugger","each","each-in","get","hash","if","in","input","link-to","loc","log","lookup","mut","outlet","partial","query-params","render","template","textarea","unbound","unless","view","with","yield"]},s=/\[\]|\[[^\]]+\]/,i=/[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/,r=function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}(/""|"[^"]+"/,/''|'[^']+'/,s,i),o=n(n("(",/\.|\.\/|\//,")?"),r,function(e){return n("(",e,")*")}(n(/(\.|\/)/,r))),l=n("(",s,"|",i,")(?==)"),c={begin:o,lexemes:/[\w.\/]+/},d=e.inherit(c,{keywords:{literal:["true","false","undefined","null"]}}),u={begin:/\(/,end:/\)/},p={className:"attr",begin:l,relevance:0,starts:{begin:/=/,end:/=/,starts:{contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,d,u]}}},m={contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{begin:/\w+/}]},p,d,u],returnEnd:!0},h=e.inherit(c,{className:"name",keywords:a,starts:e.inherit(m,{end:/\)/})});u.contains=[h];var f=e.inherit(c,{keywords:a,className:"name",starts:e.inherit(m,{end:/\}\}/})}),g=e.inherit(c,{keywords:a,className:"name"}),x=e.inherit(c,{className:"name",keywords:a,starts:e.inherit(m,{end:/\}\}/})});return{name:"Handlebars",aliases:["hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,subLanguage:"xml",contains:[{begin:/\\\{\{/,skip:!0},{begin:/\\\\(?=\{\{)/,skip:!0},e.COMMENT(/\{\{!--/,/--\}\}/),e.COMMENT(/\{\{!/,/\}\}/),{className:"template-tag",begin:/\{\{\{\{(?!\/)/,end:/\}\}\}\}/,contains:[f],starts:{end:/\{\{\{\{\//,returnEnd:!0,subLanguage:"xml"}},{className:"template-tag",begin:/\{\{\{\{\//,end:/\}\}\}\}/,contains:[g]},{className:"template-tag",begin:/\{\{#/,end:/\}\}/,contains:[f]},{className:"template-tag",begin:/\{\{(?=else\}\})/,end:/\}\}/,keywords:"else"},{className:"template-tag",begin:/\{\{(?=else if)/,end:/\}\}/,keywords:"else if"},{className:"template-tag",begin:/\{\{\//,end:/\}\}/,contains:[g]},{className:"template-variable",begin:/\{\{\{/,end:/\}\}\}/,contains:[x]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[x]}]}}e.exports=function(e){var t=a(e);return t.name="HTMLbars",e.getLanguage("handlebars")&&(t.disableAutodetect=!0),t}},7053:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n="HTTP/(2|1\\.[01])",a={className:"attribute",begin:t("^",/[A-Za-z][A-Za-z0-9-]*/,"(?=\\:\\s)"),starts:{contains:[{className:"punctuation",begin:/: /,relevance:0,starts:{end:"$",relevance:0}}]}},s=[a,{begin:"\\n\\n",starts:{subLanguage:[],endsWithParent:!0}}];return{name:"HTTP",aliases:["https"],illegal:/\S/,contains:[{begin:"^(?="+n+" \\d{3})",end:/$/,contains:[{className:"meta",begin:n},{className:"number",begin:"\\b\\d{3}\\b"}],starts:{end:/\b\B/,illegal:/\S/,contains:s}},{begin:"(?=^[A-Z]+ (.*?) "+n+"$)",end:/$/,contains:[{className:"string",begin:" ",end:" ",excludeBegin:!0,excludeEnd:!0},{className:"meta",begin:n},{className:"keyword",begin:"[A-Z]+"}],starts:{end:/\b\B/,illegal:/\S/,contains:s}},e.inherit(a,{relevance:0})]}}},5219:function(e){e.exports=function(e){var t="a-zA-Z_\\-!.?+*=<>&#'",n="["+t+"]["+t+"0-9/;:]*",a={$pattern:n,"builtin-name":"!= % %= & &= * ** **= *= *map + += , --build-class-- --import-- -= . / // //= /= < << <<= <= = > >= >> >>= @ @= ^ ^= abs accumulate all and any ap-compose ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast callable calling-module-name car case cdr chain chr coll? combinations compile compress cond cons cons? continue count curry cut cycle dec def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first flatten float? fn fnc fnr for for* format fraction genexpr gensym get getattr global globals group-by hasattr hash hex id identity if if* if-not if-python2 import in inc input instance? integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass iter iterable? iterate iterator? keyword keyword? lambda last len let lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all map max merge-with method-decorator min multi-decorator multicombinations name neg? next none? nonlocal not not-in not? nth numeric? oct odd? open or ord partition permutations pos? post-route postwalk pow prewalk print product profile/calls profile/cpu put-route quasiquote quote raise range read read-str recursive-replace reduce remove repeat repeatedly repr require rest round route route-with-methods rwm second seq set-comp setattr setv some sorted string string? sum switch symbol? take take-nth take-while tee try unless unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms xi xor yield yield-from zero? zip zip-longest | |= ~"},s={begin:n,relevance:0},i={className:"number",begin:"[-+]?\\d+(\\.\\d+)?",relevance:0},r=e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),o=e.COMMENT(";","$",{relevance:0}),l={className:"literal",begin:/\b([Tt]rue|[Ff]alse|nil|None)\b/},c={begin:"[\\[\\{]",end:"[\\]\\}]"},d={className:"comment",begin:"\\^"+n},u=e.COMMENT("\\^\\{","\\}"),p={className:"symbol",begin:"[:]{1,2}"+n},m={begin:"\\(",end:"\\)"},h={endsWithParent:!0,relevance:0},f={className:"name",relevance:0,keywords:a,begin:n,starts:h},g=[m,r,d,u,o,p,c,i,l,s];return m.contains=[e.COMMENT("comment",""),f,h],h.contains=g,c.contains=g,{name:"Hy",aliases:["hylang"],illegal:/\S/,contains:[e.SHEBANG(),m,r,d,u,o,p,c,i,l]}}},1510:function(e){e.exports=function(e){return{name:"Inform 7",aliases:["i7"],case_insensitive:!0,keywords:{keyword:"thing room person man woman animal container supporter backdrop door scenery open closed locked inside gender is are say understand kind of rule"},contains:[{className:"string",begin:'"',end:'"',relevance:0,contains:[{className:"subst",begin:"\\[",end:"\\]"}]},{className:"section",begin:/^(Volume|Book|Part|Chapter|Section|Table)\b/,end:"$"},{begin:/^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\b/,end:":",contains:[{begin:"\\(This",end:"\\)"}]},{className:"comment",begin:"\\[",end:"\\]",contains:["self"]}]}}},2839:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}e.exports=function(e){var a={className:"number",relevance:0,variants:[{begin:/([+-]+)?[\d]+_[\d_]+/},{begin:e.NUMBER_RE}]},s=e.COMMENT();s.variants=[{begin:/;/,end:/$/},{begin:/#/,end:/$/}];var i={className:"variable",variants:[{begin:/\$[\w\d"][\w\d_]*/},{begin:/\$\{(.*?)\}/}]},r={className:"literal",begin:/\bon|off|true|false|yes|no\b/},o={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:"'''",end:"'''",relevance:10},{begin:'"""',end:'"""',relevance:10},{begin:'"',end:'"'},{begin:"'",end:"'"}]},l={begin:/\[/,end:/\]/,contains:[s,r,i,o,a,"self"],relevance:0},c=function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}(/[A-Za-z0-9_-]+/,/"(\\"|[^"])*"/,/'[^']*'/);return{name:"TOML, also INI",aliases:["toml"],case_insensitive:!0,illegal:/\S/,contains:[s,{className:"section",begin:/\[+/,end:/\]+/},{begin:n(c,"(\\s*\\.\\s*",c,")*",n("(?=",/\s*=\s*[^#\s]/,")")),className:"attr",starts:{end:/$/,contains:[s,l,r,i,o,a]}}]}}},6411:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n=/(_[a-z_\d]+)?/,a=/([de][+-]?\d+)?/,s={className:"number",variants:[{begin:t(/\b\d+/,/\.(\d*)/,a,n)},{begin:t(/\b\d+/,a,n)},{begin:t(/\.\d+/,a,n)}],relevance:0};return{name:"IRPF90",case_insensitive:!0,keywords:{literal:".False. .True.",keyword:"kind do while private call intrinsic where elsewhere type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. goto save else use module select case access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit continue format pause cycle exit c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg synchronous nopass non_overridable pass protected volatile abstract extends import non_intrinsic value deferred generic final enumerator class associate bind enum c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure integer real character complex logical dimension allocatable|10 parameter external implicit|10 none double precision assign intent optional pointer target in out common equivalence data begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read",built_in:"alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr num_images parity popcnt poppar shifta shiftl shiftr this_image IRP_ALIGN irp_here"},illegal:/\/\*/,contains:[e.inherit(e.APOS_STRING_MODE,{className:"string",relevance:0}),e.inherit(e.QUOTE_STRING_MODE,{className:"string",relevance:0}),{className:"function",beginKeywords:"subroutine function program",illegal:"[${=\\n]",contains:[e.UNDERSCORE_TITLE_MODE,{className:"params",begin:"\\(",end:"\\)"}]},e.COMMENT("!","$",{relevance:0}),e.COMMENT("begin_doc","end_doc",{relevance:10}),s]}}},472:function(e){e.exports=function(e){var t="[A-Za-z\u0410-\u042f\u0430-\u044f\u0451\u0401_!][A-Za-z\u0410-\u042f\u0430-\u044f\u0451\u0401_0-9]*",n={className:"number",begin:e.NUMBER_RE,relevance:0},a={className:"string",variants:[{begin:'"',end:'"'},{begin:"'",end:"'"}]},s={className:"doctag",begin:"\\b(?:TODO|DONE|BEGIN|END|STUB|CHG|FIXME|NOTE|BUG|XXX)\\b",relevance:0},i={variants:[{className:"comment",begin:"//",end:"$",relevance:0,contains:[e.PHRASAL_WORDS_MODE,s]},{className:"comment",begin:"/\\*",end:"\\*/",relevance:0,contains:[e.PHRASAL_WORDS_MODE,s]}]},r={$pattern:t,keyword:"and \u0438 else \u0438\u043d\u0430\u0447\u0435 endexcept endfinally endforeach \u043a\u043e\u043d\u0435\u0446\u0432\u0441\u0435 endif \u043a\u043e\u043d\u0435\u0446\u0435\u0441\u043b\u0438 endwhile \u043a\u043e\u043d\u0435\u0446\u043f\u043e\u043a\u0430 except exitfor finally foreach \u0432\u0441\u0435 if \u0435\u0441\u043b\u0438 in \u0432 not \u043d\u0435 or \u0438\u043b\u0438 try while \u043f\u043e\u043a\u0430 ",built_in:"SYSRES_CONST_ACCES_RIGHT_TYPE_EDIT SYSRES_CONST_ACCES_RIGHT_TYPE_FULL SYSRES_CONST_ACCES_RIGHT_TYPE_VIEW SYSRES_CONST_ACCESS_MODE_REQUISITE_CODE SYSRES_CONST_ACCESS_NO_ACCESS_VIEW SYSRES_CONST_ACCESS_NO_ACCESS_VIEW_CODE SYSRES_CONST_ACCESS_RIGHTS_ADD_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_ADD_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_CHANGE_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_CHANGE_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_DELETE_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_DELETE_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_EXECUTE_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_EXECUTE_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_NO_ACCESS_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_NO_ACCESS_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_RATIFY_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_RATIFY_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_VIEW SYSRES_CONST_ACCESS_RIGHTS_VIEW_CODE SYSRES_CONST_ACCESS_RIGHTS_VIEW_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_VIEW_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_TYPE_CHANGE SYSRES_CONST_ACCESS_TYPE_CHANGE_CODE SYSRES_CONST_ACCESS_TYPE_EXISTS SYSRES_CONST_ACCESS_TYPE_EXISTS_CODE SYSRES_CONST_ACCESS_TYPE_FULL SYSRES_CONST_ACCESS_TYPE_FULL_CODE SYSRES_CONST_ACCESS_TYPE_VIEW SYSRES_CONST_ACCESS_TYPE_VIEW_CODE SYSRES_CONST_ACTION_TYPE_ABORT SYSRES_CONST_ACTION_TYPE_ACCEPT SYSRES_CONST_ACTION_TYPE_ACCESS_RIGHTS SYSRES_CONST_ACTION_TYPE_ADD_ATTACHMENT SYSRES_CONST_ACTION_TYPE_CHANGE_CARD SYSRES_CONST_ACTION_TYPE_CHANGE_KIND SYSRES_CONST_ACTION_TYPE_CHANGE_STORAGE SYSRES_CONST_ACTION_TYPE_CONTINUE SYSRES_CONST_ACTION_TYPE_COPY SYSRES_CONST_ACTION_TYPE_CREATE SYSRES_CONST_ACTION_TYPE_CREATE_VERSION SYSRES_CONST_ACTION_TYPE_DELETE SYSRES_CONST_ACTION_TYPE_DELETE_ATTACHMENT SYSRES_CONST_ACTION_TYPE_DELETE_VERSION SYSRES_CONST_ACTION_TYPE_DISABLE_DELEGATE_ACCESS_RIGHTS SYSRES_CONST_ACTION_TYPE_ENABLE_DELEGATE_ACCESS_RIGHTS SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_CERTIFICATE SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_CERTIFICATE_AND_PASSWORD SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_PASSWORD SYSRES_CONST_ACTION_TYPE_EXPORT_WITH_LOCK SYSRES_CONST_ACTION_TYPE_EXPORT_WITHOUT_LOCK SYSRES_CONST_ACTION_TYPE_IMPORT_WITH_UNLOCK SYSRES_CONST_ACTION_TYPE_IMPORT_WITHOUT_UNLOCK SYSRES_CONST_ACTION_TYPE_LIFE_CYCLE_STAGE SYSRES_CONST_ACTION_TYPE_LOCK SYSRES_CONST_ACTION_TYPE_LOCK_FOR_SERVER SYSRES_CONST_ACTION_TYPE_LOCK_MODIFY SYSRES_CONST_ACTION_TYPE_MARK_AS_READED SYSRES_CONST_ACTION_TYPE_MARK_AS_UNREADED SYSRES_CONST_ACTION_TYPE_MODIFY SYSRES_CONST_ACTION_TYPE_MODIFY_CARD SYSRES_CONST_ACTION_TYPE_MOVE_TO_ARCHIVE SYSRES_CONST_ACTION_TYPE_OFF_ENCRYPTION SYSRES_CONST_ACTION_TYPE_PASSWORD_CHANGE SYSRES_CONST_ACTION_TYPE_PERFORM SYSRES_CONST_ACTION_TYPE_RECOVER_FROM_LOCAL_COPY SYSRES_CONST_ACTION_TYPE_RESTART SYSRES_CONST_ACTION_TYPE_RESTORE_FROM_ARCHIVE SYSRES_CONST_ACTION_TYPE_REVISION SYSRES_CONST_ACTION_TYPE_SEND_BY_MAIL SYSRES_CONST_ACTION_TYPE_SIGN SYSRES_CONST_ACTION_TYPE_START SYSRES_CONST_ACTION_TYPE_UNLOCK SYSRES_CONST_ACTION_TYPE_UNLOCK_FROM_SERVER SYSRES_CONST_ACTION_TYPE_VERSION_STATE SYSRES_CONST_ACTION_TYPE_VERSION_VISIBILITY SYSRES_CONST_ACTION_TYPE_VIEW SYSRES_CONST_ACTION_TYPE_VIEW_SHADOW_COPY SYSRES_CONST_ACTION_TYPE_WORKFLOW_DESCRIPTION_MODIFY SYSRES_CONST_ACTION_TYPE_WRITE_HISTORY SYSRES_CONST_ACTIVE_VERSION_STATE_PICK_VALUE SYSRES_CONST_ADD_REFERENCE_MODE_NAME SYSRES_CONST_ADDITION_REQUISITE_CODE SYSRES_CONST_ADDITIONAL_PARAMS_REQUISITE_CODE SYSRES_CONST_ADITIONAL_JOB_END_DATE_REQUISITE_NAME SYSRES_CONST_ADITIONAL_JOB_READ_REQUISITE_NAME SYSRES_CONST_ADITIONAL_JOB_START_DATE_REQUISITE_NAME SYSRES_CONST_ADITIONAL_JOB_STATE_REQUISITE_NAME SYSRES_CONST_ADMINISTRATION_HISTORY_ADDING_USER_TO_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_ADDING_USER_TO_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_COMP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_COMP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_USER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_USER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_CREATION SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_CREATION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_DELETION SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_DELETION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_COMP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_COMP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_FROM_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_FROM_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_RESTRICTION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_RESTRICTION_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_PRIVILEGE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_PRIVILEGE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_RIGHTS_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_RIGHTS_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_IS_MAIN_SERVER_CHANGED_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_IS_MAIN_SERVER_CHANGED_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_IS_PUBLIC_CHANGED_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_IS_PUBLIC_CHANGED_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_RESTRICTION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_RESTRICTION_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_PRIVILEGE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_PRIVILEGE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_RIGHTS_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_RIGHTS_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_CREATION SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_CREATION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_DELETION SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_DELETION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_CATEGORY_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_CATEGORY_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_COMP_TITLE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_COMP_TITLE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_FULL_NAME_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_FULL_NAME_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_PARENT_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_PARENT_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_AUTH_TYPE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_AUTH_TYPE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_LOGIN_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_LOGIN_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_STATUS_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_STATUS_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_USER_PASSWORD_CHANGE SYSRES_CONST_ADMINISTRATION_HISTORY_USER_PASSWORD_CHANGE_ACTION SYSRES_CONST_ALL_ACCEPT_CONDITION_RUS SYSRES_CONST_ALL_USERS_GROUP SYSRES_CONST_ALL_USERS_GROUP_NAME SYSRES_CONST_ALL_USERS_SERVER_GROUP_NAME SYSRES_CONST_ALLOWED_ACCESS_TYPE_CODE SYSRES_CONST_ALLOWED_ACCESS_TYPE_NAME SYSRES_CONST_APP_VIEWER_TYPE_REQUISITE_CODE SYSRES_CONST_APPROVING_SIGNATURE_NAME SYSRES_CONST_APPROVING_SIGNATURE_REQUISITE_CODE SYSRES_CONST_ASSISTANT_SUBSTITUE_TYPE SYSRES_CONST_ASSISTANT_SUBSTITUE_TYPE_CODE SYSRES_CONST_ATTACH_TYPE_COMPONENT_TOKEN SYSRES_CONST_ATTACH_TYPE_DOC SYSRES_CONST_ATTACH_TYPE_EDOC SYSRES_CONST_ATTACH_TYPE_FOLDER SYSRES_CONST_ATTACH_TYPE_JOB SYSRES_CONST_ATTACH_TYPE_REFERENCE SYSRES_CONST_ATTACH_TYPE_TASK SYSRES_CONST_AUTH_ENCODED_PASSWORD SYSRES_CONST_AUTH_ENCODED_PASSWORD_CODE SYSRES_CONST_AUTH_NOVELL SYSRES_CONST_AUTH_PASSWORD SYSRES_CONST_AUTH_PASSWORD_CODE SYSRES_CONST_AUTH_WINDOWS SYSRES_CONST_AUTHENTICATING_SIGNATURE_NAME SYSRES_CONST_AUTHENTICATING_SIGNATURE_REQUISITE_CODE SYSRES_CONST_AUTO_ENUM_METHOD_FLAG SYSRES_CONST_AUTO_NUMERATION_CODE SYSRES_CONST_AUTO_STRONG_ENUM_METHOD_FLAG SYSRES_CONST_AUTOTEXT_NAME_REQUISITE_CODE SYSRES_CONST_AUTOTEXT_TEXT_REQUISITE_CODE SYSRES_CONST_AUTOTEXT_USAGE_ALL SYSRES_CONST_AUTOTEXT_USAGE_ALL_CODE SYSRES_CONST_AUTOTEXT_USAGE_SIGN SYSRES_CONST_AUTOTEXT_USAGE_SIGN_CODE SYSRES_CONST_AUTOTEXT_USAGE_WORK SYSRES_CONST_AUTOTEXT_USAGE_WORK_CODE SYSRES_CONST_AUTOTEXT_USE_ANYWHERE_CODE SYSRES_CONST_AUTOTEXT_USE_ON_SIGNING_CODE SYSRES_CONST_AUTOTEXT_USE_ON_WORK_CODE SYSRES_CONST_BEGIN_DATE_REQUISITE_CODE SYSRES_CONST_BLACK_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_BLUE_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_BTN_PART SYSRES_CONST_CALCULATED_ROLE_TYPE_CODE SYSRES_CONST_CALL_TYPE_VARIABLE_BUTTON_VALUE SYSRES_CONST_CALL_TYPE_VARIABLE_PROGRAM_VALUE SYSRES_CONST_CANCEL_MESSAGE_FUNCTION_RESULT SYSRES_CONST_CARD_PART SYSRES_CONST_CARD_REFERENCE_MODE_NAME SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_ENCRYPT_VALUE SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_SIGN_AND_ENCRYPT_VALUE SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_SIGN_VALUE SYSRES_CONST_CHECK_PARAM_VALUE_DATE_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_FLOAT_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_INTEGER_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_PICK_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_REEFRENCE_PARAM_TYPE SYSRES_CONST_CLOSED_RECORD_FLAG_VALUE_FEMININE SYSRES_CONST_CLOSED_RECORD_FLAG_VALUE_MASCULINE SYSRES_CONST_CODE_COMPONENT_TYPE_ADMIN SYSRES_CONST_CODE_COMPONENT_TYPE_DEVELOPER SYSRES_CONST_CODE_COMPONENT_TYPE_DOCS SYSRES_CONST_CODE_COMPONENT_TYPE_EDOC_CARDS SYSRES_CONST_CODE_COMPONENT_TYPE_EXTERNAL_EXECUTABLE SYSRES_CONST_CODE_COMPONENT_TYPE_OTHER SYSRES_CONST_CODE_COMPONENT_TYPE_REFERENCE SYSRES_CONST_CODE_COMPONENT_TYPE_REPORT SYSRES_CONST_CODE_COMPONENT_TYPE_SCRIPT SYSRES_CONST_CODE_COMPONENT_TYPE_URL SYSRES_CONST_CODE_REQUISITE_ACCESS SYSRES_CONST_CODE_REQUISITE_CODE SYSRES_CONST_CODE_REQUISITE_COMPONENT SYSRES_CONST_CODE_REQUISITE_DESCRIPTION SYSRES_CONST_CODE_REQUISITE_EXCLUDE_COMPONENT SYSRES_CONST_CODE_REQUISITE_RECORD SYSRES_CONST_COMMENT_REQ_CODE SYSRES_CONST_COMMON_SETTINGS_REQUISITE_CODE SYSRES_CONST_COMP_CODE_GRD SYSRES_CONST_COMPONENT_GROUP_TYPE_REQUISITE_CODE SYSRES_CONST_COMPONENT_TYPE_ADMIN_COMPONENTS SYSRES_CONST_COMPONENT_TYPE_DEVELOPER_COMPONENTS SYSRES_CONST_COMPONENT_TYPE_DOCS SYSRES_CONST_COMPONENT_TYPE_EDOC_CARDS SYSRES_CONST_COMPONENT_TYPE_EDOCS SYSRES_CONST_COMPONENT_TYPE_EXTERNAL_EXECUTABLE SYSRES_CONST_COMPONENT_TYPE_OTHER SYSRES_CONST_COMPONENT_TYPE_REFERENCE_TYPES SYSRES_CONST_COMPONENT_TYPE_REFERENCES SYSRES_CONST_COMPONENT_TYPE_REPORTS SYSRES_CONST_COMPONENT_TYPE_SCRIPTS SYSRES_CONST_COMPONENT_TYPE_URL SYSRES_CONST_COMPONENTS_REMOTE_SERVERS_VIEW_CODE SYSRES_CONST_CONDITION_BLOCK_DESCRIPTION SYSRES_CONST_CONST_FIRM_STATUS_COMMON SYSRES_CONST_CONST_FIRM_STATUS_INDIVIDUAL SYSRES_CONST_CONST_NEGATIVE_VALUE SYSRES_CONST_CONST_POSITIVE_VALUE SYSRES_CONST_CONST_SERVER_STATUS_DONT_REPLICATE SYSRES_CONST_CONST_SERVER_STATUS_REPLICATE SYSRES_CONST_CONTENTS_REQUISITE_CODE SYSRES_CONST_DATA_TYPE_BOOLEAN SYSRES_CONST_DATA_TYPE_DATE SYSRES_CONST_DATA_TYPE_FLOAT SYSRES_CONST_DATA_TYPE_INTEGER SYSRES_CONST_DATA_TYPE_PICK SYSRES_CONST_DATA_TYPE_REFERENCE SYSRES_CONST_DATA_TYPE_STRING SYSRES_CONST_DATA_TYPE_TEXT SYSRES_CONST_DATA_TYPE_VARIANT SYSRES_CONST_DATE_CLOSE_REQ_CODE SYSRES_CONST_DATE_FORMAT_DATE_ONLY_CHAR SYSRES_CONST_DATE_OPEN_REQ_CODE SYSRES_CONST_DATE_REQUISITE SYSRES_CONST_DATE_REQUISITE_CODE SYSRES_CONST_DATE_REQUISITE_NAME SYSRES_CONST_DATE_REQUISITE_TYPE SYSRES_CONST_DATE_TYPE_CHAR SYSRES_CONST_DATETIME_FORMAT_VALUE SYSRES_CONST_DEA_ACCESS_RIGHTS_ACTION_CODE SYSRES_CONST_DESCRIPTION_LOCALIZE_ID_REQUISITE_CODE SYSRES_CONST_DESCRIPTION_REQUISITE_CODE SYSRES_CONST_DET1_PART SYSRES_CONST_DET2_PART SYSRES_CONST_DET3_PART SYSRES_CONST_DET4_PART SYSRES_CONST_DET5_PART SYSRES_CONST_DET6_PART SYSRES_CONST_DETAIL_DATASET_KEY_REQUISITE_CODE SYSRES_CONST_DETAIL_PICK_REQUISITE_CODE SYSRES_CONST_DETAIL_REQ_CODE SYSRES_CONST_DO_NOT_USE_ACCESS_TYPE_CODE SYSRES_CONST_DO_NOT_USE_ACCESS_TYPE_NAME SYSRES_CONST_DO_NOT_USE_ON_VIEW_ACCESS_TYPE_CODE SYSRES_CONST_DO_NOT_USE_ON_VIEW_ACCESS_TYPE_NAME SYSRES_CONST_DOCUMENT_STORAGES_CODE SYSRES_CONST_DOCUMENT_TEMPLATES_TYPE_NAME SYSRES_CONST_DOUBLE_REQUISITE_CODE SYSRES_CONST_EDITOR_CLOSE_FILE_OBSERV_TYPE_CODE SYSRES_CONST_EDITOR_CLOSE_PROCESS_OBSERV_TYPE_CODE SYSRES_CONST_EDITOR_TYPE_REQUISITE_CODE SYSRES_CONST_EDITORS_APPLICATION_NAME_REQUISITE_CODE SYSRES_CONST_EDITORS_CREATE_SEVERAL_PROCESSES_REQUISITE_CODE SYSRES_CONST_EDITORS_EXTENSION_REQUISITE_CODE SYSRES_CONST_EDITORS_OBSERVER_BY_PROCESS_TYPE SYSRES_CONST_EDITORS_REFERENCE_CODE SYSRES_CONST_EDITORS_REPLACE_SPEC_CHARS_REQUISITE_CODE SYSRES_CONST_EDITORS_USE_PLUGINS_REQUISITE_CODE SYSRES_CONST_EDITORS_VIEW_DOCUMENT_OPENED_TO_EDIT_CODE SYSRES_CONST_EDOC_CARD_TYPE_REQUISITE_CODE SYSRES_CONST_EDOC_CARD_TYPES_LINK_REQUISITE_CODE SYSRES_CONST_EDOC_CERTIFICATE_AND_PASSWORD_ENCODE_CODE SYSRES_CONST_EDOC_CERTIFICATE_ENCODE_CODE SYSRES_CONST_EDOC_DATE_REQUISITE_CODE SYSRES_CONST_EDOC_KIND_REFERENCE_CODE SYSRES_CONST_EDOC_KINDS_BY_TEMPLATE_ACTION_CODE SYSRES_CONST_EDOC_MANAGE_ACCESS_CODE SYSRES_CONST_EDOC_NONE_ENCODE_CODE SYSRES_CONST_EDOC_NUMBER_REQUISITE_CODE SYSRES_CONST_EDOC_PASSWORD_ENCODE_CODE SYSRES_CONST_EDOC_READONLY_ACCESS_CODE SYSRES_CONST_EDOC_SHELL_LIFE_TYPE_VIEW_VALUE SYSRES_CONST_EDOC_SIZE_RESTRICTION_PRIORITY_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_CHECK_ACCESS_RIGHTS_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_COMPUTER_NAME_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_DATABASE_NAME_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_EDIT_IN_STORAGE_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_LOCAL_PATH_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_SHARED_SOURCE_NAME_REQUISITE_CODE SYSRES_CONST_EDOC_TEMPLATE_REQUISITE_CODE SYSRES_CONST_EDOC_TYPES_REFERENCE_CODE SYSRES_CONST_EDOC_VERSION_ACTIVE_STAGE_CODE SYSRES_CONST_EDOC_VERSION_DESIGN_STAGE_CODE SYSRES_CONST_EDOC_VERSION_OBSOLETE_STAGE_CODE SYSRES_CONST_EDOC_WRITE_ACCES_CODE SYSRES_CONST_EDOCUMENT_CARD_REQUISITES_REFERENCE_CODE_SELECTED_REQUISITE SYSRES_CONST_ENCODE_CERTIFICATE_TYPE_CODE SYSRES_CONST_END_DATE_REQUISITE_CODE SYSRES_CONST_ENUMERATION_TYPE_REQUISITE_CODE SYSRES_CONST_EXECUTE_ACCESS_RIGHTS_TYPE_CODE SYSRES_CONST_EXECUTIVE_FILE_STORAGE_TYPE SYSRES_CONST_EXIST_CONST SYSRES_CONST_EXIST_VALUE SYSRES_CONST_EXPORT_LOCK_TYPE_ASK SYSRES_CONST_EXPORT_LOCK_TYPE_WITH_LOCK SYSRES_CONST_EXPORT_LOCK_TYPE_WITHOUT_LOCK SYSRES_CONST_EXPORT_VERSION_TYPE_ASK SYSRES_CONST_EXPORT_VERSION_TYPE_LAST SYSRES_CONST_EXPORT_VERSION_TYPE_LAST_ACTIVE SYSRES_CONST_EXTENSION_REQUISITE_CODE SYSRES_CONST_FILTER_NAME_REQUISITE_CODE SYSRES_CONST_FILTER_REQUISITE_CODE SYSRES_CONST_FILTER_TYPE_COMMON_CODE SYSRES_CONST_FILTER_TYPE_COMMON_NAME SYSRES_CONST_FILTER_TYPE_USER_CODE SYSRES_CONST_FILTER_TYPE_USER_NAME SYSRES_CONST_FILTER_VALUE_REQUISITE_NAME SYSRES_CONST_FLOAT_NUMBER_FORMAT_CHAR SYSRES_CONST_FLOAT_REQUISITE_TYPE SYSRES_CONST_FOLDER_AUTHOR_VALUE SYSRES_CONST_FOLDER_KIND_ANY_OBJECTS SYSRES_CONST_FOLDER_KIND_COMPONENTS SYSRES_CONST_FOLDER_KIND_EDOCS SYSRES_CONST_FOLDER_KIND_JOBS SYSRES_CONST_FOLDER_KIND_TASKS SYSRES_CONST_FOLDER_TYPE_COMMON SYSRES_CONST_FOLDER_TYPE_COMPONENT SYSRES_CONST_FOLDER_TYPE_FAVORITES SYSRES_CONST_FOLDER_TYPE_INBOX SYSRES_CONST_FOLDER_TYPE_OUTBOX SYSRES_CONST_FOLDER_TYPE_QUICK_LAUNCH SYSRES_CONST_FOLDER_TYPE_SEARCH SYSRES_CONST_FOLDER_TYPE_SHORTCUTS SYSRES_CONST_FOLDER_TYPE_USER SYSRES_CONST_FROM_DICTIONARY_ENUM_METHOD_FLAG SYSRES_CONST_FULL_SUBSTITUTE_TYPE SYSRES_CONST_FULL_SUBSTITUTE_TYPE_CODE SYSRES_CONST_FUNCTION_CANCEL_RESULT SYSRES_CONST_FUNCTION_CATEGORY_SYSTEM SYSRES_CONST_FUNCTION_CATEGORY_USER SYSRES_CONST_FUNCTION_FAILURE_RESULT SYSRES_CONST_FUNCTION_SAVE_RESULT SYSRES_CONST_GENERATED_REQUISITE SYSRES_CONST_GREEN_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_GROUP_ACCOUNT_TYPE_VALUE_CODE SYSRES_CONST_GROUP_CATEGORY_NORMAL_CODE SYSRES_CONST_GROUP_CATEGORY_NORMAL_NAME SYSRES_CONST_GROUP_CATEGORY_SERVICE_CODE SYSRES_CONST_GROUP_CATEGORY_SERVICE_NAME SYSRES_CONST_GROUP_COMMON_CATEGORY_FIELD_VALUE SYSRES_CONST_GROUP_FULL_NAME_REQUISITE_CODE SYSRES_CONST_GROUP_NAME_REQUISITE_CODE SYSRES_CONST_GROUP_RIGHTS_T_REQUISITE_CODE SYSRES_CONST_GROUP_SERVER_CODES_REQUISITE_CODE SYSRES_CONST_GROUP_SERVER_NAME_REQUISITE_CODE SYSRES_CONST_GROUP_SERVICE_CATEGORY_FIELD_VALUE SYSRES_CONST_GROUP_USER_REQUISITE_CODE SYSRES_CONST_GROUPS_REFERENCE_CODE SYSRES_CONST_GROUPS_REQUISITE_CODE SYSRES_CONST_HIDDEN_MODE_NAME SYSRES_CONST_HIGH_LVL_REQUISITE_CODE SYSRES_CONST_HISTORY_ACTION_CREATE_CODE SYSRES_CONST_HISTORY_ACTION_DELETE_CODE SYSRES_CONST_HISTORY_ACTION_EDIT_CODE SYSRES_CONST_HOUR_CHAR SYSRES_CONST_ID_REQUISITE_CODE SYSRES_CONST_IDSPS_REQUISITE_CODE SYSRES_CONST_IMAGE_MODE_COLOR SYSRES_CONST_IMAGE_MODE_GREYSCALE SYSRES_CONST_IMAGE_MODE_MONOCHROME SYSRES_CONST_IMPORTANCE_HIGH SYSRES_CONST_IMPORTANCE_LOW SYSRES_CONST_IMPORTANCE_NORMAL SYSRES_CONST_IN_DESIGN_VERSION_STATE_PICK_VALUE SYSRES_CONST_INCOMING_WORK_RULE_TYPE_CODE SYSRES_CONST_INT_REQUISITE SYSRES_CONST_INT_REQUISITE_TYPE SYSRES_CONST_INTEGER_NUMBER_FORMAT_CHAR SYSRES_CONST_INTEGER_TYPE_CHAR SYSRES_CONST_IS_GENERATED_REQUISITE_NEGATIVE_VALUE SYSRES_CONST_IS_PUBLIC_ROLE_REQUISITE_CODE SYSRES_CONST_IS_REMOTE_USER_NEGATIVE_VALUE SYSRES_CONST_IS_REMOTE_USER_POSITIVE_VALUE SYSRES_CONST_IS_STORED_REQUISITE_NEGATIVE_VALUE SYSRES_CONST_IS_STORED_REQUISITE_STORED_VALUE SYSRES_CONST_ITALIC_LIFE_CYCLE_STAGE_DRAW_STYLE SYSRES_CONST_JOB_BLOCK_DESCRIPTION SYSRES_CONST_JOB_KIND_CONTROL_JOB SYSRES_CONST_JOB_KIND_JOB SYSRES_CONST_JOB_KIND_NOTICE SYSRES_CONST_JOB_STATE_ABORTED SYSRES_CONST_JOB_STATE_COMPLETE SYSRES_CONST_JOB_STATE_WORKING SYSRES_CONST_KIND_REQUISITE_CODE SYSRES_CONST_KIND_REQUISITE_NAME SYSRES_CONST_KINDS_CREATE_SHADOW_COPIES_REQUISITE_CODE SYSRES_CONST_KINDS_DEFAULT_EDOC_LIFE_STAGE_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_ALL_TEPLATES_ALLOWED_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_ALLOW_LIFE_CYCLE_STAGE_CHANGING_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_ALLOW_MULTIPLE_ACTIVE_VERSIONS_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_SHARE_ACCES_RIGHTS_BY_DEFAULT_CODE SYSRES_CONST_KINDS_EDOC_TEMPLATE_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_TYPE_REQUISITE_CODE SYSRES_CONST_KINDS_SIGNERS_REQUISITES_CODE SYSRES_CONST_KOD_INPUT_TYPE SYSRES_CONST_LAST_UPDATE_DATE_REQUISITE_CODE SYSRES_CONST_LIFE_CYCLE_START_STAGE_REQUISITE_CODE SYSRES_CONST_LILAC_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_LINK_OBJECT_KIND_COMPONENT SYSRES_CONST_LINK_OBJECT_KIND_DOCUMENT SYSRES_CONST_LINK_OBJECT_KIND_EDOC SYSRES_CONST_LINK_OBJECT_KIND_FOLDER SYSRES_CONST_LINK_OBJECT_KIND_JOB SYSRES_CONST_LINK_OBJECT_KIND_REFERENCE SYSRES_CONST_LINK_OBJECT_KIND_TASK SYSRES_CONST_LINK_REF_TYPE_REQUISITE_CODE SYSRES_CONST_LIST_REFERENCE_MODE_NAME SYSRES_CONST_LOCALIZATION_DICTIONARY_MAIN_VIEW_CODE SYSRES_CONST_MAIN_VIEW_CODE SYSRES_CONST_MANUAL_ENUM_METHOD_FLAG SYSRES_CONST_MASTER_COMP_TYPE_REQUISITE_CODE SYSRES_CONST_MASTER_TABLE_REC_ID_REQUISITE_CODE SYSRES_CONST_MAXIMIZED_MODE_NAME SYSRES_CONST_ME_VALUE SYSRES_CONST_MESSAGE_ATTENTION_CAPTION SYSRES_CONST_MESSAGE_CONFIRMATION_CAPTION SYSRES_CONST_MESSAGE_ERROR_CAPTION SYSRES_CONST_MESSAGE_INFORMATION_CAPTION SYSRES_CONST_MINIMIZED_MODE_NAME SYSRES_CONST_MINUTE_CHAR SYSRES_CONST_MODULE_REQUISITE_CODE SYSRES_CONST_MONITORING_BLOCK_DESCRIPTION SYSRES_CONST_MONTH_FORMAT_VALUE SYSRES_CONST_NAME_LOCALIZE_ID_REQUISITE_CODE SYSRES_CONST_NAME_REQUISITE_CODE SYSRES_CONST_NAME_SINGULAR_REQUISITE_CODE SYSRES_CONST_NAMEAN_INPUT_TYPE SYSRES_CONST_NEGATIVE_PICK_VALUE SYSRES_CONST_NEGATIVE_VALUE SYSRES_CONST_NO SYSRES_CONST_NO_PICK_VALUE SYSRES_CONST_NO_SIGNATURE_REQUISITE_CODE SYSRES_CONST_NO_VALUE SYSRES_CONST_NONE_ACCESS_RIGHTS_TYPE_CODE SYSRES_CONST_NONOPERATING_RECORD_FLAG_VALUE SYSRES_CONST_NONOPERATING_RECORD_FLAG_VALUE_MASCULINE SYSRES_CONST_NORMAL_ACCESS_RIGHTS_TYPE_CODE SYSRES_CONST_NORMAL_LIFE_CYCLE_STAGE_DRAW_STYLE SYSRES_CONST_NORMAL_MODE_NAME SYSRES_CONST_NOT_ALLOWED_ACCESS_TYPE_CODE SYSRES_CONST_NOT_ALLOWED_ACCESS_TYPE_NAME SYSRES_CONST_NOTE_REQUISITE_CODE SYSRES_CONST_NOTICE_BLOCK_DESCRIPTION SYSRES_CONST_NUM_REQUISITE SYSRES_CONST_NUM_STR_REQUISITE_CODE SYSRES_CONST_NUMERATION_AUTO_NOT_STRONG SYSRES_CONST_NUMERATION_AUTO_STRONG SYSRES_CONST_NUMERATION_FROM_DICTONARY SYSRES_CONST_NUMERATION_MANUAL SYSRES_CONST_NUMERIC_TYPE_CHAR SYSRES_CONST_NUMREQ_REQUISITE_CODE SYSRES_CONST_OBSOLETE_VERSION_STATE_PICK_VALUE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_CODE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_FEMININE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_MASCULINE SYSRES_CONST_OPTIONAL_FORM_COMP_REQCODE_PREFIX SYSRES_CONST_ORANGE_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_ORIGINALREF_REQUISITE_CODE SYSRES_CONST_OURFIRM_REF_CODE SYSRES_CONST_OURFIRM_REQUISITE_CODE SYSRES_CONST_OURFIRM_VAR SYSRES_CONST_OUTGOING_WORK_RULE_TYPE_CODE SYSRES_CONST_PICK_NEGATIVE_RESULT SYSRES_CONST_PICK_POSITIVE_RESULT SYSRES_CONST_PICK_REQUISITE SYSRES_CONST_PICK_REQUISITE_TYPE SYSRES_CONST_PICK_TYPE_CHAR SYSRES_CONST_PLAN_STATUS_REQUISITE_CODE SYSRES_CONST_PLATFORM_VERSION_COMMENT SYSRES_CONST_PLUGINS_SETTINGS_DESCRIPTION_REQUISITE_CODE SYSRES_CONST_POSITIVE_PICK_VALUE SYSRES_CONST_POWER_TO_CREATE_ACTION_CODE SYSRES_CONST_POWER_TO_SIGN_ACTION_CODE SYSRES_CONST_PRIORITY_REQUISITE_CODE SYSRES_CONST_QUALIFIED_TASK_TYPE SYSRES_CONST_QUALIFIED_TASK_TYPE_CODE SYSRES_CONST_RECSTAT_REQUISITE_CODE SYSRES_CONST_RED_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_REF_ID_T_REF_TYPE_REQUISITE_CODE SYSRES_CONST_REF_REQUISITE SYSRES_CONST_REF_REQUISITE_TYPE SYSRES_CONST_REF_REQUISITES_REFERENCE_CODE_SELECTED_REQUISITE SYSRES_CONST_REFERENCE_RECORD_HISTORY_CREATE_ACTION_CODE SYSRES_CONST_REFERENCE_RECORD_HISTORY_DELETE_ACTION_CODE SYSRES_CONST_REFERENCE_RECORD_HISTORY_MODIFY_ACTION_CODE SYSRES_CONST_REFERENCE_TYPE_CHAR SYSRES_CONST_REFERENCE_TYPE_REQUISITE_NAME SYSRES_CONST_REFERENCES_ADD_PARAMS_REQUISITE_CODE SYSRES_CONST_REFERENCES_DISPLAY_REQUISITE_REQUISITE_CODE SYSRES_CONST_REMOTE_SERVER_STATUS_WORKING SYSRES_CONST_REMOTE_SERVER_TYPE_MAIN SYSRES_CONST_REMOTE_SERVER_TYPE_SECONDARY SYSRES_CONST_REMOTE_USER_FLAG_VALUE_CODE SYSRES_CONST_REPORT_APP_EDITOR_INTERNAL SYSRES_CONST_REPORT_BASE_REPORT_ID_REQUISITE_CODE SYSRES_CONST_REPORT_BASE_REPORT_REQUISITE_CODE SYSRES_CONST_REPORT_SCRIPT_REQUISITE_CODE SYSRES_CONST_REPORT_TEMPLATE_REQUISITE_CODE SYSRES_CONST_REPORT_VIEWER_CODE_REQUISITE_CODE SYSRES_CONST_REQ_ALLOW_COMPONENT_DEFAULT_VALUE SYSRES_CONST_REQ_ALLOW_RECORD_DEFAULT_VALUE SYSRES_CONST_REQ_ALLOW_SERVER_COMPONENT_DEFAULT_VALUE SYSRES_CONST_REQ_MODE_AVAILABLE_CODE SYSRES_CONST_REQ_MODE_EDIT_CODE SYSRES_CONST_REQ_MODE_HIDDEN_CODE SYSRES_CONST_REQ_MODE_NOT_AVAILABLE_CODE SYSRES_CONST_REQ_MODE_VIEW_CODE SYSRES_CONST_REQ_NUMBER_REQUISITE_CODE SYSRES_CONST_REQ_SECTION_VALUE SYSRES_CONST_REQ_TYPE_VALUE SYSRES_CONST_REQUISITE_FORMAT_BY_UNIT SYSRES_CONST_REQUISITE_FORMAT_DATE_FULL SYSRES_CONST_REQUISITE_FORMAT_DATE_TIME SYSRES_CONST_REQUISITE_FORMAT_LEFT SYSRES_CONST_REQUISITE_FORMAT_RIGHT SYSRES_CONST_REQUISITE_FORMAT_WITHOUT_UNIT SYSRES_CONST_REQUISITE_NUMBER_REQUISITE_CODE SYSRES_CONST_REQUISITE_SECTION_ACTIONS SYSRES_CONST_REQUISITE_SECTION_BUTTON SYSRES_CONST_REQUISITE_SECTION_BUTTONS SYSRES_CONST_REQUISITE_SECTION_CARD SYSRES_CONST_REQUISITE_SECTION_TABLE SYSRES_CONST_REQUISITE_SECTION_TABLE10 SYSRES_CONST_REQUISITE_SECTION_TABLE11 SYSRES_CONST_REQUISITE_SECTION_TABLE12 SYSRES_CONST_REQUISITE_SECTION_TABLE13 SYSRES_CONST_REQUISITE_SECTION_TABLE14 SYSRES_CONST_REQUISITE_SECTION_TABLE15 SYSRES_CONST_REQUISITE_SECTION_TABLE16 SYSRES_CONST_REQUISITE_SECTION_TABLE17 SYSRES_CONST_REQUISITE_SECTION_TABLE18 SYSRES_CONST_REQUISITE_SECTION_TABLE19 SYSRES_CONST_REQUISITE_SECTION_TABLE2 SYSRES_CONST_REQUISITE_SECTION_TABLE20 SYSRES_CONST_REQUISITE_SECTION_TABLE21 SYSRES_CONST_REQUISITE_SECTION_TABLE22 SYSRES_CONST_REQUISITE_SECTION_TABLE23 SYSRES_CONST_REQUISITE_SECTION_TABLE24 SYSRES_CONST_REQUISITE_SECTION_TABLE3 SYSRES_CONST_REQUISITE_SECTION_TABLE4 SYSRES_CONST_REQUISITE_SECTION_TABLE5 SYSRES_CONST_REQUISITE_SECTION_TABLE6 SYSRES_CONST_REQUISITE_SECTION_TABLE7 SYSRES_CONST_REQUISITE_SECTION_TABLE8 SYSRES_CONST_REQUISITE_SECTION_TABLE9 SYSRES_CONST_REQUISITES_PSEUDOREFERENCE_REQUISITE_NUMBER_REQUISITE_CODE SYSRES_CONST_RIGHT_ALIGNMENT_CODE SYSRES_CONST_ROLES_REFERENCE_CODE SYSRES_CONST_ROUTE_STEP_AFTER_RUS SYSRES_CONST_ROUTE_STEP_AND_CONDITION_RUS SYSRES_CONST_ROUTE_STEP_OR_CONDITION_RUS SYSRES_CONST_ROUTE_TYPE_COMPLEX SYSRES_CONST_ROUTE_TYPE_PARALLEL SYSRES_CONST_ROUTE_TYPE_SERIAL SYSRES_CONST_SBDATASETDESC_NEGATIVE_VALUE SYSRES_CONST_SBDATASETDESC_POSITIVE_VALUE SYSRES_CONST_SBVIEWSDESC_POSITIVE_VALUE SYSRES_CONST_SCRIPT_BLOCK_DESCRIPTION SYSRES_CONST_SEARCH_BY_TEXT_REQUISITE_CODE SYSRES_CONST_SEARCHES_COMPONENT_CONTENT SYSRES_CONST_SEARCHES_CRITERIA_ACTION_NAME SYSRES_CONST_SEARCHES_EDOC_CONTENT SYSRES_CONST_SEARCHES_FOLDER_CONTENT SYSRES_CONST_SEARCHES_JOB_CONTENT SYSRES_CONST_SEARCHES_REFERENCE_CODE SYSRES_CONST_SEARCHES_TASK_CONTENT SYSRES_CONST_SECOND_CHAR SYSRES_CONST_SECTION_REQUISITE_ACTIONS_VALUE SYSRES_CONST_SECTION_REQUISITE_CARD_VALUE SYSRES_CONST_SECTION_REQUISITE_CODE SYSRES_CONST_SECTION_REQUISITE_DETAIL_1_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_2_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_3_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_4_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_5_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_6_VALUE SYSRES_CONST_SELECT_REFERENCE_MODE_NAME SYSRES_CONST_SELECT_TYPE_SELECTABLE SYSRES_CONST_SELECT_TYPE_SELECTABLE_ONLY_CHILD SYSRES_CONST_SELECT_TYPE_SELECTABLE_WITH_CHILD SYSRES_CONST_SELECT_TYPE_UNSLECTABLE SYSRES_CONST_SERVER_TYPE_MAIN SYSRES_CONST_SERVICE_USER_CATEGORY_FIELD_VALUE SYSRES_CONST_SETTINGS_USER_REQUISITE_CODE SYSRES_CONST_SIGNATURE_AND_ENCODE_CERTIFICATE_TYPE_CODE SYSRES_CONST_SIGNATURE_CERTIFICATE_TYPE_CODE SYSRES_CONST_SINGULAR_TITLE_REQUISITE_CODE SYSRES_CONST_SQL_SERVER_AUTHENTIFICATION_FLAG_VALUE_CODE SYSRES_CONST_SQL_SERVER_ENCODE_AUTHENTIFICATION_FLAG_VALUE_CODE SYSRES_CONST_STANDART_ROUTE_REFERENCE_CODE SYSRES_CONST_STANDART_ROUTE_REFERENCE_COMMENT_REQUISITE_CODE SYSRES_CONST_STANDART_ROUTES_GROUPS_REFERENCE_CODE SYSRES_CONST_STATE_REQ_NAME SYSRES_CONST_STATE_REQUISITE_ACTIVE_VALUE SYSRES_CONST_STATE_REQUISITE_CLOSED_VALUE SYSRES_CONST_STATE_REQUISITE_CODE SYSRES_CONST_STATIC_ROLE_TYPE_CODE SYSRES_CONST_STATUS_PLAN_DEFAULT_VALUE SYSRES_CONST_STATUS_VALUE_AUTOCLEANING SYSRES_CONST_STATUS_VALUE_BLUE_SQUARE SYSRES_CONST_STATUS_VALUE_COMPLETE SYSRES_CONST_STATUS_VALUE_GREEN_SQUARE SYSRES_CONST_STATUS_VALUE_ORANGE_SQUARE SYSRES_CONST_STATUS_VALUE_PURPLE_SQUARE SYSRES_CONST_STATUS_VALUE_RED_SQUARE SYSRES_CONST_STATUS_VALUE_SUSPEND SYSRES_CONST_STATUS_VALUE_YELLOW_SQUARE SYSRES_CONST_STDROUTE_SHOW_TO_USERS_REQUISITE_CODE SYSRES_CONST_STORAGE_TYPE_FILE SYSRES_CONST_STORAGE_TYPE_SQL_SERVER SYSRES_CONST_STR_REQUISITE SYSRES_CONST_STRIKEOUT_LIFE_CYCLE_STAGE_DRAW_STYLE SYSRES_CONST_STRING_FORMAT_LEFT_ALIGN_CHAR SYSRES_CONST_STRING_FORMAT_RIGHT_ALIGN_CHAR SYSRES_CONST_STRING_REQUISITE_CODE SYSRES_CONST_STRING_REQUISITE_TYPE SYSRES_CONST_STRING_TYPE_CHAR SYSRES_CONST_SUBSTITUTES_PSEUDOREFERENCE_CODE SYSRES_CONST_SUBTASK_BLOCK_DESCRIPTION SYSRES_CONST_SYSTEM_SETTING_CURRENT_USER_PARAM_VALUE SYSRES_CONST_SYSTEM_SETTING_EMPTY_VALUE_PARAM_VALUE SYSRES_CONST_SYSTEM_VERSION_COMMENT SYSRES_CONST_TASK_ACCESS_TYPE_ALL SYSRES_CONST_TASK_ACCESS_TYPE_ALL_MEMBERS SYSRES_CONST_TASK_ACCESS_TYPE_MANUAL SYSRES_CONST_TASK_ENCODE_TYPE_CERTIFICATION SYSRES_CONST_TASK_ENCODE_TYPE_CERTIFICATION_AND_PASSWORD SYSRES_CONST_TASK_ENCODE_TYPE_NONE SYSRES_CONST_TASK_ENCODE_TYPE_PASSWORD SYSRES_CONST_TASK_ROUTE_ALL_CONDITION SYSRES_CONST_TASK_ROUTE_AND_CONDITION SYSRES_CONST_TASK_ROUTE_OR_CONDITION SYSRES_CONST_TASK_STATE_ABORTED SYSRES_CONST_TASK_STATE_COMPLETE SYSRES_CONST_TASK_STATE_CONTINUED SYSRES_CONST_TASK_STATE_CONTROL SYSRES_CONST_TASK_STATE_INIT SYSRES_CONST_TASK_STATE_WORKING SYSRES_CONST_TASK_TITLE SYSRES_CONST_TASK_TYPES_GROUPS_REFERENCE_CODE SYSRES_CONST_TASK_TYPES_REFERENCE_CODE SYSRES_CONST_TEMPLATES_REFERENCE_CODE SYSRES_CONST_TEST_DATE_REQUISITE_NAME SYSRES_CONST_TEST_DEV_DATABASE_NAME SYSRES_CONST_TEST_DEV_SYSTEM_CODE SYSRES_CONST_TEST_EDMS_DATABASE_NAME SYSRES_CONST_TEST_EDMS_MAIN_CODE SYSRES_CONST_TEST_EDMS_MAIN_DB_NAME SYSRES_CONST_TEST_EDMS_SECOND_CODE SYSRES_CONST_TEST_EDMS_SECOND_DB_NAME SYSRES_CONST_TEST_EDMS_SYSTEM_CODE SYSRES_CONST_TEST_NUMERIC_REQUISITE_NAME SYSRES_CONST_TEXT_REQUISITE SYSRES_CONST_TEXT_REQUISITE_CODE SYSRES_CONST_TEXT_REQUISITE_TYPE SYSRES_CONST_TEXT_TYPE_CHAR SYSRES_CONST_TYPE_CODE_REQUISITE_CODE SYSRES_CONST_TYPE_REQUISITE_CODE SYSRES_CONST_UNDEFINED_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_UNITS_SECTION_ID_REQUISITE_CODE SYSRES_CONST_UNITS_SECTION_REQUISITE_CODE SYSRES_CONST_UNOPERATING_RECORD_FLAG_VALUE_CODE SYSRES_CONST_UNSTORED_DATA_REQUISITE_CODE SYSRES_CONST_UNSTORED_DATA_REQUISITE_NAME SYSRES_CONST_USE_ACCESS_TYPE_CODE SYSRES_CONST_USE_ACCESS_TYPE_NAME SYSRES_CONST_USER_ACCOUNT_TYPE_VALUE_CODE SYSRES_CONST_USER_ADDITIONAL_INFORMATION_REQUISITE_CODE SYSRES_CONST_USER_AND_GROUP_ID_FROM_PSEUDOREFERENCE_REQUISITE_CODE SYSRES_CONST_USER_CATEGORY_NORMAL SYSRES_CONST_USER_CERTIFICATE_REQUISITE_CODE SYSRES_CONST_USER_CERTIFICATE_STATE_REQUISITE_CODE SYSRES_CONST_USER_CERTIFICATE_SUBJECT_NAME_REQUISITE_CODE SYSRES_CONST_USER_CERTIFICATE_THUMBPRINT_REQUISITE_CODE SYSRES_CONST_USER_COMMON_CATEGORY SYSRES_CONST_USER_COMMON_CATEGORY_CODE SYSRES_CONST_USER_FULL_NAME_REQUISITE_CODE SYSRES_CONST_USER_GROUP_TYPE_REQUISITE_CODE SYSRES_CONST_USER_LOGIN_REQUISITE_CODE SYSRES_CONST_USER_REMOTE_CONTROLLER_REQUISITE_CODE SYSRES_CONST_USER_REMOTE_SYSTEM_REQUISITE_CODE SYSRES_CONST_USER_RIGHTS_T_REQUISITE_CODE SYSRES_CONST_USER_SERVER_NAME_REQUISITE_CODE SYSRES_CONST_USER_SERVICE_CATEGORY SYSRES_CONST_USER_SERVICE_CATEGORY_CODE SYSRES_CONST_USER_STATUS_ADMINISTRATOR_CODE SYSRES_CONST_USER_STATUS_ADMINISTRATOR_NAME SYSRES_CONST_USER_STATUS_DEVELOPER_CODE SYSRES_CONST_USER_STATUS_DEVELOPER_NAME SYSRES_CONST_USER_STATUS_DISABLED_CODE SYSRES_CONST_USER_STATUS_DISABLED_NAME SYSRES_CONST_USER_STATUS_SYSTEM_DEVELOPER_CODE SYSRES_CONST_USER_STATUS_USER_CODE SYSRES_CONST_USER_STATUS_USER_NAME SYSRES_CONST_USER_STATUS_USER_NAME_DEPRECATED SYSRES_CONST_USER_TYPE_FIELD_VALUE_USER SYSRES_CONST_USER_TYPE_REQUISITE_CODE SYSRES_CONST_USERS_CONTROLLER_REQUISITE_CODE SYSRES_CONST_USERS_IS_MAIN_SERVER_REQUISITE_CODE SYSRES_CONST_USERS_REFERENCE_CODE SYSRES_CONST_USERS_REGISTRATION_CERTIFICATES_ACTION_NAME SYSRES_CONST_USERS_REQUISITE_CODE SYSRES_CONST_USERS_SYSTEM_REQUISITE_CODE SYSRES_CONST_USERS_USER_ACCESS_RIGHTS_TYPR_REQUISITE_CODE SYSRES_CONST_USERS_USER_AUTHENTICATION_REQUISITE_CODE SYSRES_CONST_USERS_USER_COMPONENT_REQUISITE_CODE SYSRES_CONST_USERS_USER_GROUP_REQUISITE_CODE SYSRES_CONST_USERS_VIEW_CERTIFICATES_ACTION_NAME SYSRES_CONST_VIEW_DEFAULT_CODE SYSRES_CONST_VIEW_DEFAULT_NAME SYSRES_CONST_VIEWER_REQUISITE_CODE SYSRES_CONST_WAITING_BLOCK_DESCRIPTION SYSRES_CONST_WIZARD_FORM_LABEL_TEST_STRING  SYSRES_CONST_WIZARD_QUERY_PARAM_HEIGHT_ETALON_STRING SYSRES_CONST_WIZARD_REFERENCE_COMMENT_REQUISITE_CODE SYSRES_CONST_WORK_RULES_DESCRIPTION_REQUISITE_CODE SYSRES_CONST_WORK_TIME_CALENDAR_REFERENCE_CODE SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE_CODE SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE_CODE_RUS SYSRES_CONST_WORK_WORKFLOW_SOFT_ROUTE_TYPE_VALUE_CODE_RUS SYSRES_CONST_WORKFLOW_ROUTE_TYPR_HARD SYSRES_CONST_WORKFLOW_ROUTE_TYPR_SOFT SYSRES_CONST_XML_ENCODING SYSRES_CONST_XREC_STAT_REQUISITE_CODE SYSRES_CONST_XRECID_FIELD_NAME SYSRES_CONST_YES SYSRES_CONST_YES_NO_2_REQUISITE_CODE SYSRES_CONST_YES_NO_REQUISITE_CODE SYSRES_CONST_YES_NO_T_REF_TYPE_REQUISITE_CODE SYSRES_CONST_YES_PICK_VALUE SYSRES_CONST_YES_VALUE CR FALSE nil NO_VALUE NULL TAB TRUE YES_VALUE ADMINISTRATORS_GROUP_NAME CUSTOMIZERS_GROUP_NAME DEVELOPERS_GROUP_NAME SERVICE_USERS_GROUP_NAME DECISION_BLOCK_FIRST_OPERAND_PROPERTY DECISION_BLOCK_NAME_PROPERTY DECISION_BLOCK_OPERATION_PROPERTY DECISION_BLOCK_RESULT_TYPE_PROPERTY DECISION_BLOCK_SECOND_OPERAND_PROPERTY ANY_FILE_EXTENTION COMPRESSED_DOCUMENT_EXTENSION EXTENDED_DOCUMENT_EXTENSION SHORT_COMPRESSED_DOCUMENT_EXTENSION SHORT_EXTENDED_DOCUMENT_EXTENSION JOB_BLOCK_ABORT_DEADLINE_PROPERTY JOB_BLOCK_AFTER_FINISH_EVENT JOB_BLOCK_AFTER_QUERY_PARAMETERS_EVENT JOB_BLOCK_ATTACHMENT_PROPERTY JOB_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY JOB_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY JOB_BLOCK_BEFORE_QUERY_PARAMETERS_EVENT JOB_BLOCK_BEFORE_START_EVENT JOB_BLOCK_CREATED_JOBS_PROPERTY JOB_BLOCK_DEADLINE_PROPERTY JOB_BLOCK_EXECUTION_RESULTS_PROPERTY JOB_BLOCK_IS_PARALLEL_PROPERTY JOB_BLOCK_IS_RELATIVE_ABORT_DEADLINE_PROPERTY JOB_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY JOB_BLOCK_JOB_TEXT_PROPERTY JOB_BLOCK_NAME_PROPERTY JOB_BLOCK_NEED_SIGN_ON_PERFORM_PROPERTY JOB_BLOCK_PERFORMER_PROPERTY JOB_BLOCK_RELATIVE_ABORT_DEADLINE_TYPE_PROPERTY JOB_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY JOB_BLOCK_SUBJECT_PROPERTY ENGLISH_LANGUAGE_CODE RUSSIAN_LANGUAGE_CODE smHidden smMaximized smMinimized smNormal wmNo wmYes COMPONENT_TOKEN_LINK_KIND DOCUMENT_LINK_KIND EDOCUMENT_LINK_KIND FOLDER_LINK_KIND JOB_LINK_KIND REFERENCE_LINK_KIND TASK_LINK_KIND COMPONENT_TOKEN_LOCK_TYPE EDOCUMENT_VERSION_LOCK_TYPE MONITOR_BLOCK_AFTER_FINISH_EVENT MONITOR_BLOCK_BEFORE_START_EVENT MONITOR_BLOCK_DEADLINE_PROPERTY MONITOR_BLOCK_INTERVAL_PROPERTY MONITOR_BLOCK_INTERVAL_TYPE_PROPERTY MONITOR_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY MONITOR_BLOCK_NAME_PROPERTY MONITOR_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY MONITOR_BLOCK_SEARCH_SCRIPT_PROPERTY NOTICE_BLOCK_AFTER_FINISH_EVENT NOTICE_BLOCK_ATTACHMENT_PROPERTY NOTICE_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY NOTICE_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY NOTICE_BLOCK_BEFORE_START_EVENT NOTICE_BLOCK_CREATED_NOTICES_PROPERTY NOTICE_BLOCK_DEADLINE_PROPERTY NOTICE_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY NOTICE_BLOCK_NAME_PROPERTY NOTICE_BLOCK_NOTICE_TEXT_PROPERTY NOTICE_BLOCK_PERFORMER_PROPERTY NOTICE_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY NOTICE_BLOCK_SUBJECT_PROPERTY dseAfterCancel dseAfterClose dseAfterDelete dseAfterDeleteOutOfTransaction dseAfterInsert dseAfterOpen dseAfterScroll dseAfterUpdate dseAfterUpdateOutOfTransaction dseBeforeCancel dseBeforeClose dseBeforeDelete dseBeforeDetailUpdate dseBeforeInsert dseBeforeOpen dseBeforeUpdate dseOnAnyRequisiteChange dseOnCloseRecord dseOnDeleteError dseOnOpenRecord dseOnPrepareUpdate dseOnUpdateError dseOnUpdateRatifiedRecord dseOnValidDelete dseOnValidUpdate reOnChange reOnChangeValues SELECTION_BEGIN_ROUTE_EVENT SELECTION_END_ROUTE_EVENT CURRENT_PERIOD_IS_REQUIRED PREVIOUS_CARD_TYPE_NAME SHOW_RECORD_PROPERTIES_FORM ACCESS_RIGHTS_SETTING_DIALOG_CODE ADMINISTRATOR_USER_CODE ANALYTIC_REPORT_TYPE asrtHideLocal asrtHideRemote CALCULATED_ROLE_TYPE_CODE COMPONENTS_REFERENCE_DEVELOPER_VIEW_CODE DCTS_TEST_PROTOCOLS_FOLDER_PATH E_EDOC_VERSION_ALREADY_APPROVINGLY_SIGNED E_EDOC_VERSION_ALREADY_APPROVINGLY_SIGNED_BY_USER E_EDOC_VERSION_ALREDY_SIGNED E_EDOC_VERSION_ALREDY_SIGNED_BY_USER EDOC_TYPES_CODE_REQUISITE_FIELD_NAME EDOCUMENTS_ALIAS_NAME FILES_FOLDER_PATH FILTER_OPERANDS_DELIMITER FILTER_OPERATIONS_DELIMITER FORMCARD_NAME FORMLIST_NAME GET_EXTENDED_DOCUMENT_EXTENSION_CREATION_MODE GET_EXTENDED_DOCUMENT_EXTENSION_IMPORT_MODE INTEGRATED_REPORT_TYPE IS_BUILDER_APPLICATION_ROLE IS_BUILDER_APPLICATION_ROLE2 IS_BUILDER_USERS ISBSYSDEV LOG_FOLDER_PATH mbCancel mbNo mbNoToAll mbOK mbYes mbYesToAll MEMORY_DATASET_DESRIPTIONS_FILENAME mrNo mrNoToAll mrYes mrYesToAll MULTIPLE_SELECT_DIALOG_CODE NONOPERATING_RECORD_FLAG_FEMININE NONOPERATING_RECORD_FLAG_MASCULINE OPERATING_RECORD_FLAG_FEMININE OPERATING_RECORD_FLAG_MASCULINE PROFILING_SETTINGS_COMMON_SETTINGS_CODE_VALUE PROGRAM_INITIATED_LOOKUP_ACTION ratDelete ratEdit ratInsert REPORT_TYPE REQUIRED_PICK_VALUES_VARIABLE rmCard rmList SBRTE_PROGID_DEV SBRTE_PROGID_RELEASE STATIC_ROLE_TYPE_CODE SUPPRESS_EMPTY_TEMPLATE_CREATION SYSTEM_USER_CODE UPDATE_DIALOG_DATASET USED_IN_OBJECT_HINT_PARAM USER_INITIATED_LOOKUP_ACTION USER_NAME_FORMAT USER_SELECTION_RESTRICTIONS WORKFLOW_TEST_PROTOCOLS_FOLDER_PATH ELS_SUBTYPE_CONTROL_NAME ELS_FOLDER_KIND_CONTROL_NAME REPEAT_PROCESS_CURRENT_OBJECT_EXCEPTION_NAME PRIVILEGE_COMPONENT_FULL_ACCESS PRIVILEGE_DEVELOPMENT_EXPORT PRIVILEGE_DEVELOPMENT_IMPORT PRIVILEGE_DOCUMENT_DELETE PRIVILEGE_ESD PRIVILEGE_FOLDER_DELETE PRIVILEGE_MANAGE_ACCESS_RIGHTS PRIVILEGE_MANAGE_REPLICATION PRIVILEGE_MANAGE_SESSION_SERVER PRIVILEGE_OBJECT_FULL_ACCESS PRIVILEGE_OBJECT_VIEW PRIVILEGE_RESERVE_LICENSE PRIVILEGE_SYSTEM_CUSTOMIZE PRIVILEGE_SYSTEM_DEVELOP PRIVILEGE_SYSTEM_INSTALL PRIVILEGE_TASK_DELETE PRIVILEGE_USER_PLUGIN_SETTINGS_CUSTOMIZE PRIVILEGES_PSEUDOREFERENCE_CODE ACCESS_TYPES_PSEUDOREFERENCE_CODE ALL_AVAILABLE_COMPONENTS_PSEUDOREFERENCE_CODE ALL_AVAILABLE_PRIVILEGES_PSEUDOREFERENCE_CODE ALL_REPLICATE_COMPONENTS_PSEUDOREFERENCE_CODE AVAILABLE_DEVELOPERS_COMPONENTS_PSEUDOREFERENCE_CODE COMPONENTS_PSEUDOREFERENCE_CODE FILTRATER_SETTINGS_CONFLICTS_PSEUDOREFERENCE_CODE GROUPS_PSEUDOREFERENCE_CODE RECEIVE_PROTOCOL_PSEUDOREFERENCE_CODE REFERENCE_REQUISITE_PSEUDOREFERENCE_CODE REFERENCE_REQUISITES_PSEUDOREFERENCE_CODE REFTYPES_PSEUDOREFERENCE_CODE REPLICATION_SEANCES_DIARY_PSEUDOREFERENCE_CODE SEND_PROTOCOL_PSEUDOREFERENCE_CODE SUBSTITUTES_PSEUDOREFERENCE_CODE SYSTEM_SETTINGS_PSEUDOREFERENCE_CODE UNITS_PSEUDOREFERENCE_CODE USERS_PSEUDOREFERENCE_CODE VIEWERS_PSEUDOREFERENCE_CODE CERTIFICATE_TYPE_ENCRYPT CERTIFICATE_TYPE_SIGN CERTIFICATE_TYPE_SIGN_AND_ENCRYPT STORAGE_TYPE_FILE STORAGE_TYPE_NAS_CIFS STORAGE_TYPE_SAPERION STORAGE_TYPE_SQL_SERVER COMPTYPE2_REQUISITE_DOCUMENTS_VALUE COMPTYPE2_REQUISITE_TASKS_VALUE COMPTYPE2_REQUISITE_FOLDERS_VALUE COMPTYPE2_REQUISITE_REFERENCES_VALUE SYSREQ_CODE SYSREQ_COMPTYPE2 SYSREQ_CONST_AVAILABLE_FOR_WEB SYSREQ_CONST_COMMON_CODE SYSREQ_CONST_COMMON_VALUE SYSREQ_CONST_FIRM_CODE SYSREQ_CONST_FIRM_STATUS SYSREQ_CONST_FIRM_VALUE SYSREQ_CONST_SERVER_STATUS SYSREQ_CONTENTS SYSREQ_DATE_OPEN SYSREQ_DATE_CLOSE SYSREQ_DESCRIPTION SYSREQ_DESCRIPTION_LOCALIZE_ID SYSREQ_DOUBLE SYSREQ_EDOC_ACCESS_TYPE SYSREQ_EDOC_AUTHOR SYSREQ_EDOC_CREATED SYSREQ_EDOC_DELEGATE_RIGHTS_REQUISITE_CODE SYSREQ_EDOC_EDITOR SYSREQ_EDOC_ENCODE_TYPE SYSREQ_EDOC_ENCRYPTION_PLUGIN_NAME SYSREQ_EDOC_ENCRYPTION_PLUGIN_VERSION SYSREQ_EDOC_EXPORT_DATE SYSREQ_EDOC_EXPORTER SYSREQ_EDOC_KIND SYSREQ_EDOC_LIFE_STAGE_NAME SYSREQ_EDOC_LOCKED_FOR_SERVER_CODE SYSREQ_EDOC_MODIFIED SYSREQ_EDOC_NAME SYSREQ_EDOC_NOTE SYSREQ_EDOC_QUALIFIED_ID SYSREQ_EDOC_SESSION_KEY SYSREQ_EDOC_SESSION_KEY_ENCRYPTION_PLUGIN_NAME SYSREQ_EDOC_SESSION_KEY_ENCRYPTION_PLUGIN_VERSION SYSREQ_EDOC_SIGNATURE_TYPE SYSREQ_EDOC_SIGNED SYSREQ_EDOC_STORAGE SYSREQ_EDOC_STORAGES_ARCHIVE_STORAGE SYSREQ_EDOC_STORAGES_CHECK_RIGHTS SYSREQ_EDOC_STORAGES_COMPUTER_NAME SYSREQ_EDOC_STORAGES_EDIT_IN_STORAGE SYSREQ_EDOC_STORAGES_EXECUTIVE_STORAGE SYSREQ_EDOC_STORAGES_FUNCTION SYSREQ_EDOC_STORAGES_INITIALIZED SYSREQ_EDOC_STORAGES_LOCAL_PATH SYSREQ_EDOC_STORAGES_SAPERION_DATABASE_NAME SYSREQ_EDOC_STORAGES_SEARCH_BY_TEXT SYSREQ_EDOC_STORAGES_SERVER_NAME SYSREQ_EDOC_STORAGES_SHARED_SOURCE_NAME SYSREQ_EDOC_STORAGES_TYPE SYSREQ_EDOC_TEXT_MODIFIED SYSREQ_EDOC_TYPE_ACT_CODE SYSREQ_EDOC_TYPE_ACT_DESCRIPTION SYSREQ_EDOC_TYPE_ACT_DESCRIPTION_LOCALIZE_ID SYSREQ_EDOC_TYPE_ACT_ON_EXECUTE SYSREQ_EDOC_TYPE_ACT_ON_EXECUTE_EXISTS SYSREQ_EDOC_TYPE_ACT_SECTION SYSREQ_EDOC_TYPE_ADD_PARAMS SYSREQ_EDOC_TYPE_COMMENT SYSREQ_EDOC_TYPE_EVENT_TEXT SYSREQ_EDOC_TYPE_NAME_IN_SINGULAR SYSREQ_EDOC_TYPE_NAME_IN_SINGULAR_LOCALIZE_ID SYSREQ_EDOC_TYPE_NAME_LOCALIZE_ID SYSREQ_EDOC_TYPE_NUMERATION_METHOD SYSREQ_EDOC_TYPE_PSEUDO_REQUISITE_CODE SYSREQ_EDOC_TYPE_REQ_CODE SYSREQ_EDOC_TYPE_REQ_DESCRIPTION SYSREQ_EDOC_TYPE_REQ_DESCRIPTION_LOCALIZE_ID SYSREQ_EDOC_TYPE_REQ_IS_LEADING SYSREQ_EDOC_TYPE_REQ_IS_REQUIRED SYSREQ_EDOC_TYPE_REQ_NUMBER SYSREQ_EDOC_TYPE_REQ_ON_CHANGE SYSREQ_EDOC_TYPE_REQ_ON_CHANGE_EXISTS SYSREQ_EDOC_TYPE_REQ_ON_SELECT SYSREQ_EDOC_TYPE_REQ_ON_SELECT_KIND SYSREQ_EDOC_TYPE_REQ_SECTION SYSREQ_EDOC_TYPE_VIEW_CARD SYSREQ_EDOC_TYPE_VIEW_CODE SYSREQ_EDOC_TYPE_VIEW_COMMENT SYSREQ_EDOC_TYPE_VIEW_IS_MAIN SYSREQ_EDOC_TYPE_VIEW_NAME SYSREQ_EDOC_TYPE_VIEW_NAME_LOCALIZE_ID SYSREQ_EDOC_VERSION_AUTHOR SYSREQ_EDOC_VERSION_CRC SYSREQ_EDOC_VERSION_DATA SYSREQ_EDOC_VERSION_EDITOR SYSREQ_EDOC_VERSION_EXPORT_DATE SYSREQ_EDOC_VERSION_EXPORTER SYSREQ_EDOC_VERSION_HIDDEN SYSREQ_EDOC_VERSION_LIFE_STAGE SYSREQ_EDOC_VERSION_MODIFIED SYSREQ_EDOC_VERSION_NOTE SYSREQ_EDOC_VERSION_SIGNATURE_TYPE SYSREQ_EDOC_VERSION_SIGNED SYSREQ_EDOC_VERSION_SIZE SYSREQ_EDOC_VERSION_SOURCE SYSREQ_EDOC_VERSION_TEXT_MODIFIED SYSREQ_EDOCKIND_DEFAULT_VERSION_STATE_CODE SYSREQ_FOLDER_KIND SYSREQ_FUNC_CATEGORY SYSREQ_FUNC_COMMENT SYSREQ_FUNC_GROUP SYSREQ_FUNC_GROUP_COMMENT SYSREQ_FUNC_GROUP_NUMBER SYSREQ_FUNC_HELP SYSREQ_FUNC_PARAM_DEF_VALUE SYSREQ_FUNC_PARAM_IDENT SYSREQ_FUNC_PARAM_NUMBER SYSREQ_FUNC_PARAM_TYPE SYSREQ_FUNC_TEXT SYSREQ_GROUP_CATEGORY SYSREQ_ID SYSREQ_LAST_UPDATE SYSREQ_LEADER_REFERENCE SYSREQ_LINE_NUMBER SYSREQ_MAIN_RECORD_ID SYSREQ_NAME SYSREQ_NAME_LOCALIZE_ID SYSREQ_NOTE SYSREQ_ORIGINAL_RECORD SYSREQ_OUR_FIRM SYSREQ_PROFILING_SETTINGS_BATCH_LOGING SYSREQ_PROFILING_SETTINGS_BATCH_SIZE SYSREQ_PROFILING_SETTINGS_PROFILING_ENABLED SYSREQ_PROFILING_SETTINGS_SQL_PROFILING_ENABLED SYSREQ_PROFILING_SETTINGS_START_LOGGED SYSREQ_RECORD_STATUS SYSREQ_REF_REQ_FIELD_NAME SYSREQ_REF_REQ_FORMAT SYSREQ_REF_REQ_GENERATED SYSREQ_REF_REQ_LENGTH SYSREQ_REF_REQ_PRECISION SYSREQ_REF_REQ_REFERENCE SYSREQ_REF_REQ_SECTION SYSREQ_REF_REQ_STORED SYSREQ_REF_REQ_TOKENS SYSREQ_REF_REQ_TYPE SYSREQ_REF_REQ_VIEW SYSREQ_REF_TYPE_ACT_CODE SYSREQ_REF_TYPE_ACT_DESCRIPTION SYSREQ_REF_TYPE_ACT_DESCRIPTION_LOCALIZE_ID SYSREQ_REF_TYPE_ACT_ON_EXECUTE SYSREQ_REF_TYPE_ACT_ON_EXECUTE_EXISTS SYSREQ_REF_TYPE_ACT_SECTION SYSREQ_REF_TYPE_ADD_PARAMS SYSREQ_REF_TYPE_COMMENT SYSREQ_REF_TYPE_COMMON_SETTINGS SYSREQ_REF_TYPE_DISPLAY_REQUISITE_NAME SYSREQ_REF_TYPE_EVENT_TEXT SYSREQ_REF_TYPE_MAIN_LEADING_REF SYSREQ_REF_TYPE_NAME_IN_SINGULAR SYSREQ_REF_TYPE_NAME_IN_SINGULAR_LOCALIZE_ID SYSREQ_REF_TYPE_NAME_LOCALIZE_ID SYSREQ_REF_TYPE_NUMERATION_METHOD SYSREQ_REF_TYPE_REQ_CODE SYSREQ_REF_TYPE_REQ_DESCRIPTION SYSREQ_REF_TYPE_REQ_DESCRIPTION_LOCALIZE_ID SYSREQ_REF_TYPE_REQ_IS_CONTROL SYSREQ_REF_TYPE_REQ_IS_FILTER SYSREQ_REF_TYPE_REQ_IS_LEADING SYSREQ_REF_TYPE_REQ_IS_REQUIRED SYSREQ_REF_TYPE_REQ_NUMBER SYSREQ_REF_TYPE_REQ_ON_CHANGE SYSREQ_REF_TYPE_REQ_ON_CHANGE_EXISTS SYSREQ_REF_TYPE_REQ_ON_SELECT SYSREQ_REF_TYPE_REQ_ON_SELECT_KIND SYSREQ_REF_TYPE_REQ_SECTION SYSREQ_REF_TYPE_VIEW_CARD SYSREQ_REF_TYPE_VIEW_CODE SYSREQ_REF_TYPE_VIEW_COMMENT SYSREQ_REF_TYPE_VIEW_IS_MAIN SYSREQ_REF_TYPE_VIEW_NAME SYSREQ_REF_TYPE_VIEW_NAME_LOCALIZE_ID SYSREQ_REFERENCE_TYPE_ID SYSREQ_STATE SYSREQ_STAT\u0415 SYSREQ_SYSTEM_SETTINGS_VALUE SYSREQ_TYPE SYSREQ_UNIT SYSREQ_UNIT_ID SYSREQ_USER_GROUPS_GROUP_FULL_NAME SYSREQ_USER_GROUPS_GROUP_NAME SYSREQ_USER_GROUPS_GROUP_SERVER_NAME SYSREQ_USERS_ACCESS_RIGHTS SYSREQ_USERS_AUTHENTICATION SYSREQ_USERS_CATEGORY SYSREQ_USERS_COMPONENT SYSREQ_USERS_COMPONENT_USER_IS_PUBLIC SYSREQ_USERS_DOMAIN SYSREQ_USERS_FULL_USER_NAME SYSREQ_USERS_GROUP SYSREQ_USERS_IS_MAIN_SERVER SYSREQ_USERS_LOGIN SYSREQ_USERS_REFERENCE_USER_IS_PUBLIC SYSREQ_USERS_STATUS SYSREQ_USERS_USER_CERTIFICATE SYSREQ_USERS_USER_CERTIFICATE_INFO SYSREQ_USERS_USER_CERTIFICATE_PLUGIN_NAME SYSREQ_USERS_USER_CERTIFICATE_PLUGIN_VERSION SYSREQ_USERS_USER_CERTIFICATE_STATE SYSREQ_USERS_USER_CERTIFICATE_SUBJECT_NAME SYSREQ_USERS_USER_CERTIFICATE_THUMBPRINT SYSREQ_USERS_USER_DEFAULT_CERTIFICATE SYSREQ_USERS_USER_DESCRIPTION SYSREQ_USERS_USER_GLOBAL_NAME SYSREQ_USERS_USER_LOGIN SYSREQ_USERS_USER_MAIN_SERVER SYSREQ_USERS_USER_TYPE SYSREQ_WORK_RULES_FOLDER_ID RESULT_VAR_NAME RESULT_VAR_NAME_ENG AUTO_NUMERATION_RULE_ID CANT_CHANGE_ID_REQUISITE_RULE_ID CANT_CHANGE_OURFIRM_REQUISITE_RULE_ID CHECK_CHANGING_REFERENCE_RECORD_USE_RULE_ID CHECK_CODE_REQUISITE_RULE_ID CHECK_DELETING_REFERENCE_RECORD_USE_RULE_ID CHECK_FILTRATER_CHANGES_RULE_ID CHECK_RECORD_INTERVAL_RULE_ID CHECK_REFERENCE_INTERVAL_RULE_ID CHECK_REQUIRED_DATA_FULLNESS_RULE_ID CHECK_REQUIRED_REQUISITES_FULLNESS_RULE_ID MAKE_RECORD_UNRATIFIED_RULE_ID RESTORE_AUTO_NUMERATION_RULE_ID SET_FIRM_CONTEXT_FROM_RECORD_RULE_ID SET_FIRST_RECORD_IN_LIST_FORM_RULE_ID SET_IDSPS_VALUE_RULE_ID SET_NEXT_CODE_VALUE_RULE_ID SET_OURFIRM_BOUNDS_RULE_ID SET_OURFIRM_REQUISITE_RULE_ID SCRIPT_BLOCK_AFTER_FINISH_EVENT SCRIPT_BLOCK_BEFORE_START_EVENT SCRIPT_BLOCK_EXECUTION_RESULTS_PROPERTY SCRIPT_BLOCK_NAME_PROPERTY SCRIPT_BLOCK_SCRIPT_PROPERTY SUBTASK_BLOCK_ABORT_DEADLINE_PROPERTY SUBTASK_BLOCK_AFTER_FINISH_EVENT SUBTASK_BLOCK_ASSIGN_PARAMS_EVENT SUBTASK_BLOCK_ATTACHMENTS_PROPERTY SUBTASK_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY SUBTASK_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY SUBTASK_BLOCK_BEFORE_START_EVENT SUBTASK_BLOCK_CREATED_TASK_PROPERTY SUBTASK_BLOCK_CREATION_EVENT SUBTASK_BLOCK_DEADLINE_PROPERTY SUBTASK_BLOCK_IMPORTANCE_PROPERTY SUBTASK_BLOCK_INITIATOR_PROPERTY SUBTASK_BLOCK_IS_RELATIVE_ABORT_DEADLINE_PROPERTY SUBTASK_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY SUBTASK_BLOCK_JOBS_TYPE_PROPERTY SUBTASK_BLOCK_NAME_PROPERTY SUBTASK_BLOCK_PARALLEL_ROUTE_PROPERTY SUBTASK_BLOCK_PERFORMERS_PROPERTY SUBTASK_BLOCK_RELATIVE_ABORT_DEADLINE_TYPE_PROPERTY SUBTASK_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY SUBTASK_BLOCK_REQUIRE_SIGN_PROPERTY SUBTASK_BLOCK_STANDARD_ROUTE_PROPERTY SUBTASK_BLOCK_START_EVENT SUBTASK_BLOCK_STEP_CONTROL_PROPERTY SUBTASK_BLOCK_SUBJECT_PROPERTY SUBTASK_BLOCK_TASK_CONTROL_PROPERTY SUBTASK_BLOCK_TEXT_PROPERTY SUBTASK_BLOCK_UNLOCK_ATTACHMENTS_ON_STOP_PROPERTY SUBTASK_BLOCK_USE_STANDARD_ROUTE_PROPERTY SUBTASK_BLOCK_WAIT_FOR_TASK_COMPLETE_PROPERTY SYSCOMP_CONTROL_JOBS SYSCOMP_FOLDERS SYSCOMP_JOBS SYSCOMP_NOTICES SYSCOMP_TASKS SYSDLG_CREATE_EDOCUMENT SYSDLG_CREATE_EDOCUMENT_VERSION SYSDLG_CURRENT_PERIOD SYSDLG_EDIT_FUNCTION_HELP SYSDLG_EDOCUMENT_KINDS_FOR_TEMPLATE SYSDLG_EXPORT_MULTIPLE_EDOCUMENTS SYSDLG_EXPORT_SINGLE_EDOCUMENT SYSDLG_IMPORT_EDOCUMENT SYSDLG_MULTIPLE_SELECT SYSDLG_SETUP_ACCESS_RIGHTS SYSDLG_SETUP_DEFAULT_RIGHTS SYSDLG_SETUP_FILTER_CONDITION SYSDLG_SETUP_SIGN_RIGHTS SYSDLG_SETUP_TASK_OBSERVERS SYSDLG_SETUP_TASK_ROUTE SYSDLG_SETUP_USERS_LIST SYSDLG_SIGN_EDOCUMENT SYSDLG_SIGN_MULTIPLE_EDOCUMENTS SYSREF_ACCESS_RIGHTS_TYPES SYSREF_ADMINISTRATION_HISTORY SYSREF_ALL_AVAILABLE_COMPONENTS SYSREF_ALL_AVAILABLE_PRIVILEGES SYSREF_ALL_REPLICATING_COMPONENTS SYSREF_AVAILABLE_DEVELOPERS_COMPONENTS SYSREF_CALENDAR_EVENTS SYSREF_COMPONENT_TOKEN_HISTORY SYSREF_COMPONENT_TOKENS SYSREF_COMPONENTS SYSREF_CONSTANTS SYSREF_DATA_RECEIVE_PROTOCOL SYSREF_DATA_SEND_PROTOCOL SYSREF_DIALOGS SYSREF_DIALOGS_REQUISITES SYSREF_EDITORS SYSREF_EDOC_CARDS SYSREF_EDOC_TYPES SYSREF_EDOCUMENT_CARD_REQUISITES SYSREF_EDOCUMENT_CARD_TYPES SYSREF_EDOCUMENT_CARD_TYPES_REFERENCE SYSREF_EDOCUMENT_CARDS SYSREF_EDOCUMENT_HISTORY SYSREF_EDOCUMENT_KINDS SYSREF_EDOCUMENT_REQUISITES SYSREF_EDOCUMENT_SIGNATURES SYSREF_EDOCUMENT_TEMPLATES SYSREF_EDOCUMENT_TEXT_STORAGES SYSREF_EDOCUMENT_VIEWS SYSREF_FILTERER_SETUP_CONFLICTS SYSREF_FILTRATER_SETTING_CONFLICTS SYSREF_FOLDER_HISTORY SYSREF_FOLDERS SYSREF_FUNCTION_GROUPS SYSREF_FUNCTION_PARAMS SYSREF_FUNCTIONS SYSREF_JOB_HISTORY SYSREF_LINKS SYSREF_LOCALIZATION_DICTIONARY SYSREF_LOCALIZATION_LANGUAGES SYSREF_MODULES SYSREF_PRIVILEGES SYSREF_RECORD_HISTORY SYSREF_REFERENCE_REQUISITES SYSREF_REFERENCE_TYPE_VIEWS SYSREF_REFERENCE_TYPES SYSREF_REFERENCES SYSREF_REFERENCES_REQUISITES SYSREF_REMOTE_SERVERS SYSREF_REPLICATION_SESSIONS_LOG SYSREF_REPLICATION_SESSIONS_PROTOCOL SYSREF_REPORTS SYSREF_ROLES SYSREF_ROUTE_BLOCK_GROUPS SYSREF_ROUTE_BLOCKS SYSREF_SCRIPTS SYSREF_SEARCHES SYSREF_SERVER_EVENTS SYSREF_SERVER_EVENTS_HISTORY SYSREF_STANDARD_ROUTE_GROUPS SYSREF_STANDARD_ROUTES SYSREF_STATUSES SYSREF_SYSTEM_SETTINGS SYSREF_TASK_HISTORY SYSREF_TASK_KIND_GROUPS SYSREF_TASK_KINDS SYSREF_TASK_RIGHTS SYSREF_TASK_SIGNATURES SYSREF_TASKS SYSREF_UNITS SYSREF_USER_GROUPS SYSREF_USER_GROUPS_REFERENCE SYSREF_USER_SUBSTITUTION SYSREF_USERS SYSREF_USERS_REFERENCE SYSREF_VIEWERS SYSREF_WORKING_TIME_CALENDARS ACCESS_RIGHTS_TABLE_NAME EDMS_ACCESS_TABLE_NAME EDOC_TYPES_TABLE_NAME TEST_DEV_DB_NAME TEST_DEV_SYSTEM_CODE TEST_EDMS_DB_NAME TEST_EDMS_MAIN_CODE TEST_EDMS_MAIN_DB_NAME TEST_EDMS_SECOND_CODE TEST_EDMS_SECOND_DB_NAME TEST_EDMS_SYSTEM_CODE TEST_ISB5_MAIN_CODE TEST_ISB5_SECOND_CODE TEST_SQL_SERVER_2005_NAME TEST_SQL_SERVER_NAME ATTENTION_CAPTION cbsCommandLinks cbsDefault CONFIRMATION_CAPTION ERROR_CAPTION INFORMATION_CAPTION mrCancel mrOk EDOC_VERSION_ACTIVE_STAGE_CODE EDOC_VERSION_DESIGN_STAGE_CODE EDOC_VERSION_OBSOLETE_STAGE_CODE cpDataEnciphermentEnabled cpDigitalSignatureEnabled cpID cpIssuer cpPluginVersion cpSerial cpSubjectName cpSubjSimpleName cpValidFromDate cpValidToDate ISBL_SYNTAX NO_SYNTAX XML_SYNTAX WAIT_BLOCK_AFTER_FINISH_EVENT WAIT_BLOCK_BEFORE_START_EVENT WAIT_BLOCK_DEADLINE_PROPERTY WAIT_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY WAIT_BLOCK_NAME_PROPERTY WAIT_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY SYSRES_COMMON SYSRES_CONST SYSRES_MBFUNC SYSRES_SBDATA SYSRES_SBGUI SYSRES_SBINTF SYSRES_SBREFDSC SYSRES_SQLERRORS SYSRES_SYSCOMP atUser atGroup atRole aemEnabledAlways aemDisabledAlways aemEnabledOnBrowse aemEnabledOnEdit aemDisabledOnBrowseEmpty apBegin apEnd alLeft alRight asmNever asmNoButCustomize asmAsLastTime asmYesButCustomize asmAlways cirCommon cirRevoked ctSignature ctEncode ctSignatureEncode clbUnchecked clbChecked clbGrayed ceISB ceAlways ceNever ctDocument ctReference ctScript ctUnknown ctReport ctDialog ctFunction ctFolder ctEDocument ctTask ctJob ctNotice ctControlJob cfInternal cfDisplay ciUnspecified ciWrite ciRead ckFolder ckEDocument ckTask ckJob ckComponentToken ckAny ckReference ckScript ckReport ckDialog ctISBLEditor ctBevel ctButton ctCheckListBox ctComboBox ctComboEdit ctGrid ctDBCheckBox ctDBComboBox ctDBEdit ctDBEllipsis ctDBMemo ctDBNavigator ctDBRadioGroup ctDBStatusLabel ctEdit ctGroupBox ctInplaceHint ctMemo ctPanel ctListBox ctRadioButton ctRichEdit ctTabSheet ctWebBrowser ctImage ctHyperLink ctLabel ctDBMultiEllipsis ctRibbon ctRichView ctInnerPanel ctPanelGroup ctBitButton cctDate cctInteger cctNumeric cctPick cctReference cctString cctText cltInternal cltPrimary cltGUI dseBeforeOpen dseAfterOpen dseBeforeClose dseAfterClose dseOnValidDelete dseBeforeDelete dseAfterDelete dseAfterDeleteOutOfTransaction dseOnDeleteError dseBeforeInsert dseAfterInsert dseOnValidUpdate dseBeforeUpdate dseOnUpdateRatifiedRecord dseAfterUpdate dseAfterUpdateOutOfTransaction dseOnUpdateError dseAfterScroll dseOnOpenRecord dseOnCloseRecord dseBeforeCancel dseAfterCancel dseOnUpdateDeadlockError dseBeforeDetailUpdate dseOnPrepareUpdate dseOnAnyRequisiteChange dssEdit dssInsert dssBrowse dssInActive dftDate dftShortDate dftDateTime dftTimeStamp dotDays dotHours dotMinutes dotSeconds dtkndLocal dtkndUTC arNone arView arEdit arFull ddaView ddaEdit emLock emEdit emSign emExportWithLock emImportWithUnlock emChangeVersionNote emOpenForModify emChangeLifeStage emDelete emCreateVersion emImport emUnlockExportedWithLock emStart emAbort emReInit emMarkAsReaded emMarkAsUnreaded emPerform emAccept emResume emChangeRights emEditRoute emEditObserver emRecoveryFromLocalCopy emChangeWorkAccessType emChangeEncodeTypeToCertificate emChangeEncodeTypeToPassword emChangeEncodeTypeToNone emChangeEncodeTypeToCertificatePassword emChangeStandardRoute emGetText emOpenForView emMoveToStorage emCreateObject emChangeVersionHidden emDeleteVersion emChangeLifeCycleStage emApprovingSign emExport emContinue emLockFromEdit emUnLockForEdit emLockForServer emUnlockFromServer emDelegateAccessRights emReEncode ecotFile ecotProcess eaGet eaCopy eaCreate eaCreateStandardRoute edltAll edltNothing edltQuery essmText essmCard esvtLast esvtLastActive esvtSpecified edsfExecutive edsfArchive edstSQLServer edstFile edvstNone edvstEDocumentVersionCopy edvstFile edvstTemplate edvstScannedFile vsDefault vsDesign vsActive vsObsolete etNone etCertificate etPassword etCertificatePassword ecException ecWarning ecInformation estAll estApprovingOnly evtLast evtLastActive evtQuery fdtString fdtNumeric fdtInteger fdtDate fdtText fdtUnknown fdtWideString fdtLargeInteger ftInbox ftOutbox ftFavorites ftCommonFolder ftUserFolder ftComponents ftQuickLaunch ftShortcuts ftSearch grhAuto grhX1 grhX2 grhX3 hltText hltRTF hltHTML iffBMP iffJPEG iffMultiPageTIFF iffSinglePageTIFF iffTIFF iffPNG im8bGrayscale im24bRGB im1bMonochrome itBMP itJPEG itWMF itPNG ikhInformation ikhWarning ikhError ikhNoIcon icUnknown icScript icFunction icIntegratedReport icAnalyticReport icDataSetEventHandler icActionHandler icFormEventHandler icLookUpEventHandler icRequisiteChangeEventHandler icBeforeSearchEventHandler icRoleCalculation icSelectRouteEventHandler icBlockPropertyCalculation icBlockQueryParamsEventHandler icChangeSearchResultEventHandler icBlockEventHandler icSubTaskInitEventHandler icEDocDataSetEventHandler icEDocLookUpEventHandler icEDocActionHandler icEDocFormEventHandler icEDocRequisiteChangeEventHandler icStructuredConversionRule icStructuredConversionEventBefore icStructuredConversionEventAfter icWizardEventHandler icWizardFinishEventHandler icWizardStepEventHandler icWizardStepFinishEventHandler icWizardActionEnableEventHandler icWizardActionExecuteEventHandler icCreateJobsHandler icCreateNoticesHandler icBeforeLookUpEventHandler icAfterLookUpEventHandler icTaskAbortEventHandler icWorkflowBlockActionHandler icDialogDataSetEventHandler icDialogActionHandler icDialogLookUpEventHandler icDialogRequisiteChangeEventHandler icDialogFormEventHandler icDialogValidCloseEventHandler icBlockFormEventHandler icTaskFormEventHandler icReferenceMethod icEDocMethod icDialogMethod icProcessMessageHandler isShow isHide isByUserSettings jkJob jkNotice jkControlJob jtInner jtLeft jtRight jtFull jtCross lbpAbove lbpBelow lbpLeft lbpRight eltPerConnection eltPerUser sfcUndefined sfcBlack sfcGreen sfcRed sfcBlue sfcOrange sfcLilac sfsItalic sfsStrikeout sfsNormal ldctStandardRoute ldctWizard ldctScript ldctFunction ldctRouteBlock ldctIntegratedReport ldctAnalyticReport ldctReferenceType ldctEDocumentType ldctDialog ldctServerEvents mrcrtNone mrcrtUser mrcrtMaximal mrcrtCustom vtEqual vtGreaterOrEqual vtLessOrEqual vtRange rdYesterday rdToday rdTomorrow rdThisWeek rdThisMonth rdThisYear rdNextMonth rdNextWeek rdLastWeek rdLastMonth rdWindow rdFile rdPrinter rdtString rdtNumeric rdtInteger rdtDate rdtReference rdtAccount rdtText rdtPick rdtUnknown rdtLargeInteger rdtDocument reOnChange reOnChangeValues ttGlobal ttLocal ttUser ttSystem ssmBrowse ssmSelect ssmMultiSelect ssmBrowseModal smSelect smLike smCard stNone stAuthenticating stApproving sctString sctStream sstAnsiSort sstNaturalSort svtEqual svtContain soatString soatNumeric soatInteger soatDatetime soatReferenceRecord soatText soatPick soatBoolean soatEDocument soatAccount soatIntegerCollection soatNumericCollection soatStringCollection soatPickCollection soatDatetimeCollection soatBooleanCollection soatReferenceRecordCollection soatEDocumentCollection soatAccountCollection soatContents soatUnknown tarAbortByUser tarAbortByWorkflowException tvtAllWords tvtExactPhrase tvtAnyWord usNone usCompleted usRedSquare usBlueSquare usYellowSquare usGreenSquare usOrangeSquare usPurpleSquare usFollowUp utUnknown utUser utDeveloper utAdministrator utSystemDeveloper utDisconnected btAnd btDetailAnd btOr btNotOr btOnly vmView vmSelect vmNavigation vsmSingle vsmMultiple vsmMultipleCheck vsmNoSelection wfatPrevious wfatNext wfatCancel wfatFinish wfepUndefined wfepText3 wfepText6 wfepText9 wfepSpinEdit wfepDropDown wfepRadioGroup wfepFlag wfepText12 wfepText15 wfepText18 wfepText21 wfepText24 wfepText27 wfepText30 wfepRadioGroupColumn1 wfepRadioGroupColumn2 wfepRadioGroupColumn3 wfetQueryParameter wfetText wfetDelimiter wfetLabel wptString wptInteger wptNumeric wptBoolean wptDateTime wptPick wptText wptUser wptUserList wptEDocumentInfo wptEDocumentInfoList wptReferenceRecordInfo wptReferenceRecordInfoList wptFolderInfo wptTaskInfo wptContents wptFileName wptDate wsrComplete wsrGoNext wsrGoPrevious wsrCustom wsrCancel wsrGoFinal wstForm wstEDocument wstTaskCard wstReferenceRecordCard wstFinal waAll waPerformers waManual wsbStart wsbFinish wsbNotice wsbStep wsbDecision wsbWait wsbMonitor wsbScript wsbConnector wsbSubTask wsbLifeCycleStage wsbPause wdtInteger wdtFloat wdtString wdtPick wdtDateTime wdtBoolean wdtTask wdtJob wdtFolder wdtEDocument wdtReferenceRecord wdtUser wdtGroup wdtRole wdtIntegerCollection wdtFloatCollection wdtStringCollection wdtPickCollection wdtDateTimeCollection wdtBooleanCollection wdtTaskCollection wdtJobCollection wdtFolderCollection wdtEDocumentCollection wdtReferenceRecordCollection wdtUserCollection wdtGroupCollection wdtRoleCollection wdtContents wdtUserList wdtSearchDescription wdtDeadLine wdtPickSet wdtAccountCollection wiLow wiNormal wiHigh wrtSoft wrtHard wsInit wsRunning wsDone wsControlled wsAborted wsContinued wtmFull wtmFromCurrent wtmOnlyCurrent ",class:"AltState Application CallType ComponentTokens CreatedJobs CreatedNotices ControlState DialogResult Dialogs EDocuments EDocumentVersionSource Folders GlobalIDs Job Jobs InputValue LookUpReference LookUpRequisiteNames LookUpSearch Object ParentComponent Processes References Requisite ReportName Reports Result Scripts Searches SelectedAttachments SelectedItems SelectMode Sender ServerEvents ServiceFactory ShiftState SubTask SystemDialogs Tasks Wizard Wizards Work \u0412\u044b\u0437\u043e\u0432\u0421\u043f\u043e\u0441\u043e\u0431 \u0418\u043c\u044f\u041e\u0442\u0447\u0435\u0442\u0430 \u0420\u0435\u043a\u0432\u0417\u043d\u0430\u0447 ",literal:"null true false nil "},o={begin:"\\.\\s*"+e.UNDERSCORE_IDENT_RE,keywords:r,relevance:0},l={className:"type",begin:":[ \\t]*("+"IApplication IAccessRights IAccountRepository IAccountSelectionRestrictions IAction IActionList IAdministrationHistoryDescription IAnchors IApplication IArchiveInfo IAttachment IAttachmentList ICheckListBox ICheckPointedList IColumn IComponent IComponentDescription IComponentToken IComponentTokenFactory IComponentTokenInfo ICompRecordInfo IConnection IContents IControl IControlJob IControlJobInfo IControlList ICrypto ICrypto2 ICustomJob ICustomJobInfo ICustomListBox ICustomObjectWizardStep ICustomWork ICustomWorkInfo IDataSet IDataSetAccessInfo IDataSigner IDateCriterion IDateRequisite IDateRequisiteDescription IDateValue IDeaAccessRights IDeaObjectInfo IDevelopmentComponentLock IDialog IDialogFactory IDialogPickRequisiteItems IDialogsFactory IDICSFactory IDocRequisite IDocumentInfo IDualListDialog IECertificate IECertificateInfo IECertificates IEditControl IEditorForm IEdmsExplorer IEdmsObject IEdmsObjectDescription IEdmsObjectFactory IEdmsObjectInfo IEDocument IEDocumentAccessRights IEDocumentDescription IEDocumentEditor IEDocumentFactory IEDocumentInfo IEDocumentStorage IEDocumentVersion IEDocumentVersionListDialog IEDocumentVersionSource IEDocumentWizardStep IEDocVerSignature IEDocVersionState IEnabledMode IEncodeProvider IEncrypter IEvent IEventList IException IExternalEvents IExternalHandler IFactory IField IFileDialog IFolder IFolderDescription IFolderDialog IFolderFactory IFolderInfo IForEach IForm IFormTitle IFormWizardStep IGlobalIDFactory IGlobalIDInfo IGrid IHasher IHistoryDescription IHyperLinkControl IImageButton IImageControl IInnerPanel IInplaceHint IIntegerCriterion IIntegerList IIntegerRequisite IIntegerValue IISBLEditorForm IJob IJobDescription IJobFactory IJobForm IJobInfo ILabelControl ILargeIntegerCriterion ILargeIntegerRequisite ILargeIntegerValue ILicenseInfo ILifeCycleStage IList IListBox ILocalIDInfo ILocalization ILock IMemoryDataSet IMessagingFactory IMetadataRepository INotice INoticeInfo INumericCriterion INumericRequisite INumericValue IObject IObjectDescription IObjectImporter IObjectInfo IObserver IPanelGroup IPickCriterion IPickProperty IPickRequisite IPickRequisiteDescription IPickRequisiteItem IPickRequisiteItems IPickValue IPrivilege IPrivilegeList IProcess IProcessFactory IProcessMessage IProgress IProperty IPropertyChangeEvent IQuery IReference IReferenceCriterion IReferenceEnabledMode IReferenceFactory IReferenceHistoryDescription IReferenceInfo IReferenceRecordCardWizardStep IReferenceRequisiteDescription IReferencesFactory IReferenceValue IRefRequisite IReport IReportFactory IRequisite IRequisiteDescription IRequisiteDescriptionList IRequisiteFactory IRichEdit IRouteStep IRule IRuleList ISchemeBlock IScript IScriptFactory ISearchCriteria ISearchCriterion ISearchDescription ISearchFactory ISearchFolderInfo ISearchForObjectDescription ISearchResultRestrictions ISecuredContext ISelectDialog IServerEvent IServerEventFactory IServiceDialog IServiceFactory ISignature ISignProvider ISignProvider2 ISignProvider3 ISimpleCriterion IStringCriterion IStringList IStringRequisite IStringRequisiteDescription IStringValue ISystemDialogsFactory ISystemInfo ITabSheet ITask ITaskAbortReasonInfo ITaskCardWizardStep ITaskDescription ITaskFactory ITaskInfo ITaskRoute ITextCriterion ITextRequisite ITextValue ITreeListSelectDialog IUser IUserList IValue IView IWebBrowserControl IWizard IWizardAction IWizardFactory IWizardFormElement IWizardParam IWizardPickParam IWizardReferenceParam IWizardStep IWorkAccessRights IWorkDescription IWorkflowAskableParam IWorkflowAskableParams IWorkflowBlock IWorkflowBlockResult IWorkflowEnabledMode IWorkflowParam IWorkflowPickParam IWorkflowReferenceParam IWorkState IWorkTreeCustomNode IWorkTreeJobNode IWorkTreeTaskNode IXMLEditorForm SBCrypto ".trim().replace(/\s/g,"|")+")",end:"[ \\t]*=",excludeEnd:!0},c={className:"variable",keywords:r,begin:t,relevance:0,contains:[l,o]},d="[A-Za-z\u0410-\u042f\u0430-\u044f\u0451\u0401_][A-Za-z\u0410-\u042f\u0430-\u044f\u0451\u0401_0-9]*\\(";return{name:"ISBL",case_insensitive:!0,keywords:r,illegal:"\\$|\\?|%|,|;$|~|#|@|</",contains:[{className:"function",begin:d,end:"\\)$",returnBegin:!0,keywords:r,illegal:"[\\[\\]\\|\\$\\?%,~#@]",contains:[{className:"title",keywords:{$pattern:t,built_in:"AddSubString AdjustLineBreaks AmountInWords Analysis ArrayDimCount ArrayHighBound ArrayLowBound ArrayOf ArrayReDim Assert Assigned BeginOfMonth BeginOfPeriod BuildProfilingOperationAnalysis CallProcedure CanReadFile CArrayElement CDataSetRequisite ChangeDate ChangeReferenceDataset Char CharPos CheckParam CheckParamValue CompareStrings ConstantExists ControlState ConvertDateStr Copy CopyFile CreateArray CreateCachedReference CreateConnection CreateDialog CreateDualListDialog CreateEditor CreateException CreateFile CreateFolderDialog CreateInputDialog CreateLinkFile CreateList CreateLock CreateMemoryDataSet CreateObject CreateOpenDialog CreateProgress CreateQuery CreateReference CreateReport CreateSaveDialog CreateScript CreateSQLPivotFunction CreateStringList CreateTreeListSelectDialog CSelectSQL CSQL CSubString CurrentUserID CurrentUserName CurrentVersion DataSetLocateEx DateDiff DateTimeDiff DateToStr DayOfWeek DeleteFile DirectoryExists DisableCheckAccessRights DisableCheckFullShowingRestriction DisableMassTaskSendingRestrictions DropTable DupeString EditText EnableCheckAccessRights EnableCheckFullShowingRestriction EnableMassTaskSendingRestrictions EndOfMonth EndOfPeriod ExceptionExists ExceptionsOff ExceptionsOn Execute ExecuteProcess Exit ExpandEnvironmentVariables ExtractFileDrive ExtractFileExt ExtractFileName ExtractFilePath ExtractParams FileExists FileSize FindFile FindSubString FirmContext ForceDirectories Format FormatDate FormatNumeric FormatSQLDate FormatString FreeException GetComponent GetComponentLaunchParam GetConstant GetLastException GetReferenceRecord GetRefTypeByRefID GetTableID GetTempFolder IfThen In IndexOf InputDialog InputDialogEx InteractiveMode IsFileLocked IsGraphicFile IsNumeric Length LoadString LoadStringFmt LocalTimeToUTC LowerCase Max MessageBox MessageBoxEx MimeDecodeBinary MimeDecodeString MimeEncodeBinary MimeEncodeString Min MoneyInWords MoveFile NewID Now OpenFile Ord Precision Raise ReadCertificateFromFile ReadFile ReferenceCodeByID ReferenceNumber ReferenceRequisiteMode ReferenceRequisiteValue RegionDateSettings RegionNumberSettings RegionTimeSettings RegRead RegWrite RenameFile Replace Round SelectServerCode SelectSQL ServerDateTime SetConstant SetManagedFolderFieldsState ShowConstantsInputDialog ShowMessage Sleep Split SQL SQL2XLSTAB SQLProfilingSendReport StrToDate SubString SubStringCount SystemSetting Time TimeDiff Today Transliterate Trim UpperCase UserStatus UTCToLocalTime ValidateXML VarIsClear VarIsEmpty VarIsNull WorkTimeDiff WriteFile WriteFileEx WriteObjectHistory \u0410\u043d\u0430\u043b\u0438\u0437 \u0411\u0430\u0437\u0430\u0414\u0430\u043d\u043d\u044b\u0445 \u0411\u043b\u043e\u043a\u0415\u0441\u0442\u044c \u0411\u043b\u043e\u043a\u0415\u0441\u0442\u044c\u0420\u0430\u0441\u0448 \u0411\u043b\u043e\u043a\u0418\u043d\u0444\u043e \u0411\u043b\u043e\u043a\u0421\u043d\u044f\u0442\u044c \u0411\u043b\u043e\u043a\u0421\u043d\u044f\u0442\u044c\u0420\u0430\u0441\u0448 \u0411\u043b\u043e\u043a\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0412\u0432\u043e\u0434 \u0412\u0432\u043e\u0434\u041c\u0435\u043d\u044e \u0412\u0435\u0434\u0421 \u0412\u0435\u0434\u0421\u043f\u0440 \u0412\u0435\u0440\u0445\u043d\u044f\u044f\u0413\u0440\u0430\u043d\u0438\u0446\u0430\u041c\u0430\u0441\u0441\u0438\u0432\u0430 \u0412\u043d\u0435\u0448\u041f\u0440\u043e\u0433\u0440 \u0412\u043e\u0441\u0441\u0442 \u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\u041f\u0430\u043f\u043a\u0430 \u0412\u0440\u0435\u043c\u044f \u0412\u044b\u0431\u043e\u0440SQL \u0412\u044b\u0431\u0440\u0430\u0442\u044c\u0417\u0430\u043f\u0438\u0441\u044c \u0412\u044b\u0434\u0435\u043b\u0438\u0442\u044c\u0421\u0442\u0440 \u0412\u044b\u0437\u0432\u0430\u0442\u044c \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0412\u044b\u043f\u041f\u0440\u043e\u0433\u0440 \u0413\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0439\u0424\u0430\u0439\u043b \u0413\u0440\u0443\u043f\u043f\u0430\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0414\u0430\u0442\u0430\u0412\u0440\u0435\u043c\u044f\u0421\u0435\u0440\u0432 \u0414\u0435\u043d\u044c\u041d\u0435\u0434\u0435\u043b\u0438 \u0414\u0438\u0430\u043b\u043e\u0433\u0414\u0430\u041d\u0435\u0442 \u0414\u043b\u0438\u043d\u0430\u0421\u0442\u0440 \u0414\u043e\u0431\u041f\u043e\u0434\u0441\u0442\u0440 \u0415\u041f\u0443\u0441\u0442\u043e \u0415\u0441\u043b\u0438\u0422\u043e \u0415\u0427\u0438\u0441\u043b\u043e \u0417\u0430\u043c\u041f\u043e\u0434\u0441\u0442\u0440 \u0417\u0430\u043f\u0438\u0441\u044c\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430 \u0417\u043d\u0430\u0447\u041f\u043e\u043b\u044f\u0421\u043f\u0440 \u0418\u0414\u0422\u0438\u043f\u0421\u043f\u0440 \u0418\u0437\u0432\u043b\u0435\u0447\u044c\u0414\u0438\u0441\u043a \u0418\u0437\u0432\u043b\u0435\u0447\u044c\u0418\u043c\u044f\u0424\u0430\u0439\u043b\u0430 \u0418\u0437\u0432\u043b\u0435\u0447\u044c\u041f\u0443\u0442\u044c \u0418\u0437\u0432\u043b\u0435\u0447\u044c\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0418\u0437\u043c\u0414\u0430\u0442 \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c\u0420\u0430\u0437\u043c\u0435\u0440\u041c\u0430\u0441\u0441\u0438\u0432\u0430 \u0418\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439\u041c\u0430\u0441\u0441\u0438\u0432\u0430 \u0418\u043c\u044f\u041e\u0440\u0433 \u0418\u043c\u044f\u041f\u043e\u043b\u044f\u0421\u043f\u0440 \u0418\u043d\u0434\u0435\u043a\u0441 \u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u0428\u0430\u0433 \u0418\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439\u0420\u0435\u0436\u0438\u043c \u0418\u0442\u043e\u0433\u0422\u0431\u043b\u0421\u043f\u0440 \u041a\u043e\u0434\u0412\u0438\u0434\u0412\u0435\u0434\u0421\u043f\u0440 \u041a\u043e\u0434\u0412\u0438\u0434\u0421\u043f\u0440\u041f\u043e\u0418\u0414 \u041a\u043e\u0434\u041f\u043eAnalit \u041a\u043e\u0434\u0421\u0438\u043c\u0432\u043e\u043b\u0430 \u041a\u043e\u0434\u0421\u043f\u0440 \u041a\u043e\u043b\u041f\u043e\u0434\u0441\u0442\u0440 \u041a\u043e\u043b\u041f\u0440\u043e\u043f \u041a\u043e\u043d\u041c\u0435\u0441 \u041a\u043e\u043d\u0441\u0442 \u041a\u043e\u043d\u0441\u0442\u0415\u0441\u0442\u044c \u041a\u043e\u043d\u0441\u0442\u0417\u043d\u0430\u0447 \u041a\u043e\u043d\u0422\u0440\u0430\u043d \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0424\u0430\u0439\u043b \u041a\u043e\u043f\u0438\u044f\u0421\u0442\u0440 \u041a\u041f\u0435\u0440\u0438\u043e\u0434 \u041a\u0421\u0442\u0440\u0422\u0431\u043b\u0421\u043f\u0440 \u041c\u0430\u043a\u0441 \u041c\u0430\u043a\u0441\u0421\u0442\u0440\u0422\u0431\u043b\u0421\u043f\u0440 \u041c\u0430\u0441\u0441\u0438\u0432 \u041c\u0435\u043d\u044e \u041c\u0435\u043d\u044e\u0420\u0430\u0441\u0448 \u041c\u0438\u043d \u041d\u0430\u0431\u043e\u0440\u0414\u0430\u043d\u043d\u044b\u0445\u041d\u0430\u0439\u0442\u0438\u0420\u0430\u0441\u0448 \u041d\u0430\u0438\u043c\u0412\u0438\u0434\u0421\u043f\u0440 \u041d\u0430\u0438\u043c\u041f\u043eAnalit \u041d\u0430\u0438\u043c\u0421\u043f\u0440 \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c\u041f\u0435\u0440\u0435\u0432\u043e\u0434\u044b\u0421\u0442\u0440\u043e\u043a \u041d\u0430\u0447\u041c\u0435\u0441 \u041d\u0430\u0447\u0422\u0440\u0430\u043d \u041d\u0438\u0436\u043d\u044f\u044f\u0413\u0440\u0430\u043d\u0438\u0446\u0430\u041c\u0430\u0441\u0441\u0438\u0432\u0430 \u041d\u043e\u043c\u0435\u0440\u0421\u043f\u0440 \u041d\u041f\u0435\u0440\u0438\u043e\u0434 \u041e\u043a\u043d\u043e \u041e\u043a\u0440 \u041e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u041e\u0442\u043b\u0418\u043d\u0444\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u041e\u0442\u043b\u0418\u043d\u0444\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u041e\u0442\u0447\u0435\u0442 \u041e\u0442\u0447\u0435\u0442\u0410\u043d\u0430\u043b \u041e\u0442\u0447\u0435\u0442\u0418\u043d\u0442 \u041f\u0430\u043f\u043a\u0430\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u041f\u0430\u0443\u0437\u0430 \u041f\u0412\u044b\u0431\u043e\u0440SQL \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c\u0424\u0430\u0439\u043b \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0424\u0430\u0439\u043b \u041f\u043e\u0434\u0441\u0442\u0440 \u041f\u043e\u0438\u0441\u043a\u041f\u043e\u0434\u0441\u0442\u0440 \u041f\u043e\u0438\u0441\u043a\u0421\u0442\u0440 \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0418\u0414\u0422\u0430\u0431\u043b\u0438\u0446\u044b \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0418\u0414 \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0418\u043c\u044f \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0421\u0442\u0430\u0442\u0443\u0441 \u041f\u0440\u0435\u0440\u0432\u0430\u0442\u044c \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0417\u043d\u0430\u0447 \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0420\u0430\u0437\u0431\u0421\u0442\u0440 \u0420\u0430\u0437\u043d\u0412\u0440\u0435\u043c\u044f \u0420\u0430\u0437\u043d\u0414\u0430\u0442 \u0420\u0430\u0437\u043d\u0414\u0430\u0442\u0430\u0412\u0440\u0435\u043c\u044f \u0420\u0430\u0437\u043d\u0420\u0430\u0431\u0412\u0440\u0435\u043c\u044f \u0420\u0435\u0433\u0423\u0441\u0442\u0412\u0440\u0435\u043c \u0420\u0435\u0433\u0423\u0441\u0442\u0414\u0430\u0442 \u0420\u0435\u0433\u0423\u0441\u0442\u0427\u0441\u043b \u0420\u0435\u0434\u0422\u0435\u043a\u0441\u0442 \u0420\u0435\u0435\u0441\u0442\u0440\u0417\u0430\u043f\u0438\u0441\u044c \u0420\u0435\u0435\u0441\u0442\u0440\u0421\u043f\u0438\u0441\u043e\u043a\u0418\u043c\u0435\u043d\u041f\u0430\u0440\u0430\u043c \u0420\u0435\u0435\u0441\u0442\u0440\u0427\u0442\u0435\u043d\u0438\u0435 \u0420\u0435\u043a\u0432\u0421\u043f\u0440 \u0420\u0435\u043a\u0432\u0421\u043f\u0440\u041f\u0440 \u0421\u0435\u0433\u043e\u0434\u043d\u044f \u0421\u0435\u0439\u0447\u0430\u0441 \u0421\u0435\u0440\u0432\u0435\u0440 \u0421\u0435\u0440\u0432\u0435\u0440\u041f\u0440\u043e\u0446\u0435\u0441\u0441\u0418\u0414 \u0421\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u0424\u0430\u0439\u043b\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0421\u0436\u041f\u0440\u043e\u0431 \u0421\u0438\u043c\u0432\u043e\u043b \u0421\u0438\u0441\u0442\u0435\u043c\u0430\u0414\u0438\u0440\u0435\u043a\u0442\u0443\u043c\u041a\u043e\u0434 \u0421\u0438\u0441\u0442\u0435\u043c\u0430\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0421\u0438\u0441\u0442\u0435\u043c\u0430\u041a\u043e\u0434 \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0414\u0438\u0430\u043b\u043e\u0433 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0414\u0438\u0430\u043b\u043e\u0433\u0412\u044b\u0431\u043e\u0440\u0430\u0418\u0437\u0414\u0432\u0443\u0445\u0421\u043f\u0438\u0441\u043a\u043e\u0432 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0414\u0438\u0430\u043b\u043e\u0433\u0412\u044b\u0431\u043e\u0440\u0430\u041f\u0430\u043f\u043a\u0438 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0414\u0438\u0430\u043b\u043e\u0433\u041e\u0442\u043a\u0440\u044b\u0442\u0438\u044f\u0424\u0430\u0439\u043b\u0430 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0414\u0438\u0430\u043b\u043e\u0433\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f\u0424\u0430\u0439\u043b\u0430 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0417\u0430\u043f\u0440\u043e\u0441 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0418\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u041c\u0430\u0441\u0441\u0438\u0432 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u041d\u0430\u0431\u043e\u0440\u0414\u0430\u043d\u043d\u044b\u0445 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u041e\u0431\u044a\u0435\u043a\u0442 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u041e\u0442\u0447\u0435\u0442 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u041f\u0430\u043f\u043a\u0443 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0420\u0435\u0434\u0430\u043a\u0442\u043e\u0440 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0421\u043f\u0438\u0441\u043e\u043a \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0421\u043f\u0438\u0441\u043e\u043a\u0421\u0442\u0440\u043e\u043a \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a \u0421\u043e\u0437\u0434\u0430\u0442\u044c\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0421\u043e\u0437\u0434\u0421\u043f\u0440 \u0421\u043e\u0441\u0442\u0421\u043f\u0440 \u0421\u043e\u0445\u0440 \u0421\u043e\u0445\u0440\u0421\u043f\u0440 \u0421\u043f\u0438\u0441\u043e\u043a\u0421\u0438\u0441\u0442\u0435\u043c \u0421\u043f\u0440 \u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a \u0421\u043f\u0440\u0411\u043b\u043e\u043a\u0415\u0441\u0442\u044c \u0421\u043f\u0440\u0411\u043b\u043e\u043a\u0421\u043d\u044f\u0442\u044c \u0421\u043f\u0440\u0411\u043b\u043e\u043a\u0421\u043d\u044f\u0442\u044c\u0420\u0430\u0441\u0448 \u0421\u043f\u0440\u0411\u043b\u043e\u043a\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0421\u043f\u0440\u0418\u0437\u043c\u041d\u0430\u0431\u0414\u0430\u043d \u0421\u043f\u0440\u041a\u043e\u0434 \u0421\u043f\u0440\u041d\u043e\u043c\u0435\u0440 \u0421\u043f\u0440\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0421\u043f\u0440\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0421\u043f\u0440\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0421\u043f\u0440\u041f\u0430\u0440\u0430\u043c \u0421\u043f\u0440\u041f\u043e\u043b\u0435\u0417\u043d\u0430\u0447 \u0421\u043f\u0440\u041f\u043e\u043b\u0435\u0418\u043c\u044f \u0421\u043f\u0440\u0420\u0435\u043a\u0432 \u0421\u043f\u0440\u0420\u0435\u043a\u0432\u0412\u0432\u0435\u0434\u0417\u043d \u0421\u043f\u0440\u0420\u0435\u043a\u0432\u041d\u043e\u0432\u044b\u0435 \u0421\u043f\u0440\u0420\u0435\u043a\u0432\u041f\u0440 \u0421\u043f\u0440\u0420\u0435\u043a\u0432\u041f\u0440\u0435\u0434\u0417\u043d \u0421\u043f\u0440\u0420\u0435\u043a\u0432\u0420\u0435\u0436\u0438\u043c \u0421\u043f\u0440\u0420\u0435\u043a\u0432\u0422\u0438\u043f\u0422\u0435\u043a\u0441\u0442 \u0421\u043f\u0440\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0421\u043f\u0440\u0421\u043e\u0441\u0442 \u0421\u043f\u0440\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0421\u043f\u0440\u0422\u0431\u043b\u0418\u0442\u043e\u0433 \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440 \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u041a\u043e\u043b \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u041c\u0430\u043a\u0441 \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u041c\u0438\u043d \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u041f\u0440\u0435\u0434 \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u0421\u043b\u0435\u0434 \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u0421\u043e\u0437\u0434 \u0421\u043f\u0440\u0422\u0431\u043b\u0421\u0442\u0440\u0423\u0434 \u0421\u043f\u0440\u0422\u0435\u043a\u041f\u0440\u0435\u0434\u0441\u0442 \u0421\u043f\u0440\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0421\u0440\u0430\u0432\u043d\u0438\u0442\u044c\u0421\u0442\u0440 \u0421\u0442\u0440\u0412\u0435\u0440\u0445\u0420\u0435\u0433\u0438\u0441\u0442\u0440 \u0421\u0442\u0440\u041d\u0438\u0436\u043d\u0420\u0435\u0433\u0438\u0441\u0442\u0440 \u0421\u0442\u0440\u0422\u0431\u043b\u0421\u043f\u0440 \u0421\u0443\u043c\u041f\u0440\u043e\u043f \u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0439\u041f\u0430\u0440\u0430\u043c \u0422\u0435\u043a\u0412\u0435\u0440\u0441\u0438\u044f \u0422\u0435\u043a\u041e\u0440\u0433 \u0422\u043e\u0447\u043d \u0422\u0440\u0430\u043d \u0422\u0440\u0430\u043d\u0441\u043b\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f \u0423\u0434\u0430\u043b\u0438\u0442\u044c\u0422\u0430\u0431\u043b\u0438\u0446\u0443 \u0423\u0434\u0430\u043b\u0438\u0442\u044c\u0424\u0430\u0439\u043b \u0423\u0434\u0421\u043f\u0440 \u0423\u0434\u0421\u0442\u0440\u0422\u0431\u043b\u0421\u043f\u0440 \u0423\u0441\u0442 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438\u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442 \u0424\u0430\u0439\u043b\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0424\u0430\u0439\u043b\u0412\u0440\u0435\u043c\u044f \u0424\u0430\u0439\u043b\u0412\u0440\u0435\u043c\u044f\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0424\u0430\u0439\u043b\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u0417\u0430\u043d\u044f\u0442 \u0424\u0430\u0439\u043b\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u0418\u0441\u043a\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u041c\u043e\u0436\u043d\u043e\u0427\u0438\u0442\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0424\u0430\u0439\u043b\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u041f\u0435\u0440\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0424\u0430\u0439\u043b\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0424\u0430\u0439\u043b\u0420\u0430\u0437\u043c\u0435\u0440 \u0424\u0430\u0439\u043b\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u0421\u0441\u044b\u043b\u043a\u0430\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0424\u0430\u0439\u043b\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0424\u0430\u0439\u043b\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0424\u043c\u0442SQL\u0414\u0430\u0442 \u0424\u043c\u0442\u0414\u0430\u0442 \u0424\u043c\u0442\u0421\u0442\u0440 \u0424\u043c\u0442\u0427\u0441\u043b \u0424\u043e\u0440\u043c\u0430\u0442 \u0426\u041c\u0430\u0441\u0441\u0438\u0432\u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0426\u041d\u0430\u0431\u043e\u0440\u0414\u0430\u043d\u043d\u044b\u0445\u0420\u0435\u043a\u0432\u0438\u0437\u0438\u0442 \u0426\u041f\u043e\u0434\u0441\u0442\u0440 "},begin:d,end:"\\(",returnBegin:!0,excludeEnd:!0},o,c,a,n,i]},l,o,c,a,n,i]}}},1956:function(e){var t="[0-9](_*[0-9])*",n="\\.(".concat(t,")"),a="[0-9a-fA-F](_*[0-9a-fA-F])*",s={className:"number",variants:[{begin:"(\\b(".concat(t,")((").concat(n,")|\\.)?|(").concat(n,"))")+"[eE][+-]?(".concat(t,")[fFdD]?\\b")},{begin:"\\b(".concat(t,")((").concat(n,")[fFdD]?\\b|\\.([fFdD]\\b)?)")},{begin:"(".concat(n,")[fFdD]?\\b")},{begin:"\\b(".concat(t,")[fFdD]\\b")},{begin:"\\b0[xX]((".concat(a,")\\.?|(").concat(a,")?\\.(").concat(a,"))")+"[pP][+-]?(".concat(t,")[fFdD]?\\b")},{begin:"\\b(0|[1-9](_*[0-9])*)[lL]?\\b"},{begin:"\\b0[xX](".concat(a,")[lL]?\\b")},{begin:"\\b0(_*[0-7])*[lL]?\\b"},{begin:"\\b0[bB][01](_*[01])*[lL]?\\b"}],relevance:0};e.exports=function(e){var t="[\xc0-\u02b8a-zA-Z_$][\xc0-\u02b8a-zA-Z_$0-9]*",n=t+"(<"+t+"(\\s*,\\s*"+t+")*>)?",a="false synchronized int abstract float private char boolean var static null if const for true while long strictfp finally protected import native final void enum else break transient catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private module requires exports do",i={className:"meta",begin:"@"+t,contains:[{begin:/\(/,end:/\)/,contains:["self"]}]},r=s;return{name:"Java",aliases:["jsp"],keywords:a,illegal:/<\/|#/,contains:[e.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{begin:/\w+@/,relevance:0},{className:"doctag",begin:"@[A-Za-z]+"}]}),{begin:/import java\.[a-z]+\./,keywords:"import",relevance:2},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"class",beginKeywords:"class interface enum",end:/[{;=]/,excludeEnd:!0,relevance:1,keywords:"class interface enum",illegal:/[:"\[\]]/,contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{beginKeywords:"new throw return else",relevance:0},{className:"class",begin:"record\\s+"+e.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,excludeEnd:!0,end:/[{;=]/,keywords:a,contains:[{beginKeywords:"record"},{begin:e.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,relevance:0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"params",begin:/\(/,end:/\)/,keywords:a,relevance:0,contains:[e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:"function",begin:"("+n+"\\s+)+"+e.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:a,contains:[{begin:e.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,relevance:0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"params",begin:/\(/,end:/\)/,keywords:a,relevance:0,contains:[i,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,r,e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},r,i]}}},5418:function(e){var t="[A-Za-z$_][0-9A-Za-z$_]*",n=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],a=["true","false","null","undefined","NaN","Infinity"],s=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"]);function i(e){return r("(?=",e,")")}function r(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var o=t,l="<>",c="</>",d={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:function(e,t){var n=e[0].length+e.index,a=e.input[n];"<"!==a?">"===a&&(function(e,t){var n=t.after,a="</"+e[0].slice(1);return-1!==e.input.indexOf(a,n)}(e,{after:n})||t.ignoreMatch()):t.ignoreMatch()}},u={$pattern:t,keyword:n,literal:a,built_in:s},p="[0-9](_?[0-9])*",m="\\.(".concat(p,")"),h="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",f={className:"number",variants:[{begin:"(\\b(".concat(h,")((").concat(m,")|\\.)?|(").concat(m,"))")+"[eE][+-]?(".concat(p,")\\b")},{begin:"\\b(".concat(h,")\\b((").concat(m,")\\b|\\.)?|(").concat(m,")\\b")},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},g={className:"subst",begin:"\\$\\{",end:"\\}",keywords:u,contains:[]},x={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,g],subLanguage:"xml"}},_={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,g],subLanguage:"css"}},b={className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE,g]},y={className:"comment",variants:[e.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+",contains:[{className:"type",begin:"\\{",end:"\\}",relevance:0},{className:"variable",begin:o+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]},v=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,x,_,b,f,e.REGEXP_MODE];g.contains=v.concat({begin:/\{/,end:/\}/,keywords:u,contains:["self"].concat(v)});var N=[].concat(y,g.contains),E=N.concat([{begin:/\(/,end:/\)/,keywords:u,contains:["self"].concat(N)}]),S={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:E};return{name:"Javascript",aliases:["js","jsx","mjs","cjs"],keywords:u,exports:{PARAMS_CONTAINS:E},illegal:/#(?![$_A-z])/,contains:[e.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,x,_,b,y,f,{begin:r(/[{,\n]\s*/,i(r(/(((\/\/.*$)|(\/\*(\*[^/]|[^*])*\*\/))\s*)*/,o+"\\s*:"))),relevance:0,contains:[{className:"attr",begin:o+i("\\s*:"),relevance:0}]},{begin:"("+e.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[y,e.REGEXP_MODE,{className:"function",begin:"(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+e.UNDERSCORE_IDENT_RE+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:E}]}]},{begin:/,/,relevance:0},{className:"",begin:/\s/,end:/\s*/,skip:!0},{variants:[{begin:l,end:c},{begin:d.begin,"on:begin":d.isTrulyOpeningTag,end:d.end}],subLanguage:"xml",contains:[{begin:d.begin,end:d.end,skip:!0,contains:["self"]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,keywords:u,contains:["self",e.inherit(e.TITLE_MODE,{begin:o}),S],illegal:/%/},{beginKeywords:"while if switch catch for"},{className:"function",begin:e.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,contains:[S,e.inherit(e.TITLE_MODE,{begin:o})]},{variants:[{begin:"\\."+o},{begin:"\\$"+o}],relevance:0},{className:"class",beginKeywords:"class",end:/[{;=]/,excludeEnd:!0,illegal:/[:"[\]]/,contains:[{beginKeywords:"extends"},e.UNDERSCORE_TITLE_MODE]},{begin:/\b(?=constructor)/,end:/[{;]/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:o}),"self",S]},{begin:"(get|set)\\s+(?="+o+"\\()",end:/\{/,keywords:"get set",contains:[e.inherit(e.TITLE_MODE,{begin:o}),{begin:/\(\)/},S]},{begin:/\$[(.]/}]}}},352:function(e){e.exports=function(e){var t={className:"params",begin:/\(/,end:/\)/,contains:[{begin:/[\w-]+ *=/,returnBegin:!0,relevance:0,contains:[{className:"attr",begin:/[\w-]+/}]}],relevance:0};return{name:"JBoss CLI",aliases:["wildfly-cli"],keywords:{$pattern:"[a-z-]+",keyword:"alias batch cd clear command connect connection-factory connection-info data-source deploy deployment-info deployment-overlay echo echo-dmr help history if jdbc-driver-info jms-queue|20 jms-topic|20 ls patch pwd quit read-attribute read-operation reload rollout-plan run-batch set shutdown try unalias undeploy unset version xa-data-source",literal:"true false"},contains:[e.HASH_COMMENT_MODE,e.QUOTE_STRING_MODE,{className:"params",begin:/--[\w\-=\/]+/},{className:"function",begin:/:[\w\-.]+/,relevance:0},{className:"string",begin:/\B([\/.])[\w\-.\/=]+/},t]}}},7411:function(e){e.exports=function(e){var t={literal:"true false null"},n=[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],a=[e.QUOTE_STRING_MODE,e.C_NUMBER_MODE],s={end:",",endsWithParent:!0,excludeEnd:!0,contains:a,keywords:t},i={begin:/\{/,end:/\}/,contains:[{className:"attr",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE],illegal:"\\n"},e.inherit(s,{begin:/:/})].concat(n),illegal:"\\S"},r={begin:"\\[",end:"\\]",contains:[e.inherit(s)],illegal:"\\S"};return a.push(i,r),n.forEach((function(e){a.push(e)})),{name:"JSON",contains:a,keywords:t,illegal:"\\S"}}},6183:function(e){e.exports=function(e){return{name:"Julia REPL",contains:[{className:"meta",begin:/^julia>/,relevance:10,starts:{end:/^(?![ ]{6})/,subLanguage:"julia"},aliases:["jldoctest"]}]}}},1026:function(e){e.exports=function(e){var t="[A-Za-z_\\u00A1-\\uFFFF][A-Za-z_0-9\\u00A1-\\uFFFF]*",n={$pattern:t,keyword:["baremodule","begin","break","catch","ccall","const","continue","do","else","elseif","end","export","false","finally","for","function","global","if","import","in","isa","let","local","macro","module","quote","return","true","try","using","where","while"],literal:["ARGS","C_NULL","DEPOT_PATH","ENDIAN_BOM","ENV","Inf","Inf16","Inf32","Inf64","InsertionSort","LOAD_PATH","MergeSort","NaN","NaN16","NaN32","NaN64","PROGRAM_FILE","QuickSort","RoundDown","RoundFromZero","RoundNearest","RoundNearestTiesAway","RoundNearestTiesUp","RoundToZero","RoundUp","VERSION|0","devnull","false","im","missing","nothing","pi","stderr","stdin","stdout","true","undef","\u03c0","\u212f"],built_in:["AbstractArray","AbstractChannel","AbstractChar","AbstractDict","AbstractDisplay","AbstractFloat","AbstractIrrational","AbstractMatrix","AbstractRange","AbstractSet","AbstractString","AbstractUnitRange","AbstractVecOrMat","AbstractVector","Any","ArgumentError","Array","AssertionError","BigFloat","BigInt","BitArray","BitMatrix","BitSet","BitVector","Bool","BoundsError","CapturedException","CartesianIndex","CartesianIndices","Cchar","Cdouble","Cfloat","Channel","Char","Cint","Cintmax_t","Clong","Clonglong","Cmd","Colon","Complex","ComplexF16","ComplexF32","ComplexF64","CompositeException","Condition","Cptrdiff_t","Cshort","Csize_t","Cssize_t","Cstring","Cuchar","Cuint","Cuintmax_t","Culong","Culonglong","Cushort","Cvoid","Cwchar_t","Cwstring","DataType","DenseArray","DenseMatrix","DenseVecOrMat","DenseVector","Dict","DimensionMismatch","Dims","DivideError","DomainError","EOFError","Enum","ErrorException","Exception","ExponentialBackOff","Expr","Float16","Float32","Float64","Function","GlobalRef","HTML","IO","IOBuffer","IOContext","IOStream","IdDict","IndexCartesian","IndexLinear","IndexStyle","InexactError","InitError","Int","Int128","Int16","Int32","Int64","Int8","Integer","InterruptException","InvalidStateException","Irrational","KeyError","LinRange","LineNumberNode","LinearIndices","LoadError","MIME","Matrix","Method","MethodError","Missing","MissingException","Module","NTuple","NamedTuple","Nothing","Number","OrdinalRange","OutOfMemoryError","OverflowError","Pair","PartialQuickSort","PermutedDimsArray","Pipe","ProcessFailedException","Ptr","QuoteNode","Rational","RawFD","ReadOnlyMemoryError","Real","ReentrantLock","Ref","Regex","RegexMatch","RoundingMode","SegmentationFault","Set","Signed","Some","StackOverflowError","StepRange","StepRangeLen","StridedArray","StridedMatrix","StridedVecOrMat","StridedVector","String","StringIndexError","SubArray","SubString","SubstitutionString","Symbol","SystemError","Task","TaskFailedException","Text","TextDisplay","Timer","Tuple","Type","TypeError","TypeVar","UInt","UInt128","UInt16","UInt32","UInt64","UInt8","UndefInitializer","UndefKeywordError","UndefRefError","UndefVarError","Union","UnionAll","UnitRange","Unsigned","Val","Vararg","VecElement","VecOrMat","Vector","VersionNumber","WeakKeyDict","WeakRef"]},a={keywords:n,illegal:/<\//},s={className:"subst",begin:/\$\(/,end:/\)/,keywords:n},i={className:"variable",begin:"\\$"+t},r={className:"string",contains:[e.BACKSLASH_ESCAPE,s,i],variants:[{begin:/\w*"""/,end:/"""\w*/,relevance:10},{begin:/\w*"/,end:/"\w*/}]},o={className:"string",contains:[e.BACKSLASH_ESCAPE,s,i],begin:"`",end:"`"},l={className:"meta",begin:"@"+t};return a.name="Julia",a.contains=[{className:"number",begin:/(\b0x[\d_]*(\.[\d_]*)?|0x\.\d[\d_]*)p[-+]?\d+|\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\b\d[\d_]*(\.[\d_]*)?|\.\d[\d_]*)([eEfF][-+]?\d+)?/,relevance:0},{className:"string",begin:/'(.|\\[xXuU][a-zA-Z0-9]+)'/},r,o,l,{className:"comment",variants:[{begin:"#=",end:"=#",relevance:10},{begin:"#",end:"$"}]},e.HASH_COMMENT_MODE,{className:"keyword",begin:"\\b(((abstract|primitive)\\s+)type|(mutable\\s+)?struct)\\b"},{begin:/<:/}],s.contains=a.contains,a}},3282:function(e){var t="[0-9](_*[0-9])*",n="\\.(".concat(t,")"),a="[0-9a-fA-F](_*[0-9a-fA-F])*",s={className:"number",variants:[{begin:"(\\b(".concat(t,")((").concat(n,")|\\.)?|(").concat(n,"))")+"[eE][+-]?(".concat(t,")[fFdD]?\\b")},{begin:"\\b(".concat(t,")((").concat(n,")[fFdD]?\\b|\\.([fFdD]\\b)?)")},{begin:"(".concat(n,")[fFdD]?\\b")},{begin:"\\b(".concat(t,")[fFdD]\\b")},{begin:"\\b0[xX]((".concat(a,")\\.?|(").concat(a,")?\\.(").concat(a,"))")+"[pP][+-]?(".concat(t,")[fFdD]?\\b")},{begin:"\\b(0|[1-9](_*[0-9])*)[lL]?\\b"},{begin:"\\b0[xX](".concat(a,")[lL]?\\b")},{begin:"\\b0(_*[0-7])*[lL]?\\b"},{begin:"\\b0[bB][01](_*[01])*[lL]?\\b"}],relevance:0};e.exports=function(e){var t={keyword:"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual",built_in:"Byte Short Char Int Long Boolean Float Double Void Unit Nothing",literal:"true false null"},n={className:"symbol",begin:e.UNDERSCORE_IDENT_RE+"@"},a={className:"subst",begin:/\$\{/,end:/\}/,contains:[e.C_NUMBER_MODE]},i={className:"variable",begin:"\\$"+e.UNDERSCORE_IDENT_RE},r={className:"string",variants:[{begin:'"""',end:'"""(?=[^"])',contains:[i,a]},{begin:"'",end:"'",illegal:/\n/,contains:[e.BACKSLASH_ESCAPE]},{begin:'"',end:'"',illegal:/\n/,contains:[e.BACKSLASH_ESCAPE,i,a]}]};a.contains.push(r);var o={className:"meta",begin:"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*"+e.UNDERSCORE_IDENT_RE+")?"},l={className:"meta",begin:"@"+e.UNDERSCORE_IDENT_RE,contains:[{begin:/\(/,end:/\)/,contains:[e.inherit(r,{className:"meta-string"})]}]},c=s,d=e.COMMENT("/\\*","\\*/",{contains:[e.C_BLOCK_COMMENT_MODE]}),u={variants:[{className:"type",begin:e.UNDERSCORE_IDENT_RE},{begin:/\(/,end:/\)/,contains:[]}]},p=u;return p.variants[1].contains=[u],u.variants[1].contains=[p],{name:"Kotlin",aliases:["kt","kts"],keywords:t,contains:[e.COMMENT("/\\*\\*","\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"}]}),e.C_LINE_COMMENT_MODE,d,{className:"keyword",begin:/\b(break|continue|return|this)\b/,starts:{contains:[{className:"symbol",begin:/@\w+/}]}},n,o,l,{className:"function",beginKeywords:"fun",end:"[(]|$",returnBegin:!0,excludeEnd:!0,keywords:t,relevance:5,contains:[{begin:e.UNDERSCORE_IDENT_RE+"\\s*\\(",returnBegin:!0,relevance:0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"type",begin:/</,end:/>/,keywords:"reified",relevance:0},{className:"params",begin:/\(/,end:/\)/,endsParent:!0,keywords:t,relevance:0,contains:[{begin:/:/,end:/[=,\/]/,endsWithParent:!0,contains:[u,e.C_LINE_COMMENT_MODE,d],relevance:0},e.C_LINE_COMMENT_MODE,d,o,l,r,e.C_NUMBER_MODE]},d]},{className:"class",beginKeywords:"class interface trait",end:/[:\{(]|$/,excludeEnd:!0,illegal:"extends implements",contains:[{beginKeywords:"public protected internal private constructor"},e.UNDERSCORE_TITLE_MODE,{className:"type",begin:/</,end:/>/,excludeBegin:!0,excludeEnd:!0,relevance:0},{className:"type",begin:/[,:]\s*/,end:/[<\(,]|$/,excludeBegin:!0,returnEnd:!0},o,l]},r,{className:"meta",begin:"^#!/usr/bin/env",end:"$",illegal:"\n"},c]}}},699:function(e){e.exports=function(e){var t="[a-zA-Z_][\\w.]*",n="<\\?(lasso(script)?|=)",a="\\]|\\?>",s={$pattern:t+"|&[lg]t;",literal:"true false none minimal full all void and or not bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft",built_in:"array date decimal duration integer map pair string tag xml null boolean bytes keyword list locale queue set stack staticarray local var variable global data self inherited currentcapture givenblock",keyword:"cache database_names database_schemanames database_tablenames define_tag define_type email_batch encode_set html_comment handle handle_error header if inline iterate ljax_target link link_currentaction link_currentgroup link_currentrecord link_detail link_firstgroup link_firstrecord link_lastgroup link_lastrecord link_nextgroup link_nextrecord link_prevgroup link_prevrecord log loop namespace_using output_none portal private protect records referer referrer repeating resultset rows search_args search_arguments select sort_args sort_arguments thread_atomic value_list while abort case else fail_if fail_ifnot fail if_empty if_false if_null if_true loop_abort loop_continue loop_count params params_up return return_value run_children soap_definetag soap_lastrequest soap_lastresponse tag_name ascending average by define descending do equals frozen group handle_failure import in into join let match max min on order parent protected provide public require returnhome skip split_thread sum take thread to trait type where with yield yieldhome"},i=e.COMMENT("\x3c!--","--\x3e",{relevance:0}),r={className:"meta",begin:"\\[noprocess\\]",starts:{end:"\\[/noprocess\\]",returnEnd:!0,contains:[i]}},o={className:"meta",begin:"\\[/noprocess|"+n},l={className:"symbol",begin:"'"+t+"'"},c=[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.inherit(e.C_NUMBER_MODE,{begin:e.C_NUMBER_RE+"|(-?infinity|NaN)\\b"}),e.inherit(e.APOS_STRING_MODE,{illegal:null}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),{className:"string",begin:"`",end:"`"},{variants:[{begin:"[#$]"+t},{begin:"#",end:"\\d+",illegal:"\\W"}]},{className:"type",begin:"::\\s*",end:t,illegal:"\\W"},{className:"params",variants:[{begin:"-(?!infinity)"+t,relevance:0},{begin:"(\\.\\.\\.)"}]},{begin:/(->|\.)\s*/,relevance:0,contains:[l]},{className:"class",beginKeywords:"define",returnEnd:!0,end:"\\(|=>",contains:[e.inherit(e.TITLE_MODE,{begin:t+"(=(?!>))?|[-+*/%](?!>)"})]}];return{name:"Lasso",aliases:["ls","lassoscript"],case_insensitive:!0,keywords:s,contains:[{className:"meta",begin:a,relevance:0,starts:{end:"\\[|"+n,returnEnd:!0,relevance:0,contains:[i]}},r,o,{className:"meta",begin:"\\[no_square_brackets",starts:{end:"\\[/no_square_brackets\\]",keywords:s,contains:[{className:"meta",begin:a,relevance:0,starts:{end:"\\[noprocess\\]|"+n,returnEnd:!0,contains:[i]}},r,o].concat(c)}},{className:"meta",begin:"\\[",relevance:0},{className:"meta",begin:"^#!",end:"lasso9$",relevance:10}].concat(c)}}},9941:function(e,t,n){var a=n(861).default;function s(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return"("+t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("|")+")"}e.exports=function(e){var t,n=[{begin:/\^{6}[0-9a-f]{6}/},{begin:/\^{5}[0-9a-f]{5}/},{begin:/\^{4}[0-9a-f]{4}/},{begin:/\^{3}[0-9a-f]{3}/},{begin:/\^{2}[0-9a-f]{2}/},{begin:/\^{2}[\u0000-\u007f]/}],i=[{className:"keyword",begin:/\\/,relevance:0,contains:[{endsParent:!0,begin:s.apply(void 0,a(["(?:NeedsTeXFormat|RequirePackage|GetIdInfo)","Provides(?:Expl)?(?:Package|Class|File)","(?:DeclareOption|ProcessOptions)","(?:documentclass|usepackage|input|include)","makeat(?:letter|other)","ExplSyntax(?:On|Off)","(?:new|renew|provide)?command","(?:re)newenvironment","(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand","(?:New|Renew|Provide|Declare)DocumentEnvironment","(?:(?:e|g|x)?def|let)","(?:begin|end)","(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)","caption","(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)","(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)","(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)","(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)","(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)","(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)"].map((function(e){return e+"(?![a-zA-Z@:_])"}))))},{endsParent:!0,begin:new RegExp(["(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*","[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}","[qs]__?[a-zA-Z](?:_?[a-zA-Z])+","use(?:_i)?:[a-zA-Z]*","(?:else|fi|or):","(?:if|cs|exp):w","(?:hbox|vbox):n","::[a-zA-Z]_unbraced","::[a-zA-Z:]"].map((function(e){return e+"(?![a-zA-Z:_])"})).join("|"))},{endsParent:!0,variants:n},{endsParent:!0,relevance:0,variants:[{begin:/[a-zA-Z@]+/},{begin:/[^a-zA-Z@]?/}]}]},{className:"params",relevance:0,begin:/#+\d?/},{variants:n},{className:"built_in",relevance:0,begin:/[$&^_]/},{className:"meta",begin:"% !TeX",end:"$",relevance:10},e.COMMENT("%","$",{relevance:0})],r={begin:/\{/,end:/\}/,relevance:0,contains:["self"].concat(i)},o=e.inherit(r,{relevance:0,endsParent:!0,contains:[r].concat(i)}),l={begin:/\[/,end:/\]/,endsParent:!0,relevance:0,contains:[r].concat(i)},c={begin:/\s+/,relevance:0},d=[o],u=[l],p=function(e,t){return{contains:[c],starts:{relevance:0,contains:e,starts:t}}},m=function(e,t){return{begin:"\\\\"+e+"(?![a-zA-Z@:_])",keywords:{$pattern:/\\[a-zA-Z]+/,keyword:"\\"+e},relevance:0,contains:[c],starts:t}},h=function(t,n){return e.inherit({begin:"\\\\begin(?=[ \t]*(\\r?\\n[ \t]*)?\\{"+t+"\\})",keywords:{$pattern:/\\[a-zA-Z]+/,keyword:"\\begin"},relevance:0},p(d,n))},f=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"string";return e.END_SAME_AS_BEGIN({className:t,begin:/(.|\r?\n)/,end:/(.|\r?\n)/,excludeBegin:!0,excludeEnd:!0,endsParent:!0})},g=function(e){return{className:"string",end:"(?=\\\\end\\{"+e+"\\})"}},x=function(){return{relevance:0,begin:/\{/,starts:{endsParent:!0,contains:[{className:arguments.length>0&&void 0!==arguments[0]?arguments[0]:"string",end:/(?=\})/,endsParent:!0,contains:[{begin:/\{/,end:/\}/,relevance:0,contains:["self"]}]}]}}},_=[].concat(a(["verb","lstinline"].map((function(e){return m(e,{contains:[f()]})}))),[m("mint",p(d,{contains:[f()]})),m("mintinline",p(d,{contains:[x(),f()]})),m("url",{contains:[x("link"),x("link")]}),m("hyperref",{contains:[x("link")]}),m("href",p(u,{contains:[x("link")]}))],a((t=[]).concat.apply(t,a(["","\\*"].map((function(e){return[h("verbatim"+e,g("verbatim"+e)),h("filecontents"+e,p(d,g("filecontents"+e)))].concat(a(["","B","L"].map((function(t){return h(t+"Verbatim"+e,p(u,g(t+"Verbatim"+e)))}))))}))))),[h("minted",p(u,p(d,g("minted"))))]);return{name:"LaTeX",aliases:["tex"],contains:[].concat(a(_),i)}}},1151:function(e){e.exports=function(e){return{name:"LDIF",contains:[{className:"attribute",begin:"^dn",end:": ",excludeEnd:!0,starts:{end:"$",relevance:0},relevance:10},{className:"attribute",begin:"^\\w",end:": ",excludeEnd:!0,starts:{end:"$",relevance:0}},{className:"literal",begin:"^-",end:"$"},e.HASH_COMMENT_MODE]}}},7898:function(e){e.exports=function(e){return{name:"Leaf",contains:[{className:"function",begin:"#+[A-Za-z_0-9]*\\(",end:/ \{/,returnBegin:!0,excludeEnd:!0,contains:[{className:"keyword",begin:"#+"},{className:"title",begin:"[A-Za-z_][A-Za-z_0-9]*"},{className:"params",begin:"\\(",end:"\\)",endsParent:!0,contains:[{className:"string",begin:'"',end:'"'},{className:"variable",begin:"[A-Za-z_][A-Za-z_0-9]*"}]}]}]}}},7515:function(e){var t=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],n=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],a=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],s=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],i=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","auto","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","clip-path","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-variant","font-variant-ligatures","font-variation-settings","font-weight","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inherit","initial","justify-content","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marks","mask","max-height","max-width","min-height","min-width","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","perspective","perspective-origin","pointer-events","position","quotes","resize","right","src","tab-size","table-layout","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-indent","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"].reverse(),r=a.concat(s);e.exports=function(e){var o=function(e){return{IMPORTANT:{className:"meta",begin:"!important"},HEXCOLOR:{className:"number",begin:"#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})"},ATTRIBUTE_SELECTOR_MODE:{className:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}}}(e),l=r,c="[\\w-]+",d="("+c+"|@\\{"+c+"\\})",u=[],p=[],m=function(e){return{className:"string",begin:"~?"+e+".*?"+e}},h=function(e,t,n){return{className:e,begin:t,relevance:n}},f={$pattern:/[a-z-]+/,keyword:"and or not only",attribute:n.join(" ")},g={begin:"\\(",end:"\\)",contains:p,keywords:f,relevance:0};p.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,m("'"),m('"'),e.CSS_NUMBER_MODE,{begin:"(url|data-uri)\\(",starts:{className:"string",end:"[\\)\\n]",excludeEnd:!0}},o.HEXCOLOR,g,h("variable","@@?"+c,10),h("variable","@\\{"+c+"\\}"),h("built_in","~?`[^`]*?`"),{className:"attribute",begin:c+"\\s*:",end:":",returnBegin:!0,excludeEnd:!0},o.IMPORTANT);var x=p.concat({begin:/\{/,end:/\}/,contains:u}),_={beginKeywords:"when",endsWithParent:!0,contains:[{beginKeywords:"and not"}].concat(p)},b={begin:d+"\\s*:",returnBegin:!0,end:/[;}]/,relevance:0,contains:[{begin:/-(webkit|moz|ms|o)-/},{className:"attribute",begin:"\\b("+i.join("|")+")\\b",end:/(?=:)/,starts:{endsWithParent:!0,illegal:"[<=$]",relevance:0,contains:p}}]},y={className:"keyword",begin:"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",starts:{end:"[;{}]",keywords:f,returnEnd:!0,contains:p,relevance:0}},v={className:"variable",variants:[{begin:"@"+c+"\\s*:",relevance:15},{begin:"@"+c}],starts:{end:"[;}]",returnEnd:!0,contains:x}},N={variants:[{begin:"[\\.#:&\\[>]",end:"[;{}]"},{begin:d,end:/\{/}],returnBegin:!0,returnEnd:!0,illegal:"[<='$\"]",relevance:0,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,_,h("keyword","all\\b"),h("variable","@\\{"+c+"\\}"),{begin:"\\b("+t.join("|")+")\\b",className:"selector-tag"},h("selector-tag",d+"%?",0),h("selector-id","#"+d),h("selector-class","\\."+d,0),h("selector-tag","&",0),o.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",begin:":("+a.join("|")+")"},{className:"selector-pseudo",begin:"::("+s.join("|")+")"},{begin:"\\(",end:"\\)",contains:x},{begin:"!important"}]},E={begin:c+":(:)?"+"(".concat(l.join("|"),")"),returnBegin:!0,contains:[N]};return u.push(e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,y,v,E,b,N),{name:"Less",case_insensitive:!0,illegal:"[=>'/<($\"]",contains:u}}},2569:function(e){e.exports=function(e){var t="[a-zA-Z_\\-+\\*\\/<=>&#][a-zA-Z0-9_\\-+*\\/<=>&#!]*",n="\\|[^]*?\\|",a="(-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|-)?\\d+)?",s={className:"literal",begin:"\\b(t{1}|nil)\\b"},i={className:"number",variants:[{begin:a,relevance:0},{begin:"#(b|B)[0-1]+(/[0-1]+)?"},{begin:"#(o|O)[0-7]+(/[0-7]+)?"},{begin:"#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?"},{begin:"#(c|C)\\("+a+" +"+a,end:"\\)"}]},r=e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),o=e.COMMENT(";","$",{relevance:0}),l={begin:"\\*",end:"\\*"},c={className:"symbol",begin:"[:&]"+t},d={begin:t,relevance:0},u={begin:n},p={contains:[i,r,l,c,{begin:"\\(",end:"\\)",contains:["self",s,r,i,d]},d],variants:[{begin:"['`]\\(",end:"\\)"},{begin:"\\(quote ",end:"\\)",keywords:{name:"quote"}},{begin:"'"+n}]},m={variants:[{begin:"'"+t},{begin:"#'"+t+"(::"+t+")*"}]},h={begin:"\\(\\s*",end:"\\)"},f={endsWithParent:!0,relevance:0};return h.contains=[{className:"name",variants:[{begin:t,relevance:0},{begin:n}]},f],f.contains=[p,m,h,s,i,r,o,l,c,u,d],{name:"Lisp",illegal:/\S/,contains:[i,e.SHEBANG(),s,r,o,p,m,h,d]}}},5261:function(e){e.exports=function(e){var t={className:"variable",variants:[{begin:"\\b([gtps][A-Z]{1}[a-zA-Z0-9]*)(\\[.+\\])?(?:\\s*?)"},{begin:"\\$_[A-Z]+"}],relevance:0},n=[e.C_BLOCK_COMMENT_MODE,e.HASH_COMMENT_MODE,e.COMMENT("--","$"),e.COMMENT("[^:]//","$")],a=e.inherit(e.TITLE_MODE,{variants:[{begin:"\\b_*rig[A-Z][A-Za-z0-9_\\-]*"},{begin:"\\b_[a-z0-9\\-]+"}]}),s=e.inherit(e.TITLE_MODE,{begin:"\\b([A-Za-z0-9_\\-]+)\\b"});return{name:"LiveCode",case_insensitive:!1,keywords:{keyword:"$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph after byte bytes english the until http forever descending using line real8 with seventh for stdout finally element word words fourth before black ninth sixth characters chars stderr uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat end repeat URL in try into switch to words https token binfile each tenth as ticks tick system real4 by dateItems without char character ascending eighth whole dateTime numeric short first ftp integer abbreviated abbr abbrev private case while if div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within contains ends with begins the keys of keys",literal:"SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five quote empty one true return cr linefeed right backslash null seven tab three two RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK",built_in:"put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress constantNames cos date dateFormat decompress difference directories diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge messageAuthenticationCode messageDigest millisec millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process combine constant convert create new alias folder directory decrypt delete variable word line folder directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback libURLSetDriver libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime libURLSetStatusCallback load extension loadedExtensions multiply socket prepare process post seek rel relative read from process rename replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop subtract symmetric union unload vectorDotProduct wait write"},contains:[t,{className:"keyword",begin:"\\bend\\sif\\b"},{className:"function",beginKeywords:"function",end:"$",contains:[t,s,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE,a]},{className:"function",begin:"\\bend\\s+",end:"$",keywords:"end",contains:[s,a],relevance:0},{beginKeywords:"command on",end:"$",contains:[t,s,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE,a]},{className:"meta",variants:[{begin:"<\\?(rev|lc|livecode)",relevance:10},{begin:"<\\?"},{begin:"\\?>"}]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE,a].concat(n),illegal:";$|^\\[|^=|&|\\{"}}},4260:function(e){var t=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],n=["true","false","null","undefined","NaN","Infinity"],a=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"]);e.exports=function(e){var s={keyword:t.concat(["then","unless","until","loop","of","by","when","and","or","is","isnt","not","it","that","otherwise","from","to","til","fallthrough","case","enum","native","list","map","__hasProp","__extends","__slice","__bind","__indexOf"]),literal:n.concat(["yes","no","on","off","it","that","void"]),built_in:a.concat(["npm","print"])},i="[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*",r=e.inherit(e.TITLE_MODE,{begin:i}),o={className:"subst",begin:/#\{/,end:/\}/,keywords:s},l={className:"subst",begin:/#[A-Za-z$_]/,end:/(?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,keywords:s},c=[e.BINARY_NUMBER_MODE,{className:"number",begin:"(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)",relevance:0,starts:{end:"(\\s*/)?",relevance:0}},{className:"string",variants:[{begin:/'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE]},{begin:/'/,end:/'/,contains:[e.BACKSLASH_ESCAPE]},{begin:/"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,o,l]},{begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,o,l]},{begin:/\\/,end:/(\s|$)/,excludeEnd:!0}]},{className:"regexp",variants:[{begin:"//",end:"//[gim]*",contains:[o,e.HASH_COMMENT_MODE]},{begin:/\/(?![ *])(\\.|[^\\\n])*?\/[gim]*(?=\W)/}]},{begin:"@"+i},{begin:"``",end:"``",excludeBegin:!0,excludeEnd:!0,subLanguage:"javascript"}];o.contains=c;var d={className:"params",begin:"\\(",returnBegin:!0,contains:[{begin:/\(/,end:/\)/,keywords:s,contains:["self"].concat(c)}]};return{name:"LiveScript",aliases:["ls"],keywords:s,illegal:/\/\*/,contains:c.concat([e.COMMENT("\\/\\*","\\*\\/"),e.HASH_COMMENT_MODE,{begin:"(#=>|=>|\\|>>|-?->|!->)"},{className:"function",contains:[r,d],returnBegin:!0,variants:[{begin:"("+i+"\\s*(?:=|:=)\\s*)?(\\(.*\\)\\s*)?\\B->\\*?",end:"->\\*?"},{begin:"("+i+"\\s*(?:=|:=)\\s*)?!?(\\(.*\\)\\s*)?\\B[-~]{1,2}>\\*?",end:"[-~]{1,2}>\\*?"},{begin:"("+i+"\\s*(?:=|:=)\\s*)?(\\(.*\\)\\s*)?\\B!?[-~]{1,2}>\\*?",end:"!?[-~]{1,2}>\\*?"}]},{className:"class",beginKeywords:"class",end:"$",illegal:/[:="\[\]]/,contains:[{beginKeywords:"extends",endsWithParent:!0,illegal:/[:="\[\]]/,contains:[r]},r]},{begin:i+":",end:":",returnBegin:!0,returnEnd:!0,relevance:0}])}}},3770:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n=/([-a-zA-Z$._][\w$.-]*)/,a={className:"variable",variants:[{begin:t(/%/,n)},{begin:/%\d+/},{begin:/#\d+/}]},s={className:"title",variants:[{begin:t(/@/,n)},{begin:/@\d+/},{begin:t(/!/,n)},{begin:t(/!\d+/,n)},{begin:/!\d+/}]};return{name:"LLVM IR",keywords:"begin end true false declare define global constant private linker_private internal available_externally linkonce linkonce_odr weak weak_odr appending dllimport dllexport common default hidden protected extern_weak external thread_local zeroinitializer undef null to tail target triple datalayout volatile nuw nsw nnan ninf nsz arcp fast exact inbounds align addrspace section alias module asm sideeffect gc dbg linker_private_weak attributes blockaddress initialexec localdynamic localexec prefix unnamed_addr ccc fastcc coldcc x86_stdcallcc x86_fastcallcc arm_apcscc arm_aapcscc arm_aapcs_vfpcc ptx_device ptx_kernel intel_ocl_bicc msp430_intrcc spir_func spir_kernel x86_64_sysvcc x86_64_win64cc x86_thiscallcc cc c signext zeroext inreg sret nounwind noreturn noalias nocapture byval nest readnone readonly inlinehint noinline alwaysinline optsize ssp sspreq noredzone noimplicitfloat naked builtin cold nobuiltin noduplicate nonlazybind optnone returns_twice sanitize_address sanitize_memory sanitize_thread sspstrong uwtable returned type opaque eq ne slt sgt sle sge ult ugt ule uge oeq one olt ogt ole oge ord uno ueq une x acq_rel acquire alignstack atomic catch cleanup filter inteldialect max min monotonic nand personality release seq_cst singlethread umax umin unordered xchg add fadd sub fsub mul fmul udiv sdiv fdiv urem srem frem shl lshr ashr and or xor icmp fcmp phi call trunc zext sext fptrunc fpext uitofp sitofp fptoui fptosi inttoptr ptrtoint bitcast addrspacecast select va_arg ret br switch invoke unwind unreachable indirectbr landingpad resume malloc alloca free load store getelementptr extractelement insertelement shufflevector getresult extractvalue insertvalue atomicrmw cmpxchg fence argmemonly double",contains:[{className:"type",begin:/\bi\d+(?=\s|\b)/},e.COMMENT(/;\s*$/,null,{relevance:0}),e.COMMENT(/;/,/$/),e.QUOTE_STRING_MODE,{className:"string",variants:[{begin:/"/,end:/[^\\]"/}]},s,{className:"punctuation",relevance:0,begin:/,/},{className:"operator",relevance:0,begin:/=/},a,{className:"symbol",variants:[{begin:/^\s*[a-z]+:/}],relevance:0},{className:"number",variants:[{begin:/0[xX][a-fA-F0-9]+/},{begin:/-?\d+(?:[.]\d+)?(?:[eE][-+]?\d+(?:[.]\d+)?)?/}],relevance:0}]}}},4552:function(e){e.exports=function(e){var t={className:"string",begin:'"',end:'"',contains:[{className:"subst",begin:/\\[tn"\\]/}]},n={className:"number",relevance:0,begin:e.C_NUMBER_RE};return{name:"LSL (Linden Scripting Language)",illegal:":",contains:[t,{className:"comment",variants:[e.COMMENT("//","$"),e.COMMENT("/\\*","\\*/")],relevance:0},n,{className:"section",variants:[{begin:"\\b(state|default)\\b"},{begin:"\\b(state_(entry|exit)|touch(_(start|end))?|(land_)?collision(_(start|end))?|timer|listen|(no_)?sensor|control|(not_)?at_(rot_)?target|money|email|experience_permissions(_denied)?|run_time_permissions|changed|attach|dataserver|moving_(start|end)|link_message|(on|object)_rez|remote_data|http_re(sponse|quest)|path_update|transaction_result)\\b"}]},{className:"built_in",begin:"\\b(ll(AgentInExperience|(Create|DataSize|Delete|KeyCount|Keys|Read|Update)KeyValue|GetExperience(Details|ErrorMessage)|ReturnObjectsBy(ID|Owner)|Json(2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(Mag|Norm|Dist)|Rot(Between|2(Euler|Fwd|Left|Up))|(Euler|Axes)2Rot|Whisper|(Region|Owner)?Say|Shout|Listen(Control|Remove)?|Sensor(Repeat|Remove)?|Detected(Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|([GS]et)(AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(Scale|Offset|Rotate)Texture|(Rot)?Target(Remove)?|(Stop)?MoveToTarget|Apply(Rotational)?Impulse|Set(KeyframedMotion|ContentType|RegionPos|(Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(Queueing|Radius)|Vehicle(Type|(Float|Vector|Rotation)Param)|(Touch|Sit)?Text|Camera(Eye|At)Offset|PrimitiveParams|ClickAction|Link(Alpha|Color|PrimitiveParams(Fast)?|Texture(Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get((Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(PrimitiveParams|Number(OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(Details|PermMask|PrimCount)|Parcel(MaxPrims|Details|Prim(Count|Owners))|Attached(List)?|(SPMax|Free|Used)Memory|Region(Name|TimeDilation|FPS|Corner|AgentCount)|Root(Position|Rotation)|UnixTime|(Parcel|Region)Flags|(Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(Prims|NotecardLines|Sides)|Animation(List)?|(Camera|Local)(Pos|Rot)|Vel|Accel|Omega|Time(stamp|OfDay)|(Object|CenterOf)?Mass|MassMKS|Energy|Owner|(Owner)?Key|SunDirection|Texture(Offset|Scale|Rot)|Inventory(Number|Name|Key|Type|Creator|PermMask)|Permissions(Key)?|StartParameter|List(Length|EntryType)|Date|Agent(Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(Name|State))|(Get|Reset|GetAndReset)Time|PlaySound(Slave)?|LoopSound(Master|Slave)?|(Trigger|Stop|Preload)Sound|((Get|Delete)Sub|Insert)String|To(Upper|Lower)|Give(InventoryList|Money)|RezObject|(Stop)?LookAt|Sleep|CollisionFilter|(Take|Release)Controls|DetachFromAvatar|AttachToAvatar(Temp)?|InstantMessage|(GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(Length|Trim)|(Start|Stop)Animation|TargetOmega|Request(Experience)?Permissions|(Create|Break)Link|BreakAllLinks|(Give|Remove)Inventory|Water|PassTouches|Request(Agent|Inventory)Data|TeleportAgent(Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(Axis|Angle)|A(cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(CSV|Integer|Json|Float|String|Key|Vector|Rot|List(Strided)?)|DeleteSubList|List(Statistics|Sort|Randomize|(Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(Slope|Normal|Contour)|GroundRepel|(Set|Remove)VehicleFlags|SitOnLink|(AvatarOn)?(Link)?SitTarget|Script(Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(Integer|String)ToBase64|XorBase64|Log(10)?|Base64To(String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(Load|Release|(E|Une)scape)URL|ParcelMedia(CommandList|Query)|ModPow|MapDestination|(RemoveFrom|AddTo|Reset)Land(Pass|Ban)List|(Set|Clear)CameraParams|HTTP(Request|Response)|TextBox|DetectedTouch(UV|Face|Pos|(N|Bin)ormal|ST)|(MD5|SHA1|DumpList2)String|Request(Secure)?URL|Clear(Prim|Link)Media|(Link)?ParticleSystem|(Get|Request)(Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b"},{className:"literal",variants:[{begin:"\\b(PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2)\\b"},{begin:"\\b(XP_ERROR_(EXPERIENCES_DISABLED|EXPERIENCE_(DISABLED|SUSPENDED)|INVALID_(EXPERIENCE|PARAMETERS)|KEY_NOT_FOUND|MATURITY_EXCEEDED|NONE|NOT_(FOUND|PERMITTED(_LAND)?)|NO_EXPERIENCE|QUOTA_EXCEEDED|RETRY_UPDATE|STORAGE_EXCEPTION|STORE_DISABLED|THROTTLED|UNKNOWN_ERROR)|JSON_APPEND|STATUS_(PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(_OBJECT)?|(DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(_(BY_(LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(PARCEL(_OWNER)?|REGION)))?|CAMERA_(PITCH|DISTANCE|BEHINDNESS_(ANGLE|LAG)|(FOCUS|POSITION)(_(THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(ROOT|SET|ALL_(OTHERS|CHILDREN)|THIS)|ACTIVE|PASS(IVE|_(ALWAYS|IF_NOT_HANDLED|NEVER))|SCRIPTED|CONTROL_(FWD|BACK|(ROT_)?(LEFT|RIGHT)|UP|DOWN|(ML_)?LBUTTON)|PERMISSION_(RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(_START)?|TELEPORT|MEDIA)|OBJECT_(CLICK_ACTION|HOVER_HEIGHT|LAST_OWNER_ID|(PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_(ATTACHED|ON_REZ)|NAME|DESC|POS|PRIM_(COUNT|EQUIVALENCE)|RETURN_(PARCEL(_OWNER)?|REGION)|REZZER_KEY|ROO?T|VELOCITY|OMEGA|OWNER|GROUP(_TAG)?|CREATOR|ATTACHED_(POINT|SLOTS_AVAILABLE)|RENDER_WEIGHT|(BODY_SHAPE|PATHFINDING)_TYPE|(RUNNING|TOTAL)_SCRIPT_COUNT|TOTAL_INVENTORY_COUNT|SCRIPT_(MEMORY|TIME))|TYPE_(INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(DEBUG|PUBLIC)_CHANNEL|ATTACH_(AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](SHOULDER|HAND|FOOT|EAR|EYE|[UL](ARM|LEG)|HIP)|(LEFT|RIGHT)_PEC|HUD_(CENTER_[12]|TOP_(RIGHT|CENTER|LEFT)|BOTTOM(_(RIGHT|LEFT))?)|[LR]HAND_RING1|TAIL_(BASE|TIP)|[LR]WING|FACE_(JAW|[LR]EAR|[LR]EYE|TOUNGE)|GROIN|HIND_[LR]FOOT)|LAND_(LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(ONLINE|NAME|BORN|SIM_(POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(ON_FILE|USED)|REMOTE_DATA_(CHANNEL|REQUEST|REPLY)|PSYS_(PART_(BF_(ZERO|ONE(_MINUS_(DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(START|END)_(COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(RIBBON|WIND|INTERP_(COLOR|SCALE)|BOUNCE|FOLLOW_(SRC|VELOCITY)|TARGET_(POS|LINEAR)|EMISSIVE)_MASK)|SRC_(MAX_AGE|PATTERN|ANGLE_(BEGIN|END)|BURST_(RATE|PART_COUNT|RADIUS|SPEED_(MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(DROP|EXPLODE|ANGLE(_CONE(_EMPTY)?)?)))|VEHICLE_(REFERENCE_FRAME|TYPE_(NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(LINEAR|ANGULAR)_(FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(LINEAR|ANGULAR)_(DEFLECTION_(EFFICIENCY|TIMESCALE)|MOTOR_(DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(EFFICIENCY|TIMESCALE)|BANKING_(EFFICIENCY|MIX|TIMESCALE)|FLAG_(NO_DEFLECTION_UP|LIMIT_(ROLL_ONLY|MOTOR_UP)|HOVER_((WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(ALLOW_UNSIT|ALPHA_MODE(_(BLEND|EMISSIVE|MASK|NONE))?|NORMAL|SPECULAR|TYPE(_(BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(_(STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(NONE|LOW|MEDIUM|HIGH)|BUMP_(NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(DEFAULT|PLANAR)|SCRIPTED_SIT_ONLY|SCULPT_(TYPE_(SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(MIRROR|INVERT))|PHYSICS(_(SHAPE_(CONVEX|NONE|PRIM|TYPE)))?|(POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIT_TARGET|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(ALT_IMAGE_ENABLE|CONTROLS|(CURRENT|HOME)_URL|AUTO_(LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(WIDTH|HEIGHT)_PIXELS|WHITELIST(_ENABLE)?|PERMS_(INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(STANDARD|MINI)|PERM_(NONE|OWNER|GROUP|ANYONE)|MAX_(URL_LENGTH|WHITELIST_(SIZE|COUNT)|(WIDTH|HEIGHT)_PIXELS)))|MASK_(BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(MEDIA_COMMAND_(STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(ALLOW_(FLY|(GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(GROUP_)?OBJECTS)|USE_(ACCESS_(GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(GROUP|ALL)_OBJECT_ENTRY)|COUNT_(TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(HIDE|DEFAULT)|REGION_FLAG_(ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(METHOD|MIMETYPE|BODY_(MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|SIT_(INVALID_(AGENT|LINK_OBJECT)|NO(T_EXPERIENCE|_(ACCESS|EXPERIENCE_PERMISSION|SIT_TARGET)))|STRING_(TRIM(_(HEAD|TAIL))?)|CLICK_ACTION_(NONE|TOUCH|SIT|BUY|PAY|OPEN(_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(NONE|SCRIPT_MEMORY)|RC_(DATA_FLAGS|DETECT_PHANTOM|GET_(LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(TYPES|AGENTS|(NON)?PHYSICAL|LAND))|RCERR_(CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(ALLOWED_(AGENT|GROUP)_(ADD|REMOVE)|BANNED_AGENT_(ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(COMMAND|CMD_(PLAY|STOP|PAUSE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(CMD_((SMOOTH_)?STOP|JUMP)|DESIRED_(TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(_([ABCD]|NONE))?|MAX_(DECEL|TURN_RADIUS|(ACCEL|SPEED)))|PURSUIT_(OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(EVADE_(HIDDEN|SPOTTED)|FAILURE_(DYNAMIC_PATHFINDING_DISABLED|INVALID_(GOAL|START)|NO_(NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(PARCEL_)?UNREACHABLE)|(GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(_(FAST|NONE|SLOW))?|CONTENT_TYPE_(ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(RADIUS|STATIC)|(PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b"},{begin:"\\b(FALSE|TRUE)\\b"},{begin:"\\b(ZERO_ROTATION)\\b"},{begin:"\\b(EOF|JSON_(ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(GRANTED|DENIED))\\b"},{begin:"\\b(ZERO_VECTOR|TOUCH_INVALID_(TEXCOORD|VECTOR))\\b"}]},{className:"type",begin:"\\b(integer|float|string|key|vector|quaternion|rotation|list)\\b"}]}}},9615:function(e){e.exports=function(e){var t="\\[=*\\[",n="\\]=*\\]",a={begin:t,end:n,contains:["self"]},s=[e.COMMENT("--(?!"+t+")","$"),e.COMMENT("--"+t,n,{contains:[a],relevance:10})];return{name:"Lua",keywords:{$pattern:e.UNDERSCORE_IDENT_RE,literal:"true false nil",keyword:"and break do else elseif end for goto if in local not or repeat return then until while",built_in:"_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove"},contains:s.concat([{className:"function",beginKeywords:"function",end:"\\)",contains:[e.inherit(e.TITLE_MODE,{begin:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"}),{className:"params",begin:"\\(",endsWithParent:!0,contains:s}].concat(s)},e.C_NUMBER_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"string",begin:t,end:n,contains:[a],relevance:5}])}}},1818:function(e){e.exports=function(e){var t={className:"variable",variants:[{begin:"\\$\\("+e.UNDERSCORE_IDENT_RE+"\\)",contains:[e.BACKSLASH_ESCAPE]},{begin:/\$[@%<?\^\+\*]/}]},n={className:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,t]},a={className:"variable",begin:/\$\([\w-]+\s/,end:/\)/,keywords:{built_in:"subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value"},contains:[t]},s={begin:"^"+e.UNDERSCORE_IDENT_RE+"\\s*(?=[:+?]?=)"},i={className:"section",begin:/^[^\s]+:/,end:/$/,contains:[t]};return{name:"Makefile",aliases:["mk","mak","make"],keywords:{$pattern:/[\w-]+/,keyword:"define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath"},contains:[e.HASH_COMMENT_MODE,t,n,a,s,{className:"meta",begin:/^\.PHONY:/,end:/$/,keywords:{$pattern:/[\.\w]+/,"meta-keyword":".PHONY"}},i]}}},4387:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n={begin:/<\/?[A-Za-z_]/,end:">",subLanguage:"xml",relevance:0},a={variants:[{begin:/\[.+?\]\[.*?\]/,relevance:0},{begin:/\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,relevance:2},{begin:t(/\[.+?\]\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\/\/.*?\)/),relevance:2},{begin:/\[.+?\]\([./?&#].*?\)/,relevance:1},{begin:/\[.+?\]\(.*?\)/,relevance:0}],returnBegin:!0,contains:[{className:"string",relevance:0,begin:"\\[",end:"\\]",excludeBegin:!0,returnEnd:!0},{className:"link",relevance:0,begin:"\\]\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0},{className:"symbol",relevance:0,begin:"\\]\\[",end:"\\]",excludeBegin:!0,excludeEnd:!0}]},s={className:"strong",contains:[],variants:[{begin:/_{2}/,end:/_{2}/},{begin:/\*{2}/,end:/\*{2}/}]},i={className:"emphasis",contains:[],variants:[{begin:/\*(?!\*)/,end:/\*/},{begin:/_(?!_)/,end:/_/,relevance:0}]};s.contains.push(i),i.contains.push(s);var r=[n,a];return s.contains=s.contains.concat(r),i.contains=i.contains.concat(r),{name:"Markdown",aliases:["md","mkdown","mkd"],contains:[{className:"section",variants:[{begin:"^#{1,6}",end:"$",contains:r=r.concat(s,i)},{begin:"(?=^.+?\\n[=-]{2,}$)",contains:[{begin:"^[=-]*$"},{begin:"^",end:"\\n",contains:r}]}]},n,{className:"bullet",begin:"^[ \t]*([*+-]|(\\d+\\.))(?=\\s+)",end:"\\s+",excludeEnd:!0},s,i,{className:"quote",begin:"^>\\s+",contains:r,end:"$"},{className:"code",variants:[{begin:"(`{3,})[^`](.|\\n)*?\\1`*[ ]*"},{begin:"(~{3,})[^~](.|\\n)*?\\1~*[ ]*"},{begin:"```",end:"```+[ ]*$"},{begin:"~~~",end:"~~~+[ ]*$"},{begin:"`.+?`"},{begin:"(?=^( {4}|\\t))",contains:[{begin:"^( {4}|\\t)",end:"(\\n)$"}],relevance:0}]},{begin:"^[-\\*]{3,}",end:"$"},a,{begin:/^\[[^\n]+\]:/,returnBegin:!0,contains:[{className:"symbol",begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0},{className:"link",begin:/:\s*/,end:/$/,excludeBegin:!0}]}]}}},9437:function(e){var t=["AASTriangle","AbelianGroup","Abort","AbortKernels","AbortProtect","AbortScheduledTask","Above","Abs","AbsArg","AbsArgPlot","Absolute","AbsoluteCorrelation","AbsoluteCorrelationFunction","AbsoluteCurrentValue","AbsoluteDashing","AbsoluteFileName","AbsoluteOptions","AbsolutePointSize","AbsoluteThickness","AbsoluteTime","AbsoluteTiming","AcceptanceThreshold","AccountingForm","Accumulate","Accuracy","AccuracyGoal","ActionDelay","ActionMenu","ActionMenuBox","ActionMenuBoxOptions","Activate","Active","ActiveClassification","ActiveClassificationObject","ActiveItem","ActivePrediction","ActivePredictionObject","ActiveStyle","AcyclicGraphQ","AddOnHelpPath","AddSides","AddTo","AddToSearchIndex","AddUsers","AdjacencyGraph","AdjacencyList","AdjacencyMatrix","AdjacentMeshCells","AdjustmentBox","AdjustmentBoxOptions","AdjustTimeSeriesForecast","AdministrativeDivisionData","AffineHalfSpace","AffineSpace","AffineStateSpaceModel","AffineTransform","After","AggregatedEntityClass","AggregationLayer","AircraftData","AirportData","AirPressureData","AirTemperatureData","AiryAi","AiryAiPrime","AiryAiZero","AiryBi","AiryBiPrime","AiryBiZero","AlgebraicIntegerQ","AlgebraicNumber","AlgebraicNumberDenominator","AlgebraicNumberNorm","AlgebraicNumberPolynomial","AlgebraicNumberTrace","AlgebraicRules","AlgebraicRulesData","Algebraics","AlgebraicUnitQ","Alignment","AlignmentMarker","AlignmentPoint","All","AllowAdultContent","AllowedCloudExtraParameters","AllowedCloudParameterExtensions","AllowedDimensions","AllowedFrequencyRange","AllowedHeads","AllowGroupClose","AllowIncomplete","AllowInlineCells","AllowKernelInitialization","AllowLooseGrammar","AllowReverseGroupClose","AllowScriptLevelChange","AllowVersionUpdate","AllTrue","Alphabet","AlphabeticOrder","AlphabeticSort","AlphaChannel","AlternateImage","AlternatingFactorial","AlternatingGroup","AlternativeHypothesis","Alternatives","AltitudeMethod","AmbientLight","AmbiguityFunction","AmbiguityList","Analytic","AnatomyData","AnatomyForm","AnatomyPlot3D","AnatomySkinStyle","AnatomyStyling","AnchoredSearch","And","AndersonDarlingTest","AngerJ","AngleBisector","AngleBracket","AnglePath","AnglePath3D","AngleVector","AngularGauge","Animate","AnimationCycleOffset","AnimationCycleRepetitions","AnimationDirection","AnimationDisplayTime","AnimationRate","AnimationRepetitions","AnimationRunning","AnimationRunTime","AnimationTimeIndex","Animator","AnimatorBox","AnimatorBoxOptions","AnimatorElements","Annotate","Annotation","AnnotationDelete","AnnotationKeys","AnnotationRules","AnnotationValue","Annuity","AnnuityDue","Annulus","AnomalyDetection","AnomalyDetector","AnomalyDetectorFunction","Anonymous","Antialiasing","AntihermitianMatrixQ","Antisymmetric","AntisymmetricMatrixQ","Antonyms","AnyOrder","AnySubset","AnyTrue","Apart","ApartSquareFree","APIFunction","Appearance","AppearanceElements","AppearanceRules","AppellF1","Append","AppendCheck","AppendLayer","AppendTo","Apply","ApplySides","ArcCos","ArcCosh","ArcCot","ArcCoth","ArcCsc","ArcCsch","ArcCurvature","ARCHProcess","ArcLength","ArcSec","ArcSech","ArcSin","ArcSinDistribution","ArcSinh","ArcTan","ArcTanh","Area","Arg","ArgMax","ArgMin","ArgumentCountQ","ARIMAProcess","ArithmeticGeometricMean","ARMAProcess","Around","AroundReplace","ARProcess","Array","ArrayComponents","ArrayDepth","ArrayFilter","ArrayFlatten","ArrayMesh","ArrayPad","ArrayPlot","ArrayQ","ArrayResample","ArrayReshape","ArrayRules","Arrays","Arrow","Arrow3DBox","ArrowBox","Arrowheads","ASATriangle","Ask","AskAppend","AskConfirm","AskDisplay","AskedQ","AskedValue","AskFunction","AskState","AskTemplateDisplay","AspectRatio","AspectRatioFixed","Assert","AssociateTo","Association","AssociationFormat","AssociationMap","AssociationQ","AssociationThread","AssumeDeterministic","Assuming","Assumptions","AstronomicalData","Asymptotic","AsymptoticDSolveValue","AsymptoticEqual","AsymptoticEquivalent","AsymptoticGreater","AsymptoticGreaterEqual","AsymptoticIntegrate","AsymptoticLess","AsymptoticLessEqual","AsymptoticOutputTracker","AsymptoticProduct","AsymptoticRSolveValue","AsymptoticSolve","AsymptoticSum","Asynchronous","AsynchronousTaskObject","AsynchronousTasks","Atom","AtomCoordinates","AtomCount","AtomDiagramCoordinates","AtomList","AtomQ","AttentionLayer","Attributes","Audio","AudioAmplify","AudioAnnotate","AudioAnnotationLookup","AudioBlockMap","AudioCapture","AudioChannelAssignment","AudioChannelCombine","AudioChannelMix","AudioChannels","AudioChannelSeparate","AudioData","AudioDelay","AudioDelete","AudioDevice","AudioDistance","AudioEncoding","AudioFade","AudioFrequencyShift","AudioGenerator","AudioIdentify","AudioInputDevice","AudioInsert","AudioInstanceQ","AudioIntervals","AudioJoin","AudioLabel","AudioLength","AudioLocalMeasurements","AudioLooping","AudioLoudness","AudioMeasurements","AudioNormalize","AudioOutputDevice","AudioOverlay","AudioPad","AudioPan","AudioPartition","AudioPause","AudioPitchShift","AudioPlay","AudioPlot","AudioQ","AudioRecord","AudioReplace","AudioResample","AudioReverb","AudioReverse","AudioSampleRate","AudioSpectralMap","AudioSpectralTransformation","AudioSplit","AudioStop","AudioStream","AudioStreams","AudioTimeStretch","AudioTracks","AudioTrim","AudioType","AugmentedPolyhedron","AugmentedSymmetricPolynomial","Authenticate","Authentication","AuthenticationDialog","AutoAction","Autocomplete","AutocompletionFunction","AutoCopy","AutocorrelationTest","AutoDelete","AutoEvaluateEvents","AutoGeneratedPackage","AutoIndent","AutoIndentSpacings","AutoItalicWords","AutoloadPath","AutoMatch","Automatic","AutomaticImageSize","AutoMultiplicationSymbol","AutoNumberFormatting","AutoOpenNotebooks","AutoOpenPalettes","AutoQuoteCharacters","AutoRefreshed","AutoRemove","AutorunSequencing","AutoScaling","AutoScroll","AutoSpacing","AutoStyleOptions","AutoStyleWords","AutoSubmitting","Axes","AxesEdge","AxesLabel","AxesOrigin","AxesStyle","AxiomaticTheory","Axis","BabyMonsterGroupB","Back","Background","BackgroundAppearance","BackgroundTasksSettings","Backslash","Backsubstitution","Backward","Ball","Band","BandpassFilter","BandstopFilter","BarabasiAlbertGraphDistribution","BarChart","BarChart3D","BarcodeImage","BarcodeRecognize","BaringhausHenzeTest","BarLegend","BarlowProschanImportance","BarnesG","BarOrigin","BarSpacing","BartlettHannWindow","BartlettWindow","BaseDecode","BaseEncode","BaseForm","Baseline","BaselinePosition","BaseStyle","BasicRecurrentLayer","BatchNormalizationLayer","BatchSize","BatesDistribution","BattleLemarieWavelet","BayesianMaximization","BayesianMaximizationObject","BayesianMinimization","BayesianMinimizationObject","Because","BeckmannDistribution","Beep","Before","Begin","BeginDialogPacket","BeginFrontEndInteractionPacket","BeginPackage","BellB","BellY","Below","BenfordDistribution","BeniniDistribution","BenktanderGibratDistribution","BenktanderWeibullDistribution","BernoulliB","BernoulliDistribution","BernoulliGraphDistribution","BernoulliProcess","BernsteinBasis","BesselFilterModel","BesselI","BesselJ","BesselJZero","BesselK","BesselY","BesselYZero","Beta","BetaBinomialDistribution","BetaDistribution","BetaNegativeBinomialDistribution","BetaPrimeDistribution","BetaRegularized","Between","BetweennessCentrality","BeveledPolyhedron","BezierCurve","BezierCurve3DBox","BezierCurve3DBoxOptions","BezierCurveBox","BezierCurveBoxOptions","BezierFunction","BilateralFilter","Binarize","BinaryDeserialize","BinaryDistance","BinaryFormat","BinaryImageQ","BinaryRead","BinaryReadList","BinarySerialize","BinaryWrite","BinCounts","BinLists","Binomial","BinomialDistribution","BinomialProcess","BinormalDistribution","BiorthogonalSplineWavelet","BipartiteGraphQ","BiquadraticFilterModel","BirnbaumImportance","BirnbaumSaundersDistribution","BitAnd","BitClear","BitGet","BitLength","BitNot","BitOr","BitSet","BitShiftLeft","BitShiftRight","BitXor","BiweightLocation","BiweightMidvariance","Black","BlackmanHarrisWindow","BlackmanNuttallWindow","BlackmanWindow","Blank","BlankForm","BlankNullSequence","BlankSequence","Blend","Block","BlockchainAddressData","BlockchainBase","BlockchainBlockData","BlockchainContractValue","BlockchainData","BlockchainGet","BlockchainKeyEncode","BlockchainPut","BlockchainTokenData","BlockchainTransaction","BlockchainTransactionData","BlockchainTransactionSign","BlockchainTransactionSubmit","BlockMap","BlockRandom","BlomqvistBeta","BlomqvistBetaTest","Blue","Blur","BodePlot","BohmanWindow","Bold","Bond","BondCount","BondList","BondQ","Bookmarks","Boole","BooleanConsecutiveFunction","BooleanConvert","BooleanCountingFunction","BooleanFunction","BooleanGraph","BooleanMaxterms","BooleanMinimize","BooleanMinterms","BooleanQ","BooleanRegion","Booleans","BooleanStrings","BooleanTable","BooleanVariables","BorderDimensions","BorelTannerDistribution","Bottom","BottomHatTransform","BoundaryDiscretizeGraphics","BoundaryDiscretizeRegion","BoundaryMesh","BoundaryMeshRegion","BoundaryMeshRegionQ","BoundaryStyle","BoundedRegionQ","BoundingRegion","Bounds","Box","BoxBaselineShift","BoxData","BoxDimensions","Boxed","Boxes","BoxForm","BoxFormFormatTypes","BoxFrame","BoxID","BoxMargins","BoxMatrix","BoxObject","BoxRatios","BoxRotation","BoxRotationPoint","BoxStyle","BoxWhiskerChart","Bra","BracketingBar","BraKet","BrayCurtisDistance","BreadthFirstScan","Break","BridgeData","BrightnessEqualize","BroadcastStationData","Brown","BrownForsytheTest","BrownianBridgeProcess","BrowserCategory","BSplineBasis","BSplineCurve","BSplineCurve3DBox","BSplineCurve3DBoxOptions","BSplineCurveBox","BSplineCurveBoxOptions","BSplineFunction","BSplineSurface","BSplineSurface3DBox","BSplineSurface3DBoxOptions","BubbleChart","BubbleChart3D","BubbleScale","BubbleSizes","BuildingData","BulletGauge","BusinessDayQ","ButterflyGraph","ButterworthFilterModel","Button","ButtonBar","ButtonBox","ButtonBoxOptions","ButtonCell","ButtonContents","ButtonData","ButtonEvaluator","ButtonExpandable","ButtonFrame","ButtonFunction","ButtonMargins","ButtonMinHeight","ButtonNote","ButtonNotebook","ButtonSource","ButtonStyle","ButtonStyleMenuListing","Byte","ByteArray","ByteArrayFormat","ByteArrayQ","ByteArrayToString","ByteCount","ByteOrdering","C","CachedValue","CacheGraphics","CachePersistence","CalendarConvert","CalendarData","CalendarType","Callout","CalloutMarker","CalloutStyle","CallPacket","CanberraDistance","Cancel","CancelButton","CandlestickChart","CanonicalGraph","CanonicalizePolygon","CanonicalizePolyhedron","CanonicalName","CanonicalWarpingCorrespondence","CanonicalWarpingDistance","CantorMesh","CantorStaircase","Cap","CapForm","CapitalDifferentialD","Capitalize","CapsuleShape","CaptureRunning","CardinalBSplineBasis","CarlemanLinearize","CarmichaelLambda","CaseOrdering","Cases","CaseSensitive","Cashflow","Casoratian","Catalan","CatalanNumber","Catch","CategoricalDistribution","Catenate","CatenateLayer","CauchyDistribution","CauchyWindow","CayleyGraph","CDF","CDFDeploy","CDFInformation","CDFWavelet","Ceiling","CelestialSystem","Cell","CellAutoOverwrite","CellBaseline","CellBoundingBox","CellBracketOptions","CellChangeTimes","CellContents","CellContext","CellDingbat","CellDynamicExpression","CellEditDuplicate","CellElementsBoundingBox","CellElementSpacings","CellEpilog","CellEvaluationDuplicate","CellEvaluationFunction","CellEvaluationLanguage","CellEventActions","CellFrame","CellFrameColor","CellFrameLabelMargins","CellFrameLabels","CellFrameMargins","CellGroup","CellGroupData","CellGrouping","CellGroupingRules","CellHorizontalScrolling","CellID","CellLabel","CellLabelAutoDelete","CellLabelMargins","CellLabelPositioning","CellLabelStyle","CellLabelTemplate","CellMargins","CellObject","CellOpen","CellPrint","CellProlog","Cells","CellSize","CellStyle","CellTags","CellularAutomaton","CensoredDistribution","Censoring","Center","CenterArray","CenterDot","CentralFeature","CentralMoment","CentralMomentGeneratingFunction","Cepstrogram","CepstrogramArray","CepstrumArray","CForm","ChampernowneNumber","ChangeOptions","ChannelBase","ChannelBrokerAction","ChannelDatabin","ChannelHistoryLength","ChannelListen","ChannelListener","ChannelListeners","ChannelListenerWait","ChannelObject","ChannelPreSendFunction","ChannelReceiverFunction","ChannelSend","ChannelSubscribers","ChanVeseBinarize","Character","CharacterCounts","CharacterEncoding","CharacterEncodingsPath","CharacteristicFunction","CharacteristicPolynomial","CharacterName","CharacterNormalize","CharacterRange","Characters","ChartBaseStyle","ChartElementData","ChartElementDataFunction","ChartElementFunction","ChartElements","ChartLabels","ChartLayout","ChartLegends","ChartStyle","Chebyshev1FilterModel","Chebyshev2FilterModel","ChebyshevDistance","ChebyshevT","ChebyshevU","Check","CheckAbort","CheckAll","Checkbox","CheckboxBar","CheckboxBox","CheckboxBoxOptions","ChemicalData","ChessboardDistance","ChiDistribution","ChineseRemainder","ChiSquareDistribution","ChoiceButtons","ChoiceDialog","CholeskyDecomposition","Chop","ChromaticityPlot","ChromaticityPlot3D","ChromaticPolynomial","Circle","CircleBox","CircleDot","CircleMinus","CirclePlus","CirclePoints","CircleThrough","CircleTimes","CirculantGraph","CircularOrthogonalMatrixDistribution","CircularQuaternionMatrixDistribution","CircularRealMatrixDistribution","CircularSymplecticMatrixDistribution","CircularUnitaryMatrixDistribution","Circumsphere","CityData","ClassifierFunction","ClassifierInformation","ClassifierMeasurements","ClassifierMeasurementsObject","Classify","ClassPriors","Clear","ClearAll","ClearAttributes","ClearCookies","ClearPermissions","ClearSystemCache","ClebschGordan","ClickPane","Clip","ClipboardNotebook","ClipFill","ClippingStyle","ClipPlanes","ClipPlanesStyle","ClipRange","Clock","ClockGauge","ClockwiseContourIntegral","Close","Closed","CloseKernels","ClosenessCentrality","Closing","ClosingAutoSave","ClosingEvent","ClosingSaveDialog","CloudAccountData","CloudBase","CloudConnect","CloudConnections","CloudDeploy","CloudDirectory","CloudDisconnect","CloudEvaluate","CloudExport","CloudExpression","CloudExpressions","CloudFunction","CloudGet","CloudImport","CloudLoggingData","CloudObject","CloudObjectInformation","CloudObjectInformationData","CloudObjectNameFormat","CloudObjects","CloudObjectURLType","CloudPublish","CloudPut","CloudRenderingMethod","CloudSave","CloudShare","CloudSubmit","CloudSymbol","CloudUnshare","CloudUserID","ClusterClassify","ClusterDissimilarityFunction","ClusteringComponents","ClusteringTree","CMYKColor","Coarse","CodeAssistOptions","Coefficient","CoefficientArrays","CoefficientDomain","CoefficientList","CoefficientRules","CoifletWavelet","Collect","Colon","ColonForm","ColorBalance","ColorCombine","ColorConvert","ColorCoverage","ColorData","ColorDataFunction","ColorDetect","ColorDistance","ColorFunction","ColorFunctionScaling","Colorize","ColorNegate","ColorOutput","ColorProfileData","ColorQ","ColorQuantize","ColorReplace","ColorRules","ColorSelectorSettings","ColorSeparate","ColorSetter","ColorSetterBox","ColorSetterBoxOptions","ColorSlider","ColorsNear","ColorSpace","ColorToneMapping","Column","ColumnAlignments","ColumnBackgrounds","ColumnForm","ColumnLines","ColumnsEqual","ColumnSpacings","ColumnWidths","CombinedEntityClass","CombinerFunction","CometData","CommonDefaultFormatTypes","Commonest","CommonestFilter","CommonName","CommonUnits","CommunityBoundaryStyle","CommunityGraphPlot","CommunityLabels","CommunityRegionStyle","CompanyData","CompatibleUnitQ","CompilationOptions","CompilationTarget","Compile","Compiled","CompiledCodeFunction","CompiledFunction","CompilerOptions","Complement","ComplementedEntityClass","CompleteGraph","CompleteGraphQ","CompleteKaryTree","CompletionsListPacket","Complex","ComplexContourPlot","Complexes","ComplexExpand","ComplexInfinity","ComplexityFunction","ComplexListPlot","ComplexPlot","ComplexPlot3D","ComplexRegionPlot","ComplexStreamPlot","ComplexVectorPlot","ComponentMeasurements","ComponentwiseContextMenu","Compose","ComposeList","ComposeSeries","CompositeQ","Composition","CompoundElement","CompoundExpression","CompoundPoissonDistribution","CompoundPoissonProcess","CompoundRenewalProcess","Compress","CompressedData","CompressionLevel","ComputeUncertainty","Condition","ConditionalExpression","Conditioned","Cone","ConeBox","ConfidenceLevel","ConfidenceRange","ConfidenceTransform","ConfigurationPath","ConformAudio","ConformImages","Congruent","ConicHullRegion","ConicHullRegion3DBox","ConicHullRegionBox","ConicOptimization","Conjugate","ConjugateTranspose","Conjunction","Connect","ConnectedComponents","ConnectedGraphComponents","ConnectedGraphQ","ConnectedMeshComponents","ConnectedMoleculeComponents","ConnectedMoleculeQ","ConnectionSettings","ConnectLibraryCallbackFunction","ConnectSystemModelComponents","ConnesWindow","ConoverTest","ConsoleMessage","ConsoleMessagePacket","Constant","ConstantArray","ConstantArrayLayer","ConstantImage","ConstantPlusLayer","ConstantRegionQ","Constants","ConstantTimesLayer","ConstellationData","ConstrainedMax","ConstrainedMin","Construct","Containing","ContainsAll","ContainsAny","ContainsExactly","ContainsNone","ContainsOnly","ContentFieldOptions","ContentLocationFunction","ContentObject","ContentPadding","ContentsBoundingBox","ContentSelectable","ContentSize","Context","ContextMenu","Contexts","ContextToFileName","Continuation","Continue","ContinuedFraction","ContinuedFractionK","ContinuousAction","ContinuousMarkovProcess","ContinuousTask","ContinuousTimeModelQ","ContinuousWaveletData","ContinuousWaveletTransform","ContourDetect","ContourGraphics","ContourIntegral","ContourLabels","ContourLines","ContourPlot","ContourPlot3D","Contours","ContourShading","ContourSmoothing","ContourStyle","ContraharmonicMean","ContrastiveLossLayer","Control","ControlActive","ControlAlignment","ControlGroupContentsBox","ControllabilityGramian","ControllabilityMatrix","ControllableDecomposition","ControllableModelQ","ControllerDuration","ControllerInformation","ControllerInformationData","ControllerLinking","ControllerManipulate","ControllerMethod","ControllerPath","ControllerState","ControlPlacement","ControlsRendering","ControlType","Convergents","ConversionOptions","ConversionRules","ConvertToBitmapPacket","ConvertToPostScript","ConvertToPostScriptPacket","ConvexHullMesh","ConvexPolygonQ","ConvexPolyhedronQ","ConvolutionLayer","Convolve","ConwayGroupCo1","ConwayGroupCo2","ConwayGroupCo3","CookieFunction","Cookies","CoordinateBoundingBox","CoordinateBoundingBoxArray","CoordinateBounds","CoordinateBoundsArray","CoordinateChartData","CoordinatesToolOptions","CoordinateTransform","CoordinateTransformData","CoprimeQ","Coproduct","CopulaDistribution","Copyable","CopyDatabin","CopyDirectory","CopyFile","CopyTag","CopyToClipboard","CornerFilter","CornerNeighbors","Correlation","CorrelationDistance","CorrelationFunction","CorrelationTest","Cos","Cosh","CoshIntegral","CosineDistance","CosineWindow","CosIntegral","Cot","Coth","Count","CountDistinct","CountDistinctBy","CounterAssignments","CounterBox","CounterBoxOptions","CounterClockwiseContourIntegral","CounterEvaluator","CounterFunction","CounterIncrements","CounterStyle","CounterStyleMenuListing","CountRoots","CountryData","Counts","CountsBy","Covariance","CovarianceEstimatorFunction","CovarianceFunction","CoxianDistribution","CoxIngersollRossProcess","CoxModel","CoxModelFit","CramerVonMisesTest","CreateArchive","CreateCellID","CreateChannel","CreateCloudExpression","CreateDatabin","CreateDataStructure","CreateDataSystemModel","CreateDialog","CreateDirectory","CreateDocument","CreateFile","CreateIntermediateDirectories","CreateManagedLibraryExpression","CreateNotebook","CreatePacletArchive","CreatePalette","CreatePalettePacket","CreatePermissionsGroup","CreateScheduledTask","CreateSearchIndex","CreateSystemModel","CreateTemporary","CreateUUID","CreateWindow","CriterionFunction","CriticalityFailureImportance","CriticalitySuccessImportance","CriticalSection","Cross","CrossEntropyLossLayer","CrossingCount","CrossingDetect","CrossingPolygon","CrossMatrix","Csc","Csch","CTCLossLayer","Cube","CubeRoot","Cubics","Cuboid","CuboidBox","Cumulant","CumulantGeneratingFunction","Cup","CupCap","Curl","CurlyDoubleQuote","CurlyQuote","CurrencyConvert","CurrentDate","CurrentImage","CurrentlySpeakingPacket","CurrentNotebookImage","CurrentScreenImage","CurrentValue","Curry","CurryApplied","CurvatureFlowFilter","CurveClosed","Cyan","CycleGraph","CycleIndexPolynomial","Cycles","CyclicGroup","Cyclotomic","Cylinder","CylinderBox","CylindricalDecomposition","D","DagumDistribution","DamData","DamerauLevenshteinDistance","DampingFactor","Darker","Dashed","Dashing","DatabaseConnect","DatabaseDisconnect","DatabaseReference","Databin","DatabinAdd","DatabinRemove","Databins","DatabinUpload","DataCompression","DataDistribution","DataRange","DataReversed","Dataset","DatasetDisplayPanel","DataStructure","DataStructureQ","Date","DateBounds","Dated","DateDelimiters","DateDifference","DatedUnit","DateFormat","DateFunction","DateHistogram","DateInterval","DateList","DateListLogPlot","DateListPlot","DateListStepPlot","DateObject","DateObjectQ","DateOverlapsQ","DatePattern","DatePlus","DateRange","DateReduction","DateString","DateTicksFormat","DateValue","DateWithinQ","DaubechiesWavelet","DavisDistribution","DawsonF","DayCount","DayCountConvention","DayHemisphere","DaylightQ","DayMatchQ","DayName","DayNightTerminator","DayPlus","DayRange","DayRound","DeBruijnGraph","DeBruijnSequence","Debug","DebugTag","Decapitalize","Decimal","DecimalForm","DeclareKnownSymbols","DeclarePackage","Decompose","DeconvolutionLayer","Decrement","Decrypt","DecryptFile","DedekindEta","DeepSpaceProbeData","Default","DefaultAxesStyle","DefaultBaseStyle","DefaultBoxStyle","DefaultButton","DefaultColor","DefaultControlPlacement","DefaultDuplicateCellStyle","DefaultDuration","DefaultElement","DefaultFaceGridsStyle","DefaultFieldHintStyle","DefaultFont","DefaultFontProperties","DefaultFormatType","DefaultFormatTypeForStyle","DefaultFrameStyle","DefaultFrameTicksStyle","DefaultGridLinesStyle","DefaultInlineFormatType","DefaultInputFormatType","DefaultLabelStyle","DefaultMenuStyle","DefaultNaturalLanguage","DefaultNewCellStyle","DefaultNewInlineCellStyle","DefaultNotebook","DefaultOptions","DefaultOutputFormatType","DefaultPrintPrecision","DefaultStyle","DefaultStyleDefinitions","DefaultTextFormatType","DefaultTextInlineFormatType","DefaultTicksStyle","DefaultTooltipStyle","DefaultValue","DefaultValues","Defer","DefineExternal","DefineInputStreamMethod","DefineOutputStreamMethod","DefineResourceFunction","Definition","Degree","DegreeCentrality","DegreeGraphDistribution","DegreeLexicographic","DegreeReverseLexicographic","DEigensystem","DEigenvalues","Deinitialization","Del","DelaunayMesh","Delayed","Deletable","Delete","DeleteAnomalies","DeleteBorderComponents","DeleteCases","DeleteChannel","DeleteCloudExpression","DeleteContents","DeleteDirectory","DeleteDuplicates","DeleteDuplicatesBy","DeleteFile","DeleteMissing","DeleteObject","DeletePermissionsKey","DeleteSearchIndex","DeleteSmallComponents","DeleteStopwords","DeleteWithContents","DeletionWarning","DelimitedArray","DelimitedSequence","Delimiter","DelimiterFlashTime","DelimiterMatching","Delimiters","DeliveryFunction","Dendrogram","Denominator","DensityGraphics","DensityHistogram","DensityPlot","DensityPlot3D","DependentVariables","Deploy","Deployed","Depth","DepthFirstScan","Derivative","DerivativeFilter","DerivedKey","DescriptorStateSpace","DesignMatrix","DestroyAfterEvaluation","Det","DeviceClose","DeviceConfigure","DeviceExecute","DeviceExecuteAsynchronous","DeviceObject","DeviceOpen","DeviceOpenQ","DeviceRead","DeviceReadBuffer","DeviceReadLatest","DeviceReadList","DeviceReadTimeSeries","Devices","DeviceStreams","DeviceWrite","DeviceWriteBuffer","DGaussianWavelet","DiacriticalPositioning","Diagonal","DiagonalizableMatrixQ","DiagonalMatrix","DiagonalMatrixQ","Dialog","DialogIndent","DialogInput","DialogLevel","DialogNotebook","DialogProlog","DialogReturn","DialogSymbols","Diamond","DiamondMatrix","DiceDissimilarity","DictionaryLookup","DictionaryWordQ","DifferenceDelta","DifferenceOrder","DifferenceQuotient","DifferenceRoot","DifferenceRootReduce","Differences","DifferentialD","DifferentialRoot","DifferentialRootReduce","DifferentiatorFilter","DigitalSignature","DigitBlock","DigitBlockMinimum","DigitCharacter","DigitCount","DigitQ","DihedralAngle","DihedralGroup","Dilation","DimensionalCombinations","DimensionalMeshComponents","DimensionReduce","DimensionReducerFunction","DimensionReduction","Dimensions","DiracComb","DiracDelta","DirectedEdge","DirectedEdges","DirectedGraph","DirectedGraphQ","DirectedInfinity","Direction","Directive","Directory","DirectoryName","DirectoryQ","DirectoryStack","DirichletBeta","DirichletCharacter","DirichletCondition","DirichletConvolve","DirichletDistribution","DirichletEta","DirichletL","DirichletLambda","DirichletTransform","DirichletWindow","DisableConsolePrintPacket","DisableFormatting","DiscreteAsymptotic","DiscreteChirpZTransform","DiscreteConvolve","DiscreteDelta","DiscreteHadamardTransform","DiscreteIndicator","DiscreteLimit","DiscreteLQEstimatorGains","DiscreteLQRegulatorGains","DiscreteLyapunovSolve","DiscreteMarkovProcess","DiscreteMaxLimit","DiscreteMinLimit","DiscretePlot","DiscretePlot3D","DiscreteRatio","DiscreteRiccatiSolve","DiscreteShift","DiscreteTimeModelQ","DiscreteUniformDistribution","DiscreteVariables","DiscreteWaveletData","DiscreteWaveletPacketTransform","DiscreteWaveletTransform","DiscretizeGraphics","DiscretizeRegion","Discriminant","DisjointQ","Disjunction","Disk","DiskBox","DiskMatrix","DiskSegment","Dispatch","DispatchQ","DispersionEstimatorFunction","Display","DisplayAllSteps","DisplayEndPacket","DisplayFlushImagePacket","DisplayForm","DisplayFunction","DisplayPacket","DisplayRules","DisplaySetSizePacket","DisplayString","DisplayTemporary","DisplayWith","DisplayWithRef","DisplayWithVariable","DistanceFunction","DistanceMatrix","DistanceTransform","Distribute","Distributed","DistributedContexts","DistributeDefinitions","DistributionChart","DistributionDomain","DistributionFitTest","DistributionParameterAssumptions","DistributionParameterQ","Dithering","Div","Divergence","Divide","DivideBy","Dividers","DivideSides","Divisible","Divisors","DivisorSigma","DivisorSum","DMSList","DMSString","Do","DockedCells","DocumentGenerator","DocumentGeneratorInformation","DocumentGeneratorInformationData","DocumentGenerators","DocumentNotebook","DocumentWeightingRules","Dodecahedron","DomainRegistrationInformation","DominantColors","DOSTextFormat","Dot","DotDashed","DotEqual","DotLayer","DotPlusLayer","Dotted","DoubleBracketingBar","DoubleContourIntegral","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DoublyInfinite","Down","DownArrow","DownArrowBar","DownArrowUpArrow","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","Downsample","DownTee","DownTeeArrow","DownValues","DragAndDrop","DrawEdges","DrawFrontFaces","DrawHighlighted","Drop","DropoutLayer","DSolve","DSolveValue","Dt","DualLinearProgramming","DualPolyhedron","DualSystemsModel","DumpGet","DumpSave","DuplicateFreeQ","Duration","Dynamic","DynamicBox","DynamicBoxOptions","DynamicEvaluationTimeout","DynamicGeoGraphics","DynamicImage","DynamicLocation","DynamicModule","DynamicModuleBox","DynamicModuleBoxOptions","DynamicModuleParent","DynamicModuleValues","DynamicName","DynamicNamespace","DynamicReference","DynamicSetting","DynamicUpdating","DynamicWrapper","DynamicWrapperBox","DynamicWrapperBoxOptions","E","EarthImpactData","EarthquakeData","EccentricityCentrality","Echo","EchoFunction","EclipseType","EdgeAdd","EdgeBetweennessCentrality","EdgeCapacity","EdgeCapForm","EdgeColor","EdgeConnectivity","EdgeContract","EdgeCost","EdgeCount","EdgeCoverQ","EdgeCycleMatrix","EdgeDashing","EdgeDelete","EdgeDetect","EdgeForm","EdgeIndex","EdgeJoinForm","EdgeLabeling","EdgeLabels","EdgeLabelStyle","EdgeList","EdgeOpacity","EdgeQ","EdgeRenderingFunction","EdgeRules","EdgeShapeFunction","EdgeStyle","EdgeTaggedGraph","EdgeTaggedGraphQ","EdgeTags","EdgeThickness","EdgeWeight","EdgeWeightedGraphQ","Editable","EditButtonSettings","EditCellTagsSettings","EditDistance","EffectiveInterest","Eigensystem","Eigenvalues","EigenvectorCentrality","Eigenvectors","Element","ElementData","ElementwiseLayer","ElidedForms","Eliminate","EliminationOrder","Ellipsoid","EllipticE","EllipticExp","EllipticExpPrime","EllipticF","EllipticFilterModel","EllipticK","EllipticLog","EllipticNomeQ","EllipticPi","EllipticReducedHalfPeriods","EllipticTheta","EllipticThetaPrime","EmbedCode","EmbeddedHTML","EmbeddedService","EmbeddingLayer","EmbeddingObject","EmitSound","EmphasizeSyntaxErrors","EmpiricalDistribution","Empty","EmptyGraphQ","EmptyRegion","EnableConsolePrintPacket","Enabled","Encode","Encrypt","EncryptedObject","EncryptFile","End","EndAdd","EndDialogPacket","EndFrontEndInteractionPacket","EndOfBuffer","EndOfFile","EndOfLine","EndOfString","EndPackage","EngineEnvironment","EngineeringForm","Enter","EnterExpressionPacket","EnterTextPacket","Entity","EntityClass","EntityClassList","EntityCopies","EntityFunction","EntityGroup","EntityInstance","EntityList","EntityPrefetch","EntityProperties","EntityProperty","EntityPropertyClass","EntityRegister","EntityStore","EntityStores","EntityTypeName","EntityUnregister","EntityValue","Entropy","EntropyFilter","Environment","Epilog","EpilogFunction","Equal","EqualColumns","EqualRows","EqualTilde","EqualTo","EquatedTo","Equilibrium","EquirippleFilterKernel","Equivalent","Erf","Erfc","Erfi","ErlangB","ErlangC","ErlangDistribution","Erosion","ErrorBox","ErrorBoxOptions","ErrorNorm","ErrorPacket","ErrorsDialogSettings","EscapeRadius","EstimatedBackground","EstimatedDistribution","EstimatedProcess","EstimatorGains","EstimatorRegulator","EuclideanDistance","EulerAngles","EulerCharacteristic","EulerE","EulerGamma","EulerianGraphQ","EulerMatrix","EulerPhi","Evaluatable","Evaluate","Evaluated","EvaluatePacket","EvaluateScheduledTask","EvaluationBox","EvaluationCell","EvaluationCompletionAction","EvaluationData","EvaluationElements","EvaluationEnvironment","EvaluationMode","EvaluationMonitor","EvaluationNotebook","EvaluationObject","EvaluationOrder","Evaluator","EvaluatorNames","EvenQ","EventData","EventEvaluator","EventHandler","EventHandlerTag","EventLabels","EventSeries","ExactBlackmanWindow","ExactNumberQ","ExactRootIsolation","ExampleData","Except","ExcludedForms","ExcludedLines","ExcludedPhysicalQuantities","ExcludePods","Exclusions","ExclusionsStyle","Exists","Exit","ExitDialog","ExoplanetData","Exp","Expand","ExpandAll","ExpandDenominator","ExpandFileName","ExpandNumerator","Expectation","ExpectationE","ExpectedValue","ExpGammaDistribution","ExpIntegralE","ExpIntegralEi","ExpirationDate","Exponent","ExponentFunction","ExponentialDistribution","ExponentialFamily","ExponentialGeneratingFunction","ExponentialMovingAverage","ExponentialPowerDistribution","ExponentPosition","ExponentStep","Export","ExportAutoReplacements","ExportByteArray","ExportForm","ExportPacket","ExportString","Expression","ExpressionCell","ExpressionGraph","ExpressionPacket","ExpressionUUID","ExpToTrig","ExtendedEntityClass","ExtendedGCD","Extension","ExtentElementFunction","ExtentMarkers","ExtentSize","ExternalBundle","ExternalCall","ExternalDataCharacterEncoding","ExternalEvaluate","ExternalFunction","ExternalFunctionName","ExternalIdentifier","ExternalObject","ExternalOptions","ExternalSessionObject","ExternalSessions","ExternalStorageBase","ExternalStorageDownload","ExternalStorageGet","ExternalStorageObject","ExternalStoragePut","ExternalStorageUpload","ExternalTypeSignature","ExternalValue","Extract","ExtractArchive","ExtractLayer","ExtractPacletArchive","ExtremeValueDistribution","FaceAlign","FaceForm","FaceGrids","FaceGridsStyle","FacialFeatures","Factor","FactorComplete","Factorial","Factorial2","FactorialMoment","FactorialMomentGeneratingFunction","FactorialPower","FactorInteger","FactorList","FactorSquareFree","FactorSquareFreeList","FactorTerms","FactorTermsList","Fail","Failure","FailureAction","FailureDistribution","FailureQ","False","FareySequence","FARIMAProcess","FeatureDistance","FeatureExtract","FeatureExtraction","FeatureExtractor","FeatureExtractorFunction","FeatureNames","FeatureNearest","FeatureSpacePlot","FeatureSpacePlot3D","FeatureTypes","FEDisableConsolePrintPacket","FeedbackLinearize","FeedbackSector","FeedbackSectorStyle","FeedbackType","FEEnableConsolePrintPacket","FetalGrowthData","Fibonacci","Fibonorial","FieldCompletionFunction","FieldHint","FieldHintStyle","FieldMasked","FieldSize","File","FileBaseName","FileByteCount","FileConvert","FileDate","FileExistsQ","FileExtension","FileFormat","FileHandler","FileHash","FileInformation","FileName","FileNameDepth","FileNameDialogSettings","FileNameDrop","FileNameForms","FileNameJoin","FileNames","FileNameSetter","FileNameSplit","FileNameTake","FilePrint","FileSize","FileSystemMap","FileSystemScan","FileTemplate","FileTemplateApply","FileType","FilledCurve","FilledCurveBox","FilledCurveBoxOptions","Filling","FillingStyle","FillingTransform","FilteredEntityClass","FilterRules","FinancialBond","FinancialData","FinancialDerivative","FinancialIndicator","Find","FindAnomalies","FindArgMax","FindArgMin","FindChannels","FindClique","FindClusters","FindCookies","FindCurvePath","FindCycle","FindDevices","FindDistribution","FindDistributionParameters","FindDivisions","FindEdgeCover","FindEdgeCut","FindEdgeIndependentPaths","FindEquationalProof","FindEulerianCycle","FindExternalEvaluators","FindFaces","FindFile","FindFit","FindFormula","FindFundamentalCycles","FindGeneratingFunction","FindGeoLocation","FindGeometricConjectures","FindGeometricTransform","FindGraphCommunities","FindGraphIsomorphism","FindGraphPartition","FindHamiltonianCycle","FindHamiltonianPath","FindHiddenMarkovStates","FindImageText","FindIndependentEdgeSet","FindIndependentVertexSet","FindInstance","FindIntegerNullVector","FindKClan","FindKClique","FindKClub","FindKPlex","FindLibrary","FindLinearRecurrence","FindList","FindMatchingColor","FindMaximum","FindMaximumCut","FindMaximumFlow","FindMaxValue","FindMeshDefects","FindMinimum","FindMinimumCostFlow","FindMinimumCut","FindMinValue","FindMoleculeSubstructure","FindPath","FindPeaks","FindPermutation","FindPostmanTour","FindProcessParameters","FindRepeat","FindRoot","FindSequenceFunction","FindSettings","FindShortestPath","FindShortestTour","FindSpanningTree","FindSystemModelEquilibrium","FindTextualAnswer","FindThreshold","FindTransientRepeat","FindVertexCover","FindVertexCut","FindVertexIndependentPaths","Fine","FinishDynamic","FiniteAbelianGroupCount","FiniteGroupCount","FiniteGroupData","First","FirstCase","FirstPassageTimeDistribution","FirstPosition","FischerGroupFi22","FischerGroupFi23","FischerGroupFi24Prime","FisherHypergeometricDistribution","FisherRatioTest","FisherZDistribution","Fit","FitAll","FitRegularization","FittedModel","FixedOrder","FixedPoint","FixedPointList","FlashSelection","Flat","Flatten","FlattenAt","FlattenLayer","FlatTopWindow","FlipView","Floor","FlowPolynomial","FlushPrintOutputPacket","Fold","FoldList","FoldPair","FoldPairList","FollowRedirects","Font","FontColor","FontFamily","FontForm","FontName","FontOpacity","FontPostScriptName","FontProperties","FontReencoding","FontSize","FontSlant","FontSubstitutions","FontTracking","FontVariations","FontWeight","For","ForAll","ForceVersionInstall","Format","FormatRules","FormatType","FormatTypeAutoConvert","FormatValues","FormBox","FormBoxOptions","FormControl","FormFunction","FormLayoutFunction","FormObject","FormPage","FormTheme","FormulaData","FormulaLookup","FortranForm","Forward","ForwardBackward","Fourier","FourierCoefficient","FourierCosCoefficient","FourierCosSeries","FourierCosTransform","FourierDCT","FourierDCTFilter","FourierDCTMatrix","FourierDST","FourierDSTMatrix","FourierMatrix","FourierParameters","FourierSequenceTransform","FourierSeries","FourierSinCoefficient","FourierSinSeries","FourierSinTransform","FourierTransform","FourierTrigSeries","FractionalBrownianMotionProcess","FractionalGaussianNoiseProcess","FractionalPart","FractionBox","FractionBoxOptions","FractionLine","Frame","FrameBox","FrameBoxOptions","Framed","FrameInset","FrameLabel","Frameless","FrameMargins","FrameRate","FrameStyle","FrameTicks","FrameTicksStyle","FRatioDistribution","FrechetDistribution","FreeQ","FrenetSerretSystem","FrequencySamplingFilterKernel","FresnelC","FresnelF","FresnelG","FresnelS","Friday","FrobeniusNumber","FrobeniusSolve","FromAbsoluteTime","FromCharacterCode","FromCoefficientRules","FromContinuedFraction","FromDate","FromDigits","FromDMS","FromEntity","FromJulianDate","FromLetterNumber","FromPolarCoordinates","FromRomanNumeral","FromSphericalCoordinates","FromUnixTime","Front","FrontEndDynamicExpression","FrontEndEventActions","FrontEndExecute","FrontEndObject","FrontEndResource","FrontEndResourceString","FrontEndStackSize","FrontEndToken","FrontEndTokenExecute","FrontEndValueCache","FrontEndVersion","FrontFaceColor","FrontFaceOpacity","Full","FullAxes","FullDefinition","FullForm","FullGraphics","FullInformationOutputRegulator","FullOptions","FullRegion","FullSimplify","Function","FunctionCompile","FunctionCompileExport","FunctionCompileExportByteArray","FunctionCompileExportLibrary","FunctionCompileExportString","FunctionDomain","FunctionExpand","FunctionInterpolation","FunctionPeriod","FunctionRange","FunctionSpace","FussellVeselyImportance","GaborFilter","GaborMatrix","GaborWavelet","GainMargins","GainPhaseMargins","GalaxyData","GalleryView","Gamma","GammaDistribution","GammaRegularized","GapPenalty","GARCHProcess","GatedRecurrentLayer","Gather","GatherBy","GaugeFaceElementFunction","GaugeFaceStyle","GaugeFrameElementFunction","GaugeFrameSize","GaugeFrameStyle","GaugeLabels","GaugeMarkers","GaugeStyle","GaussianFilter","GaussianIntegers","GaussianMatrix","GaussianOrthogonalMatrixDistribution","GaussianSymplecticMatrixDistribution","GaussianUnitaryMatrixDistribution","GaussianWindow","GCD","GegenbauerC","General","GeneralizedLinearModelFit","GenerateAsymmetricKeyPair","GenerateConditions","GeneratedCell","GeneratedDocumentBinding","GenerateDerivedKey","GenerateDigitalSignature","GenerateDocument","GeneratedParameters","GeneratedQuantityMagnitudes","GenerateFileSignature","GenerateHTTPResponse","GenerateSecuredAuthenticationKey","GenerateSymmetricKey","GeneratingFunction","GeneratorDescription","GeneratorHistoryLength","GeneratorOutputType","Generic","GenericCylindricalDecomposition","GenomeData","GenomeLookup","GeoAntipode","GeoArea","GeoArraySize","GeoBackground","GeoBoundingBox","GeoBounds","GeoBoundsRegion","GeoBubbleChart","GeoCenter","GeoCircle","GeoContourPlot","GeoDensityPlot","GeodesicClosing","GeodesicDilation","GeodesicErosion","GeodesicOpening","GeoDestination","GeodesyData","GeoDirection","GeoDisk","GeoDisplacement","GeoDistance","GeoDistanceList","GeoElevationData","GeoEntities","GeoGraphics","GeogravityModelData","GeoGridDirectionDifference","GeoGridLines","GeoGridLinesStyle","GeoGridPosition","GeoGridRange","GeoGridRangePadding","GeoGridUnitArea","GeoGridUnitDistance","GeoGridVector","GeoGroup","GeoHemisphere","GeoHemisphereBoundary","GeoHistogram","GeoIdentify","GeoImage","GeoLabels","GeoLength","GeoListPlot","GeoLocation","GeologicalPeriodData","GeomagneticModelData","GeoMarker","GeometricAssertion","GeometricBrownianMotionProcess","GeometricDistribution","GeometricMean","GeometricMeanFilter","GeometricOptimization","GeometricScene","GeometricTransformation","GeometricTransformation3DBox","GeometricTransformation3DBoxOptions","GeometricTransformationBox","GeometricTransformationBoxOptions","GeoModel","GeoNearest","GeoPath","GeoPosition","GeoPositionENU","GeoPositionXYZ","GeoProjection","GeoProjectionData","GeoRange","GeoRangePadding","GeoRegionValuePlot","GeoResolution","GeoScaleBar","GeoServer","GeoSmoothHistogram","GeoStreamPlot","GeoStyling","GeoStylingImageFunction","GeoVariant","GeoVector","GeoVectorENU","GeoVectorPlot","GeoVectorXYZ","GeoVisibleRegion","GeoVisibleRegionBoundary","GeoWithinQ","GeoZoomLevel","GestureHandler","GestureHandlerTag","Get","GetBoundingBoxSizePacket","GetContext","GetEnvironment","GetFileName","GetFrontEndOptionsDataPacket","GetLinebreakInformationPacket","GetMenusPacket","GetPageBreakInformationPacket","Glaisher","GlobalClusteringCoefficient","GlobalPreferences","GlobalSession","Glow","GoldenAngle","GoldenRatio","GompertzMakehamDistribution","GoochShading","GoodmanKruskalGamma","GoodmanKruskalGammaTest","Goto","Grad","Gradient","GradientFilter","GradientOrientationFilter","GrammarApply","GrammarRules","GrammarToken","Graph","Graph3D","GraphAssortativity","GraphAutomorphismGroup","GraphCenter","GraphComplement","GraphData","GraphDensity","GraphDiameter","GraphDifference","GraphDisjointUnion","GraphDistance","GraphDistanceMatrix","GraphElementData","GraphEmbedding","GraphHighlight","GraphHighlightStyle","GraphHub","Graphics","Graphics3D","Graphics3DBox","Graphics3DBoxOptions","GraphicsArray","GraphicsBaseline","GraphicsBox","GraphicsBoxOptions","GraphicsColor","GraphicsColumn","GraphicsComplex","GraphicsComplex3DBox","GraphicsComplex3DBoxOptions","GraphicsComplexBox","GraphicsComplexBoxOptions","GraphicsContents","GraphicsData","GraphicsGrid","GraphicsGridBox","GraphicsGroup","GraphicsGroup3DBox","GraphicsGroup3DBoxOptions","GraphicsGroupBox","GraphicsGroupBoxOptions","GraphicsGrouping","GraphicsHighlightColor","GraphicsRow","GraphicsSpacing","GraphicsStyle","GraphIntersection","GraphLayout","GraphLinkEfficiency","GraphPeriphery","GraphPlot","GraphPlot3D","GraphPower","GraphPropertyDistribution","GraphQ","GraphRadius","GraphReciprocity","GraphRoot","GraphStyle","GraphUnion","Gray","GrayLevel","Greater","GreaterEqual","GreaterEqualLess","GreaterEqualThan","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterThan","GreaterTilde","Green","GreenFunction","Grid","GridBaseline","GridBox","GridBoxAlignment","GridBoxBackground","GridBoxDividers","GridBoxFrame","GridBoxItemSize","GridBoxItemStyle","GridBoxOptions","GridBoxSpacings","GridCreationSettings","GridDefaultElement","GridElementStyleOptions","GridFrame","GridFrameMargins","GridGraph","GridLines","GridLinesStyle","GroebnerBasis","GroupActionBase","GroupBy","GroupCentralizer","GroupElementFromWord","GroupElementPosition","GroupElementQ","GroupElements","GroupElementToWord","GroupGenerators","Groupings","GroupMultiplicationTable","GroupOrbits","GroupOrder","GroupPageBreakWithin","GroupSetwiseStabilizer","GroupStabilizer","GroupStabilizerChain","GroupTogetherGrouping","GroupTogetherNestedGrouping","GrowCutComponents","Gudermannian","GuidedFilter","GumbelDistribution","HaarWavelet","HadamardMatrix","HalfLine","HalfNormalDistribution","HalfPlane","HalfSpace","HalftoneShading","HamiltonianGraphQ","HammingDistance","HammingWindow","HandlerFunctions","HandlerFunctionsKeys","HankelH1","HankelH2","HankelMatrix","HankelTransform","HannPoissonWindow","HannWindow","HaradaNortonGroupHN","HararyGraph","HarmonicMean","HarmonicMeanFilter","HarmonicNumber","Hash","HatchFilling","HatchShading","Haversine","HazardFunction","Head","HeadCompose","HeaderAlignment","HeaderBackground","HeaderDisplayFunction","HeaderLines","HeaderSize","HeaderStyle","Heads","HeavisideLambda","HeavisidePi","HeavisideTheta","HeldGroupHe","HeldPart","HelpBrowserLookup","HelpBrowserNotebook","HelpBrowserSettings","Here","HermiteDecomposition","HermiteH","HermitianMatrixQ","HessenbergDecomposition","Hessian","HeunB","HeunBPrime","HeunC","HeunCPrime","HeunD","HeunDPrime","HeunG","HeunGPrime","HeunT","HeunTPrime","HexadecimalCharacter","Hexahedron","HexahedronBox","HexahedronBoxOptions","HiddenItems","HiddenMarkovProcess","HiddenSurface","Highlighted","HighlightGraph","HighlightImage","HighlightMesh","HighpassFilter","HigmanSimsGroupHS","HilbertCurve","HilbertFilter","HilbertMatrix","Histogram","Histogram3D","HistogramDistribution","HistogramList","HistogramTransform","HistogramTransformInterpolation","HistoricalPeriodData","HitMissTransform","HITSCentrality","HjorthDistribution","HodgeDual","HoeffdingD","HoeffdingDTest","Hold","HoldAll","HoldAllComplete","HoldComplete","HoldFirst","HoldForm","HoldPattern","HoldRest","HolidayCalendar","HomeDirectory","HomePage","Horizontal","HorizontalForm","HorizontalGauge","HorizontalScrollPosition","HornerForm","HostLookup","HotellingTSquareDistribution","HoytDistribution","HTMLSave","HTTPErrorResponse","HTTPRedirect","HTTPRequest","HTTPRequestData","HTTPResponse","Hue","HumanGrowthData","HumpDownHump","HumpEqual","HurwitzLerchPhi","HurwitzZeta","HyperbolicDistribution","HypercubeGraph","HyperexponentialDistribution","Hyperfactorial","Hypergeometric0F1","Hypergeometric0F1Regularized","Hypergeometric1F1","Hypergeometric1F1Regularized","Hypergeometric2F1","Hypergeometric2F1Regularized","HypergeometricDistribution","HypergeometricPFQ","HypergeometricPFQRegularized","HypergeometricU","Hyperlink","HyperlinkAction","HyperlinkCreationSettings","Hyperplane","Hyphenation","HyphenationOptions","HypoexponentialDistribution","HypothesisTestData","I","IconData","Iconize","IconizedObject","IconRules","Icosahedron","Identity","IdentityMatrix","If","IgnoreCase","IgnoreDiacritics","IgnorePunctuation","IgnoreSpellCheck","IgnoringInactive","Im","Image","Image3D","Image3DProjection","Image3DSlices","ImageAccumulate","ImageAdd","ImageAdjust","ImageAlign","ImageApply","ImageApplyIndexed","ImageAspectRatio","ImageAssemble","ImageAugmentationLayer","ImageBoundingBoxes","ImageCache","ImageCacheValid","ImageCapture","ImageCaptureFunction","ImageCases","ImageChannels","ImageClip","ImageCollage","ImageColorSpace","ImageCompose","ImageContainsQ","ImageContents","ImageConvolve","ImageCooccurrence","ImageCorners","ImageCorrelate","ImageCorrespondingPoints","ImageCrop","ImageData","ImageDeconvolve","ImageDemosaic","ImageDifference","ImageDimensions","ImageDisplacements","ImageDistance","ImageEffect","ImageExposureCombine","ImageFeatureTrack","ImageFileApply","ImageFileFilter","ImageFileScan","ImageFilter","ImageFocusCombine","ImageForestingComponents","ImageFormattingWidth","ImageForwardTransformation","ImageGraphics","ImageHistogram","ImageIdentify","ImageInstanceQ","ImageKeypoints","ImageLabels","ImageLegends","ImageLevels","ImageLines","ImageMargins","ImageMarker","ImageMarkers","ImageMeasurements","ImageMesh","ImageMultiply","ImageOffset","ImagePad","ImagePadding","ImagePartition","ImagePeriodogram","ImagePerspectiveTransformation","ImagePosition","ImagePreviewFunction","ImagePyramid","ImagePyramidApply","ImageQ","ImageRangeCache","ImageRecolor","ImageReflect","ImageRegion","ImageResize","ImageResolution","ImageRestyle","ImageRotate","ImageRotated","ImageSaliencyFilter","ImageScaled","ImageScan","ImageSize","ImageSizeAction","ImageSizeCache","ImageSizeMultipliers","ImageSizeRaw","ImageSubtract","ImageTake","ImageTransformation","ImageTrim","ImageType","ImageValue","ImageValuePositions","ImagingDevice","ImplicitRegion","Implies","Import","ImportAutoReplacements","ImportByteArray","ImportOptions","ImportString","ImprovementImportance","In","Inactivate","Inactive","IncidenceGraph","IncidenceList","IncidenceMatrix","IncludeAromaticBonds","IncludeConstantBasis","IncludeDefinitions","IncludeDirectories","IncludeFileExtension","IncludeGeneratorTasks","IncludeHydrogens","IncludeInflections","IncludeMetaInformation","IncludePods","IncludeQuantities","IncludeRelatedTables","IncludeSingularTerm","IncludeWindowTimes","Increment","IndefiniteMatrixQ","Indent","IndentingNewlineSpacings","IndentMaxFraction","IndependenceTest","IndependentEdgeSetQ","IndependentPhysicalQuantity","IndependentUnit","IndependentUnitDimension","IndependentVertexSetQ","Indeterminate","IndeterminateThreshold","IndexCreationOptions","Indexed","IndexEdgeTaggedGraph","IndexGraph","IndexTag","Inequality","InexactNumberQ","InexactNumbers","InfiniteFuture","InfiniteLine","InfinitePast","InfinitePlane","Infinity","Infix","InflationAdjust","InflationMethod","Information","InformationData","InformationDataGrid","Inherited","InheritScope","InhomogeneousPoissonProcess","InitialEvaluationHistory","Initialization","InitializationCell","InitializationCellEvaluation","InitializationCellWarning","InitializationObjects","InitializationValue","Initialize","InitialSeeding","InlineCounterAssignments","InlineCounterIncrements","InlineRules","Inner","InnerPolygon","InnerPolyhedron","Inpaint","Input","InputAliases","InputAssumptions","InputAutoReplacements","InputField","InputFieldBox","InputFieldBoxOptions","InputForm","InputGrouping","InputNamePacket","InputNotebook","InputPacket","InputSettings","InputStream","InputString","InputStringPacket","InputToBoxFormPacket","Insert","InsertionFunction","InsertionPointObject","InsertLinebreaks","InsertResults","Inset","Inset3DBox","Inset3DBoxOptions","InsetBox","InsetBoxOptions","Insphere","Install","InstallService","InstanceNormalizationLayer","InString","Integer","IntegerDigits","IntegerExponent","IntegerLength","IntegerName","IntegerPart","IntegerPartitions","IntegerQ","IntegerReverse","Integers","IntegerString","Integral","Integrate","Interactive","InteractiveTradingChart","Interlaced","Interleaving","InternallyBalancedDecomposition","InterpolatingFunction","InterpolatingPolynomial","Interpolation","InterpolationOrder","InterpolationPoints","InterpolationPrecision","Interpretation","InterpretationBox","InterpretationBoxOptions","InterpretationFunction","Interpreter","InterpretTemplate","InterquartileRange","Interrupt","InterruptSettings","IntersectedEntityClass","IntersectingQ","Intersection","Interval","IntervalIntersection","IntervalMarkers","IntervalMarkersStyle","IntervalMemberQ","IntervalSlider","IntervalUnion","Into","Inverse","InverseBetaRegularized","InverseCDF","InverseChiSquareDistribution","InverseContinuousWaveletTransform","InverseDistanceTransform","InverseEllipticNomeQ","InverseErf","InverseErfc","InverseFourier","InverseFourierCosTransform","InverseFourierSequenceTransform","InverseFourierSinTransform","InverseFourierTransform","InverseFunction","InverseFunctions","InverseGammaDistribution","InverseGammaRegularized","InverseGaussianDistribution","InverseGudermannian","InverseHankelTransform","InverseHaversine","InverseImagePyramid","InverseJacobiCD","InverseJacobiCN","InverseJacobiCS","InverseJacobiDC","InverseJacobiDN","InverseJacobiDS","InverseJacobiNC","InverseJacobiND","InverseJacobiNS","InverseJacobiSC","InverseJacobiSD","InverseJacobiSN","InverseLaplaceTransform","InverseMellinTransform","InversePermutation","InverseRadon","InverseRadonTransform","InverseSeries","InverseShortTimeFourier","InverseSpectrogram","InverseSurvivalFunction","InverseTransformedRegion","InverseWaveletTransform","InverseWeierstrassP","InverseWishartMatrixDistribution","InverseZTransform","Invisible","InvisibleApplication","InvisibleTimes","IPAddress","IrreduciblePolynomialQ","IslandData","IsolatingInterval","IsomorphicGraphQ","IsotopeData","Italic","Item","ItemAspectRatio","ItemBox","ItemBoxOptions","ItemDisplayFunction","ItemSize","ItemStyle","ItoProcess","JaccardDissimilarity","JacobiAmplitude","Jacobian","JacobiCD","JacobiCN","JacobiCS","JacobiDC","JacobiDN","JacobiDS","JacobiNC","JacobiND","JacobiNS","JacobiP","JacobiSC","JacobiSD","JacobiSN","JacobiSymbol","JacobiZeta","JankoGroupJ1","JankoGroupJ2","JankoGroupJ3","JankoGroupJ4","JarqueBeraALMTest","JohnsonDistribution","Join","JoinAcross","Joined","JoinedCurve","JoinedCurveBox","JoinedCurveBoxOptions","JoinForm","JordanDecomposition","JordanModelDecomposition","JulianDate","JuliaSetBoettcher","JuliaSetIterationCount","JuliaSetPlot","JuliaSetPoints","K","KagiChart","KaiserBesselWindow","KaiserWindow","KalmanEstimator","KalmanFilter","KarhunenLoeveDecomposition","KaryTree","KatzCentrality","KCoreComponents","KDistribution","KEdgeConnectedComponents","KEdgeConnectedGraphQ","KeepExistingVersion","KelvinBei","KelvinBer","KelvinKei","KelvinKer","KendallTau","KendallTauTest","KernelExecute","KernelFunction","KernelMixtureDistribution","KernelObject","Kernels","Ket","Key","KeyCollisionFunction","KeyComplement","KeyDrop","KeyDropFrom","KeyExistsQ","KeyFreeQ","KeyIntersection","KeyMap","KeyMemberQ","KeypointStrength","Keys","KeySelect","KeySort","KeySortBy","KeyTake","KeyUnion","KeyValueMap","KeyValuePattern","Khinchin","KillProcess","KirchhoffGraph","KirchhoffMatrix","KleinInvariantJ","KnapsackSolve","KnightTourGraph","KnotData","KnownUnitQ","KochCurve","KolmogorovSmirnovTest","KroneckerDelta","KroneckerModelDecomposition","KroneckerProduct","KroneckerSymbol","KuiperTest","KumaraswamyDistribution","Kurtosis","KuwaharaFilter","KVertexConnectedComponents","KVertexConnectedGraphQ","LABColor","Label","Labeled","LabeledSlider","LabelingFunction","LabelingSize","LabelStyle","LabelVisibility","LaguerreL","LakeData","LambdaComponents","LambertW","LaminaData","LanczosWindow","LandauDistribution","Language","LanguageCategory","LanguageData","LanguageIdentify","LanguageOptions","LaplaceDistribution","LaplaceTransform","Laplacian","LaplacianFilter","LaplacianGaussianFilter","Large","Larger","Last","Latitude","LatitudeLongitude","LatticeData","LatticeReduce","Launch","LaunchKernels","LayeredGraphPlot","LayerSizeFunction","LayoutInformation","LCHColor","LCM","LeaderSize","LeafCount","LeapYearQ","LearnDistribution","LearnedDistribution","LearningRate","LearningRateMultipliers","LeastSquares","LeastSquaresFilterKernel","Left","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","LegendAppearance","Legended","LegendFunction","LegendLabel","LegendLayout","LegendMargins","LegendMarkers","LegendMarkerSize","LegendreP","LegendreQ","LegendreType","Length","LengthWhile","LerchPhi","Less","LessEqual","LessEqualGreater","LessEqualThan","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessThan","LessTilde","LetterCharacter","LetterCounts","LetterNumber","LetterQ","Level","LeveneTest","LeviCivitaTensor","LevyDistribution","Lexicographic","LibraryDataType","LibraryFunction","LibraryFunctionError","LibraryFunctionInformation","LibraryFunctionLoad","LibraryFunctionUnload","LibraryLoad","LibraryUnload","LicenseID","LiftingFilterData","LiftingWaveletTransform","LightBlue","LightBrown","LightCyan","Lighter","LightGray","LightGreen","Lighting","LightingAngle","LightMagenta","LightOrange","LightPink","LightPurple","LightRed","LightSources","LightYellow","Likelihood","Limit","LimitsPositioning","LimitsPositioningTokens","LindleyDistribution","Line","Line3DBox","Line3DBoxOptions","LinearFilter","LinearFractionalOptimization","LinearFractionalTransform","LinearGradientImage","LinearizingTransformationData","LinearLayer","LinearModelFit","LinearOffsetFunction","LinearOptimization","LinearProgramming","LinearRecurrence","LinearSolve","LinearSolveFunction","LineBox","LineBoxOptions","LineBreak","LinebreakAdjustments","LineBreakChart","LinebreakSemicolonWeighting","LineBreakWithin","LineColor","LineGraph","LineIndent","LineIndentMaxFraction","LineIntegralConvolutionPlot","LineIntegralConvolutionScale","LineLegend","LineOpacity","LineSpacing","LineWrapParts","LinkActivate","LinkClose","LinkConnect","LinkConnectedQ","LinkCreate","LinkError","LinkFlush","LinkFunction","LinkHost","LinkInterrupt","LinkLaunch","LinkMode","LinkObject","LinkOpen","LinkOptions","LinkPatterns","LinkProtocol","LinkRankCentrality","LinkRead","LinkReadHeld","LinkReadyQ","Links","LinkService","LinkWrite","LinkWriteHeld","LiouvilleLambda","List","Listable","ListAnimate","ListContourPlot","ListContourPlot3D","ListConvolve","ListCorrelate","ListCurvePathPlot","ListDeconvolve","ListDensityPlot","ListDensityPlot3D","Listen","ListFormat","ListFourierSequenceTransform","ListInterpolation","ListLineIntegralConvolutionPlot","ListLinePlot","ListLogLinearPlot","ListLogLogPlot","ListLogPlot","ListPicker","ListPickerBox","ListPickerBoxBackground","ListPickerBoxOptions","ListPlay","ListPlot","ListPlot3D","ListPointPlot3D","ListPolarPlot","ListQ","ListSliceContourPlot3D","ListSliceDensityPlot3D","ListSliceVectorPlot3D","ListStepPlot","ListStreamDensityPlot","ListStreamPlot","ListSurfacePlot3D","ListVectorDensityPlot","ListVectorPlot","ListVectorPlot3D","ListZTransform","Literal","LiteralSearch","LocalAdaptiveBinarize","LocalCache","LocalClusteringCoefficient","LocalizeDefinitions","LocalizeVariables","LocalObject","LocalObjects","LocalResponseNormalizationLayer","LocalSubmit","LocalSymbol","LocalTime","LocalTimeZone","LocationEquivalenceTest","LocationTest","Locator","LocatorAutoCreate","LocatorBox","LocatorBoxOptions","LocatorCentering","LocatorPane","LocatorPaneBox","LocatorPaneBoxOptions","LocatorRegion","Locked","Log","Log10","Log2","LogBarnesG","LogGamma","LogGammaDistribution","LogicalExpand","LogIntegral","LogisticDistribution","LogisticSigmoid","LogitModelFit","LogLikelihood","LogLinearPlot","LogLogisticDistribution","LogLogPlot","LogMultinormalDistribution","LogNormalDistribution","LogPlot","LogRankTest","LogSeriesDistribution","LongEqual","Longest","LongestCommonSequence","LongestCommonSequencePositions","LongestCommonSubsequence","LongestCommonSubsequencePositions","LongestMatch","LongestOrderedSequence","LongForm","Longitude","LongLeftArrow","LongLeftRightArrow","LongRightArrow","LongShortTermMemoryLayer","Lookup","Loopback","LoopFreeGraphQ","Looping","LossFunction","LowerCaseQ","LowerLeftArrow","LowerRightArrow","LowerTriangularize","LowerTriangularMatrixQ","LowpassFilter","LQEstimatorGains","LQGRegulator","LQOutputRegulatorGains","LQRegulatorGains","LUBackSubstitution","LucasL","LuccioSamiComponents","LUDecomposition","LunarEclipse","LUVColor","LyapunovSolve","LyonsGroupLy","MachineID","MachineName","MachineNumberQ","MachinePrecision","MacintoshSystemPageSetup","Magenta","Magnification","Magnify","MailAddressValidation","MailExecute","MailFolder","MailItem","MailReceiverFunction","MailResponseFunction","MailSearch","MailServerConnect","MailServerConnection","MailSettings","MainSolve","MaintainDynamicCaches","Majority","MakeBoxes","MakeExpression","MakeRules","ManagedLibraryExpressionID","ManagedLibraryExpressionQ","MandelbrotSetBoettcher","MandelbrotSetDistance","MandelbrotSetIterationCount","MandelbrotSetMemberQ","MandelbrotSetPlot","MangoldtLambda","ManhattanDistance","Manipulate","Manipulator","MannedSpaceMissionData","MannWhitneyTest","MantissaExponent","Manual","Map","MapAll","MapAt","MapIndexed","MAProcess","MapThread","MarchenkoPasturDistribution","MarcumQ","MardiaCombinedTest","MardiaKurtosisTest","MardiaSkewnessTest","MarginalDistribution","MarkovProcessProperties","Masking","MatchingDissimilarity","MatchLocalNameQ","MatchLocalNames","MatchQ","Material","MathematicalFunctionData","MathematicaNotation","MathieuC","MathieuCharacteristicA","MathieuCharacteristicB","MathieuCharacteristicExponent","MathieuCPrime","MathieuGroupM11","MathieuGroupM12","MathieuGroupM22","MathieuGroupM23","MathieuGroupM24","MathieuS","MathieuSPrime","MathMLForm","MathMLText","Matrices","MatrixExp","MatrixForm","MatrixFunction","MatrixLog","MatrixNormalDistribution","MatrixPlot","MatrixPower","MatrixPropertyDistribution","MatrixQ","MatrixRank","MatrixTDistribution","Max","MaxBend","MaxCellMeasure","MaxColorDistance","MaxDate","MaxDetect","MaxDuration","MaxExtraBandwidths","MaxExtraConditions","MaxFeatureDisplacement","MaxFeatures","MaxFilter","MaximalBy","Maximize","MaxItems","MaxIterations","MaxLimit","MaxMemoryUsed","MaxMixtureKernels","MaxOverlapFraction","MaxPlotPoints","MaxPoints","MaxRecursion","MaxStableDistribution","MaxStepFraction","MaxSteps","MaxStepSize","MaxTrainingRounds","MaxValue","MaxwellDistribution","MaxWordGap","McLaughlinGroupMcL","Mean","MeanAbsoluteLossLayer","MeanAround","MeanClusteringCoefficient","MeanDegreeConnectivity","MeanDeviation","MeanFilter","MeanGraphDistance","MeanNeighborDegree","MeanShift","MeanShiftFilter","MeanSquaredLossLayer","Median","MedianDeviation","MedianFilter","MedicalTestData","Medium","MeijerG","MeijerGReduce","MeixnerDistribution","MellinConvolve","MellinTransform","MemberQ","MemoryAvailable","MemoryConstrained","MemoryConstraint","MemoryInUse","MengerMesh","Menu","MenuAppearance","MenuCommandKey","MenuEvaluator","MenuItem","MenuList","MenuPacket","MenuSortingValue","MenuStyle","MenuView","Merge","MergeDifferences","MergingFunction","MersennePrimeExponent","MersennePrimeExponentQ","Mesh","MeshCellCentroid","MeshCellCount","MeshCellHighlight","MeshCellIndex","MeshCellLabel","MeshCellMarker","MeshCellMeasure","MeshCellQuality","MeshCells","MeshCellShapeFunction","MeshCellStyle","MeshConnectivityGraph","MeshCoordinates","MeshFunctions","MeshPrimitives","MeshQualityGoal","MeshRange","MeshRefinementFunction","MeshRegion","MeshRegionQ","MeshShading","MeshStyle","Message","MessageDialog","MessageList","MessageName","MessageObject","MessageOptions","MessagePacket","Messages","MessagesNotebook","MetaCharacters","MetaInformation","MeteorShowerData","Method","MethodOptions","MexicanHatWavelet","MeyerWavelet","Midpoint","Min","MinColorDistance","MinDate","MinDetect","MineralData","MinFilter","MinimalBy","MinimalPolynomial","MinimalStateSpaceModel","Minimize","MinimumTimeIncrement","MinIntervalSize","MinkowskiQuestionMark","MinLimit","MinMax","MinorPlanetData","Minors","MinRecursion","MinSize","MinStableDistribution","Minus","MinusPlus","MinValue","Missing","MissingBehavior","MissingDataMethod","MissingDataRules","MissingQ","MissingString","MissingStyle","MissingValuePattern","MittagLefflerE","MixedFractionParts","MixedGraphQ","MixedMagnitude","MixedRadix","MixedRadixQuantity","MixedUnit","MixtureDistribution","Mod","Modal","Mode","Modular","ModularInverse","ModularLambda","Module","Modulus","MoebiusMu","Molecule","MoleculeContainsQ","MoleculeEquivalentQ","MoleculeGraph","MoleculeModify","MoleculePattern","MoleculePlot","MoleculePlot3D","MoleculeProperty","MoleculeQ","MoleculeRecognize","MoleculeValue","Moment","Momentary","MomentConvert","MomentEvaluate","MomentGeneratingFunction","MomentOfInertia","Monday","Monitor","MonomialList","MonomialOrder","MonsterGroupM","MoonPhase","MoonPosition","MorletWavelet","MorphologicalBinarize","MorphologicalBranchPoints","MorphologicalComponents","MorphologicalEulerNumber","MorphologicalGraph","MorphologicalPerimeter","MorphologicalTransform","MortalityData","Most","MountainData","MouseAnnotation","MouseAppearance","MouseAppearanceTag","MouseButtons","Mouseover","MousePointerNote","MousePosition","MovieData","MovingAverage","MovingMap","MovingMedian","MoyalDistribution","Multicolumn","MultiedgeStyle","MultigraphQ","MultilaunchWarning","MultiLetterItalics","MultiLetterStyle","MultilineFunction","Multinomial","MultinomialDistribution","MultinormalDistribution","MultiplicativeOrder","Multiplicity","MultiplySides","Multiselection","MultivariateHypergeometricDistribution","MultivariatePoissonDistribution","MultivariateTDistribution","N","NakagamiDistribution","NameQ","Names","NamespaceBox","NamespaceBoxOptions","Nand","NArgMax","NArgMin","NBernoulliB","NBodySimulation","NBodySimulationData","NCache","NDEigensystem","NDEigenvalues","NDSolve","NDSolveValue","Nearest","NearestFunction","NearestMeshCells","NearestNeighborGraph","NearestTo","NebulaData","NeedCurrentFrontEndPackagePacket","NeedCurrentFrontEndSymbolsPacket","NeedlemanWunschSimilarity","Needs","Negative","NegativeBinomialDistribution","NegativeDefiniteMatrixQ","NegativeIntegers","NegativeMultinomialDistribution","NegativeRationals","NegativeReals","NegativeSemidefiniteMatrixQ","NeighborhoodData","NeighborhoodGraph","Nest","NestedGreaterGreater","NestedLessLess","NestedScriptRules","NestGraph","NestList","NestWhile","NestWhileList","NetAppend","NetBidirectionalOperator","NetChain","NetDecoder","NetDelete","NetDrop","NetEncoder","NetEvaluationMode","NetExtract","NetFlatten","NetFoldOperator","NetGANOperator","NetGraph","NetInformation","NetInitialize","NetInsert","NetInsertSharedArrays","NetJoin","NetMapOperator","NetMapThreadOperator","NetMeasurements","NetModel","NetNestOperator","NetPairEmbeddingOperator","NetPort","NetPortGradient","NetPrepend","NetRename","NetReplace","NetReplacePart","NetSharedArray","NetStateObject","NetTake","NetTrain","NetTrainResultsObject","NetworkPacketCapture","NetworkPacketRecording","NetworkPacketRecordingDuring","NetworkPacketTrace","NeumannValue","NevilleThetaC","NevilleThetaD","NevilleThetaN","NevilleThetaS","NewPrimitiveStyle","NExpectation","Next","NextCell","NextDate","NextPrime","NextScheduledTaskTime","NHoldAll","NHoldFirst","NHoldRest","NicholsGridLines","NicholsPlot","NightHemisphere","NIntegrate","NMaximize","NMaxValue","NMinimize","NMinValue","NominalVariables","NonAssociative","NoncentralBetaDistribution","NoncentralChiSquareDistribution","NoncentralFRatioDistribution","NoncentralStudentTDistribution","NonCommutativeMultiply","NonConstants","NondimensionalizationTransform","None","NoneTrue","NonlinearModelFit","NonlinearStateSpaceModel","NonlocalMeansFilter","NonNegative","NonNegativeIntegers","NonNegativeRationals","NonNegativeReals","NonPositive","NonPositiveIntegers","NonPositiveRationals","NonPositiveReals","Nor","NorlundB","Norm","Normal","NormalDistribution","NormalGrouping","NormalizationLayer","Normalize","Normalized","NormalizedSquaredEuclideanDistance","NormalMatrixQ","NormalsFunction","NormFunction","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","Notebook","NotebookApply","NotebookAutoSave","NotebookClose","NotebookConvertSettings","NotebookCreate","NotebookCreateReturnObject","NotebookDefault","NotebookDelete","NotebookDirectory","NotebookDynamicExpression","NotebookEvaluate","NotebookEventActions","NotebookFileName","NotebookFind","NotebookFindReturnObject","NotebookGet","NotebookGetLayoutInformationPacket","NotebookGetMisspellingsPacket","NotebookImport","NotebookInformation","NotebookInterfaceObject","NotebookLocate","NotebookObject","NotebookOpen","NotebookOpenReturnObject","NotebookPath","NotebookPrint","NotebookPut","NotebookPutReturnObject","NotebookRead","NotebookResetGeneratedCells","Notebooks","NotebookSave","NotebookSaveAs","NotebookSelection","NotebookSetupLayoutInformationPacket","NotebooksMenu","NotebookTemplate","NotebookWrite","NotElement","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","Nothing","NotHumpDownHump","NotHumpEqual","NotificationFunction","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessFullEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotPrecedesTilde","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Now","NoWhitespace","NProbability","NProduct","NProductFactors","NRoots","NSolve","NSum","NSumTerms","NuclearExplosionData","NuclearReactorData","Null","NullRecords","NullSpace","NullWords","Number","NumberCompose","NumberDecompose","NumberExpand","NumberFieldClassNumber","NumberFieldDiscriminant","NumberFieldFundamentalUnits","NumberFieldIntegralBasis","NumberFieldNormRepresentatives","NumberFieldRegulator","NumberFieldRootsOfUnity","NumberFieldSignature","NumberForm","NumberFormat","NumberLinePlot","NumberMarks","NumberMultiplier","NumberPadding","NumberPoint","NumberQ","NumberSeparator","NumberSigns","NumberString","Numerator","NumeratorDenominator","NumericalOrder","NumericalSort","NumericArray","NumericArrayQ","NumericArrayType","NumericFunction","NumericQ","NuttallWindow","NValues","NyquistGridLines","NyquistPlot","O","ObservabilityGramian","ObservabilityMatrix","ObservableDecomposition","ObservableModelQ","OceanData","Octahedron","OddQ","Off","Offset","OLEData","On","ONanGroupON","Once","OneIdentity","Opacity","OpacityFunction","OpacityFunctionScaling","Open","OpenAppend","Opener","OpenerBox","OpenerBoxOptions","OpenerView","OpenFunctionInspectorPacket","Opening","OpenRead","OpenSpecialOptions","OpenTemporary","OpenWrite","Operate","OperatingSystem","OperatorApplied","OptimumFlowData","Optional","OptionalElement","OptionInspectorSettings","OptionQ","Options","OptionsPacket","OptionsPattern","OptionValue","OptionValueBox","OptionValueBoxOptions","Or","Orange","Order","OrderDistribution","OrderedQ","Ordering","OrderingBy","OrderingLayer","Orderless","OrderlessPatternSequence","OrnsteinUhlenbeckProcess","Orthogonalize","OrthogonalMatrixQ","Out","Outer","OuterPolygon","OuterPolyhedron","OutputAutoOverwrite","OutputControllabilityMatrix","OutputControllableModelQ","OutputForm","OutputFormData","OutputGrouping","OutputMathEditExpression","OutputNamePacket","OutputResponse","OutputSizeLimit","OutputStream","Over","OverBar","OverDot","Overflow","OverHat","Overlaps","Overlay","OverlayBox","OverlayBoxOptions","Overscript","OverscriptBox","OverscriptBoxOptions","OverTilde","OverVector","OverwriteTarget","OwenT","OwnValues","Package","PackingMethod","PackPaclet","PacletDataRebuild","PacletDirectoryAdd","PacletDirectoryLoad","PacletDirectoryRemove","PacletDirectoryUnload","PacletDisable","PacletEnable","PacletFind","PacletFindRemote","PacletInformation","PacletInstall","PacletInstallSubmit","PacletNewerQ","PacletObject","PacletObjectQ","PacletSite","PacletSiteObject","PacletSiteRegister","PacletSites","PacletSiteUnregister","PacletSiteUpdate","PacletUninstall","PacletUpdate","PaddedForm","Padding","PaddingLayer","PaddingSize","PadeApproximant","PadLeft","PadRight","PageBreakAbove","PageBreakBelow","PageBreakWithin","PageFooterLines","PageFooters","PageHeaderLines","PageHeaders","PageHeight","PageRankCentrality","PageTheme","PageWidth","Pagination","PairedBarChart","PairedHistogram","PairedSmoothHistogram","PairedTTest","PairedZTest","PaletteNotebook","PalettePath","PalindromeQ","Pane","PaneBox","PaneBoxOptions","Panel","PanelBox","PanelBoxOptions","Paneled","PaneSelector","PaneSelectorBox","PaneSelectorBoxOptions","PaperWidth","ParabolicCylinderD","ParagraphIndent","ParagraphSpacing","ParallelArray","ParallelCombine","ParallelDo","Parallelepiped","ParallelEvaluate","Parallelization","Parallelize","ParallelMap","ParallelNeeds","Parallelogram","ParallelProduct","ParallelSubmit","ParallelSum","ParallelTable","ParallelTry","Parameter","ParameterEstimator","ParameterMixtureDistribution","ParameterVariables","ParametricFunction","ParametricNDSolve","ParametricNDSolveValue","ParametricPlot","ParametricPlot3D","ParametricRampLayer","ParametricRegion","ParentBox","ParentCell","ParentConnect","ParentDirectory","ParentForm","Parenthesize","ParentList","ParentNotebook","ParetoDistribution","ParetoPickandsDistribution","ParkData","Part","PartBehavior","PartialCorrelationFunction","PartialD","ParticleAcceleratorData","ParticleData","Partition","PartitionGranularity","PartitionsP","PartitionsQ","PartLayer","PartOfSpeech","PartProtection","ParzenWindow","PascalDistribution","PassEventsDown","PassEventsUp","Paste","PasteAutoQuoteCharacters","PasteBoxFormInlineCells","PasteButton","Path","PathGraph","PathGraphQ","Pattern","PatternFilling","PatternSequence","PatternTest","PauliMatrix","PaulWavelet","Pause","PausedTime","PDF","PeakDetect","PeanoCurve","PearsonChiSquareTest","PearsonCorrelationTest","PearsonDistribution","PercentForm","PerfectNumber","PerfectNumberQ","PerformanceGoal","Perimeter","PeriodicBoundaryCondition","PeriodicInterpolation","Periodogram","PeriodogramArray","Permanent","Permissions","PermissionsGroup","PermissionsGroupMemberQ","PermissionsGroups","PermissionsKey","PermissionsKeys","PermutationCycles","PermutationCyclesQ","PermutationGroup","PermutationLength","PermutationList","PermutationListQ","PermutationMax","PermutationMin","PermutationOrder","PermutationPower","PermutationProduct","PermutationReplace","Permutations","PermutationSupport","Permute","PeronaMalikFilter","Perpendicular","PerpendicularBisector","PersistenceLocation","PersistenceTime","PersistentObject","PersistentObjects","PersistentValue","PersonData","PERTDistribution","PetersenGraph","PhaseMargins","PhaseRange","PhysicalSystemData","Pi","Pick","PIDData","PIDDerivativeFilter","PIDFeedforward","PIDTune","Piecewise","PiecewiseExpand","PieChart","PieChart3D","PillaiTrace","PillaiTraceTest","PingTime","Pink","PitchRecognize","Pivoting","PixelConstrained","PixelValue","PixelValuePositions","Placed","Placeholder","PlaceholderReplace","Plain","PlanarAngle","PlanarGraph","PlanarGraphQ","PlanckRadiationLaw","PlaneCurveData","PlanetaryMoonData","PlanetData","PlantData","Play","PlayRange","Plot","Plot3D","Plot3Matrix","PlotDivision","PlotJoined","PlotLabel","PlotLabels","PlotLayout","PlotLegends","PlotMarkers","PlotPoints","PlotRange","PlotRangeClipping","PlotRangeClipPlanesStyle","PlotRangePadding","PlotRegion","PlotStyle","PlotTheme","Pluralize","Plus","PlusMinus","Pochhammer","PodStates","PodWidth","Point","Point3DBox","Point3DBoxOptions","PointBox","PointBoxOptions","PointFigureChart","PointLegend","PointSize","PoissonConsulDistribution","PoissonDistribution","PoissonProcess","PoissonWindow","PolarAxes","PolarAxesOrigin","PolarGridLines","PolarPlot","PolarTicks","PoleZeroMarkers","PolyaAeppliDistribution","PolyGamma","Polygon","Polygon3DBox","Polygon3DBoxOptions","PolygonalNumber","PolygonAngle","PolygonBox","PolygonBoxOptions","PolygonCoordinates","PolygonDecomposition","PolygonHoleScale","PolygonIntersections","PolygonScale","Polyhedron","PolyhedronAngle","PolyhedronCoordinates","PolyhedronData","PolyhedronDecomposition","PolyhedronGenus","PolyLog","PolynomialExtendedGCD","PolynomialForm","PolynomialGCD","PolynomialLCM","PolynomialMod","PolynomialQ","PolynomialQuotient","PolynomialQuotientRemainder","PolynomialReduce","PolynomialRemainder","Polynomials","PoolingLayer","PopupMenu","PopupMenuBox","PopupMenuBoxOptions","PopupView","PopupWindow","Position","PositionIndex","Positive","PositiveDefiniteMatrixQ","PositiveIntegers","PositiveRationals","PositiveReals","PositiveSemidefiniteMatrixQ","PossibleZeroQ","Postfix","PostScript","Power","PowerDistribution","PowerExpand","PowerMod","PowerModList","PowerRange","PowerSpectralDensity","PowersRepresentations","PowerSymmetricPolynomial","Precedence","PrecedenceForm","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Precision","PrecisionGoal","PreDecrement","Predict","PredictionRoot","PredictorFunction","PredictorInformation","PredictorMeasurements","PredictorMeasurementsObject","PreemptProtect","PreferencesPath","Prefix","PreIncrement","Prepend","PrependLayer","PrependTo","PreprocessingRules","PreserveColor","PreserveImageOptions","Previous","PreviousCell","PreviousDate","PriceGraphDistribution","PrimaryPlaceholder","Prime","PrimeNu","PrimeOmega","PrimePi","PrimePowerQ","PrimeQ","Primes","PrimeZetaP","PrimitivePolynomialQ","PrimitiveRoot","PrimitiveRootList","PrincipalComponents","PrincipalValue","Print","PrintableASCIIQ","PrintAction","PrintForm","PrintingCopies","PrintingOptions","PrintingPageRange","PrintingStartingPageNumber","PrintingStyleEnvironment","Printout3D","Printout3DPreviewer","PrintPrecision","PrintTemporary","Prism","PrismBox","PrismBoxOptions","PrivateCellOptions","PrivateEvaluationOptions","PrivateFontOptions","PrivateFrontEndOptions","PrivateKey","PrivateNotebookOptions","PrivatePaths","Probability","ProbabilityDistribution","ProbabilityPlot","ProbabilityPr","ProbabilityScalePlot","ProbitModelFit","ProcessConnection","ProcessDirectory","ProcessEnvironment","Processes","ProcessEstimator","ProcessInformation","ProcessObject","ProcessParameterAssumptions","ProcessParameterQ","ProcessStateDomain","ProcessStatus","ProcessTimeDomain","Product","ProductDistribution","ProductLog","ProgressIndicator","ProgressIndicatorBox","ProgressIndicatorBoxOptions","Projection","Prolog","PromptForm","ProofObject","Properties","Property","PropertyList","PropertyValue","Proportion","Proportional","Protect","Protected","ProteinData","Pruning","PseudoInverse","PsychrometricPropertyData","PublicKey","PublisherID","PulsarData","PunctuationCharacter","Purple","Put","PutAppend","Pyramid","PyramidBox","PyramidBoxOptions","QBinomial","QFactorial","QGamma","QHypergeometricPFQ","QnDispersion","QPochhammer","QPolyGamma","QRDecomposition","QuadraticIrrationalQ","QuadraticOptimization","Quantile","QuantilePlot","Quantity","QuantityArray","QuantityDistribution","QuantityForm","QuantityMagnitude","QuantityQ","QuantityUnit","QuantityVariable","QuantityVariableCanonicalUnit","QuantityVariableDimensions","QuantityVariableIdentifier","QuantityVariablePhysicalQuantity","Quartics","QuartileDeviation","Quartiles","QuartileSkewness","Query","QueueingNetworkProcess","QueueingProcess","QueueProperties","Quiet","Quit","Quotient","QuotientRemainder","RadialGradientImage","RadialityCentrality","RadicalBox","RadicalBoxOptions","RadioButton","RadioButtonBar","RadioButtonBox","RadioButtonBoxOptions","Radon","RadonTransform","RamanujanTau","RamanujanTauL","RamanujanTauTheta","RamanujanTauZ","Ramp","Random","RandomChoice","RandomColor","RandomComplex","RandomEntity","RandomFunction","RandomGeoPosition","RandomGraph","RandomImage","RandomInstance","RandomInteger","RandomPermutation","RandomPoint","RandomPolygon","RandomPolyhedron","RandomPrime","RandomReal","RandomSample","RandomSeed","RandomSeeding","RandomVariate","RandomWalkProcess","RandomWord","Range","RangeFilter","RangeSpecification","RankedMax","RankedMin","RarerProbability","Raster","Raster3D","Raster3DBox","Raster3DBoxOptions","RasterArray","RasterBox","RasterBoxOptions","Rasterize","RasterSize","Rational","RationalFunctions","Rationalize","Rationals","Ratios","RawArray","RawBoxes","RawData","RawMedium","RayleighDistribution","Re","Read","ReadByteArray","ReadLine","ReadList","ReadProtected","ReadString","Real","RealAbs","RealBlockDiagonalForm","RealDigits","RealExponent","Reals","RealSign","Reap","RebuildPacletData","RecognitionPrior","RecognitionThreshold","Record","RecordLists","RecordSeparators","Rectangle","RectangleBox","RectangleBoxOptions","RectangleChart","RectangleChart3D","RectangularRepeatingElement","RecurrenceFilter","RecurrenceTable","RecurringDigitsForm","Red","Reduce","RefBox","ReferenceLineStyle","ReferenceMarkers","ReferenceMarkerStyle","Refine","ReflectionMatrix","ReflectionTransform","Refresh","RefreshRate","Region","RegionBinarize","RegionBoundary","RegionBoundaryStyle","RegionBounds","RegionCentroid","RegionDifference","RegionDimension","RegionDisjoint","RegionDistance","RegionDistanceFunction","RegionEmbeddingDimension","RegionEqual","RegionFillingStyle","RegionFunction","RegionImage","RegionIntersection","RegionMeasure","RegionMember","RegionMemberFunction","RegionMoment","RegionNearest","RegionNearestFunction","RegionPlot","RegionPlot3D","RegionProduct","RegionQ","RegionResize","RegionSize","RegionSymmetricDifference","RegionUnion","RegionWithin","RegisterExternalEvaluator","RegularExpression","Regularization","RegularlySampledQ","RegularPolygon","ReIm","ReImLabels","ReImPlot","ReImStyle","Reinstall","RelationalDatabase","RelationGraph","Release","ReleaseHold","ReliabilityDistribution","ReliefImage","ReliefPlot","RemoteAuthorizationCaching","RemoteConnect","RemoteConnectionObject","RemoteFile","RemoteRun","RemoteRunProcess","Remove","RemoveAlphaChannel","RemoveAsynchronousTask","RemoveAudioStream","RemoveBackground","RemoveChannelListener","RemoveChannelSubscribers","Removed","RemoveDiacritics","RemoveInputStreamMethod","RemoveOutputStreamMethod","RemoveProperty","RemoveScheduledTask","RemoveUsers","RemoveVideoStream","RenameDirectory","RenameFile","RenderAll","RenderingOptions","RenewalProcess","RenkoChart","RepairMesh","Repeated","RepeatedNull","RepeatedString","RepeatedTiming","RepeatingElement","Replace","ReplaceAll","ReplaceHeldPart","ReplaceImageValue","ReplaceList","ReplacePart","ReplacePixelValue","ReplaceRepeated","ReplicateLayer","RequiredPhysicalQuantities","Resampling","ResamplingAlgorithmData","ResamplingMethod","Rescale","RescalingTransform","ResetDirectory","ResetMenusPacket","ResetScheduledTask","ReshapeLayer","Residue","ResizeLayer","Resolve","ResourceAcquire","ResourceData","ResourceFunction","ResourceObject","ResourceRegister","ResourceRemove","ResourceSearch","ResourceSubmissionObject","ResourceSubmit","ResourceSystemBase","ResourceSystemPath","ResourceUpdate","ResourceVersion","ResponseForm","Rest","RestartInterval","Restricted","Resultant","ResumePacket","Return","ReturnEntersInput","ReturnExpressionPacket","ReturnInputFormPacket","ReturnPacket","ReturnReceiptFunction","ReturnTextPacket","Reverse","ReverseApplied","ReverseBiorthogonalSplineWavelet","ReverseElement","ReverseEquilibrium","ReverseGraph","ReverseSort","ReverseSortBy","ReverseUpEquilibrium","RevolutionAxis","RevolutionPlot3D","RGBColor","RiccatiSolve","RiceDistribution","RidgeFilter","RiemannR","RiemannSiegelTheta","RiemannSiegelZ","RiemannXi","Riffle","Right","RightArrow","RightArrowBar","RightArrowLeftArrow","RightComposition","RightCosetRepresentative","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","RiskAchievementImportance","RiskReductionImportance","RogersTanimotoDissimilarity","RollPitchYawAngles","RollPitchYawMatrix","RomanNumeral","Root","RootApproximant","RootIntervals","RootLocusPlot","RootMeanSquare","RootOfUnityQ","RootReduce","Roots","RootSum","Rotate","RotateLabel","RotateLeft","RotateRight","RotationAction","RotationBox","RotationBoxOptions","RotationMatrix","RotationTransform","Round","RoundImplies","RoundingRadius","Row","RowAlignments","RowBackgrounds","RowBox","RowHeights","RowLines","RowMinHeight","RowReduce","RowsEqual","RowSpacings","RSolve","RSolveValue","RudinShapiro","RudvalisGroupRu","Rule","RuleCondition","RuleDelayed","RuleForm","RulePlot","RulerUnits","Run","RunProcess","RunScheduledTask","RunThrough","RuntimeAttributes","RuntimeOptions","RussellRaoDissimilarity","SameQ","SameTest","SameTestProperties","SampledEntityClass","SampleDepth","SampledSoundFunction","SampledSoundList","SampleRate","SamplingPeriod","SARIMAProcess","SARMAProcess","SASTriangle","SatelliteData","SatisfiabilityCount","SatisfiabilityInstances","SatisfiableQ","Saturday","Save","Saveable","SaveAutoDelete","SaveConnection","SaveDefinitions","SavitzkyGolayMatrix","SawtoothWave","Scale","Scaled","ScaleDivisions","ScaledMousePosition","ScaleOrigin","ScalePadding","ScaleRanges","ScaleRangeStyle","ScalingFunctions","ScalingMatrix","ScalingTransform","Scan","ScheduledTask","ScheduledTaskActiveQ","ScheduledTaskInformation","ScheduledTaskInformationData","ScheduledTaskObject","ScheduledTasks","SchurDecomposition","ScientificForm","ScientificNotationThreshold","ScorerGi","ScorerGiPrime","ScorerHi","ScorerHiPrime","ScreenRectangle","ScreenStyleEnvironment","ScriptBaselineShifts","ScriptForm","ScriptLevel","ScriptMinSize","ScriptRules","ScriptSizeMultipliers","Scrollbars","ScrollingOptions","ScrollPosition","SearchAdjustment","SearchIndexObject","SearchIndices","SearchQueryString","SearchResultObject","Sec","Sech","SechDistribution","SecondOrderConeOptimization","SectionGrouping","SectorChart","SectorChart3D","SectorOrigin","SectorSpacing","SecuredAuthenticationKey","SecuredAuthenticationKeys","SeedRandom","Select","Selectable","SelectComponents","SelectedCells","SelectedNotebook","SelectFirst","Selection","SelectionAnimate","SelectionCell","SelectionCellCreateCell","SelectionCellDefaultStyle","SelectionCellParentStyle","SelectionCreateCell","SelectionDebuggerTag","SelectionDuplicateCell","SelectionEvaluate","SelectionEvaluateCreateCell","SelectionMove","SelectionPlaceholder","SelectionSetStyle","SelectWithContents","SelfLoops","SelfLoopStyle","SemanticImport","SemanticImportString","SemanticInterpretation","SemialgebraicComponentInstances","SemidefiniteOptimization","SendMail","SendMessage","Sequence","SequenceAlignment","SequenceAttentionLayer","SequenceCases","SequenceCount","SequenceFold","SequenceFoldList","SequenceForm","SequenceHold","SequenceLastLayer","SequenceMostLayer","SequencePosition","SequencePredict","SequencePredictorFunction","SequenceReplace","SequenceRestLayer","SequenceReverseLayer","SequenceSplit","Series","SeriesCoefficient","SeriesData","SeriesTermGoal","ServiceConnect","ServiceDisconnect","ServiceExecute","ServiceObject","ServiceRequest","ServiceResponse","ServiceSubmit","SessionSubmit","SessionTime","Set","SetAccuracy","SetAlphaChannel","SetAttributes","Setbacks","SetBoxFormNamesPacket","SetCloudDirectory","SetCookies","SetDelayed","SetDirectory","SetEnvironment","SetEvaluationNotebook","SetFileDate","SetFileLoadingContext","SetNotebookStatusLine","SetOptions","SetOptionsPacket","SetPermissions","SetPrecision","SetProperty","SetSecuredAuthenticationKey","SetSelectedNotebook","SetSharedFunction","SetSharedVariable","SetSpeechParametersPacket","SetStreamPosition","SetSystemModel","SetSystemOptions","Setter","SetterBar","SetterBox","SetterBoxOptions","Setting","SetUsers","SetValue","Shading","Shallow","ShannonWavelet","ShapiroWilkTest","Share","SharingList","Sharpen","ShearingMatrix","ShearingTransform","ShellRegion","ShenCastanMatrix","ShiftedGompertzDistribution","ShiftRegisterSequence","Short","ShortDownArrow","Shortest","ShortestMatch","ShortestPathFunction","ShortLeftArrow","ShortRightArrow","ShortTimeFourier","ShortTimeFourierData","ShortUpArrow","Show","ShowAutoConvert","ShowAutoSpellCheck","ShowAutoStyles","ShowCellBracket","ShowCellLabel","ShowCellTags","ShowClosedCellArea","ShowCodeAssist","ShowContents","ShowControls","ShowCursorTracker","ShowGroupOpenCloseIcon","ShowGroupOpener","ShowInvisibleCharacters","ShowPageBreaks","ShowPredictiveInterface","ShowSelection","ShowShortBoxForm","ShowSpecialCharacters","ShowStringCharacters","ShowSyntaxStyles","ShrinkingDelay","ShrinkWrapBoundingBox","SiderealTime","SiegelTheta","SiegelTukeyTest","SierpinskiCurve","SierpinskiMesh","Sign","Signature","SignedRankTest","SignedRegionDistance","SignificanceLevel","SignPadding","SignTest","SimilarityRules","SimpleGraph","SimpleGraphQ","SimplePolygonQ","SimplePolyhedronQ","Simplex","Simplify","Sin","Sinc","SinghMaddalaDistribution","SingleEvaluation","SingleLetterItalics","SingleLetterStyle","SingularValueDecomposition","SingularValueList","SingularValuePlot","SingularValues","Sinh","SinhIntegral","SinIntegral","SixJSymbol","Skeleton","SkeletonTransform","SkellamDistribution","Skewness","SkewNormalDistribution","SkinStyle","Skip","SliceContourPlot3D","SliceDensityPlot3D","SliceDistribution","SliceVectorPlot3D","Slider","Slider2D","Slider2DBox","Slider2DBoxOptions","SliderBox","SliderBoxOptions","SlideView","Slot","SlotSequence","Small","SmallCircle","Smaller","SmithDecomposition","SmithDelayCompensator","SmithWatermanSimilarity","SmoothDensityHistogram","SmoothHistogram","SmoothHistogram3D","SmoothKernelDistribution","SnDispersion","Snippet","SnubPolyhedron","SocialMediaData","Socket","SocketConnect","SocketListen","SocketListener","SocketObject","SocketOpen","SocketReadMessage","SocketReadyQ","Sockets","SocketWaitAll","SocketWaitNext","SoftmaxLayer","SokalSneathDissimilarity","SolarEclipse","SolarSystemFeatureData","SolidAngle","SolidData","SolidRegionQ","Solve","SolveAlways","SolveDelayed","Sort","SortBy","SortedBy","SortedEntityClass","Sound","SoundAndGraphics","SoundNote","SoundVolume","SourceLink","Sow","Space","SpaceCurveData","SpaceForm","Spacer","Spacings","Span","SpanAdjustments","SpanCharacterRounding","SpanFromAbove","SpanFromBoth","SpanFromLeft","SpanLineThickness","SpanMaxSize","SpanMinSize","SpanningCharacters","SpanSymmetric","SparseArray","SpatialGraphDistribution","SpatialMedian","SpatialTransformationLayer","Speak","SpeakerMatchQ","SpeakTextPacket","SpearmanRankTest","SpearmanRho","SpeciesData","SpecificityGoal","SpectralLineData","Spectrogram","SpectrogramArray","Specularity","SpeechCases","SpeechInterpreter","SpeechRecognize","SpeechSynthesize","SpellingCorrection","SpellingCorrectionList","SpellingDictionaries","SpellingDictionariesPath","SpellingOptions","SpellingSuggestionsPacket","Sphere","SphereBox","SpherePoints","SphericalBesselJ","SphericalBesselY","SphericalHankelH1","SphericalHankelH2","SphericalHarmonicY","SphericalPlot3D","SphericalRegion","SphericalShell","SpheroidalEigenvalue","SpheroidalJoiningFactor","SpheroidalPS","SpheroidalPSPrime","SpheroidalQS","SpheroidalQSPrime","SpheroidalRadialFactor","SpheroidalS1","SpheroidalS1Prime","SpheroidalS2","SpheroidalS2Prime","Splice","SplicedDistribution","SplineClosed","SplineDegree","SplineKnots","SplineWeights","Split","SplitBy","SpokenString","Sqrt","SqrtBox","SqrtBoxOptions","Square","SquaredEuclideanDistance","SquareFreeQ","SquareIntersection","SquareMatrixQ","SquareRepeatingElement","SquaresR","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","SquareWave","SSSTriangle","StabilityMargins","StabilityMarginsStyle","StableDistribution","Stack","StackBegin","StackComplete","StackedDateListPlot","StackedListPlot","StackInhibit","StadiumShape","StandardAtmosphereData","StandardDeviation","StandardDeviationFilter","StandardForm","Standardize","Standardized","StandardOceanData","StandbyDistribution","Star","StarClusterData","StarData","StarGraph","StartAsynchronousTask","StartExternalSession","StartingStepSize","StartOfLine","StartOfString","StartProcess","StartScheduledTask","StartupSound","StartWebSession","StateDimensions","StateFeedbackGains","StateOutputEstimator","StateResponse","StateSpaceModel","StateSpaceRealization","StateSpaceTransform","StateTransformationLinearize","StationaryDistribution","StationaryWaveletPacketTransform","StationaryWaveletTransform","StatusArea","StatusCentrality","StepMonitor","StereochemistryElements","StieltjesGamma","StippleShading","StirlingS1","StirlingS2","StopAsynchronousTask","StoppingPowerData","StopScheduledTask","StrataVariables","StratonovichProcess","StreamColorFunction","StreamColorFunctionScaling","StreamDensityPlot","StreamMarkers","StreamPlot","StreamPoints","StreamPosition","Streams","StreamScale","StreamStyle","String","StringBreak","StringByteCount","StringCases","StringContainsQ","StringCount","StringDelete","StringDrop","StringEndsQ","StringExpression","StringExtract","StringForm","StringFormat","StringFreeQ","StringInsert","StringJoin","StringLength","StringMatchQ","StringPadLeft","StringPadRight","StringPart","StringPartition","StringPosition","StringQ","StringRepeat","StringReplace","StringReplaceList","StringReplacePart","StringReverse","StringRiffle","StringRotateLeft","StringRotateRight","StringSkeleton","StringSplit","StringStartsQ","StringTake","StringTemplate","StringToByteArray","StringToStream","StringTrim","StripBoxes","StripOnInput","StripWrapperBoxes","StrokeForm","StructuralImportance","StructuredArray","StructuredArrayHeadQ","StructuredSelection","StruveH","StruveL","Stub","StudentTDistribution","Style","StyleBox","StyleBoxAutoDelete","StyleData","StyleDefinitions","StyleForm","StyleHints","StyleKeyMapping","StyleMenuListing","StyleNameDialogSettings","StyleNames","StylePrint","StyleSheetPath","Subdivide","Subfactorial","Subgraph","SubMinus","SubPlus","SubresultantPolynomialRemainders","SubresultantPolynomials","Subresultants","Subscript","SubscriptBox","SubscriptBoxOptions","Subscripted","Subsequences","Subset","SubsetCases","SubsetCount","SubsetEqual","SubsetMap","SubsetPosition","SubsetQ","SubsetReplace","Subsets","SubStar","SubstitutionSystem","Subsuperscript","SubsuperscriptBox","SubsuperscriptBoxOptions","SubtitleEncoding","SubtitleTracks","Subtract","SubtractFrom","SubtractSides","SubValues","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","Success","SuchThat","Sum","SumConvergence","SummationLayer","Sunday","SunPosition","Sunrise","Sunset","SuperDagger","SuperMinus","SupernovaData","SuperPlus","Superscript","SuperscriptBox","SuperscriptBoxOptions","Superset","SupersetEqual","SuperStar","Surd","SurdForm","SurfaceAppearance","SurfaceArea","SurfaceColor","SurfaceData","SurfaceGraphics","SurvivalDistribution","SurvivalFunction","SurvivalModel","SurvivalModelFit","SuspendPacket","SuzukiDistribution","SuzukiGroupSuz","SwatchLegend","Switch","Symbol","SymbolName","SymletWavelet","Symmetric","SymmetricGroup","SymmetricKey","SymmetricMatrixQ","SymmetricPolynomial","SymmetricReduction","Symmetrize","SymmetrizedArray","SymmetrizedArrayRules","SymmetrizedDependentComponents","SymmetrizedIndependentComponents","SymmetrizedReplacePart","SynchronousInitialization","SynchronousUpdating","Synonyms","Syntax","SyntaxForm","SyntaxInformation","SyntaxLength","SyntaxPacket","SyntaxQ","SynthesizeMissingValues","SystemCredential","SystemCredentialData","SystemCredentialKey","SystemCredentialKeys","SystemCredentialStoreObject","SystemDialogInput","SystemException","SystemGet","SystemHelpPath","SystemInformation","SystemInformationData","SystemInstall","SystemModel","SystemModeler","SystemModelExamples","SystemModelLinearize","SystemModelParametricSimulate","SystemModelPlot","SystemModelProgressReporting","SystemModelReliability","SystemModels","SystemModelSimulate","SystemModelSimulateSensitivity","SystemModelSimulationData","SystemOpen","SystemOptions","SystemProcessData","SystemProcesses","SystemsConnectionsModel","SystemsModelDelay","SystemsModelDelayApproximate","SystemsModelDelete","SystemsModelDimensions","SystemsModelExtract","SystemsModelFeedbackConnect","SystemsModelLabels","SystemsModelLinearity","SystemsModelMerge","SystemsModelOrder","SystemsModelParallelConnect","SystemsModelSeriesConnect","SystemsModelStateFeedbackConnect","SystemsModelVectorRelativeOrders","SystemStub","SystemTest","Tab","TabFilling","Table","TableAlignments","TableDepth","TableDirections","TableForm","TableHeadings","TableSpacing","TableView","TableViewBox","TableViewBoxBackground","TableViewBoxItemSize","TableViewBoxOptions","TabSpacings","TabView","TabViewBox","TabViewBoxOptions","TagBox","TagBoxNote","TagBoxOptions","TaggingRules","TagSet","TagSetDelayed","TagStyle","TagUnset","Take","TakeDrop","TakeLargest","TakeLargestBy","TakeList","TakeSmallest","TakeSmallestBy","TakeWhile","Tally","Tan","Tanh","TargetDevice","TargetFunctions","TargetSystem","TargetUnits","TaskAbort","TaskExecute","TaskObject","TaskRemove","TaskResume","Tasks","TaskSuspend","TaskWait","TautologyQ","TelegraphProcess","TemplateApply","TemplateArgBox","TemplateBox","TemplateBoxOptions","TemplateEvaluate","TemplateExpression","TemplateIf","TemplateObject","TemplateSequence","TemplateSlot","TemplateSlotSequence","TemplateUnevaluated","TemplateVerbatim","TemplateWith","TemporalData","TemporalRegularity","Temporary","TemporaryVariable","TensorContract","TensorDimensions","TensorExpand","TensorProduct","TensorQ","TensorRank","TensorReduce","TensorSymmetry","TensorTranspose","TensorWedge","TestID","TestReport","TestReportObject","TestResultObject","Tetrahedron","TetrahedronBox","TetrahedronBoxOptions","TeXForm","TeXSave","Text","Text3DBox","Text3DBoxOptions","TextAlignment","TextBand","TextBoundingBox","TextBox","TextCases","TextCell","TextClipboardType","TextContents","TextData","TextElement","TextForm","TextGrid","TextJustification","TextLine","TextPacket","TextParagraph","TextPosition","TextRecognize","TextSearch","TextSearchReport","TextSentences","TextString","TextStructure","TextStyle","TextTranslation","Texture","TextureCoordinateFunction","TextureCoordinateScaling","TextWords","Therefore","ThermodynamicData","ThermometerGauge","Thick","Thickness","Thin","Thinning","ThisLink","ThompsonGroupTh","Thread","ThreadingLayer","ThreeJSymbol","Threshold","Through","Throw","ThueMorse","Thumbnail","Thursday","Ticks","TicksStyle","TideData","Tilde","TildeEqual","TildeFullEqual","TildeTilde","TimeConstrained","TimeConstraint","TimeDirection","TimeFormat","TimeGoal","TimelinePlot","TimeObject","TimeObjectQ","TimeRemaining","Times","TimesBy","TimeSeries","TimeSeriesAggregate","TimeSeriesForecast","TimeSeriesInsert","TimeSeriesInvertibility","TimeSeriesMap","TimeSeriesMapThread","TimeSeriesModel","TimeSeriesModelFit","TimeSeriesResample","TimeSeriesRescale","TimeSeriesShift","TimeSeriesThread","TimeSeriesWindow","TimeUsed","TimeValue","TimeWarpingCorrespondence","TimeWarpingDistance","TimeZone","TimeZoneConvert","TimeZoneOffset","Timing","Tiny","TitleGrouping","TitsGroupT","ToBoxes","ToCharacterCode","ToColor","ToContinuousTimeModel","ToDate","Today","ToDiscreteTimeModel","ToEntity","ToeplitzMatrix","ToExpression","ToFileName","Together","Toggle","ToggleFalse","Toggler","TogglerBar","TogglerBox","TogglerBoxOptions","ToHeldExpression","ToInvertibleTimeSeries","TokenWords","Tolerance","ToLowerCase","Tomorrow","ToNumberField","TooBig","Tooltip","TooltipBox","TooltipBoxOptions","TooltipDelay","TooltipStyle","ToonShading","Top","TopHatTransform","ToPolarCoordinates","TopologicalSort","ToRadicals","ToRules","ToSphericalCoordinates","ToString","Total","TotalHeight","TotalLayer","TotalVariationFilter","TotalWidth","TouchPosition","TouchscreenAutoZoom","TouchscreenControlPlacement","ToUpperCase","Tr","Trace","TraceAbove","TraceAction","TraceBackward","TraceDepth","TraceDialog","TraceForward","TraceInternal","TraceLevel","TraceOff","TraceOn","TraceOriginal","TracePrint","TraceScan","TrackedSymbols","TrackingFunction","TracyWidomDistribution","TradingChart","TraditionalForm","TraditionalFunctionNotation","TraditionalNotation","TraditionalOrder","TrainingProgressCheckpointing","TrainingProgressFunction","TrainingProgressMeasurements","TrainingProgressReporting","TrainingStoppingCriterion","TrainingUpdateSchedule","TransferFunctionCancel","TransferFunctionExpand","TransferFunctionFactor","TransferFunctionModel","TransferFunctionPoles","TransferFunctionTransform","TransferFunctionZeros","TransformationClass","TransformationFunction","TransformationFunctions","TransformationMatrix","TransformedDistribution","TransformedField","TransformedProcess","TransformedRegion","TransitionDirection","TransitionDuration","TransitionEffect","TransitiveClosureGraph","TransitiveReductionGraph","Translate","TranslationOptions","TranslationTransform","Transliterate","Transparent","TransparentColor","Transpose","TransposeLayer","TrapSelection","TravelDirections","TravelDirectionsData","TravelDistance","TravelDistanceList","TravelMethod","TravelTime","TreeForm","TreeGraph","TreeGraphQ","TreePlot","TrendStyle","Triangle","TriangleCenter","TriangleConstruct","TriangleMeasurement","TriangleWave","TriangularDistribution","TriangulateMesh","Trig","TrigExpand","TrigFactor","TrigFactorList","Trigger","TrigReduce","TrigToExp","TrimmedMean","TrimmedVariance","TropicalStormData","True","TrueQ","TruncatedDistribution","TruncatedPolyhedron","TsallisQExponentialDistribution","TsallisQGaussianDistribution","TTest","Tube","TubeBezierCurveBox","TubeBezierCurveBoxOptions","TubeBox","TubeBoxOptions","TubeBSplineCurveBox","TubeBSplineCurveBoxOptions","Tuesday","TukeyLambdaDistribution","TukeyWindow","TunnelData","Tuples","TuranGraph","TuringMachine","TuttePolynomial","TwoWayRule","Typed","TypeSpecifier","UnateQ","Uncompress","UnconstrainedParameters","Undefined","UnderBar","Underflow","Underlined","Underoverscript","UnderoverscriptBox","UnderoverscriptBoxOptions","Underscript","UnderscriptBox","UnderscriptBoxOptions","UnderseaFeatureData","UndirectedEdge","UndirectedGraph","UndirectedGraphQ","UndoOptions","UndoTrackedVariables","Unequal","UnequalTo","Unevaluated","UniformDistribution","UniformGraphDistribution","UniformPolyhedron","UniformSumDistribution","Uninstall","Union","UnionedEntityClass","UnionPlus","Unique","UnitaryMatrixQ","UnitBox","UnitConvert","UnitDimensions","Unitize","UnitRootTest","UnitSimplify","UnitStep","UnitSystem","UnitTriangle","UnitVector","UnitVectorLayer","UnityDimensions","UniverseModelData","UniversityData","UnixTime","Unprotect","UnregisterExternalEvaluator","UnsameQ","UnsavedVariables","Unset","UnsetShared","UntrackedVariables","Up","UpArrow","UpArrowBar","UpArrowDownArrow","Update","UpdateDynamicObjects","UpdateDynamicObjectsSynchronous","UpdateInterval","UpdatePacletSites","UpdateSearchIndex","UpDownArrow","UpEquilibrium","UpperCaseQ","UpperLeftArrow","UpperRightArrow","UpperTriangularize","UpperTriangularMatrixQ","Upsample","UpSet","UpSetDelayed","UpTee","UpTeeArrow","UpTo","UpValues","URL","URLBuild","URLDecode","URLDispatcher","URLDownload","URLDownloadSubmit","URLEncode","URLExecute","URLExpand","URLFetch","URLFetchAsynchronous","URLParse","URLQueryDecode","URLQueryEncode","URLRead","URLResponseTime","URLSave","URLSaveAsynchronous","URLShorten","URLSubmit","UseGraphicsRange","UserDefinedWavelet","Using","UsingFrontEnd","UtilityFunction","V2Get","ValenceErrorHandling","ValidationLength","ValidationSet","Value","ValueBox","ValueBoxOptions","ValueDimensions","ValueForm","ValuePreprocessingFunction","ValueQ","Values","ValuesData","Variables","Variance","VarianceEquivalenceTest","VarianceEstimatorFunction","VarianceGammaDistribution","VarianceTest","VectorAngle","VectorAround","VectorAspectRatio","VectorColorFunction","VectorColorFunctionScaling","VectorDensityPlot","VectorGlyphData","VectorGreater","VectorGreaterEqual","VectorLess","VectorLessEqual","VectorMarkers","VectorPlot","VectorPlot3D","VectorPoints","VectorQ","VectorRange","Vectors","VectorScale","VectorScaling","VectorSizes","VectorStyle","Vee","Verbatim","Verbose","VerboseConvertToPostScriptPacket","VerificationTest","VerifyConvergence","VerifyDerivedKey","VerifyDigitalSignature","VerifyFileSignature","VerifyInterpretation","VerifySecurityCertificates","VerifySolutions","VerifyTestAssumptions","Version","VersionedPreferences","VersionNumber","VertexAdd","VertexCapacity","VertexColors","VertexComponent","VertexConnectivity","VertexContract","VertexCoordinateRules","VertexCoordinates","VertexCorrelationSimilarity","VertexCosineSimilarity","VertexCount","VertexCoverQ","VertexDataCoordinates","VertexDegree","VertexDelete","VertexDiceSimilarity","VertexEccentricity","VertexInComponent","VertexInDegree","VertexIndex","VertexJaccardSimilarity","VertexLabeling","VertexLabels","VertexLabelStyle","VertexList","VertexNormals","VertexOutComponent","VertexOutDegree","VertexQ","VertexRenderingFunction","VertexReplace","VertexShape","VertexShapeFunction","VertexSize","VertexStyle","VertexTextureCoordinates","VertexWeight","VertexWeightedGraphQ","Vertical","VerticalBar","VerticalForm","VerticalGauge","VerticalSeparator","VerticalSlider","VerticalTilde","Video","VideoEncoding","VideoExtractFrames","VideoFrameList","VideoFrameMap","VideoPause","VideoPlay","VideoQ","VideoStop","VideoStream","VideoStreams","VideoTimeSeries","VideoTracks","VideoTrim","ViewAngle","ViewCenter","ViewMatrix","ViewPoint","ViewPointSelectorSettings","ViewPort","ViewProjection","ViewRange","ViewVector","ViewVertical","VirtualGroupData","Visible","VisibleCell","VoiceStyleData","VoigtDistribution","VolcanoData","Volume","VonMisesDistribution","VoronoiMesh","WaitAll","WaitAsynchronousTask","WaitNext","WaitUntil","WakebyDistribution","WalleniusHypergeometricDistribution","WaringYuleDistribution","WarpingCorrespondence","WarpingDistance","WatershedComponents","WatsonUSquareTest","WattsStrogatzGraphDistribution","WaveletBestBasis","WaveletFilterCoefficients","WaveletImagePlot","WaveletListPlot","WaveletMapIndexed","WaveletMatrixPlot","WaveletPhi","WaveletPsi","WaveletScale","WaveletScalogram","WaveletThreshold","WeaklyConnectedComponents","WeaklyConnectedGraphComponents","WeaklyConnectedGraphQ","WeakStationarity","WeatherData","WeatherForecastData","WebAudioSearch","WebElementObject","WeberE","WebExecute","WebImage","WebImageSearch","WebSearch","WebSessionObject","WebSessions","WebWindowObject","Wedge","Wednesday","WeibullDistribution","WeierstrassE1","WeierstrassE2","WeierstrassE3","WeierstrassEta1","WeierstrassEta2","WeierstrassEta3","WeierstrassHalfPeriods","WeierstrassHalfPeriodW1","WeierstrassHalfPeriodW2","WeierstrassHalfPeriodW3","WeierstrassInvariantG2","WeierstrassInvariantG3","WeierstrassInvariants","WeierstrassP","WeierstrassPPrime","WeierstrassSigma","WeierstrassZeta","WeightedAdjacencyGraph","WeightedAdjacencyMatrix","WeightedData","WeightedGraphQ","Weights","WelchWindow","WheelGraph","WhenEvent","Which","While","White","WhiteNoiseProcess","WhitePoint","Whitespace","WhitespaceCharacter","WhittakerM","WhittakerW","WienerFilter","WienerProcess","WignerD","WignerSemicircleDistribution","WikidataData","WikidataSearch","WikipediaData","WikipediaSearch","WilksW","WilksWTest","WindDirectionData","WindingCount","WindingPolygon","WindowClickSelect","WindowElements","WindowFloating","WindowFrame","WindowFrameElements","WindowMargins","WindowMovable","WindowOpacity","WindowPersistentStyles","WindowSelected","WindowSize","WindowStatusArea","WindowTitle","WindowToolbars","WindowWidth","WindSpeedData","WindVectorData","WinsorizedMean","WinsorizedVariance","WishartMatrixDistribution","With","WolframAlpha","WolframAlphaDate","WolframAlphaQuantity","WolframAlphaResult","WolframLanguageData","Word","WordBoundary","WordCharacter","WordCloud","WordCount","WordCounts","WordData","WordDefinition","WordFrequency","WordFrequencyData","WordList","WordOrientation","WordSearch","WordSelectionFunction","WordSeparators","WordSpacings","WordStem","WordTranslation","WorkingPrecision","WrapAround","Write","WriteLine","WriteString","Wronskian","XMLElement","XMLObject","XMLTemplate","Xnor","Xor","XYZColor","Yellow","Yesterday","YuleDissimilarity","ZernikeR","ZeroSymmetric","ZeroTest","ZeroWidthTimes","Zeta","ZetaZero","ZIPCodeData","ZipfDistribution","ZoomCenter","ZoomFactor","ZTest","ZTransform","$Aborted","$ActivationGroupID","$ActivationKey","$ActivationUserRegistered","$AddOnsDirectory","$AllowDataUpdates","$AllowExternalChannelFunctions","$AllowInternet","$AssertFunction","$Assumptions","$AsynchronousTask","$AudioDecoders","$AudioEncoders","$AudioInputDevices","$AudioOutputDevices","$BaseDirectory","$BasePacletsDirectory","$BatchInput","$BatchOutput","$BlockchainBase","$BoxForms","$ByteOrdering","$CacheBaseDirectory","$Canceled","$ChannelBase","$CharacterEncoding","$CharacterEncodings","$CloudAccountName","$CloudBase","$CloudConnected","$CloudConnection","$CloudCreditsAvailable","$CloudEvaluation","$CloudExpressionBase","$CloudObjectNameFormat","$CloudObjectURLType","$CloudRootDirectory","$CloudSymbolBase","$CloudUserID","$CloudUserUUID","$CloudVersion","$CloudVersionNumber","$CloudWolframEngineVersionNumber","$CommandLine","$CompilationTarget","$ConditionHold","$ConfiguredKernels","$Context","$ContextPath","$ControlActiveSetting","$Cookies","$CookieStore","$CreationDate","$CurrentLink","$CurrentTask","$CurrentWebSession","$DataStructures","$DateStringFormat","$DefaultAudioInputDevice","$DefaultAudioOutputDevice","$DefaultFont","$DefaultFrontEnd","$DefaultImagingDevice","$DefaultLocalBase","$DefaultMailbox","$DefaultNetworkInterface","$DefaultPath","$DefaultProxyRules","$DefaultSystemCredentialStore","$Display","$DisplayFunction","$DistributedContexts","$DynamicEvaluation","$Echo","$EmbedCodeEnvironments","$EmbeddableServices","$EntityStores","$Epilog","$EvaluationCloudBase","$EvaluationCloudObject","$EvaluationEnvironment","$ExportFormats","$ExternalIdentifierTypes","$ExternalStorageBase","$Failed","$FinancialDataSource","$FontFamilies","$FormatType","$FrontEnd","$FrontEndSession","$GeoEntityTypes","$GeoLocation","$GeoLocationCity","$GeoLocationCountry","$GeoLocationPrecision","$GeoLocationSource","$HistoryLength","$HomeDirectory","$HTMLExportRules","$HTTPCookies","$HTTPRequest","$IgnoreEOF","$ImageFormattingWidth","$ImageResolution","$ImagingDevice","$ImagingDevices","$ImportFormats","$IncomingMailSettings","$InitialDirectory","$Initialization","$InitializationContexts","$Input","$InputFileName","$InputStreamMethods","$Inspector","$InstallationDate","$InstallationDirectory","$InterfaceEnvironment","$InterpreterTypes","$IterationLimit","$KernelCount","$KernelID","$Language","$LaunchDirectory","$LibraryPath","$LicenseExpirationDate","$LicenseID","$LicenseProcesses","$LicenseServer","$LicenseSubprocesses","$LicenseType","$Line","$Linked","$LinkSupported","$LoadedFiles","$LocalBase","$LocalSymbolBase","$MachineAddresses","$MachineDomain","$MachineDomains","$MachineEpsilon","$MachineID","$MachineName","$MachinePrecision","$MachineType","$MaxExtraPrecision","$MaxLicenseProcesses","$MaxLicenseSubprocesses","$MaxMachineNumber","$MaxNumber","$MaxPiecewiseCases","$MaxPrecision","$MaxRootDegree","$MessageGroups","$MessageList","$MessagePrePrint","$Messages","$MinMachineNumber","$MinNumber","$MinorReleaseNumber","$MinPrecision","$MobilePhone","$ModuleNumber","$NetworkConnected","$NetworkInterfaces","$NetworkLicense","$NewMessage","$NewSymbol","$NotebookInlineStorageLimit","$Notebooks","$NoValue","$NumberMarks","$Off","$OperatingSystem","$Output","$OutputForms","$OutputSizeLimit","$OutputStreamMethods","$Packages","$ParentLink","$ParentProcessID","$PasswordFile","$PatchLevelID","$Path","$PathnameSeparator","$PerformanceGoal","$Permissions","$PermissionsGroupBase","$PersistenceBase","$PersistencePath","$PipeSupported","$PlotTheme","$Post","$Pre","$PreferencesDirectory","$PreInitialization","$PrePrint","$PreRead","$PrintForms","$PrintLiteral","$Printout3DPreviewer","$ProcessID","$ProcessorCount","$ProcessorType","$ProductInformation","$ProgramName","$PublisherID","$RandomState","$RecursionLimit","$RegisteredDeviceClasses","$RegisteredUserName","$ReleaseNumber","$RequesterAddress","$RequesterWolframID","$RequesterWolframUUID","$RootDirectory","$ScheduledTask","$ScriptCommandLine","$ScriptInputString","$SecuredAuthenticationKeyTokens","$ServiceCreditsAvailable","$Services","$SessionID","$SetParentLink","$SharedFunctions","$SharedVariables","$SoundDisplay","$SoundDisplayFunction","$SourceLink","$SSHAuthentication","$SubtitleDecoders","$SubtitleEncoders","$SummaryBoxDataSizeLimit","$SuppressInputFormHeads","$SynchronousEvaluation","$SyntaxHandler","$System","$SystemCharacterEncoding","$SystemCredentialStore","$SystemID","$SystemMemory","$SystemShell","$SystemTimeZone","$SystemWordLength","$TemplatePath","$TemporaryDirectory","$TemporaryPrefix","$TestFileName","$TextStyle","$TimedOut","$TimeUnit","$TimeZone","$TimeZoneEntity","$TopDirectory","$TraceOff","$TraceOn","$TracePattern","$TracePostAction","$TracePreAction","$UnitSystem","$Urgent","$UserAddOnsDirectory","$UserAgentLanguages","$UserAgentMachine","$UserAgentName","$UserAgentOperatingSystem","$UserAgentString","$UserAgentVersion","$UserBaseDirectory","$UserBasePacletsDirectory","$UserDocumentsDirectory","$Username","$UserName","$UserURLBase","$Version","$VersionNumber","$VideoDecoders","$VideoEncoders","$VoiceStyles","$WolframDocumentsDirectory","$WolframID","$WolframUUID"];function n(e){return e?"string"===typeof e?e:e.source:null}function a(e){return s("(",e,")?")}function s(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t.map((function(e){return n(e)})).join("")}function i(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return"("+t.map((function(e){return n(e)})).join("|")+")"}e.exports=function(e){var n=i(s(/([2-9]|[1-2]\d|[3][0-5])\^\^/,/(\w*\.\w+|\w+\.\w*|\w+)/),/(\d*\.\d+|\d+\.\d*|\d+)/),r={className:"number",relevance:0,begin:s(n,a(i(/``[+-]?(\d*\.\d+|\d+\.\d*|\d+)/,/`([+-]?(\d*\.\d+|\d+\.\d*|\d+))?/)),a(/\*\^[+-]?\d+/))},o=/[a-zA-Z$][a-zA-Z0-9$]*/,l=new Set(t),c={variants:[{className:"builtin-symbol",begin:o,"on:begin":function(e,t){l.has(e[0])||t.ignoreMatch()}},{className:"symbol",relevance:0,begin:o}]},d={className:"message-name",relevance:0,begin:s("::",o)};return{name:"Mathematica",aliases:["mma","wl"],classNameAliases:{brace:"punctuation",pattern:"type",slot:"type",symbol:"variable","named-character":"variable","builtin-symbol":"built_in","message-name":"string"},contains:[e.COMMENT(/\(\*/,/\*\)/,{contains:["self"]}),{className:"pattern",relevance:0,begin:/([a-zA-Z$][a-zA-Z0-9$]*)?_+([a-zA-Z$][a-zA-Z0-9$]*)?/},{className:"slot",relevance:0,begin:/#[a-zA-Z$][a-zA-Z0-9$]*|#+[0-9]?/},d,c,{className:"named-character",begin:/\\\[[$a-zA-Z][$a-zA-Z0-9]+\]/},e.QUOTE_STRING_MODE,r,{className:"operator",relevance:0,begin:/[+\-*/,;.:@~=><&|_`'^?!%]+/},{className:"brace",relevance:0,begin:/[[\](){}]/}]}}},4658:function(e){e.exports=function(e){var t="('|\\.')+",n={relevance:0,contains:[{begin:t}]};return{name:"Matlab",keywords:{keyword:"arguments break case catch classdef continue else elseif end enumeration events for function global if methods otherwise parfor persistent properties return spmd switch try while",built_in:"sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i|0 inf nan isnan isinf isfinite j|0 why compan gallery hadamard hankel hilb invhilb magic pascal rosser toeplitz vander wilkinson max min nanmax nanmin mean nanmean type table readtable writetable sortrows sort figure plot plot3 scatter scatter3 cellfun legend intersect ismember procrustes hold num2cell "},illegal:'(//|"|#|/\\*|\\s+/\\w+)',contains:[{className:"function",beginKeywords:"function",end:"$",contains:[e.UNDERSCORE_TITLE_MODE,{className:"params",variants:[{begin:"\\(",end:"\\)"},{begin:"\\[",end:"\\]"}]}]},{className:"built_in",begin:/true|false/,relevance:0,starts:n},{begin:"[a-zA-Z][a-zA-Z_0-9]*"+t,relevance:0},{className:"number",begin:e.C_NUMBER_RE,relevance:0,starts:n},{className:"string",begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE,{begin:"''"}]},{begin:/\]|\}|\)/,relevance:0,starts:n},{className:"string",begin:'"',end:'"',contains:[e.BACKSLASH_ESCAPE,{begin:'""'}],starts:n},e.COMMENT("^\\s*%\\{\\s*$","^\\s*%\\}\\s*$"),e.COMMENT("%","$")]}}},1060:function(e){e.exports=function(e){return{name:"Maxima",keywords:{$pattern:"[A-Za-z_%][0-9A-Za-z_%]*",keyword:"if then else elseif for thru do while unless step in and or not",literal:"true false unknown inf minf ind und %e %i %pi %phi %gamma",built_in:" abasep abs absint absolute_real_time acos acosh acot acoth acsc acsch activate addcol add_edge add_edges addmatrices addrow add_vertex add_vertices adjacency_matrix adjoin adjoint af agd airy airy_ai airy_bi airy_dai airy_dbi algsys alg_type alias allroots alphacharp alphanumericp amortization %and annuity_fv annuity_pv antid antidiff AntiDifference append appendfile apply apply1 apply2 applyb1 apropos args arit_amortization arithmetic arithsum array arrayapply arrayinfo arraymake arraysetapply ascii asec asech asin asinh askinteger asksign assoc assoc_legendre_p assoc_legendre_q assume assume_external_byte_order asympa at atan atan2 atanh atensimp atom atvalue augcoefmatrix augmented_lagrangian_method av average_degree backtrace bars barsplot barsplot_description base64 base64_decode bashindices batch batchload bc2 bdvac belln benefit_cost bern bernpoly bernstein_approx bernstein_expand bernstein_poly bessel bessel_i bessel_j bessel_k bessel_simplify bessel_y beta beta_incomplete beta_incomplete_generalized beta_incomplete_regularized bezout bfallroots bffac bf_find_root bf_fmin_cobyla bfhzeta bfloat bfloatp bfpsi bfpsi0 bfzeta biconnected_components bimetric binomial bipartition block blockmatrixp bode_gain bode_phase bothcoef box boxplot boxplot_description break bug_report build_info|10 buildq build_sample burn cabs canform canten cardinality carg cartan cartesian_product catch cauchy_matrix cbffac cdf_bernoulli cdf_beta cdf_binomial cdf_cauchy cdf_chi2 cdf_continuous_uniform cdf_discrete_uniform cdf_exp cdf_f cdf_gamma cdf_general_finite_discrete cdf_geometric cdf_gumbel cdf_hypergeometric cdf_laplace cdf_logistic cdf_lognormal cdf_negative_binomial cdf_noncentral_chi2 cdf_noncentral_student_t cdf_normal cdf_pareto cdf_poisson cdf_rank_sum cdf_rayleigh cdf_signed_rank cdf_student_t cdf_weibull cdisplay ceiling central_moment cequal cequalignore cf cfdisrep cfexpand cgeodesic cgreaterp cgreaterpignore changename changevar chaosgame charat charfun charfun2 charlist charp charpoly chdir chebyshev_t chebyshev_u checkdiv check_overlaps chinese cholesky christof chromatic_index chromatic_number cint circulant_graph clear_edge_weight clear_rules clear_vertex_label clebsch_gordan clebsch_graph clessp clesspignore close closefile cmetric coeff coefmatrix cograd col collapse collectterms columnop columnspace columnswap columnvector combination combine comp2pui compare compfile compile compile_file complement_graph complete_bipartite_graph complete_graph complex_number_p components compose_functions concan concat conjugate conmetderiv connected_components connect_vertices cons constant constantp constituent constvalue cont2part content continuous_freq contortion contour_plot contract contract_edge contragrad contrib_ode convert coord copy copy_file copy_graph copylist copymatrix cor cos cosh cot coth cov cov1 covdiff covect covers crc24sum create_graph create_list csc csch csetup cspline ctaylor ct_coordsys ctransform ctranspose cube_graph cuboctahedron_graph cunlisp cv cycle_digraph cycle_graph cylindrical days360 dblint deactivate declare declare_constvalue declare_dimensions declare_fundamental_dimensions declare_fundamental_units declare_qty declare_translated declare_unit_conversion declare_units declare_weights decsym defcon define define_alt_display define_variable defint defmatch defrule defstruct deftaylor degree_sequence del delete deleten delta demo demoivre denom depends derivdegree derivlist describe desolve determinant dfloat dgauss_a dgauss_b dgeev dgemm dgeqrf dgesv dgesvd diag diagmatrix diag_matrix diagmatrixp diameter diff digitcharp dimacs_export dimacs_import dimension dimensionless dimensions dimensions_as_list direct directory discrete_freq disjoin disjointp disolate disp dispcon dispform dispfun dispJordan display disprule dispterms distrib divide divisors divsum dkummer_m dkummer_u dlange dodecahedron_graph dotproduct dotsimp dpart draw draw2d draw3d drawdf draw_file draw_graph dscalar echelon edge_coloring edge_connectivity edges eigens_by_jacobi eigenvalues eigenvectors eighth einstein eivals eivects elapsed_real_time elapsed_run_time ele2comp ele2polynome ele2pui elem elementp elevation_grid elim elim_allbut eliminate eliminate_using ellipse elliptic_e elliptic_ec elliptic_eu elliptic_f elliptic_kc elliptic_pi ematrix empty_graph emptyp endcons entermatrix entertensor entier equal equalp equiv_classes erf erfc erf_generalized erfi errcatch error errormsg errors euler ev eval_string evenp every evolution evolution2d evundiff example exp expand expandwrt expandwrt_factored expint expintegral_chi expintegral_ci expintegral_e expintegral_e1 expintegral_ei expintegral_e_simplify expintegral_li expintegral_shi expintegral_si explicit explose exponentialize express expt exsec extdiff extract_linear_equations extremal_subset ezgcd %f f90 facsum factcomb factor factorfacsum factorial factorout factorsum facts fast_central_elements fast_linsolve fasttimes featurep fernfale fft fib fibtophi fifth filename_merge file_search file_type fillarray findde find_root find_root_abs find_root_error find_root_rel first fix flatten flength float floatnump floor flower_snark flush flush1deriv flushd flushnd flush_output fmin_cobyla forget fortran fourcos fourexpand fourier fourier_elim fourint fourintcos fourintsin foursimp foursin fourth fposition frame_bracket freeof freshline fresnel_c fresnel_s from_adjacency_matrix frucht_graph full_listify fullmap fullmapl fullratsimp fullratsubst fullsetify funcsolve fundamental_dimensions fundamental_units fundef funmake funp fv g0 g1 gamma gamma_greek gamma_incomplete gamma_incomplete_generalized gamma_incomplete_regularized gauss gauss_a gauss_b gaussprob gcd gcdex gcdivide gcfac gcfactor gd generalized_lambert_w genfact gen_laguerre genmatrix gensym geo_amortization geo_annuity_fv geo_annuity_pv geomap geometric geometric_mean geosum get getcurrentdirectory get_edge_weight getenv get_lu_factors get_output_stream_string get_pixel get_plot_option get_tex_environment get_tex_environment_default get_vertex_label gfactor gfactorsum ggf girth global_variances gn gnuplot_close gnuplot_replot gnuplot_reset gnuplot_restart gnuplot_start go Gosper GosperSum gr2d gr3d gradef gramschmidt graph6_decode graph6_encode graph6_export graph6_import graph_center graph_charpoly graph_eigenvalues graph_flow graph_order graph_periphery graph_product graph_size graph_union great_rhombicosidodecahedron_graph great_rhombicuboctahedron_graph grid_graph grind grobner_basis grotzch_graph hamilton_cycle hamilton_path hankel hankel_1 hankel_2 harmonic harmonic_mean hav heawood_graph hermite hessian hgfred hilbertmap hilbert_matrix hipow histogram histogram_description hodge horner hypergeometric i0 i1 %ibes ic1 ic2 ic_convert ichr1 ichr2 icosahedron_graph icosidodecahedron_graph icurvature ident identfor identity idiff idim idummy ieqn %if ifactors iframes ifs igcdex igeodesic_coords ilt image imagpart imetric implicit implicit_derivative implicit_plot indexed_tensor indices induced_subgraph inferencep inference_result infix info_display init_atensor init_ctensor in_neighbors innerproduct inpart inprod inrt integerp integer_partitions integrate intersect intersection intervalp intopois intosum invariant1 invariant2 inverse_fft inverse_jacobi_cd inverse_jacobi_cn inverse_jacobi_cs inverse_jacobi_dc inverse_jacobi_dn inverse_jacobi_ds inverse_jacobi_nc inverse_jacobi_nd inverse_jacobi_ns inverse_jacobi_sc inverse_jacobi_sd inverse_jacobi_sn invert invert_by_adjoint invert_by_lu inv_mod irr is is_biconnected is_bipartite is_connected is_digraph is_edge_in_graph is_graph is_graph_or_digraph ishow is_isomorphic isolate isomorphism is_planar isqrt isreal_p is_sconnected is_tree is_vertex_in_graph items_inference %j j0 j1 jacobi jacobian jacobi_cd jacobi_cn jacobi_cs jacobi_dc jacobi_dn jacobi_ds jacobi_nc jacobi_nd jacobi_ns jacobi_p jacobi_sc jacobi_sd jacobi_sn JF jn join jordan julia julia_set julia_sin %k kdels kdelta kill killcontext kostka kron_delta kronecker_product kummer_m kummer_u kurtosis kurtosis_bernoulli kurtosis_beta kurtosis_binomial kurtosis_chi2 kurtosis_continuous_uniform kurtosis_discrete_uniform kurtosis_exp kurtosis_f kurtosis_gamma kurtosis_general_finite_discrete kurtosis_geometric kurtosis_gumbel kurtosis_hypergeometric kurtosis_laplace kurtosis_logistic kurtosis_lognormal kurtosis_negative_binomial kurtosis_noncentral_chi2 kurtosis_noncentral_student_t kurtosis_normal kurtosis_pareto kurtosis_poisson kurtosis_rayleigh kurtosis_student_t kurtosis_weibull label labels lagrange laguerre lambda lambert_w laplace laplacian_matrix last lbfgs lc2kdt lcharp lc_l lcm lc_u ldefint ldisp ldisplay legendre_p legendre_q leinstein length let letrules letsimp levi_civita lfreeof lgtreillis lhs li liediff limit Lindstedt linear linearinterpol linear_program linear_regression line_graph linsolve listarray list_correlations listify list_matrix_entries list_nc_monomials listoftens listofvars listp lmax lmin load loadfile local locate_matrix_entry log logcontract log_gamma lopow lorentz_gauge lowercasep lpart lratsubst lreduce lriemann lsquares_estimates lsquares_estimates_approximate lsquares_estimates_exact lsquares_mse lsquares_residual_mse lsquares_residuals lsum ltreillis lu_backsub lucas lu_factor %m macroexpand macroexpand1 make_array makebox makefact makegamma make_graph make_level_picture makelist makeOrders make_poly_continent make_poly_country make_polygon make_random_state make_rgb_picture makeset make_string_input_stream make_string_output_stream make_transform mandelbrot mandelbrot_set map mapatom maplist matchdeclare matchfix mat_cond mat_fullunblocker mat_function mathml_display mat_norm matrix matrixmap matrixp matrix_size mattrace mat_trace mat_unblocker max max_clique max_degree max_flow maximize_lp max_independent_set max_matching maybe md5sum mean mean_bernoulli mean_beta mean_binomial mean_chi2 mean_continuous_uniform mean_deviation mean_discrete_uniform mean_exp mean_f mean_gamma mean_general_finite_discrete mean_geometric mean_gumbel mean_hypergeometric mean_laplace mean_logistic mean_lognormal mean_negative_binomial mean_noncentral_chi2 mean_noncentral_student_t mean_normal mean_pareto mean_poisson mean_rayleigh mean_student_t mean_weibull median median_deviation member mesh metricexpandall mgf1_sha1 min min_degree min_edge_cut minfactorial minimalPoly minimize_lp minimum_spanning_tree minor minpack_lsquares minpack_solve min_vertex_cover min_vertex_cut mkdir mnewton mod mode_declare mode_identity ModeMatrix moebius mon2schur mono monomial_dimensions multibernstein_poly multi_display_for_texinfo multi_elem multinomial multinomial_coeff multi_orbit multiplot_mode multi_pui multsym multthru mycielski_graph nary natural_unit nc_degree ncexpt ncharpoly negative_picture neighbors new newcontext newdet new_graph newline newton new_variable next_prime nicedummies niceindices ninth nofix nonarray noncentral_moment nonmetricity nonnegintegerp nonscalarp nonzeroandfreeof notequal nounify nptetrad npv nroots nterms ntermst nthroot nullity nullspace num numbered_boundaries numberp number_to_octets num_distinct_partitions numerval numfactor num_partitions nusum nzeta nzetai nzetar octets_to_number octets_to_oid odd_girth oddp ode2 ode_check odelin oid_to_octets op opena opena_binary openr openr_binary openw openw_binary operatorp opsubst optimize %or orbit orbits ordergreat ordergreatp orderless orderlessp orthogonal_complement orthopoly_recur orthopoly_weight outermap out_neighbors outofpois pade parabolic_cylinder_d parametric parametric_surface parg parGosper parse_string parse_timedate part part2cont partfrac partition partition_set partpol path_digraph path_graph pathname_directory pathname_name pathname_type pdf_bernoulli pdf_beta pdf_binomial pdf_cauchy pdf_chi2 pdf_continuous_uniform pdf_discrete_uniform pdf_exp pdf_f pdf_gamma pdf_general_finite_discrete pdf_geometric pdf_gumbel pdf_hypergeometric pdf_laplace pdf_logistic pdf_lognormal pdf_negative_binomial pdf_noncentral_chi2 pdf_noncentral_student_t pdf_normal pdf_pareto pdf_poisson pdf_rank_sum pdf_rayleigh pdf_signed_rank pdf_student_t pdf_weibull pearson_skewness permanent permut permutation permutations petersen_graph petrov pickapart picture_equalp picturep piechart piechart_description planar_embedding playback plog plot2d plot3d plotdf ploteq plsquares pochhammer points poisdiff poisexpt poisint poismap poisplus poissimp poissubst poistimes poistrim polar polarform polartorect polar_to_xy poly_add poly_buchberger poly_buchberger_criterion poly_colon_ideal poly_content polydecomp poly_depends_p poly_elimination_ideal poly_exact_divide poly_expand poly_expt poly_gcd polygon poly_grobner poly_grobner_equal poly_grobner_member poly_grobner_subsetp poly_ideal_intersection poly_ideal_polysaturation poly_ideal_polysaturation1 poly_ideal_saturation poly_ideal_saturation1 poly_lcm poly_minimization polymod poly_multiply polynome2ele polynomialp poly_normal_form poly_normalize poly_normalize_list poly_polysaturation_extension poly_primitive_part poly_pseudo_divide poly_reduced_grobner poly_reduction poly_saturation_extension poly_s_polynomial poly_subtract polytocompanion pop postfix potential power_mod powerseries powerset prefix prev_prime primep primes principal_components print printf printfile print_graph printpois printprops prodrac product properties propvars psi psubst ptriangularize pui pui2comp pui2ele pui2polynome pui_direct puireduc push put pv qput qrange qty quad_control quad_qag quad_qagi quad_qagp quad_qags quad_qawc quad_qawf quad_qawo quad_qaws quadrilateral quantile quantile_bernoulli quantile_beta quantile_binomial quantile_cauchy quantile_chi2 quantile_continuous_uniform quantile_discrete_uniform quantile_exp quantile_f quantile_gamma quantile_general_finite_discrete quantile_geometric quantile_gumbel quantile_hypergeometric quantile_laplace quantile_logistic quantile_lognormal quantile_negative_binomial quantile_noncentral_chi2 quantile_noncentral_student_t quantile_normal quantile_pareto quantile_poisson quantile_rayleigh quantile_student_t quantile_weibull quartile_skewness quit qunit quotient racah_v racah_w radcan radius random random_bernoulli random_beta random_binomial random_bipartite_graph random_cauchy random_chi2 random_continuous_uniform random_digraph random_discrete_uniform random_exp random_f random_gamma random_general_finite_discrete random_geometric random_graph random_graph1 random_gumbel random_hypergeometric random_laplace random_logistic random_lognormal random_negative_binomial random_network random_noncentral_chi2 random_noncentral_student_t random_normal random_pareto random_permutation random_poisson random_rayleigh random_regular_graph random_student_t random_tournament random_tree random_weibull range rank rat ratcoef ratdenom ratdiff ratdisrep ratexpand ratinterpol rational rationalize ratnumer ratnump ratp ratsimp ratsubst ratvars ratweight read read_array read_binary_array read_binary_list read_binary_matrix readbyte readchar read_hashed_array readline read_list read_matrix read_nested_list readonly read_xpm real_imagpart_to_conjugate realpart realroots rearray rectangle rectform rectform_log_if_constant recttopolar rediff reduce_consts reduce_order region region_boundaries region_boundaries_plus rem remainder remarray rembox remcomps remcon remcoord remfun remfunction remlet remove remove_constvalue remove_dimensions remove_edge remove_fundamental_dimensions remove_fundamental_units remove_plot_option remove_vertex rempart remrule remsym remvalue rename rename_file reset reset_displays residue resolvante resolvante_alternee1 resolvante_bipartite resolvante_diedrale resolvante_klein resolvante_klein3 resolvante_produit_sym resolvante_unitaire resolvante_vierer rest resultant return reveal reverse revert revert2 rgb2level rhs ricci riemann rinvariant risch rk rmdir rncombine romberg room rootscontract round row rowop rowswap rreduce run_testsuite %s save saving scalarp scaled_bessel_i scaled_bessel_i0 scaled_bessel_i1 scalefactors scanmap scatterplot scatterplot_description scene schur2comp sconcat scopy scsimp scurvature sdowncase sec sech second sequal sequalignore set_alt_display setdifference set_draw_defaults set_edge_weight setelmx setequalp setify setp set_partitions set_plot_option set_prompt set_random_state set_tex_environment set_tex_environment_default setunits setup_autoload set_up_dot_simplifications set_vertex_label seventh sexplode sf sha1sum sha256sum shortest_path shortest_weighted_path show showcomps showratvars sierpinskiale sierpinskimap sign signum similaritytransform simp_inequality simplify_sum simplode simpmetderiv simtran sin sinh sinsert sinvertcase sixth skewness skewness_bernoulli skewness_beta skewness_binomial skewness_chi2 skewness_continuous_uniform skewness_discrete_uniform skewness_exp skewness_f skewness_gamma skewness_general_finite_discrete skewness_geometric skewness_gumbel skewness_hypergeometric skewness_laplace skewness_logistic skewness_lognormal skewness_negative_binomial skewness_noncentral_chi2 skewness_noncentral_student_t skewness_normal skewness_pareto skewness_poisson skewness_rayleigh skewness_student_t skewness_weibull slength smake small_rhombicosidodecahedron_graph small_rhombicuboctahedron_graph smax smin smismatch snowmap snub_cube_graph snub_dodecahedron_graph solve solve_rec solve_rec_rat some somrac sort sparse6_decode sparse6_encode sparse6_export sparse6_import specint spherical spherical_bessel_j spherical_bessel_y spherical_hankel1 spherical_hankel2 spherical_harmonic spherical_to_xyz splice split sposition sprint sqfr sqrt sqrtdenest sremove sremovefirst sreverse ssearch ssort sstatus ssubst ssubstfirst staircase standardize standardize_inverse_trig starplot starplot_description status std std1 std_bernoulli std_beta std_binomial std_chi2 std_continuous_uniform std_discrete_uniform std_exp std_f std_gamma std_general_finite_discrete std_geometric std_gumbel std_hypergeometric std_laplace std_logistic std_lognormal std_negative_binomial std_noncentral_chi2 std_noncentral_student_t std_normal std_pareto std_poisson std_rayleigh std_student_t std_weibull stemplot stirling stirling1 stirling2 strim striml strimr string stringout stringp strong_components struve_h struve_l sublis sublist sublist_indices submatrix subsample subset subsetp subst substinpart subst_parallel substpart substring subvar subvarp sum sumcontract summand_to_rec supcase supcontext symbolp symmdifference symmetricp system take_channel take_inference tan tanh taylor taylorinfo taylorp taylor_simplifier taytorat tcl_output tcontract tellrat tellsimp tellsimpafter tentex tenth test_mean test_means_difference test_normality test_proportion test_proportions_difference test_rank_sum test_sign test_signed_rank test_variance test_variance_ratio tex tex1 tex_display texput %th third throw time timedate timer timer_info tldefint tlimit todd_coxeter toeplitz tokens to_lisp topological_sort to_poly to_poly_solve totaldisrep totalfourier totient tpartpol trace tracematrix trace_options transform_sample translate translate_file transpose treefale tree_reduce treillis treinat triangle triangularize trigexpand trigrat trigreduce trigsimp trunc truncate truncated_cube_graph truncated_dodecahedron_graph truncated_icosahedron_graph truncated_tetrahedron_graph tr_warnings_get tube tutte_graph ueivects uforget ultraspherical underlying_graph undiff union unique uniteigenvectors unitp units unit_step unitvector unorder unsum untellrat untimer untrace uppercasep uricci uriemann uvect vandermonde_matrix var var1 var_bernoulli var_beta var_binomial var_chi2 var_continuous_uniform var_discrete_uniform var_exp var_f var_gamma var_general_finite_discrete var_geometric var_gumbel var_hypergeometric var_laplace var_logistic var_lognormal var_negative_binomial var_noncentral_chi2 var_noncentral_student_t var_normal var_pareto var_poisson var_rayleigh var_student_t var_weibull vector vectorpotential vectorsimp verbify vers vertex_coloring vertex_connectivity vertex_degree vertex_distance vertex_eccentricity vertex_in_degree vertex_out_degree vertices vertices_to_cycle vertices_to_path %w weyl wheel_graph wiener_index wigner_3j wigner_6j wigner_9j with_stdout write_binary_data writebyte write_data writefile wronskian xreduce xthru %y Zeilberger zeroequiv zerofor zeromatrix zeromatrixp zeta zgeev zheev zlange zn_add_table zn_carmichael_lambda zn_characteristic_factors zn_determinant zn_factor_generators zn_invert_by_lu zn_log zn_mult_table absboxchar activecontexts adapt_depth additive adim aform algebraic algepsilon algexact aliases allbut all_dotsimp_denoms allocation allsym alphabetic animation antisymmetric arrays askexp assume_pos assume_pos_pred assumescalar asymbol atomgrad atrig1 axes axis_3d axis_bottom axis_left axis_right axis_top azimuth background background_color backsubst berlefact bernstein_explicit besselexpand beta_args_sum_to_integer beta_expand bftorat bftrunc bindtest border boundaries_array box boxchar breakup %c capping cauchysum cbrange cbtics center cflength cframe_flag cnonmet_flag color color_bar color_bar_tics colorbox columns commutative complex cone context contexts contour contour_levels cosnpiflag ctaypov ctaypt ctayswitch ctayvar ct_coords ctorsion_flag ctrgsimp cube current_let_rule_package cylinder data_file_name debugmode decreasing default_let_rule_package delay dependencies derivabbrev derivsubst detout diagmetric diff dim dimensions dispflag display2d|10 display_format_internal distribute_over doallmxops domain domxexpt domxmxops domxnctimes dontfactor doscmxops doscmxplus dot0nscsimp dot0simp dot1simp dotassoc dotconstrules dotdistrib dotexptsimp dotident dotscrules draw_graph_program draw_realpart edge_color edge_coloring edge_partition edge_type edge_width %edispflag elevation %emode endphi endtheta engineering_format_floats enhanced3d %enumer epsilon_lp erfflag erf_representation errormsg error_size error_syms error_type %e_to_numlog eval even evenfun evflag evfun ev_point expandwrt_denom expintexpand expintrep expon expop exptdispflag exptisolate exptsubst facexpand facsum_combine factlim factorflag factorial_expand factors_only fb feature features file_name file_output_append file_search_demo file_search_lisp file_search_maxima|10 file_search_tests file_search_usage file_type_lisp file_type_maxima|10 fill_color fill_density filled_func fixed_vertices flipflag float2bf font font_size fortindent fortspaces fpprec fpprintprec functions gamma_expand gammalim gdet genindex gensumnum GGFCFMAX GGFINFINITY globalsolve gnuplot_command gnuplot_curve_styles gnuplot_curve_titles gnuplot_default_term_command gnuplot_dumb_term_command gnuplot_file_args gnuplot_file_name gnuplot_out_file gnuplot_pdf_term_command gnuplot_pm3d gnuplot_png_term_command gnuplot_postamble gnuplot_preamble gnuplot_ps_term_command gnuplot_svg_term_command gnuplot_term gnuplot_view_args Gosper_in_Zeilberger gradefs grid grid2d grind halfangles head_angle head_both head_length head_type height hypergeometric_representation %iargs ibase icc1 icc2 icounter idummyx ieqnprint ifb ifc1 ifc2 ifg ifgi ifr iframe_bracket_form ifri igeowedge_flag ikt1 ikt2 imaginary inchar increasing infeval infinity inflag infolists inm inmc1 inmc2 intanalysis integer integervalued integrate_use_rootsof integration_constant integration_constant_counter interpolate_color intfaclim ip_grid ip_grid_in irrational isolate_wrt_times iterations itr julia_parameter %k1 %k2 keepfloat key key_pos kinvariant kt label label_alignment label_orientation labels lassociative lbfgs_ncorrections lbfgs_nfeval_max leftjust legend letrat let_rule_packages lfg lg lhospitallim limsubst linear linear_solver linechar linel|10 linenum line_type linewidth line_width linsolve_params linsolvewarn lispdisp listarith listconstvars listdummyvars lmxchar load_pathname loadprint logabs logarc logcb logconcoeffp logexpand lognegint logsimp logx logx_secondary logy logy_secondary logz lriem m1pbranch macroexpansion macros mainvar manual_demo maperror mapprint matrix_element_add matrix_element_mult matrix_element_transpose maxapplydepth maxapplyheight maxima_tempdir|10 maxima_userdir|10 maxnegex MAX_ORD maxposex maxpsifracdenom maxpsifracnum maxpsinegint maxpsiposint maxtayorder mesh_lines_color method mod_big_prime mode_check_errorp mode_checkp mode_check_warnp mod_test mod_threshold modular_linear_solver modulus multiplicative multiplicities myoptions nary negdistrib negsumdispflag newline newtonepsilon newtonmaxiter nextlayerfactor niceindicespref nm nmc noeval nolabels nonegative_lp noninteger nonscalar noun noundisp nouns np npi nticks ntrig numer numer_pbranch obase odd oddfun opacity opproperties opsubst optimprefix optionset orientation origin orthopoly_returns_intervals outative outchar packagefile palette partswitch pdf_file pfeformat phiresolution %piargs piece pivot_count_sx pivot_max_sx plot_format plot_options plot_realpart png_file pochhammer_max_index points pointsize point_size points_joined point_type poislim poisson poly_coefficient_ring poly_elimination_order polyfactor poly_grobner_algorithm poly_grobner_debug poly_monomial_order poly_primary_elimination_order poly_return_term_list poly_secondary_elimination_order poly_top_reduction_only posfun position powerdisp pred prederror primep_number_of_tests product_use_gamma program programmode promote_float_to_bigfloat prompt proportional_axes props psexpand ps_file radexpand radius radsubstflag rassociative ratalgdenom ratchristof ratdenomdivide rateinstein ratepsilon ratfac rational ratmx ratprint ratriemann ratsimpexpons ratvarswitch ratweights ratweyl ratwtlvl real realonly redraw refcheck resolution restart resultant ric riem rmxchar %rnum_list rombergabs rombergit rombergmin rombergtol rootsconmode rootsepsilon run_viewer same_xy same_xyz savedef savefactors scalar scalarmatrixp scale scale_lp setcheck setcheckbreak setval show_edge_color show_edges show_edge_type show_edge_width show_id show_label showtime show_vertex_color show_vertex_size show_vertex_type show_vertices show_weight simp simplified_output simplify_products simpproduct simpsum sinnpiflag solvedecomposes solveexplicit solvefactors solvenullwarn solveradcan solvetrigwarn space sparse sphere spring_embedding_depth sqrtdispflag stardisp startphi starttheta stats_numer stringdisp structures style sublis_apply_lambda subnumsimp sumexpand sumsplitfact surface surface_hide svg_file symmetric tab taylordepth taylor_logexpand taylor_order_coefficients taylor_truncate_polynomials tensorkill terminal testsuite_files thetaresolution timer_devalue title tlimswitch tr track transcompile transform transform_xy translate_fast_arrays transparent transrun tr_array_as_ref tr_bound_function_applyp tr_file_tty_messagesp tr_float_can_branch_complex tr_function_call_default trigexpandplus trigexpandtimes triginverses trigsign trivial_solutions tr_numer tr_optimize_max_loop tr_semicompile tr_state_vars tr_warn_bad_function_calls tr_warn_fexpr tr_warn_meval tr_warn_mode tr_warn_undeclared tr_warn_undefined_variable tstep ttyoff tube_extremes ufg ug %unitexpand unit_vectors uric uriem use_fast_arrays user_preamble usersetunits values vect_cross verbose vertex_color vertex_coloring vertex_partition vertex_size vertex_type view warnings weyl width windowname windowtitle wired_surface wireframe xaxis xaxis_color xaxis_secondary xaxis_type xaxis_width xlabel xlabel_secondary xlength xrange xrange_secondary xtics xtics_axis xtics_rotate xtics_rotate_secondary xtics_secondary xtics_secondary_axis xu_grid x_voxel xy_file xyplane xy_scale yaxis yaxis_color yaxis_secondary yaxis_type yaxis_width ylabel ylabel_secondary ylength yrange yrange_secondary ytics ytics_axis ytics_rotate ytics_rotate_secondary ytics_secondary ytics_secondary_axis yv_grid y_voxel yx_ratio zaxis zaxis_color zaxis_type zaxis_width zeroa zerob zerobern zeta%pi zlabel zlabel_rotate zlength zmin zn_primroot_limit zn_primroot_pretest",symbol:"_ __ %|0 %%|0"},contains:[{className:"comment",begin:"/\\*",end:"\\*/",contains:["self"]},e.QUOTE_STRING_MODE,{className:"number",relevance:0,variants:[{begin:"\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Ee][-+]?\\d+\\b"},{begin:"\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Bb][-+]?\\d+\\b",relevance:10},{begin:"\\b(\\.\\d+|\\d+\\.\\d+)\\b"},{begin:"\\b(\\d+|0[0-9A-Za-z]+)\\.?\\b"}]}],illegal:/@/}}},9102:function(e){e.exports=function(e){return{name:"MEL",keywords:"int float string vector matrix if else switch case default while do for in break continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor animDisplay animView annotate appendStringArray applicationName applyAttrPreset applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem componentEditor compositingInterop computePolysetVolume condition cone confirmDialog connectAttr connectControl connectDynamic connectJoint connectionInfo constrain constrainValue constructionHistory container containsMultibyte contextInfo control convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected displayColor displayCull displayLevelOfDetail displayPref displayRGBColor displaySmoothness displayStats displayString displaySurface distanceDimContext distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor editorTemplate effector emit emitter enableDevice encodeString endString endsWith env equivalent equivalentTol erf error eval evalDeferred evalEcho event exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo filetest filletCurve filter filterCurve filterExpand filterStudioImport findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss geometryConstraint getApplicationVersionAsFloat getAttr getClassification getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation listNodeTypes listPanelCategories listRelatives listSets listTransforms listUnselected listerEditor loadFluid loadNewShelf loadPlugin loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration panelHistory paramDimContext paramDimension paramLocator parent parentConstraint particle particleExists particleInstancer particleRenderInfo partition pasteKey pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE registerPluginResource rehash reloadImage removeJoint removeMultiInstance removePanelCategory rename renameAttr renameSelectionList renameUI render renderGlobalsNode renderInfo renderLayerButton renderLayerParent renderLayerPostProcess renderLayerUnparent renderManip renderPartition renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor renderWindowSelectContext renderer reorder reorderDeformers requires reroot resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType selectedNodes selectionConnection separator setAttr setAttrEnumResource setAttrMapping setAttrNiceNameResource setConstraintRestPosition setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField shortNameOf showHelp showHidden showManipCtx showSelectionInTitle showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString stringToStringArray strip stripPrefixFromName stroke subdAutoProjection subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList textToShelf textureDisplacePlane textureHairColor texturePlacementContext textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper trace track trackCtx transferAttributes transformCompare transformLimits translator trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform",illegal:"</",contains:[e.C_NUMBER_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE]},{begin:/[$%@](\^\w\b|#\w+|[^\s\w{]|\{\w+\}|\w+)/},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]}}},1711:function(e){e.exports=function(e){var t=e.COMMENT("%","$"),n=e.inherit(e.APOS_STRING_MODE,{relevance:0}),a=e.inherit(e.QUOTE_STRING_MODE,{relevance:0});return a.contains=a.contains.slice(),a.contains.push({className:"subst",begin:"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]",relevance:0}),{name:"Mercury",aliases:["m","moo"],keywords:{keyword:"module use_module import_module include_module end_module initialise mutable initialize finalize finalise interface implementation pred mode func type inst solver any_pred any_func is semidet det nondet multi erroneous failure cc_nondet cc_multi typeclass instance where pragma promise external trace atomic or_else require_complete_switch require_det require_semidet require_multi require_nondet require_cc_multi require_cc_nondet require_erroneous require_failure",meta:"inline no_inline type_spec source_file fact_table obsolete memo loop_check minimal_model terminates does_not_terminate check_termination promise_equivalent_clauses foreign_proc foreign_decl foreign_code foreign_type foreign_import_module foreign_export_enum foreign_export foreign_enum may_call_mercury will_not_call_mercury thread_safe not_thread_safe maybe_thread_safe promise_pure promise_semipure tabled_for_io local untrailed trailed attach_to_io_state can_pass_as_mercury_type stable will_not_throw_exception may_modify_trail will_not_modify_trail may_duplicate may_not_duplicate affects_liveness does_not_affect_liveness doesnt_affect_liveness no_sharing unknown_sharing sharing",built_in:"some all not if then else true fail false try catch catch_any semidet_true semidet_false semidet_fail impure_true impure semipure"},contains:[{className:"built_in",variants:[{begin:"<=>"},{begin:"<=",relevance:0},{begin:"=>",relevance:0},{begin:"/\\\\"},{begin:"\\\\/"}]},{className:"built_in",variants:[{begin:":-\\|--\x3e"},{begin:"=",relevance:0}]},t,e.C_BLOCK_COMMENT_MODE,{className:"number",begin:"0'.\\|0[box][0-9a-fA-F]*"},e.NUMBER_MODE,n,a,{begin:/:-/},{begin:/\.$/}]}}},8714:function(e){e.exports=function(e){return{name:"MIPS Assembly",case_insensitive:!0,aliases:["mips"],keywords:{$pattern:"\\.?"+e.IDENT_RE,meta:".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .ltorg ",built_in:"$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 zero at v0 v1 a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 s0 s1 s2 s3 s4 s5 s6 s7 s8 k0 k1 gp sp fp ra $f0 $f1 $f2 $f2 $f4 $f5 $f6 $f7 $f8 $f9 $f10 $f11 $f12 $f13 $f14 $f15 $f16 $f17 $f18 $f19 $f20 $f21 $f22 $f23 $f24 $f25 $f26 $f27 $f28 $f29 $f30 $f31 Context Random EntryLo0 EntryLo1 Context PageMask Wired EntryHi HWREna BadVAddr Count Compare SR IntCtl SRSCtl SRSMap Cause EPC PRId EBase Config Config1 Config2 Config3 LLAddr Debug DEPC DESAVE CacheErr ECC ErrorEPC TagLo DataLo TagHi DataHi WatchLo WatchHi PerfCtl PerfCnt "},contains:[{className:"keyword",begin:"\\b(addi?u?|andi?|b(al)?|beql?|bgez(al)?l?|bgtzl?|blezl?|bltz(al)?l?|bnel?|cl[oz]|divu?|ext|ins|j(al)?|jalr(\\.hb)?|jr(\\.hb)?|lbu?|lhu?|ll|lui|lw[lr]?|maddu?|mfhi|mflo|movn|movz|move|msubu?|mthi|mtlo|mul|multu?|nop|nor|ori?|rotrv?|sb|sc|se[bh]|sh|sllv?|slti?u?|srav?|srlv?|subu?|sw[lr]?|xori?|wsbh|abs\\.[sd]|add\\.[sd]|alnv.ps|bc1[ft]l?|c\\.(s?f|un|u?eq|[ou]lt|[ou]le|ngle?|seq|l[et]|ng[et])\\.[sd]|(ceil|floor|round|trunc)\\.[lw]\\.[sd]|cfc1|cvt\\.d\\.[lsw]|cvt\\.l\\.[dsw]|cvt\\.ps\\.s|cvt\\.s\\.[dlw]|cvt\\.s\\.p[lu]|cvt\\.w\\.[dls]|div\\.[ds]|ldx?c1|luxc1|lwx?c1|madd\\.[sd]|mfc1|mov[fntz]?\\.[ds]|msub\\.[sd]|mth?c1|mul\\.[ds]|neg\\.[ds]|nmadd\\.[ds]|nmsub\\.[ds]|p[lu][lu]\\.ps|recip\\.fmt|r?sqrt\\.[ds]|sdx?c1|sub\\.[ds]|suxc1|swx?c1|break|cache|d?eret|[de]i|ehb|mfc0|mtc0|pause|prefx?|rdhwr|rdpgpr|sdbbp|ssnop|synci?|syscall|teqi?|tgei?u?|tlb(p|r|w[ir])|tlti?u?|tnei?|wait|wrpgpr)",end:"\\s"},e.COMMENT("[;#](?!\\s*$)","$"),e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,{className:"string",begin:"'",end:"[^\\\\]'",relevance:0},{className:"title",begin:"\\|",end:"\\|",illegal:"\\n",relevance:0},{className:"number",variants:[{begin:"0x[0-9a-f]+"},{begin:"\\b-?\\d+"}],relevance:0},{className:"symbol",variants:[{begin:"^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:"},{begin:"^\\s*[0-9]+:"},{begin:"[0-9]+[bf]"}],relevance:0}],illegal:/\//}}},4138:function(e){e.exports=function(e){return{name:"Mizar",keywords:"environ vocabularies notations constructors definitions registrations theorems schemes requirements begin end definition registration cluster existence pred func defpred deffunc theorem proof let take assume then thus hence ex for st holds consider reconsider such that and in provided of as from be being by means equals implies iff redefine define now not or attr is mode suppose per cases set thesis contradiction scheme reserve struct correctness compatibility coherence symmetry assymetry reflexivity irreflexivity connectedness uniqueness commutativity idempotence involutiveness projectivity",contains:[e.COMMENT("::","$")]}}},8592:function(e){e.exports=function(e){return{name:"Mojolicious",subLanguage:"xml",contains:[{className:"meta",begin:"^__(END|DATA)__$"},{begin:"^\\s*%{1,2}={0,2}",end:"$",subLanguage:"perl"},{begin:"<%{1,2}={0,2}",end:"={0,1}%>",subLanguage:"perl",excludeBegin:!0,excludeEnd:!0}]}}},7653:function(e){e.exports=function(e){var t={className:"number",relevance:0,variants:[{begin:"[$][a-fA-F0-9]+"},e.NUMBER_MODE]};return{name:"Monkey",case_insensitive:!0,keywords:{keyword:"public private property continue exit extern new try catch eachin not abstract final select case default const local global field end if then else elseif endif while wend repeat until forever for to step next return module inline throw import",built_in:"DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI",literal:"true false null and or shl shr mod"},illegal:/\/\*/,contains:[e.COMMENT("#rem","#end"),e.COMMENT("'","$",{relevance:0}),{className:"function",beginKeywords:"function method",end:"[(=:]|$",illegal:/\n/,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"class",beginKeywords:"class interface",end:"$",contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{className:"built_in",begin:"\\b(self|super)\\b"},{className:"meta",begin:"\\s*#",end:"$",keywords:{"meta-keyword":"if else elseif endif end then"}},{className:"meta",begin:"^\\s*strict\\b"},{beginKeywords:"alias",end:"=",contains:[e.UNDERSCORE_TITLE_MODE]},e.QUOTE_STRING_MODE,t]}}},5326:function(e){e.exports=function(e){var t={keyword:"if then not for in while do return else elseif break continue switch and or unless when class extends super local import export from using",literal:"true false nil",built_in:"_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug io math os package string table"},n="[A-Za-z$_][0-9A-Za-z$_]*",a={className:"subst",begin:/#\{/,end:/\}/,keywords:t},s=[e.inherit(e.C_NUMBER_MODE,{starts:{end:"(\\s*/)?",relevance:0}}),{className:"string",variants:[{begin:/'/,end:/'/,contains:[e.BACKSLASH_ESCAPE]},{begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,a]}]},{className:"built_in",begin:"@__"+e.IDENT_RE},{begin:"@"+e.IDENT_RE},{begin:e.IDENT_RE+"\\\\"+e.IDENT_RE}];a.contains=s;var i=e.inherit(e.TITLE_MODE,{begin:n}),r="(\\(.*\\)\\s*)?\\B[-=]>",o={className:"params",begin:"\\([^\\(]",returnBegin:!0,contains:[{begin:/\(/,end:/\)/,keywords:t,contains:["self"].concat(s)}]};return{name:"MoonScript",aliases:["moon"],keywords:t,illegal:/\/\*/,contains:s.concat([e.COMMENT("--","$"),{className:"function",begin:"^\\s*"+n+"\\s*=\\s*"+r,end:"[-=]>",returnBegin:!0,contains:[i,o]},{begin:/[\(,:=]\s*/,relevance:0,contains:[{className:"function",begin:r,end:"[-=]>",returnBegin:!0,contains:[o]}]},{className:"class",beginKeywords:"class",end:"$",illegal:/[:="\[\]]/,contains:[{beginKeywords:"extends",endsWithParent:!0,illegal:/[:="\[\]]/,contains:[i]},i]},{className:"name",begin:n+":",end:":",returnBegin:!0,returnEnd:!0,relevance:0}])}}},4730:function(e){e.exports=function(e){return{name:"N1QL",case_insensitive:!0,contains:[{beginKeywords:"build create index delete drop explain infer|10 insert merge prepare select update upsert|10",end:/;/,endsWithParent:!0,keywords:{keyword:"all alter analyze and any array as asc begin between binary boolean break bucket build by call case cast cluster collate collection commit connect continue correlate cover create database dataset datastore declare decrement delete derived desc describe distinct do drop each element else end every except exclude execute exists explain fetch first flatten for force from function grant group gsi having if ignore ilike in include increment index infer inline inner insert intersect into is join key keys keyspace known last left let letting like limit lsm map mapping matched materialized merge minus namespace nest not number object offset on option or order outer over parse partition password path pool prepare primary private privilege procedure public raw realm reduce rename return returning revoke right role rollback satisfies schema select self semi set show some start statistics string system then to transaction trigger truncate under union unique unknown unnest unset update upsert use user using validate value valued values via view when where while with within work xor",literal:"true false null missing|5",built_in:"array_agg array_append array_concat array_contains array_count array_distinct array_ifnull array_length array_max array_min array_position array_prepend array_put array_range array_remove array_repeat array_replace array_reverse array_sort array_sum avg count max min sum greatest least ifmissing ifmissingornull ifnull missingif nullif ifinf ifnan ifnanorinf naninf neginfif posinfif clock_millis clock_str date_add_millis date_add_str date_diff_millis date_diff_str date_part_millis date_part_str date_trunc_millis date_trunc_str duration_to_str millis str_to_millis millis_to_str millis_to_utc millis_to_zone_name now_millis now_str str_to_duration str_to_utc str_to_zone_name decode_json encode_json encoded_size poly_length base64 base64_encode base64_decode meta uuid abs acos asin atan atan2 ceil cos degrees e exp ln log floor pi power radians random round sign sin sqrt tan trunc object_length object_names object_pairs object_inner_pairs object_values object_inner_values object_add object_put object_remove object_unwrap regexp_contains regexp_like regexp_position regexp_replace contains initcap length lower ltrim position repeat replace rtrim split substr title trim upper isarray isatom isboolean isnumber isobject isstring type toarray toatom toboolean tonumber toobject tostring"},contains:[{className:"string",begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE]},{className:"string",begin:'"',end:'"',contains:[e.BACKSLASH_ESCAPE]},{className:"symbol",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE],relevance:2},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE]},e.C_BLOCK_COMMENT_MODE]}}},6630:function(e){e.exports=function(e){var t={className:"variable",variants:[{begin:/\$\d+/},{begin:/\$\{/,end:/\}/},{begin:/[$@]/+e.UNDERSCORE_IDENT_RE}]},n={endsWithParent:!0,keywords:{$pattern:"[a-z/_]+",literal:"on off yes no true false none blocked debug info notice warn error crit select break last permanent redirect kqueue rtsig epoll poll /dev/poll"},relevance:0,illegal:"=>",contains:[e.HASH_COMMENT_MODE,{className:"string",contains:[e.BACKSLASH_ESCAPE,t],variants:[{begin:/"/,end:/"/},{begin:/'/,end:/'/}]},{begin:"([a-z]+):/",end:"\\s",endsWithParent:!0,excludeEnd:!0,contains:[t]},{className:"regexp",contains:[e.BACKSLASH_ESCAPE,t],variants:[{begin:"\\s\\^",end:"\\s|\\{|;",returnEnd:!0},{begin:"~\\*?\\s+",end:"\\s|\\{|;",returnEnd:!0},{begin:"\\*(\\.[a-z\\-]+)+"},{begin:"([a-z\\-]+\\.)+\\*"}]},{className:"number",begin:"\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"},{className:"number",begin:"\\b\\d+[kKmMgGdshdwy]*\\b",relevance:0},t]};return{name:"Nginx config",aliases:["nginxconf"],contains:[e.HASH_COMMENT_MODE,{begin:e.UNDERSCORE_IDENT_RE+"\\s+\\{",returnBegin:!0,end:/\{/,contains:[{className:"section",begin:e.UNDERSCORE_IDENT_RE}],relevance:0},{begin:e.UNDERSCORE_IDENT_RE+"\\s",end:";|\\{",returnBegin:!0,contains:[{className:"attribute",begin:e.UNDERSCORE_IDENT_RE,starts:n}],relevance:0}],illegal:"[^\\s\\}]"}}},9203:function(e){e.exports=function(e){return{name:"Nim",keywords:{keyword:"addr and as asm bind block break case cast const continue converter discard distinct div do elif else end enum except export finally for from func generic if import in include interface is isnot iterator let macro method mixin mod nil not notin object of or out proc ptr raise ref return shl shr static template try tuple type using var when while with without xor yield",literal:"shared guarded stdin stdout stderr result true false",built_in:"int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float float32 float64 bool char string cstring pointer expr stmt void auto any range array openarray varargs seq set clong culong cchar cschar cshort cint csize clonglong cfloat cdouble clongdouble cuchar cushort cuint culonglong cstringarray semistatic"},contains:[{className:"meta",begin:/\{\./,end:/\.\}/,relevance:10},{className:"string",begin:/[a-zA-Z]\w*"/,end:/"/,contains:[{begin:/""/}]},{className:"string",begin:/([a-zA-Z]\w*)?"""/,end:/"""/},e.QUOTE_STRING_MODE,{className:"type",begin:/\b[A-Z]\w+\b/,relevance:0},{className:"number",relevance:0,variants:[{begin:/\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},{begin:/\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},{begin:/\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},{begin:/\b(\d[_\d]*)('?[iIuUfF](8|16|32|64))?/}]},e.HASH_COMMENT_MODE]}}},8373:function(e){e.exports=function(e){var t={keyword:"rec with let in inherit assert if else then",literal:"true false or and null",built_in:"import abort baseNameOf dirOf isNull builtins map removeAttrs throw toString derivation"},n={className:"subst",begin:/\$\{/,end:/\}/,keywords:t},a={className:"string",contains:[n],variants:[{begin:"''",end:"''"},{begin:'"',end:'"'}]},s=[e.NUMBER_MODE,e.HASH_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,a,{begin:/[a-zA-Z0-9-_]+(\s*=)/,returnBegin:!0,relevance:0,contains:[{className:"attr",begin:/\S+/}]}];return n.contains=s,{name:"Nix",aliases:["nixos"],keywords:t,contains:s}}},8824:function(e){e.exports=function(e){return{name:"Node REPL",contains:[{className:"meta",starts:{end:/ |$/,starts:{end:"$",subLanguage:"javascript"}},variants:[{begin:/^>(?=[ ]|$)/},{begin:/^\.\.\.(?=[ ]|$)/}]}]}}},5505:function(e){e.exports=function(e){var t={className:"variable",begin:/\$+\{[\w.:-]+\}/},n={className:"variable",begin:/\$+\w+/,illegal:/\(\)\{\}/},a={className:"variable",begin:/\$+\([\w^.:-]+\)/},s={className:"string",variants:[{begin:'"',end:'"'},{begin:"'",end:"'"},{begin:"`",end:"`"}],illegal:/\n/,contains:[{className:"meta",begin:/\$(\\[nrt]|\$)/},{className:"variable",begin:/\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)/},t,n,a]};return{name:"NSIS",case_insensitive:!1,keywords:{keyword:"Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecShellWait ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileWriteUTF16LE FileSeek FileWrite FileWriteByte FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetKnownFolderPath GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfRtlLanguage IfShellVarContextAll IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText Int64Cmp Int64CmpU Int64Fmt IntCmp IntCmpU IntFmt IntOp IntPtrCmp IntPtrCmpU IntPtrOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadAndSetImage LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestLongPathAware ManifestMaxVersionTested ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PEAddResource PEDllCharacteristics PERemoveResource PESubsysVer Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegMultiStr WriteRegNone WriteRegStr WriteUninstaller XPStyle",literal:"admin all auto both bottom bzip2 colored components current custom directory false force hide highest ifdiff ifnewer instfiles lastused leave left license listonly lzma nevershow none normal notset off on open print right show silent silentlog smooth textonly top true try un.components un.custom un.directory un.instfiles un.license uninstConfirm user Win10 Win7 Win8 WinVista zlib"},contains:[e.HASH_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.COMMENT(";","$",{relevance:0}),{className:"function",beginKeywords:"Function PageEx Section SectionGroup",end:"$"},s,{className:"keyword",begin:/!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|searchparse|searchreplace|system|tempfile|undef|verbose|warning)/},t,n,a,{className:"params",begin:"(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)"},{className:"class",begin:/\w+::\w+/},e.NUMBER_MODE]}}},3567:function(e){e.exports=function(e){var t=/[a-zA-Z@][a-zA-Z0-9_]*/,n={$pattern:t,keyword:"@interface @class @protocol @implementation"};return{name:"Objective-C",aliases:["mm","objc","obj-c","obj-c++","objective-c++"],keywords:{$pattern:t,keyword:"int float while char export sizeof typedef const struct for union unsigned long volatile static bool mutable if do return goto void enum else break extern asm case short default double register explicit signed typename this switch continue wchar_t inline readonly assign readwrite self @synchronized id typeof nonatomic super unichar IBOutlet IBAction strong weak copy in out inout bycopy byref oneway __strong __weak __block __autoreleasing @private @protected @public @try @property @end @throw @catch @finally @autoreleasepool @synthesize @dynamic @selector @optional @required @encode @package @import @defs @compatibility_alias __bridge __bridge_transfer __bridge_retained __bridge_retain __covariant __contravariant __kindof _Nonnull _Nullable _Null_unspecified __FUNCTION__ __PRETTY_FUNCTION__ __attribute__ getter setter retain unsafe_unretained nonnull nullable null_unspecified null_resettable class instancetype NS_DESIGNATED_INITIALIZER NS_UNAVAILABLE NS_REQUIRES_SUPER NS_RETURNS_INNER_POINTER NS_INLINE NS_AVAILABLE NS_DEPRECATED NS_ENUM NS_OPTIONS NS_SWIFT_UNAVAILABLE NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_REFINED_FOR_SWIFT NS_SWIFT_NAME NS_SWIFT_NOTHROW NS_DURING NS_HANDLER NS_ENDHANDLER NS_VALUERETURN NS_VOIDRETURN",literal:"false true FALSE TRUE nil YES NO NULL",built_in:"BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"},illegal:"</",contains:[{className:"built_in",begin:"\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.C_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{className:"string",variants:[{begin:'@"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]}]},{className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{"meta-keyword":"if else elif endif define undef warning error line pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(e.QUOTE_STRING_MODE,{className:"meta-string"}),{className:"meta-string",begin:/<.*?>/,end:/$/,illegal:"\\n"},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:"class",begin:"("+n.keyword.split(" ").join("|")+")\\b",end:/(\{|$)/,excludeEnd:!0,keywords:n,contains:[e.UNDERSCORE_TITLE_MODE]},{begin:"\\."+e.UNDERSCORE_IDENT_RE,relevance:0}]}}},8036:function(e){e.exports=function(e){return{name:"OCaml",aliases:["ml"],keywords:{$pattern:"[a-z_]\\w*!?",keyword:"and as assert asr begin class constraint do done downto else end exception external for fun function functor if in include inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method mod module mutable new object of open! open or private rec sig struct then to try type val! val virtual when while with parser value",built_in:"array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit in_channel out_channel ref",literal:"true false"},illegal:/\/\/|>>/,contains:[{className:"literal",begin:"\\[(\\|\\|)?\\]|\\(\\)",relevance:0},e.COMMENT("\\(\\*","\\*\\)",{contains:["self"]}),{className:"symbol",begin:"'[A-Za-z_](?!')[\\w']*"},{className:"type",begin:"`[A-Z][\\w']*"},{className:"type",begin:"\\b[A-Z][\\w']*",relevance:0},{begin:"[a-z_]\\w*'[\\w']*",relevance:0},e.inherit(e.APOS_STRING_MODE,{className:"string",relevance:0}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),{className:"number",begin:"\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",relevance:0},{begin:/->/}]}}},6424:function(e){e.exports=function(e){var t={className:"keyword",begin:"\\$(f[asn]|t|vp[rtd]|children)"},n={className:"number",begin:"\\b\\d+(\\.\\d+)?(e-?\\d+)?",relevance:0},a=e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),s={className:"function",beginKeywords:"module function",end:/=|\{/,contains:[{className:"params",begin:"\\(",end:"\\)",contains:["self",n,a,t,{className:"literal",begin:"false|true|PI|undef"}]},e.UNDERSCORE_TITLE_MODE]};return{name:"OpenSCAD",aliases:["scad"],keywords:{keyword:"function module include use for intersection_for if else \\%",literal:"false true PI undef",built_in:"circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n,{className:"meta",keywords:{"meta-keyword":"include use"},begin:"include|use <",end:">"},a,t,{begin:"[*!#%]",relevance:0},s]}}},9727:function(e){e.exports=function(e){var t={$pattern:/\.?\w+/,keyword:"abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained"},n=e.COMMENT(/\{/,/\}/,{relevance:0}),a=e.COMMENT("\\(\\*","\\*\\)",{relevance:10}),s={className:"string",begin:"'",end:"'",contains:[{begin:"''"}]},i={className:"string",begin:"(#\\d+)+"},r={className:"function",beginKeywords:"function constructor destructor procedure method",end:"[:;]",keywords:"function constructor|10 destructor|10 procedure|10 method|10",contains:[e.TITLE_MODE,{className:"params",begin:"\\(",end:"\\)",keywords:t,contains:[s,i]},n,a]};return{name:"Oxygene",case_insensitive:!0,keywords:t,illegal:'("|\\$[G-Zg-z]|\\/\\*|</|=>|->)',contains:[n,a,e.C_LINE_COMMENT_MODE,s,i,e.NUMBER_MODE,r,{className:"class",begin:"=\\bclass\\b",end:"end;",keywords:t,contains:[s,i,n,a,e.C_LINE_COMMENT_MODE,r]}]}}},7157:function(e){e.exports=function(e){var t=e.COMMENT(/\{/,/\}/,{contains:["self"]});return{name:"Parser3",subLanguage:"xml",relevance:0,contains:[e.COMMENT("^#","$"),e.COMMENT(/\^rem\{/,/\}/,{relevance:10,contains:[t]}),{className:"meta",begin:"^@(?:BASE|USE|CLASS|OPTIONS)$",relevance:10},{className:"title",begin:"@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$"},{className:"variable",begin:/\$\{?[\w\-.:]+\}?/},{className:"keyword",begin:/\^[\w\-.:]+/},{className:"number",begin:"\\^#[0-9a-fA-F]+"},e.C_NUMBER_MODE]}}},5201:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function a(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}e.exports=function(e){var t=/[dualxmsipngr]{0,12}/,s={$pattern:/[\w.]+/,keyword:["abs","accept","alarm","and","atan2","bind","binmode","bless","break","caller","chdir","chmod","chomp","chop","chown","chr","chroot","close","closedir","connect","continue","cos","crypt","dbmclose","dbmopen","defined","delete","die","do","dump","each","else","elsif","endgrent","endhostent","endnetent","endprotoent","endpwent","endservent","eof","eval","exec","exists","exit","exp","fcntl","fileno","flock","for","foreach","fork","format","formline","getc","getgrent","getgrgid","getgrnam","gethostbyaddr","gethostbyname","gethostent","getlogin","getnetbyaddr","getnetbyname","getnetent","getpeername","getpgrp","getpriority","getprotobyname","getprotobynumber","getprotoent","getpwent","getpwnam","getpwuid","getservbyname","getservbyport","getservent","getsockname","getsockopt","given","glob","gmtime","goto","grep","gt","hex","if","index","int","ioctl","join","keys","kill","last","lc","lcfirst","length","link","listen","local","localtime","log","lstat","lt","ma","map","mkdir","msgctl","msgget","msgrcv","msgsnd","my","ne","next","no","not","oct","open","opendir","or","ord","our","pack","package","pipe","pop","pos","print","printf","prototype","push","q|0","qq","quotemeta","qw","qx","rand","read","readdir","readline","readlink","readpipe","recv","redo","ref","rename","require","reset","return","reverse","rewinddir","rindex","rmdir","say","scalar","seek","seekdir","select","semctl","semget","semop","send","setgrent","sethostent","setnetent","setpgrp","setpriority","setprotoent","setpwent","setservent","setsockopt","shift","shmctl","shmget","shmread","shmwrite","shutdown","sin","sleep","socket","socketpair","sort","splice","split","sprintf","sqrt","srand","stat","state","study","sub","substr","symlink","syscall","sysopen","sysread","sysseek","system","syswrite","tell","telldir","tie","tied","time","times","tr","truncate","uc","ucfirst","umask","undef","unless","unlink","unpack","unshift","untie","until","use","utime","values","vec","wait","waitpid","wantarray","warn","when","while","write","x|0","xor","y|0"].join(" ")},i={className:"subst",begin:"[$@]\\{",end:"\\}",keywords:s},r={begin:/->\{/,end:/\}/},o={variants:[{begin:/\$\d/},{begin:n(/[$%@](\^\w\b|#\w+(::\w+)*|\{\w+\}|\w+(::\w*)*)/,"(?![A-Za-z])(?![@$%])")},{begin:/[$%@][^\s\w{]/,relevance:0}]},l=[e.BACKSLASH_ESCAPE,i,o],c=[/!/,/\//,/\|/,/\?/,/'/,/"/,/#/],d=function(e,a){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"\\1",i="\\1"===s?s:n(s,a);return n(n("(?:",e,")"),a,/(?:\\.|[^\\\/])*?/,i,/(?:\\.|[^\\\/])*?/,s,t)},u=function(e,a,s){return n(n("(?:",e,")"),a,/(?:\\.|[^\\\/])*?/,s,t)},p=[o,e.HASH_COMMENT_MODE,e.COMMENT(/^=\w/,/=cut/,{endsWithParent:!0}),r,{className:"string",contains:l,variants:[{begin:"q[qwxr]?\\s*\\(",end:"\\)",relevance:5},{begin:"q[qwxr]?\\s*\\[",end:"\\]",relevance:5},{begin:"q[qwxr]?\\s*\\{",end:"\\}",relevance:5},{begin:"q[qwxr]?\\s*\\|",end:"\\|",relevance:5},{begin:"q[qwxr]?\\s*<",end:">",relevance:5},{begin:"qw\\s+q",end:"q",relevance:5},{begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE]},{begin:'"',end:'"'},{begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE]},{begin:/\{\w+\}/,relevance:0},{begin:"-?\\w+\\s*=>",relevance:0}]},{className:"number",begin:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",relevance:0},{begin:"(\\/\\/|"+e.RE_STARTERS_RE+"|\\b(split|return|print|reverse|grep)\\b)\\s*",keywords:"split return print reverse grep",relevance:0,contains:[e.HASH_COMMENT_MODE,{className:"regexp",variants:[{begin:d("s|tr|y",a.apply(void 0,c))},{begin:d("s|tr|y","\\(","\\)")},{begin:d("s|tr|y","\\[","\\]")},{begin:d("s|tr|y","\\{","\\}")}],relevance:2},{className:"regexp",variants:[{begin:/(m|qr)\/\//,relevance:0},{begin:u("(?:m|qr)?",/\//,/\//)},{begin:u("m|qr",a.apply(void 0,c),/\1/)},{begin:u("m|qr",/\(/,/\)/)},{begin:u("m|qr",/\[/,/\]/)},{begin:u("m|qr",/\{/,/\}/)}]}]},{className:"function",beginKeywords:"sub",end:"(\\s*\\(.*?\\))?[;{]",excludeEnd:!0,relevance:5,contains:[e.TITLE_MODE]},{begin:"-\\w\\b",relevance:0},{begin:"^__DATA__$",end:"^__END__$",subLanguage:"mojolicious",contains:[{begin:"^@@.*",end:"$",className:"comment"}]}];return i.contains=p,r.contains=p,{name:"Perl",aliases:["pl","pm"],keywords:s,contains:p}}},450:function(e){e.exports=function(e){return{name:"Packet Filter config",aliases:["pf.conf"],keywords:{$pattern:/[a-z0-9_<>-]+/,built_in:"block match pass load anchor|5 antispoof|10 set table",keyword:"in out log quick on rdomain inet inet6 proto from port os to route allow-opts divert-packet divert-reply divert-to flags group icmp-type icmp6-type label once probability recieved-on rtable prio queue tos tag tagged user keep fragment for os drop af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin source-hash static-port dup-to reply-to route-to parent bandwidth default min max qlimit block-policy debug fingerprints hostid limit loginterface optimization reassemble ruleset-optimization basic none profile skip state-defaults state-policy timeout const counters persist no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy source-track global rule max-src-nodes max-src-states max-src-conn max-src-conn-rate overload flush scrub|5 max-mss min-ttl no-df|10 random-id",literal:"all any no-route self urpf-failed egress|5 unknown"},contains:[e.HASH_COMMENT_MODE,e.NUMBER_MODE,e.QUOTE_STRING_MODE,{className:"variable",begin:/\$[\w\d#@][\w\d_]*/},{className:"variable",begin:/<(?!\/)/,end:/>/}]}}},9465:function(e){e.exports=function(e){var t=e.COMMENT("--","$"),n="\\$([a-zA-Z_]?|[a-zA-Z_][a-zA-Z_0-9]*)\\$",a="BIGINT INT8 BIGSERIAL SERIAL8 BIT VARYING VARBIT BOOLEAN BOOL BOX BYTEA CHARACTER CHAR VARCHAR CIDR CIRCLE DATE DOUBLE PRECISION FLOAT8 FLOAT INET INTEGER INT INT4 INTERVAL JSON JSONB LINE LSEG|10 MACADDR MACADDR8 MONEY NUMERIC DEC DECIMAL PATH POINT POLYGON REAL FLOAT4 SMALLINT INT2 SMALLSERIAL|10 SERIAL2|10 SERIAL|10 SERIAL4|10 TEXT TIME ZONE TIMETZ|10 TIMESTAMP TIMESTAMPTZ|10 TSQUERY|10 TSVECTOR|10 TXID_SNAPSHOT|10 UUID XML NATIONAL NCHAR INT4RANGE|10 INT8RANGE|10 NUMRANGE|10 TSRANGE|10 TSTZRANGE|10 DATERANGE|10 ANYELEMENT ANYARRAY ANYNONARRAY ANYENUM ANYRANGE CSTRING INTERNAL RECORD PG_DDL_COMMAND VOID UNKNOWN OPAQUE REFCURSOR NAME OID REGPROC|10 REGPROCEDURE|10 REGOPER|10 REGOPERATOR|10 REGCLASS|10 REGTYPE|10 REGROLE|10 REGNAMESPACE|10 REGCONFIG|10 REGDICTIONARY|10 ",s=a.trim().split(" ").map((function(e){return e.split("|")[0]})).join("|"),i="ARRAY_AGG AVG BIT_AND BIT_OR BOOL_AND BOOL_OR COUNT EVERY JSON_AGG JSONB_AGG JSON_OBJECT_AGG JSONB_OBJECT_AGG MAX MIN MODE STRING_AGG SUM XMLAGG CORR COVAR_POP COVAR_SAMP REGR_AVGX REGR_AVGY REGR_COUNT REGR_INTERCEPT REGR_R2 REGR_SLOPE REGR_SXX REGR_SXY REGR_SYY STDDEV STDDEV_POP STDDEV_SAMP VARIANCE VAR_POP VAR_SAMP PERCENTILE_CONT PERCENTILE_DISC ROW_NUMBER RANK DENSE_RANK PERCENT_RANK CUME_DIST NTILE LAG LEAD FIRST_VALUE LAST_VALUE NTH_VALUE NUM_NONNULLS NUM_NULLS ABS CBRT CEIL CEILING DEGREES DIV EXP FLOOR LN LOG MOD PI POWER RADIANS ROUND SCALE SIGN SQRT TRUNC WIDTH_BUCKET RANDOM SETSEED ACOS ACOSD ASIN ASIND ATAN ATAND ATAN2 ATAN2D COS COSD COT COTD SIN SIND TAN TAND BIT_LENGTH CHAR_LENGTH CHARACTER_LENGTH LOWER OCTET_LENGTH OVERLAY POSITION SUBSTRING TREAT TRIM UPPER ASCII BTRIM CHR CONCAT CONCAT_WS CONVERT CONVERT_FROM CONVERT_TO DECODE ENCODE INITCAP LEFT LENGTH LPAD LTRIM MD5 PARSE_IDENT PG_CLIENT_ENCODING QUOTE_IDENT|10 QUOTE_LITERAL|10 QUOTE_NULLABLE|10 REGEXP_MATCH REGEXP_MATCHES REGEXP_REPLACE REGEXP_SPLIT_TO_ARRAY REGEXP_SPLIT_TO_TABLE REPEAT REPLACE REVERSE RIGHT RPAD RTRIM SPLIT_PART STRPOS SUBSTR TO_ASCII TO_HEX TRANSLATE OCTET_LENGTH GET_BIT GET_BYTE SET_BIT SET_BYTE TO_CHAR TO_DATE TO_NUMBER TO_TIMESTAMP AGE CLOCK_TIMESTAMP|10 DATE_PART DATE_TRUNC ISFINITE JUSTIFY_DAYS JUSTIFY_HOURS JUSTIFY_INTERVAL MAKE_DATE MAKE_INTERVAL|10 MAKE_TIME MAKE_TIMESTAMP|10 MAKE_TIMESTAMPTZ|10 NOW STATEMENT_TIMESTAMP|10 TIMEOFDAY TRANSACTION_TIMESTAMP|10 ENUM_FIRST ENUM_LAST ENUM_RANGE AREA CENTER DIAMETER HEIGHT ISCLOSED ISOPEN NPOINTS PCLOSE POPEN RADIUS WIDTH BOX BOUND_BOX CIRCLE LINE LSEG PATH POLYGON ABBREV BROADCAST HOST HOSTMASK MASKLEN NETMASK NETWORK SET_MASKLEN TEXT INET_SAME_FAMILY INET_MERGE MACADDR8_SET7BIT ARRAY_TO_TSVECTOR GET_CURRENT_TS_CONFIG NUMNODE PLAINTO_TSQUERY PHRASETO_TSQUERY WEBSEARCH_TO_TSQUERY QUERYTREE SETWEIGHT STRIP TO_TSQUERY TO_TSVECTOR JSON_TO_TSVECTOR JSONB_TO_TSVECTOR TS_DELETE TS_FILTER TS_HEADLINE TS_RANK TS_RANK_CD TS_REWRITE TSQUERY_PHRASE TSVECTOR_TO_ARRAY TSVECTOR_UPDATE_TRIGGER TSVECTOR_UPDATE_TRIGGER_COLUMN XMLCOMMENT XMLCONCAT XMLELEMENT XMLFOREST XMLPI XMLROOT XMLEXISTS XML_IS_WELL_FORMED XML_IS_WELL_FORMED_DOCUMENT XML_IS_WELL_FORMED_CONTENT XPATH XPATH_EXISTS XMLTABLE XMLNAMESPACES TABLE_TO_XML TABLE_TO_XMLSCHEMA TABLE_TO_XML_AND_XMLSCHEMA QUERY_TO_XML QUERY_TO_XMLSCHEMA QUERY_TO_XML_AND_XMLSCHEMA CURSOR_TO_XML CURSOR_TO_XMLSCHEMA SCHEMA_TO_XML SCHEMA_TO_XMLSCHEMA SCHEMA_TO_XML_AND_XMLSCHEMA DATABASE_TO_XML DATABASE_TO_XMLSCHEMA DATABASE_TO_XML_AND_XMLSCHEMA XMLATTRIBUTES TO_JSON TO_JSONB ARRAY_TO_JSON ROW_TO_JSON JSON_BUILD_ARRAY JSONB_BUILD_ARRAY JSON_BUILD_OBJECT JSONB_BUILD_OBJECT JSON_OBJECT JSONB_OBJECT JSON_ARRAY_LENGTH JSONB_ARRAY_LENGTH JSON_EACH JSONB_EACH JSON_EACH_TEXT JSONB_EACH_TEXT JSON_EXTRACT_PATH JSONB_EXTRACT_PATH JSON_OBJECT_KEYS JSONB_OBJECT_KEYS JSON_POPULATE_RECORD JSONB_POPULATE_RECORD JSON_POPULATE_RECORDSET JSONB_POPULATE_RECORDSET JSON_ARRAY_ELEMENTS JSONB_ARRAY_ELEMENTS JSON_ARRAY_ELEMENTS_TEXT JSONB_ARRAY_ELEMENTS_TEXT JSON_TYPEOF JSONB_TYPEOF JSON_TO_RECORD JSONB_TO_RECORD JSON_TO_RECORDSET JSONB_TO_RECORDSET JSON_STRIP_NULLS JSONB_STRIP_NULLS JSONB_SET JSONB_INSERT JSONB_PRETTY CURRVAL LASTVAL NEXTVAL SETVAL COALESCE NULLIF GREATEST LEAST ARRAY_APPEND ARRAY_CAT ARRAY_NDIMS ARRAY_DIMS ARRAY_FILL ARRAY_LENGTH ARRAY_LOWER ARRAY_POSITION ARRAY_POSITIONS ARRAY_PREPEND ARRAY_REMOVE ARRAY_REPLACE ARRAY_TO_STRING ARRAY_UPPER CARDINALITY STRING_TO_ARRAY UNNEST ISEMPTY LOWER_INC UPPER_INC LOWER_INF UPPER_INF RANGE_MERGE GENERATE_SERIES GENERATE_SUBSCRIPTS CURRENT_DATABASE CURRENT_QUERY CURRENT_SCHEMA|10 CURRENT_SCHEMAS|10 INET_CLIENT_ADDR INET_CLIENT_PORT INET_SERVER_ADDR INET_SERVER_PORT ROW_SECURITY_ACTIVE FORMAT_TYPE TO_REGCLASS TO_REGPROC TO_REGPROCEDURE TO_REGOPER TO_REGOPERATOR TO_REGTYPE TO_REGNAMESPACE TO_REGROLE COL_DESCRIPTION OBJ_DESCRIPTION SHOBJ_DESCRIPTION TXID_CURRENT TXID_CURRENT_IF_ASSIGNED TXID_CURRENT_SNAPSHOT TXID_SNAPSHOT_XIP TXID_SNAPSHOT_XMAX TXID_SNAPSHOT_XMIN TXID_VISIBLE_IN_SNAPSHOT TXID_STATUS CURRENT_SETTING SET_CONFIG BRIN_SUMMARIZE_NEW_VALUES BRIN_SUMMARIZE_RANGE BRIN_DESUMMARIZE_RANGE GIN_CLEAN_PENDING_LIST SUPPRESS_REDUNDANT_UPDATES_TRIGGER LO_FROM_BYTEA LO_PUT LO_GET LO_CREAT LO_CREATE LO_UNLINK LO_IMPORT LO_EXPORT LOREAD LOWRITE GROUPING CAST ".trim().split(" ").map((function(e){return e.split("|")[0]})).join("|");return{name:"PostgreSQL",aliases:["postgres","postgresql"],case_insensitive:!0,keywords:{keyword:"ABORT ALTER ANALYZE BEGIN CALL CHECKPOINT|10 CLOSE CLUSTER COMMENT COMMIT COPY CREATE DEALLOCATE DECLARE DELETE DISCARD DO DROP END EXECUTE EXPLAIN FETCH GRANT IMPORT INSERT LISTEN LOAD LOCK MOVE NOTIFY PREPARE REASSIGN|10 REFRESH REINDEX RELEASE RESET REVOKE ROLLBACK SAVEPOINT SECURITY SELECT SET SHOW START TRUNCATE UNLISTEN|10 UPDATE VACUUM|10 VALUES AGGREGATE COLLATION CONVERSION|10 DATABASE DEFAULT PRIVILEGES DOMAIN TRIGGER EXTENSION FOREIGN WRAPPER|10 TABLE FUNCTION GROUP LANGUAGE LARGE OBJECT MATERIALIZED VIEW OPERATOR CLASS FAMILY POLICY PUBLICATION|10 ROLE RULE SCHEMA SEQUENCE SERVER STATISTICS SUBSCRIPTION SYSTEM TABLESPACE CONFIGURATION DICTIONARY PARSER TEMPLATE TYPE USER MAPPING PREPARED ACCESS METHOD CAST AS TRANSFORM TRANSACTION OWNED TO INTO SESSION AUTHORIZATION INDEX PROCEDURE ASSERTION ALL ANALYSE AND ANY ARRAY ASC ASYMMETRIC|10 BOTH CASE CHECK COLLATE COLUMN CONCURRENTLY|10 CONSTRAINT CROSS DEFERRABLE RANGE DESC DISTINCT ELSE EXCEPT FOR FREEZE|10 FROM FULL HAVING ILIKE IN INITIALLY INNER INTERSECT IS ISNULL JOIN LATERAL LEADING LIKE LIMIT NATURAL NOT NOTNULL NULL OFFSET ON ONLY OR ORDER OUTER OVERLAPS PLACING PRIMARY REFERENCES RETURNING SIMILAR SOME SYMMETRIC TABLESAMPLE THEN TRAILING UNION UNIQUE USING VARIADIC|10 VERBOSE WHEN WHERE WINDOW WITH BY RETURNS INOUT OUT SETOF|10 IF STRICT CURRENT CONTINUE OWNER LOCATION OVER PARTITION WITHIN BETWEEN ESCAPE EXTERNAL INVOKER DEFINER WORK RENAME VERSION CONNECTION CONNECT TABLES TEMP TEMPORARY FUNCTIONS SEQUENCES TYPES SCHEMAS OPTION CASCADE RESTRICT ADD ADMIN EXISTS VALID VALIDATE ENABLE DISABLE REPLICA|10 ALWAYS PASSING COLUMNS PATH REF VALUE OVERRIDING IMMUTABLE STABLE VOLATILE BEFORE AFTER EACH ROW PROCEDURAL ROUTINE NO HANDLER VALIDATOR OPTIONS STORAGE OIDS|10 WITHOUT INHERIT DEPENDS CALLED INPUT LEAKPROOF|10 COST ROWS NOWAIT SEARCH UNTIL ENCRYPTED|10 PASSWORD CONFLICT|10 INSTEAD INHERITS CHARACTERISTICS WRITE CURSOR ALSO STATEMENT SHARE EXCLUSIVE INLINE ISOLATION REPEATABLE READ COMMITTED SERIALIZABLE UNCOMMITTED LOCAL GLOBAL SQL PROCEDURES RECURSIVE SNAPSHOT ROLLUP CUBE TRUSTED|10 INCLUDE FOLLOWING PRECEDING UNBOUNDED RANGE GROUPS UNENCRYPTED|10 SYSID FORMAT DELIMITER HEADER QUOTE ENCODING FILTER OFF FORCE_QUOTE FORCE_NOT_NULL FORCE_NULL COSTS BUFFERS TIMING SUMMARY DISABLE_PAGE_SKIPPING RESTART CYCLE GENERATED IDENTITY DEFERRED IMMEDIATE LEVEL LOGGED UNLOGGED OF NOTHING NONE EXCLUDE ATTRIBUTE USAGE ROUTINES TRUE FALSE NAN INFINITY ALIAS BEGIN CONSTANT DECLARE END EXCEPTION RETURN PERFORM|10 RAISE GET DIAGNOSTICS STACKED|10 FOREACH LOOP ELSIF EXIT WHILE REVERSE SLICE DEBUG LOG INFO NOTICE WARNING ASSERT OPEN SUPERUSER NOSUPERUSER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE INHERIT NOINHERIT LOGIN NOLOGIN REPLICATION NOREPLICATION BYPASSRLS NOBYPASSRLS ",built_in:"CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURRENT_CATALOG|10 CURRENT_DATE LOCALTIME LOCALTIMESTAMP CURRENT_ROLE|10 CURRENT_SCHEMA|10 SESSION_USER PUBLIC FOUND NEW OLD TG_NAME|10 TG_WHEN|10 TG_LEVEL|10 TG_OP|10 TG_RELID|10 TG_RELNAME|10 TG_TABLE_NAME|10 TG_TABLE_SCHEMA|10 TG_NARGS|10 TG_ARGV|10 TG_EVENT|10 TG_TAG|10 ROW_COUNT RESULT_OID|10 PG_CONTEXT|10 RETURNED_SQLSTATE COLUMN_NAME CONSTRAINT_NAME PG_DATATYPE_NAME|10 MESSAGE_TEXT TABLE_NAME SCHEMA_NAME PG_EXCEPTION_DETAIL|10 PG_EXCEPTION_HINT|10 PG_EXCEPTION_CONTEXT|10 SQLSTATE SQLERRM|10 SUCCESSFUL_COMPLETION WARNING DYNAMIC_RESULT_SETS_RETURNED IMPLICIT_ZERO_BIT_PADDING NULL_VALUE_ELIMINATED_IN_SET_FUNCTION PRIVILEGE_NOT_GRANTED PRIVILEGE_NOT_REVOKED STRING_DATA_RIGHT_TRUNCATION DEPRECATED_FEATURE NO_DATA NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED SQL_STATEMENT_NOT_YET_COMPLETE CONNECTION_EXCEPTION CONNECTION_DOES_NOT_EXIST CONNECTION_FAILURE SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION TRANSACTION_RESOLUTION_UNKNOWN PROTOCOL_VIOLATION TRIGGERED_ACTION_EXCEPTION FEATURE_NOT_SUPPORTED INVALID_TRANSACTION_INITIATION LOCATOR_EXCEPTION INVALID_LOCATOR_SPECIFICATION INVALID_GRANTOR INVALID_GRANT_OPERATION INVALID_ROLE_SPECIFICATION DIAGNOSTICS_EXCEPTION STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER CASE_NOT_FOUND CARDINALITY_VIOLATION DATA_EXCEPTION ARRAY_SUBSCRIPT_ERROR CHARACTER_NOT_IN_REPERTOIRE DATETIME_FIELD_OVERFLOW DIVISION_BY_ZERO ERROR_IN_ASSIGNMENT ESCAPE_CHARACTER_CONFLICT INDICATOR_OVERFLOW INTERVAL_FIELD_OVERFLOW INVALID_ARGUMENT_FOR_LOGARITHM INVALID_ARGUMENT_FOR_NTILE_FUNCTION INVALID_ARGUMENT_FOR_NTH_VALUE_FUNCTION INVALID_ARGUMENT_FOR_POWER_FUNCTION INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION INVALID_CHARACTER_VALUE_FOR_CAST INVALID_DATETIME_FORMAT INVALID_ESCAPE_CHARACTER INVALID_ESCAPE_OCTET INVALID_ESCAPE_SEQUENCE NONSTANDARD_USE_OF_ESCAPE_CHARACTER INVALID_INDICATOR_PARAMETER_VALUE INVALID_PARAMETER_VALUE INVALID_REGULAR_EXPRESSION INVALID_ROW_COUNT_IN_LIMIT_CLAUSE INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE INVALID_TABLESAMPLE_ARGUMENT INVALID_TABLESAMPLE_REPEAT INVALID_TIME_ZONE_DISPLACEMENT_VALUE INVALID_USE_OF_ESCAPE_CHARACTER MOST_SPECIFIC_TYPE_MISMATCH NULL_VALUE_NOT_ALLOWED NULL_VALUE_NO_INDICATOR_PARAMETER NUMERIC_VALUE_OUT_OF_RANGE SEQUENCE_GENERATOR_LIMIT_EXCEEDED STRING_DATA_LENGTH_MISMATCH STRING_DATA_RIGHT_TRUNCATION SUBSTRING_ERROR TRIM_ERROR UNTERMINATED_C_STRING ZERO_LENGTH_CHARACTER_STRING FLOATING_POINT_EXCEPTION INVALID_TEXT_REPRESENTATION INVALID_BINARY_REPRESENTATION BAD_COPY_FILE_FORMAT UNTRANSLATABLE_CHARACTER NOT_AN_XML_DOCUMENT INVALID_XML_DOCUMENT INVALID_XML_CONTENT INVALID_XML_COMMENT INVALID_XML_PROCESSING_INSTRUCTION INTEGRITY_CONSTRAINT_VIOLATION RESTRICT_VIOLATION NOT_NULL_VIOLATION FOREIGN_KEY_VIOLATION UNIQUE_VIOLATION CHECK_VIOLATION EXCLUSION_VIOLATION INVALID_CURSOR_STATE INVALID_TRANSACTION_STATE ACTIVE_SQL_TRANSACTION BRANCH_TRANSACTION_ALREADY_ACTIVE HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION READ_ONLY_SQL_TRANSACTION SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED NO_ACTIVE_SQL_TRANSACTION IN_FAILED_SQL_TRANSACTION IDLE_IN_TRANSACTION_SESSION_TIMEOUT INVALID_SQL_STATEMENT_NAME TRIGGERED_DATA_CHANGE_VIOLATION INVALID_AUTHORIZATION_SPECIFICATION INVALID_PASSWORD DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST DEPENDENT_OBJECTS_STILL_EXIST INVALID_TRANSACTION_TERMINATION SQL_ROUTINE_EXCEPTION FUNCTION_EXECUTED_NO_RETURN_STATEMENT MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED INVALID_CURSOR_NAME EXTERNAL_ROUTINE_EXCEPTION CONTAINING_SQL_NOT_PERMITTED MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED EXTERNAL_ROUTINE_INVOCATION_EXCEPTION INVALID_SQLSTATE_RETURNED NULL_VALUE_NOT_ALLOWED TRIGGER_PROTOCOL_VIOLATED SRF_PROTOCOL_VIOLATED EVENT_TRIGGER_PROTOCOL_VIOLATED SAVEPOINT_EXCEPTION INVALID_SAVEPOINT_SPECIFICATION INVALID_CATALOG_NAME INVALID_SCHEMA_NAME TRANSACTION_ROLLBACK TRANSACTION_INTEGRITY_CONSTRAINT_VIOLATION SERIALIZATION_FAILURE STATEMENT_COMPLETION_UNKNOWN DEADLOCK_DETECTED SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION SYNTAX_ERROR INSUFFICIENT_PRIVILEGE CANNOT_COERCE GROUPING_ERROR WINDOWING_ERROR INVALID_RECURSION INVALID_FOREIGN_KEY INVALID_NAME NAME_TOO_LONG RESERVED_NAME DATATYPE_MISMATCH INDETERMINATE_DATATYPE COLLATION_MISMATCH INDETERMINATE_COLLATION WRONG_OBJECT_TYPE GENERATED_ALWAYS UNDEFINED_COLUMN UNDEFINED_FUNCTION UNDEFINED_TABLE UNDEFINED_PARAMETER UNDEFINED_OBJECT DUPLICATE_COLUMN DUPLICATE_CURSOR DUPLICATE_DATABASE DUPLICATE_FUNCTION DUPLICATE_PREPARED_STATEMENT DUPLICATE_SCHEMA DUPLICATE_TABLE DUPLICATE_ALIAS DUPLICATE_OBJECT AMBIGUOUS_COLUMN AMBIGUOUS_FUNCTION AMBIGUOUS_PARAMETER AMBIGUOUS_ALIAS INVALID_COLUMN_REFERENCE INVALID_COLUMN_DEFINITION INVALID_CURSOR_DEFINITION INVALID_DATABASE_DEFINITION INVALID_FUNCTION_DEFINITION INVALID_PREPARED_STATEMENT_DEFINITION INVALID_SCHEMA_DEFINITION INVALID_TABLE_DEFINITION INVALID_OBJECT_DEFINITION WITH_CHECK_OPTION_VIOLATION INSUFFICIENT_RESOURCES DISK_FULL OUT_OF_MEMORY TOO_MANY_CONNECTIONS CONFIGURATION_LIMIT_EXCEEDED PROGRAM_LIMIT_EXCEEDED STATEMENT_TOO_COMPLEX TOO_MANY_COLUMNS TOO_MANY_ARGUMENTS OBJECT_NOT_IN_PREREQUISITE_STATE OBJECT_IN_USE CANT_CHANGE_RUNTIME_PARAM LOCK_NOT_AVAILABLE OPERATOR_INTERVENTION QUERY_CANCELED ADMIN_SHUTDOWN CRASH_SHUTDOWN CANNOT_CONNECT_NOW DATABASE_DROPPED SYSTEM_ERROR IO_ERROR UNDEFINED_FILE DUPLICATE_FILE SNAPSHOT_TOO_OLD CONFIG_FILE_ERROR LOCK_FILE_EXISTS FDW_ERROR FDW_COLUMN_NAME_NOT_FOUND FDW_DYNAMIC_PARAMETER_VALUE_NEEDED FDW_FUNCTION_SEQUENCE_ERROR FDW_INCONSISTENT_DESCRIPTOR_INFORMATION FDW_INVALID_ATTRIBUTE_VALUE FDW_INVALID_COLUMN_NAME FDW_INVALID_COLUMN_NUMBER FDW_INVALID_DATA_TYPE FDW_INVALID_DATA_TYPE_DESCRIPTORS FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER FDW_INVALID_HANDLE FDW_INVALID_OPTION_INDEX FDW_INVALID_OPTION_NAME FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH FDW_INVALID_STRING_FORMAT FDW_INVALID_USE_OF_NULL_POINTER FDW_TOO_MANY_HANDLES FDW_OUT_OF_MEMORY FDW_NO_SCHEMAS FDW_OPTION_NAME_NOT_FOUND FDW_REPLY_HANDLE FDW_SCHEMA_NOT_FOUND FDW_TABLE_NOT_FOUND FDW_UNABLE_TO_CREATE_EXECUTION FDW_UNABLE_TO_CREATE_REPLY FDW_UNABLE_TO_ESTABLISH_CONNECTION PLPGSQL_ERROR RAISE_EXCEPTION NO_DATA_FOUND TOO_MANY_ROWS ASSERT_FAILURE INTERNAL_ERROR DATA_CORRUPTED INDEX_CORRUPTED "},illegal:/:==|\W\s*\(\*|(^|\s)\$[a-z]|\{\{|[a-z]:\s*$|\.\.\.|TO:|DO:/,contains:[{className:"keyword",variants:[{begin:/\bTEXT\s*SEARCH\b/},{begin:/\b(PRIMARY|FOREIGN|FOR(\s+NO)?)\s+KEY\b/},{begin:/\bPARALLEL\s+(UNSAFE|RESTRICTED|SAFE)\b/},{begin:/\bSTORAGE\s+(PLAIN|EXTERNAL|EXTENDED|MAIN)\b/},{begin:/\bMATCH\s+(FULL|PARTIAL|SIMPLE)\b/},{begin:/\bNULLS\s+(FIRST|LAST)\b/},{begin:/\bEVENT\s+TRIGGER\b/},{begin:/\b(MAPPING|OR)\s+REPLACE\b/},{begin:/\b(FROM|TO)\s+(PROGRAM|STDIN|STDOUT)\b/},{begin:/\b(SHARE|EXCLUSIVE)\s+MODE\b/},{begin:/\b(LEFT|RIGHT)\s+(OUTER\s+)?JOIN\b/},{begin:/\b(FETCH|MOVE)\s+(NEXT|PRIOR|FIRST|LAST|ABSOLUTE|RELATIVE|FORWARD|BACKWARD)\b/},{begin:/\bPRESERVE\s+ROWS\b/},{begin:/\bDISCARD\s+PLANS\b/},{begin:/\bREFERENCING\s+(OLD|NEW)\b/},{begin:/\bSKIP\s+LOCKED\b/},{begin:/\bGROUPING\s+SETS\b/},{begin:/\b(BINARY|INSENSITIVE|SCROLL|NO\s+SCROLL)\s+(CURSOR|FOR)\b/},{begin:/\b(WITH|WITHOUT)\s+HOLD\b/},{begin:/\bWITH\s+(CASCADED|LOCAL)\s+CHECK\s+OPTION\b/},{begin:/\bEXCLUDE\s+(TIES|NO\s+OTHERS)\b/},{begin:/\bFORMAT\s+(TEXT|XML|JSON|YAML)\b/},{begin:/\bSET\s+((SESSION|LOCAL)\s+)?NAMES\b/},{begin:/\bIS\s+(NOT\s+)?UNKNOWN\b/},{begin:/\bSECURITY\s+LABEL\b/},{begin:/\bSTANDALONE\s+(YES|NO|NO\s+VALUE)\b/},{begin:/\bWITH\s+(NO\s+)?DATA\b/},{begin:/\b(FOREIGN|SET)\s+DATA\b/},{begin:/\bSET\s+(CATALOG|CONSTRAINTS)\b/},{begin:/\b(WITH|FOR)\s+ORDINALITY\b/},{begin:/\bIS\s+(NOT\s+)?DOCUMENT\b/},{begin:/\bXML\s+OPTION\s+(DOCUMENT|CONTENT)\b/},{begin:/\b(STRIP|PRESERVE)\s+WHITESPACE\b/},{begin:/\bNO\s+(ACTION|MAXVALUE|MINVALUE)\b/},{begin:/\bPARTITION\s+BY\s+(RANGE|LIST|HASH)\b/},{begin:/\bAT\s+TIME\s+ZONE\b/},{begin:/\bGRANTED\s+BY\b/},{begin:/\bRETURN\s+(QUERY|NEXT)\b/},{begin:/\b(ATTACH|DETACH)\s+PARTITION\b/},{begin:/\bFORCE\s+ROW\s+LEVEL\s+SECURITY\b/},{begin:/\b(INCLUDING|EXCLUDING)\s+(COMMENTS|CONSTRAINTS|DEFAULTS|IDENTITY|INDEXES|STATISTICS|STORAGE|ALL)\b/},{begin:/\bAS\s+(ASSIGNMENT|IMPLICIT|PERMISSIVE|RESTRICTIVE|ENUM|RANGE)\b/}]},{begin:/\b(FORMAT|FAMILY|VERSION)\s*\(/},{begin:/\bINCLUDE\s*\(/,keywords:"INCLUDE"},{begin:/\bRANGE(?!\s*(BETWEEN|UNBOUNDED|CURRENT|[-0-9]+))/},{begin:/\b(VERSION|OWNER|TEMPLATE|TABLESPACE|CONNECTION\s+LIMIT|PROCEDURE|RESTRICT|JOIN|PARSER|COPY|START|END|COLLATION|INPUT|ANALYZE|STORAGE|LIKE|DEFAULT|DELIMITER|ENCODING|COLUMN|CONSTRAINT|TABLE|SCHEMA)\s*=/},{begin:/\b(PG_\w+?|HAS_[A-Z_]+_PRIVILEGE)\b/,relevance:10},{begin:/\bEXTRACT\s*\(/,end:/\bFROM\b/,returnEnd:!0,keywords:{type:"CENTURY DAY DECADE DOW DOY EPOCH HOUR ISODOW ISOYEAR MICROSECONDS MILLENNIUM MILLISECONDS MINUTE MONTH QUARTER SECOND TIMEZONE TIMEZONE_HOUR TIMEZONE_MINUTE WEEK YEAR"}},{begin:/\b(XMLELEMENT|XMLPI)\s*\(\s*NAME/,keywords:{keyword:"NAME"}},{begin:/\b(XMLPARSE|XMLSERIALIZE)\s*\(\s*(DOCUMENT|CONTENT)/,keywords:{keyword:"DOCUMENT CONTENT"}},{beginKeywords:"CACHE INCREMENT MAXVALUE MINVALUE",end:e.C_NUMBER_RE,returnEnd:!0,keywords:"BY CACHE INCREMENT MAXVALUE MINVALUE"},{className:"type",begin:/\b(WITH|WITHOUT)\s+TIME\s+ZONE\b/},{className:"type",begin:/\bINTERVAL\s+(YEAR|MONTH|DAY|HOUR|MINUTE|SECOND)(\s+TO\s+(MONTH|HOUR|MINUTE|SECOND))?\b/},{begin:/\bRETURNS\s+(LANGUAGE_HANDLER|TRIGGER|EVENT_TRIGGER|FDW_HANDLER|INDEX_AM_HANDLER|TSM_HANDLER)\b/,keywords:{keyword:"RETURNS",type:"LANGUAGE_HANDLER TRIGGER EVENT_TRIGGER FDW_HANDLER INDEX_AM_HANDLER TSM_HANDLER"}},{begin:"\\b("+i+")\\s*\\("},{begin:"\\.("+s+")\\b"},{begin:"\\b("+s+")\\s+PATH\\b",keywords:{keyword:"PATH",type:a.replace("PATH ","")}},{className:"type",begin:"\\b("+s+")\\b"},{className:"string",begin:"'",end:"'",contains:[{begin:"''"}]},{className:"string",begin:"(e|E|u&|U&)'",end:"'",contains:[{begin:"\\\\."}],relevance:10},e.END_SAME_AS_BEGIN({begin:n,end:n,contains:[{subLanguage:["pgsql","perl","python","tcl","r","lua","java","php","ruby","bash","scheme","xml","json"],endsWithParent:!0}]}),{begin:'"',end:'"',contains:[{begin:'""'}]},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,{className:"meta",variants:[{begin:"%(ROW)?TYPE",relevance:10},{begin:"\\$\\d+"},{begin:"^#\\w",end:"$"}]},{className:"symbol",begin:"<<\\s*[a-zA-Z_][a-zA-Z_0-9$]*\\s*>>",relevance:10}]}}},2638:function(e){e.exports=function(e){return{name:"PHP template",subLanguage:"xml",contains:[{begin:/<\?(php|=)?/,end:/\?>/,subLanguage:"php",contains:[{begin:"/\\*",end:"\\*/",skip:!0},{begin:'b"',end:'"',skip:!0},{begin:"b'",end:"'",skip:!0},e.inherit(e.APOS_STRING_MODE,{illegal:null,className:null,contains:null,skip:!0}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null,className:null,contains:null,skip:!0})]}]}}},3610:function(e){e.exports=function(e){var t={className:"variable",begin:"\\$+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*(?![A-Za-z0-9])(?![$])"},n={className:"meta",variants:[{begin:/<\?php/,relevance:10},{begin:/<\?[=]?/},{begin:/\?>/}]},a={className:"subst",variants:[{begin:/\$\w+/},{begin:/\{\$/,end:/\}/}]},s=e.inherit(e.APOS_STRING_MODE,{illegal:null}),i=e.inherit(e.QUOTE_STRING_MODE,{illegal:null,contains:e.QUOTE_STRING_MODE.contains.concat(a)}),r=e.END_SAME_AS_BEGIN({begin:/<<<[ \t]*(\w+)\n/,end:/[ \t]*(\w+)\b/,contains:e.QUOTE_STRING_MODE.contains.concat(a)}),o={className:"string",contains:[e.BACKSLASH_ESCAPE,n],variants:[e.inherit(s,{begin:"b'",end:"'"}),e.inherit(i,{begin:'b"',end:'"'}),i,s,r]},l={className:"number",variants:[{begin:"\\b0b[01]+(?:_[01]+)*\\b"},{begin:"\\b0o[0-7]+(?:_[0-7]+)*\\b"},{begin:"\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b"},{begin:"(?:\\b\\d+(?:_\\d+)*(\\.(?:\\d+(?:_\\d+)*))?|\\B\\.\\d+)(?:e[+-]?\\d+)?"}],relevance:0},c={keyword:"__CLASS__ __DIR__ __FILE__ __FUNCTION__ __LINE__ __METHOD__ __NAMESPACE__ __TRAIT__ die echo exit include include_once print require require_once array abstract and as binary bool boolean break callable case catch class clone const continue declare default do double else elseif empty enddeclare endfor endforeach endif endswitch endwhile enum eval extends final finally float for foreach from global goto if implements instanceof insteadof int integer interface isset iterable list match|0 mixed new object or private protected public real return string switch throw trait try unset use var void while xor yield",literal:"false null true",built_in:"Error|0 AppendIterator ArgumentCountError ArithmeticError ArrayIterator ArrayObject AssertionError BadFunctionCallException BadMethodCallException CachingIterator CallbackFilterIterator CompileError Countable DirectoryIterator DivisionByZeroError DomainException EmptyIterator ErrorException Exception FilesystemIterator FilterIterator GlobIterator InfiniteIterator InvalidArgumentException IteratorIterator LengthException LimitIterator LogicException MultipleIterator NoRewindIterator OutOfBoundsException OutOfRangeException OuterIterator OverflowException ParentIterator ParseError RangeException RecursiveArrayIterator RecursiveCachingIterator RecursiveCallbackFilterIterator RecursiveDirectoryIterator RecursiveFilterIterator RecursiveIterator RecursiveIteratorIterator RecursiveRegexIterator RecursiveTreeIterator RegexIterator RuntimeException SeekableIterator SplDoublyLinkedList SplFileInfo SplFileObject SplFixedArray SplHeap SplMaxHeap SplMinHeap SplObjectStorage SplObserver SplObserver SplPriorityQueue SplQueue SplStack SplSubject SplSubject SplTempFileObject TypeError UnderflowException UnexpectedValueException UnhandledMatchError ArrayAccess Closure Generator Iterator IteratorAggregate Serializable Stringable Throwable Traversable WeakReference WeakMap Directory __PHP_Incomplete_Class parent php_user_filter self static stdClass"};return{aliases:["php3","php4","php5","php6","php7","php8"],case_insensitive:!0,keywords:c,contains:[e.HASH_COMMENT_MODE,e.COMMENT("//","$",{contains:[n]}),e.COMMENT("/\\*","\\*/",{contains:[{className:"doctag",begin:"@[A-Za-z]+"}]}),e.COMMENT("__halt_compiler.+?;",!1,{endsWithParent:!0,keywords:"__halt_compiler"}),n,{className:"keyword",begin:/\$this\b/},t,{begin:/(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},{className:"function",relevance:0,beginKeywords:"fn function",end:/[;{]/,excludeEnd:!0,illegal:"[$%\\[]",contains:[{beginKeywords:"use"},e.UNDERSCORE_TITLE_MODE,{begin:"=>",endsParent:!0},{className:"params",begin:"\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0,keywords:c,contains:["self",t,e.C_BLOCK_COMMENT_MODE,o,l]}]},{className:"class",variants:[{beginKeywords:"enum",illegal:/[($"]/},{beginKeywords:"class interface trait",illegal:/[:($"]/}],relevance:0,end:/\{/,excludeEnd:!0,contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{beginKeywords:"namespace",relevance:0,end:";",illegal:/[.']/,contains:[e.UNDERSCORE_TITLE_MODE]},{beginKeywords:"use",relevance:0,end:";",contains:[e.UNDERSCORE_TITLE_MODE]},o,l]}}},7721:function(e){e.exports=function(e){return{name:"Plain text",aliases:["text","txt"],disableAutodetect:!0}}},7524:function(e){e.exports=function(e){return{name:"Pony",keywords:{keyword:"actor addressof and as be break class compile_error compile_intrinsic consume continue delegate digestof do else elseif embed end error for fun if ifdef in interface is isnt lambda let match new not object or primitive recover repeat return struct then trait try type until use var where while with xor",meta:"iso val tag trn box ref",literal:"this false true"},contains:[{className:"type",begin:"\\b_?[A-Z][\\w]*",relevance:0},{className:"string",begin:'"""',end:'"""',relevance:10},{className:"string",begin:'"',end:'"',contains:[e.BACKSLASH_ESCAPE]},{className:"string",begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE],relevance:0},{begin:e.IDENT_RE+"'",relevance:0},{className:"number",begin:"(-?)(\\b0[xX][a-fA-F0-9]+|\\b0[bB][01]+|(\\b\\d+(_\\d+)?(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",relevance:0},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]}}},601:function(e){e.exports=function(e){var t={$pattern:/-?[A-z\.\-]+\b/,keyword:"if else foreach return do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch hidden static parameter",built_in:"ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write"},n={begin:"`[\\s\\S]",relevance:0},a={className:"variable",variants:[{begin:/\$\B/},{className:"keyword",begin:/\$this/},{begin:/\$[\w\d][\w\d_:]*/}]},s={className:"string",variants:[{begin:/"/,end:/"/},{begin:/@"/,end:/^"@/}],contains:[n,a,{className:"variable",begin:/\$[A-z]/,end:/[^A-z]/}]},i={className:"string",variants:[{begin:/'/,end:/'/},{begin:/@'/,end:/^'@/}]},r=e.inherit(e.COMMENT(null,null),{variants:[{begin:/#/,end:/$/},{begin:/<#/,end:/#>/}],contains:[{className:"doctag",variants:[{begin:/\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/},{begin:/\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\s+\S+/}]}]}),o={className:"built_in",variants:[{begin:"(".concat("Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|Unprotect|Use|ForEach|Sort|Tee|Where",")+(-)[\\w\\d]+")}]},l={className:"class",beginKeywords:"class enum",end:/\s*[{]/,excludeEnd:!0,relevance:0,contains:[e.TITLE_MODE]},c={className:"function",begin:/function\s+/,end:/\s*\{|$/,excludeEnd:!0,returnBegin:!0,relevance:0,contains:[{begin:"function",relevance:0,className:"keyword"},{className:"title",begin:/\w[\w\d]*((-)[\w\d]+)*/,relevance:0},{begin:/\(/,end:/\)/,className:"params",relevance:0,contains:[a]}]},d={begin:/using\s/,end:/$/,returnBegin:!0,contains:[s,i,{className:"keyword",begin:/(using|assembly|command|module|namespace|type)/}]},u={variants:[{className:"operator",begin:"(".concat("-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|-split|-wildcard|-xor",")\\b")},{className:"literal",begin:/(-)[\w\d]+/,relevance:0}]},p={className:"function",begin:/\[.*\]\s*[\w]+[ ]??\(/,end:/$/,returnBegin:!0,relevance:0,contains:[{className:"keyword",begin:"(".concat(t.keyword.toString().replace(/\s/g,"|"),")\\b"),endsParent:!0,relevance:0},e.inherit(e.TITLE_MODE,{endsParent:!0})]},m=[p,r,n,e.NUMBER_MODE,s,i,o,a,{className:"literal",begin:/\$(null|true|false)\b/},{className:"selector-tag",begin:/@\B/,relevance:0}],h={begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0,relevance:0,contains:[].concat("self",m,{begin:"("+["string","char","byte","int","long","bool","decimal","single","double","DateTime","xml","array","hashtable","void"].join("|")+")",className:"built_in",relevance:0},{className:"type",begin:/[\.\w\d]+/,relevance:0})};return p.contains.unshift(h),{name:"PowerShell",aliases:["ps","ps1"],case_insensitive:!0,keywords:t,contains:m.concat(l,c,d,u,h)}}},7670:function(e){e.exports=function(e){return{name:"Processing",keywords:{keyword:"BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject Object StringDict StringList Table TableRow XML false synchronized int abstract float private char boolean static null if const for true while long throw strictfp finally protected import native final return void enum else break transient new catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private",literal:"P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI",title:"setup draw",built_in:"displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key keyCode pixels focused frameCount frameRate height width size createGraphics beginDraw createShape loadShape PShape arc ellipse line point quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour millis minute month second year background clear colorMode fill noFill noStroke stroke alpha blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE]}}},7568:function(e){e.exports=function(e){return{name:"Python profiler",contains:[e.C_NUMBER_MODE,{begin:"[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}",end:":",excludeEnd:!0},{begin:"(ncalls|tottime|cumtime)",end:"$",keywords:"ncalls tottime|10 cumtime|10 filename",relevance:10},{begin:"function calls",end:"$",contains:[e.C_NUMBER_MODE],relevance:10},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"string",begin:"\\(",end:"\\)$",excludeBegin:!0,excludeEnd:!0,relevance:0}]}}},696:function(e){e.exports=function(e){var t={begin:/\(/,end:/\)/,relevance:0},n={begin:/\[/,end:/\]/},a={className:"comment",begin:/%/,end:/$/,contains:[e.PHRASAL_WORDS_MODE]},s={className:"string",begin:/`/,end:/`/,contains:[e.BACKSLASH_ESCAPE]},i=[{begin:/[a-z][A-Za-z0-9_]*/,relevance:0},{className:"symbol",variants:[{begin:/[A-Z][a-zA-Z0-9_]*/},{begin:/_[A-Za-z0-9_]*/}],relevance:0},t,{begin:/:-/},n,a,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,s,{className:"string",begin:/0'(\\'|.)/},{className:"string",begin:/0'\\s/},e.C_NUMBER_MODE];return t.contains=i,n.contains=i,{name:"Prolog",contains:i.concat([{begin:/\.$/}])}}},4450:function(e){e.exports=function(e){var t="[ \\t\\f]*",n=t+"[:=]"+t,a="[ \\t\\f]+",s="("+n+"|"+a+")",i="([^\\\\\\W:= \\t\\f\\n]|\\\\.)+",r="([^\\\\:= \\t\\f\\n]|\\\\.)+",o={end:s,relevance:0,starts:{className:"string",end:/$/,relevance:0,contains:[{begin:"\\\\\\\\"},{begin:"\\\\\\n"}]}};return{name:".properties",case_insensitive:!0,illegal:/\S/,contains:[e.COMMENT("^\\s*[!#]","$"),{returnBegin:!0,variants:[{begin:i+n,relevance:1},{begin:i+a,relevance:0}],contains:[{className:"attr",begin:i,endsParent:!0,relevance:0}],starts:o},{begin:r+s,returnBegin:!0,relevance:0,contains:[{className:"meta",begin:r,endsParent:!0,relevance:0}],starts:o},{className:"attr",relevance:0,begin:r+t+"$"}]}}},8513:function(e){e.exports=function(e){return{name:"Protocol Buffers",keywords:{keyword:"package import option optional required repeated group oneof",built_in:"double float int32 int64 uint32 uint64 sint32 sint64 fixed32 fixed64 sfixed32 sfixed64 bool string bytes",literal:"true false"},contains:[e.QUOTE_STRING_MODE,e.NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"class",beginKeywords:"message enum service",end:/\{/,illegal:/\n/,contains:[e.inherit(e.TITLE_MODE,{starts:{endsWithParent:!0,excludeEnd:!0}})]},{className:"function",beginKeywords:"rpc",end:/[{;]/,excludeEnd:!0,keywords:"rpc returns"},{begin:/^\s*[A-Z_]+(?=\s*=[^\n]+;$)/}]}}},4146:function(e){e.exports=function(e){var t=e.COMMENT("#","$"),n="([A-Za-z_]|::)(\\w|::)*",a=e.inherit(e.TITLE_MODE,{begin:n}),s={className:"variable",begin:"\\$"+n},i={className:"string",contains:[e.BACKSLASH_ESCAPE,s],variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/}]};return{name:"Puppet",aliases:["pp"],contains:[t,s,i,{beginKeywords:"class",end:"\\{|;",illegal:/=/,contains:[a,t]},{beginKeywords:"define",end:/\{/,contains:[{className:"section",begin:e.IDENT_RE,endsParent:!0}]},{begin:e.IDENT_RE+"\\s+\\{",returnBegin:!0,end:/\S/,contains:[{className:"keyword",begin:e.IDENT_RE},{begin:/\{/,end:/\}/,keywords:{keyword:"and case default else elsif false if in import enherits node or true undef unless main settings $string ",literal:"alias audit before loglevel noop require subscribe tag owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check en_address ip_address realname command environment hour monute month monthday special target weekday creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey sslverify mounted",built_in:"architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version"},relevance:0,contains:[i,t,{begin:"[a-zA-Z_]+\\s*=>",returnBegin:!0,end:"=>",contains:[{className:"attr",begin:e.IDENT_RE}]},{className:"number",begin:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",relevance:0},s]}],relevance:0}]}}},7215:function(e){e.exports=function(e){return{name:"PureBASIC",aliases:["pb","pbi"],keywords:"Align And Array As Break CallDebugger Case CompilerCase CompilerDefault CompilerElse CompilerElseIf CompilerEndIf CompilerEndSelect CompilerError CompilerIf CompilerSelect CompilerWarning Continue Data DataSection Debug DebugLevel Declare DeclareC DeclareCDLL DeclareDLL DeclareModule Default Define Dim DisableASM DisableDebugger DisableExplicit Else ElseIf EnableASM EnableDebugger EnableExplicit End EndDataSection EndDeclareModule EndEnumeration EndIf EndImport EndInterface EndMacro EndModule EndProcedure EndSelect EndStructure EndStructureUnion EndWith Enumeration EnumerationBinary Extends FakeReturn For ForEach ForEver Global Gosub Goto If Import ImportC IncludeBinary IncludeFile IncludePath Interface List Macro MacroExpandedCount Map Module NewList NewMap Next Not Or Procedure ProcedureC ProcedureCDLL ProcedureDLL ProcedureReturn Protected Prototype PrototypeC ReDim Read Repeat Restore Return Runtime Select Shared Static Step Structure StructureUnion Swap Threaded To UndefineMacro Until Until  UnuseModule UseModule Wend While With XIncludeFile XOr",contains:[e.COMMENT(";","$",{relevance:0}),{className:"function",begin:"\\b(Procedure|Declare)(C|CDLL|DLL)?\\b",end:"\\(",excludeEnd:!0,returnBegin:!0,contains:[{className:"keyword",begin:"(Procedure|Declare)(C|CDLL|DLL)?",excludeEnd:!0},{className:"type",begin:"\\.\\w*"},e.UNDERSCORE_TITLE_MODE]},{className:"string",begin:'(~)?"',end:'"',illegal:"\\n"},{className:"symbol",begin:"#[a-zA-Z_]\\w*\\$?"}]}}},2888:function(e){e.exports=function(e){return{aliases:["pycon"],contains:[{className:"meta",starts:{end:/ |$/,starts:{end:"$",subLanguage:"python"}},variants:[{begin:/^>>>(?=[ ]|$)/},{begin:/^\.\.\.(?=[ ]|$)/}]}]}}},5609:function(e){function t(e){return function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return function(e){return e?"string"===typeof e?e:e.source:null}(e)})).join("")}("(?=",e,")")}e.exports=function(e){var n={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:["and","as","assert","async","await","break","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","is","lambda","nonlocal|10","not","or","pass","raise","return","try","while","with","yield"],built_in:["__import__","abs","all","any","ascii","bin","bool","breakpoint","bytearray","bytes","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","exec","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","print","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"],literal:["__debug__","Ellipsis","False","None","NotImplemented","True"],type:["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"]},a={className:"meta",begin:/^(>>>|\.\.\.) /},s={className:"subst",begin:/\{/,end:/\}/,keywords:n,illegal:/#/},i={begin:/\{\{/,relevance:0},r={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,a],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,a],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,a,i,s]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,a,i,s]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[e.BACKSLASH_ESCAPE,i,s]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,i,s]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},o="[0-9](_?[0-9])*",l="(\\b(".concat(o,"))?\\.(").concat(o,")|\\b(").concat(o,")\\."),c={className:"number",relevance:0,variants:[{begin:"(\\b(".concat(o,")|(").concat(l,"))[eE][+-]?(").concat(o,")[jJ]?\\b")},{begin:"(".concat(l,")[jJ]?")},{begin:"\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?\\b"},{begin:"\\b0[bB](_?[01])+[lL]?\\b"},{begin:"\\b0[oO](_?[0-7])+[lL]?\\b"},{begin:"\\b0[xX](_?[0-9a-fA-F])+[lL]?\\b"},{begin:"\\b(".concat(o,")[jJ]\\b")}]},d={className:"comment",begin:t(/# type:/),end:/$/,keywords:n,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:!0}]},u={className:"params",variants:[{className:"",begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,contains:["self",a,c,r,e.HASH_COMMENT_MODE]}]};return s.contains=[r,c,a],{name:"Python",aliases:["py","gyp","ipython"],keywords:n,illegal:/(<\/|->|\?)|=>/,contains:[a,c,{begin:/\bself\b/},{beginKeywords:"if",relevance:0},r,d,e.HASH_COMMENT_MODE,{variants:[{className:"function",beginKeywords:"def"},{className:"class",beginKeywords:"class"}],end:/:/,illegal:/[${=;\n,]/,contains:[e.UNDERSCORE_TITLE_MODE,u,{begin:/->/,endsWithParent:!0,keywords:n}]},{className:"meta",begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[c,u,r]}]}}},4754:function(e){e.exports=function(e){return{name:"Q",aliases:["k","kdb"],keywords:{$pattern:/(`?)[A-Za-z0-9_]+\b/,keyword:"do while select delete by update from",literal:"0b 1b",built_in:"neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum",type:"`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid"},contains:[e.C_LINE_COMMENT_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE]}}},1687:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n="[a-zA-Z_][a-zA-Z0-9\\._]*",a={className:"attribute",begin:"\\bid\\s*:",starts:{className:"string",end:n,returnEnd:!1}},s={begin:n+"\\s*:",returnBegin:!0,contains:[{className:"attribute",begin:n,end:"\\s*:",excludeEnd:!0,relevance:0}],relevance:0},i={begin:t(n,/\s*\{/),end:/\{/,returnBegin:!0,relevance:0,contains:[e.inherit(e.TITLE_MODE,{begin:n})]};return{name:"QML",aliases:["qt"],case_insensitive:!1,keywords:{keyword:"in of on if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await import",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Behavior bool color coordinate date double enumeration font geocircle georectangle geoshape int list matrix4x4 parent point quaternion real rect size string url variant vector2d vector3d vector4d Promise"},contains:[{className:"meta",begin:/^\s*['"]use (strict|asm)['"]/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,{className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE,{className:"subst",begin:"\\$\\{",end:"\\}"}]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"number",variants:[{begin:"\\b(0[bB][01]+)"},{begin:"\\b(0[oO][0-7]+)"},{begin:e.C_NUMBER_RE}],relevance:0},{begin:"("+e.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.REGEXP_MODE,{begin:/</,end:/>\s*[);\]]/,relevance:0,subLanguage:"xml"}],relevance:0},{className:"keyword",begin:"\\bsignal\\b",starts:{className:"string",end:"(\\(|:|=|;|,|//|/\\*|$)",returnEnd:!0}},{className:"keyword",begin:"\\bproperty\\b",starts:{className:"string",end:"(:|=|;|,|//|/\\*|$)",returnEnd:!0}},{className:"function",beginKeywords:"function",end:/\{/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:/[A-Za-z$_][0-9A-Za-z$_]*/}),{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]}],illegal:/\[|%/},{begin:"\\."+e.IDENT_RE,relevance:0},a,s,i],illegal:/#/}}},7191:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n=/(?:(?:[a-zA-Z]|\.[._a-zA-Z])[._a-zA-Z0-9]*)|\.(?!\d)/;return{name:"R",illegal:/->/,keywords:{$pattern:n,keyword:"function if in break next repeat else for while",literal:"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10",built_in:"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm"},compilerExtensions:[function(e,n){if(e.beforeMatch){if(e.starts)throw new Error("beforeMatch cannot be used with starts");var a=Object.assign({},e);Object.keys(e).forEach((function(t){delete e[t]})),e.begin=t(a.beforeMatch,t("(?=",a.begin,")")),e.starts={relevance:0,contains:[Object.assign(a,{endsParent:!0})]},e.relevance=0,delete a.beforeMatch}}],contains:[e.COMMENT(/#'/,/$/,{contains:[{className:"doctag",begin:"@examples",starts:{contains:[{begin:/\n/},{begin:/#'\s*(?=@[a-zA-Z]+)/,endsParent:!0},{begin:/#'/,end:/$/,excludeBegin:!0}]}},{className:"doctag",begin:"@param",end:/$/,contains:[{className:"variable",variants:[{begin:n},{begin:/`(?:\\.|[^`\\])+`/}],endsParent:!0}]},{className:"doctag",begin:/@[a-zA-Z]+/},{className:"meta-keyword",begin:/\\[a-zA-Z]+/}]}),e.HASH_COMMENT_MODE,{className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\(/,end:/\)(-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\{/,end:/\}(-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\[/,end:/\](-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\(/,end:/\)(-*)'/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\{/,end:/\}(-*)'/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\[/,end:/\](-*)'/}),{begin:'"',end:'"',relevance:0},{begin:"'",end:"'",relevance:0}]},{className:"number",relevance:0,beforeMatch:/([^a-zA-Z0-9._])/,variants:[{match:/0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/},{match:/0[xX][0-9a-fA-F]+([pP][+-]?\d+)?[Li]?/},{match:/(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?[Li]?/}]},{begin:"%",end:"%"},{begin:t(/[a-zA-Z][a-zA-Z_0-9]*/,"\\s+<-\\s+")},{begin:"`",end:"`",contains:[{begin:/\\./}]}]}}},8670:function(e){e.exports=function(e){var t="~?[a-z$_][0-9a-zA-Z$_]*",n="`?[A-Z$_][0-9a-zA-Z$_]*",a="'?[a-z$_][0-9a-z$_]*",s=t+"("+("\\s*:\\s*[a-z$_][0-9a-z$_]*(\\(\\s*("+a+"\\s*(,"+a+"\\s*)*)?\\))?")+"){0,2}",i="("+(["||","++","**","+.","*","/","*.","/.","..."].map((function(e){return e.split("").map((function(e){return"\\"+e})).join("")})).join("|")+"|\\|>|&&|==|===)"),r="\\s+"+i+"\\s+",o={keyword:"and as asr assert begin class constraint do done downto else end exception external for fun function functor if in include inherit initializer land lazy let lor lsl lsr lxor match method mod module mutable new nonrec object of open or private rec sig struct then to try type val virtual when while with",built_in:"array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ",literal:"true false"},l="\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",c={className:"number",relevance:0,variants:[{begin:l},{begin:"\\(-"+l+"\\)"}]},d={className:"operator",relevance:0,begin:i},u=[{className:"identifier",relevance:0,begin:t},d,c],p=[e.QUOTE_STRING_MODE,d,{className:"module",begin:"\\b"+n,returnBegin:!0,end:".",contains:[{className:"identifier",begin:n,relevance:0}]}],m=[{className:"module",begin:"\\b"+n,returnBegin:!0,end:".",relevance:0,contains:[{className:"identifier",begin:n,relevance:0}]}],h={className:"function",relevance:0,keywords:o,variants:[{begin:"\\s(\\(\\.?.*?\\)|"+t+")\\s*=>",end:"\\s*=>",returnBegin:!0,relevance:0,contains:[{className:"params",variants:[{begin:t},{begin:s},{begin:/\(\s*\)/}]}]},{begin:"\\s\\(\\.?[^;\\|]*\\)\\s*=>",end:"\\s=>",returnBegin:!0,relevance:0,contains:[{className:"params",relevance:0,variants:[{begin:t,end:"(,|\\n|\\))",relevance:0,contains:[d,{className:"typing",begin:":",end:"(,|\\n)",returnBegin:!0,relevance:0,contains:m}]}]}]},{begin:"\\(\\.\\s"+t+"\\)\\s*=>"}]};p.push(h);var f={className:"constructor",begin:n+"\\(",end:"\\)",illegal:"\\n",keywords:o,contains:[e.QUOTE_STRING_MODE,d,{className:"params",begin:"\\b"+t}]},g={className:"pattern-match",begin:"\\|",returnBegin:!0,keywords:o,end:"=>",relevance:0,contains:[f,d,{relevance:0,className:"constructor",begin:n}]},x={className:"module-access",keywords:o,returnBegin:!0,variants:[{begin:"\\b("+n+"\\.)+"+t},{begin:"\\b("+n+"\\.)+\\(",end:"\\)",returnBegin:!0,contains:[h,{begin:"\\(",end:"\\)",skip:!0}].concat(p)},{begin:"\\b("+n+"\\.)+\\{",end:/\}/}],contains:p};return m.push(x),{name:"ReasonML",aliases:["re"],keywords:o,illegal:"(:-|:=|\\$\\{|\\+=)",contains:[e.COMMENT("/\\*","\\*/",{illegal:"^(#,\\/\\/)"}),{className:"character",begin:"'(\\\\[^']+|[^'])'",illegal:"\\n",relevance:0},e.QUOTE_STRING_MODE,{className:"literal",begin:"\\(\\)",relevance:0},{className:"literal",begin:"\\[\\|",end:"\\|\\]",relevance:0,contains:u},{className:"literal",begin:"\\[",end:"\\]",relevance:0,contains:u},f,{className:"operator",begin:r,illegal:"--\x3e",relevance:0},c,e.C_LINE_COMMENT_MODE,g,h,{className:"module-def",begin:"\\bmodule\\s+"+t+"\\s+"+n+"\\s+=\\s+\\{",end:/\}/,returnBegin:!0,keywords:o,relevance:0,contains:[{className:"module",relevance:0,begin:n},{begin:/\{/,end:/\}/,skip:!0}].concat(p)},x]}}},5649:function(e){e.exports=function(e){return{name:"RenderMan RIB",keywords:"ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry Hider Hyperboloid Identity Illuminate Imager Interior LightSource MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd TransformPoints Translate TrimCurve WorldBegin WorldEnd",illegal:"</",contains:[e.HASH_COMMENT_MODE,e.C_NUMBER_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}}},8624:function(e){e.exports=function(e){var t="[a-zA-Z-_][^\\n{]+\\{",n={className:"attribute",begin:/[a-zA-Z-_]+/,end:/\s*:/,excludeEnd:!0,starts:{end:";",relevance:0,contains:[{className:"variable",begin:/\.[a-zA-Z-_]+/},{className:"keyword",begin:/\(optional\)/}]}};return{name:"Roboconf",aliases:["graph","instances"],case_insensitive:!0,keywords:"import",contains:[{begin:"^facet "+t,end:/\}/,keywords:"facet",contains:[n,e.HASH_COMMENT_MODE]},{begin:"^\\s*instance of "+t,end:/\}/,keywords:"name count channels instance-data instance-state instance of",illegal:/\S/,contains:["self",n,e.HASH_COMMENT_MODE]},{begin:"^"+t,end:/\}/,contains:[n,e.HASH_COMMENT_MODE]},e.HASH_COMMENT_MODE]}}},2965:function(e){e.exports=function(e){var t="foreach do while for if from to step else on-error and or not in",n="true false yes no nothing nil null",a={className:"variable",variants:[{begin:/\$[\w\d#@][\w\d_]*/},{begin:/\$\{(.*?)\}/}]},s={className:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,a,{className:"variable",begin:/\$\(/,end:/\)/,contains:[e.BACKSLASH_ESCAPE]}]},i={className:"string",begin:/'/,end:/'/};return{name:"Microtik RouterOS script",aliases:["mikrotik"],case_insensitive:!0,keywords:{$pattern:/:?[\w-]+/,literal:n,keyword:t+" :"+t.split(" ").join(" :")+" :"+"global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime".split(" ").join(" :")},contains:[{variants:[{begin:/\/\*/,end:/\*\//},{begin:/\/\//,end:/$/},{begin:/<\//,end:/>/}],illegal:/./},e.COMMENT("^#","$"),s,i,a,{begin:/[\w-]+=([^\s{}[\]()>]+)/,relevance:0,returnBegin:!0,contains:[{className:"attribute",begin:/[^=]+/},{begin:/=/,endsWithParent:!0,relevance:0,contains:[s,i,a,{className:"literal",begin:"\\b("+n.split(" ").join("|")+")\\b"},{begin:/("[^"]*"|[^\s{}[\]]+)/}]}]},{className:"number",begin:/\*[0-9a-fA-F]+/},{begin:"\\b("+"add remove enable disable set get print export edit find run debug error info warning".split(" ").join("|")+")([\\s[(\\]|])",returnBegin:!0,contains:[{className:"builtin-name",begin:/\w+/}]},{className:"built_in",variants:[{begin:"(\\.\\./|/|\\s)(("+"traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw".split(" ").join("|")+");?\\s)+"},{begin:/\.\./,relevance:0}]}]}}},6009:function(e){e.exports=function(e){return{name:"RenderMan RSL",keywords:{keyword:"float color point normal vector matrix while for if do return else break extern continue",built_in:"abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp faceforward filterstep floor format fresnel incident length lightsource log match max min mod noise normalize ntransform opposite option phong pnoise pow printf ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan texture textureinfo trace transform vtransform xcomp ycomp zcomp"},illegal:"</",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.C_NUMBER_MODE,{className:"meta",begin:"#",end:"$"},{className:"class",beginKeywords:"surface displacement light volume imager",end:"\\("},{beginKeywords:"illuminate illuminance gather",end:"\\("}]}}},2907:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n,a="([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)",s={keyword:"and then defined module in return redo if BEGIN retry end for self when next until do begin unless END rescue else break undef not super class case require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor __FILE__",built_in:"proc lambda",literal:"true false nil"},i={className:"doctag",begin:"@[A-Za-z]+"},r={begin:"#<",end:">"},o=[e.COMMENT("#","$",{contains:[i]}),e.COMMENT("^=begin","^=end",{contains:[i],relevance:10}),e.COMMENT("^__END__","\\n$")],l={className:"subst",begin:/#\{/,end:/\}/,keywords:s},c={className:"string",contains:[e.BACKSLASH_ESCAPE,l],variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/`/,end:/`/},{begin:/%[qQwWx]?\(/,end:/\)/},{begin:/%[qQwWx]?\[/,end:/\]/},{begin:/%[qQwWx]?\{/,end:/\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\//,end:/\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{begin:/%[qQwWx]?\|/,end:/\|/},{begin:/\B\?(\\\d{1,3})/},{begin:/\B\?(\\x[A-Fa-f0-9]{1,2})/},{begin:/\B\?(\\u\{?[A-Fa-f0-9]{1,6}\}?)/},{begin:/\B\?(\\M-\\C-|\\M-\\c|\\c\\M-|\\M-|\\C-\\M-)[\x20-\x7e]/},{begin:/\B\?\\(c|C-)[\x20-\x7e]/},{begin:/\B\?\\?\S/},{begin:/<<[-~]?'?(\w+)\n(?:[^\n]*\n)*?\s*\1\b/,returnBegin:!0,contains:[{begin:/<<[-~]?'?/},e.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,contains:[e.BACKSLASH_ESCAPE,l]})]}]},d="[0-9](_?[0-9])*",u={className:"number",relevance:0,variants:[{begin:"\\b(".concat("[1-9](_?[0-9])*|0",")(\\.(").concat(d,"))?([eE][+-]?(").concat(d,")|r)?i?\\b")},{begin:"\\b0[dD][0-9](_?[0-9])*r?i?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*r?i?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*r?i?\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\b"},{begin:"\\b0(_?[0-7])+r?i?\\b"}]},p={className:"params",begin:"\\(",end:"\\)",endsParent:!0,keywords:s},m=[c,{className:"class",beginKeywords:"class module",end:"$|;",illegal:/=/,contains:[e.inherit(e.TITLE_MODE,{begin:"[A-Za-z_]\\w*(::\\w+)*(\\?|!)?"}),{begin:"<\\s*",contains:[{begin:"("+e.IDENT_RE+"::)?"+e.IDENT_RE,relevance:0}]}].concat(o)},{className:"function",begin:t(/def\s+/,(n=a+"\\s*(\\(|;|$)",t("(?=",n,")"))),relevance:0,keywords:"def",end:"$|;",contains:[e.inherit(e.TITLE_MODE,{begin:a}),p].concat(o)},{begin:e.IDENT_RE+"::"},{className:"symbol",begin:e.UNDERSCORE_IDENT_RE+"(!|\\?)?:",relevance:0},{className:"symbol",begin:":(?!\\s)",contains:[c,{begin:a}],relevance:0},u,{className:"variable",begin:"(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])"},{className:"params",begin:/\|/,end:/\|/,relevance:0,keywords:s},{begin:"("+e.RE_STARTERS_RE+"|unless)\\s*",keywords:"unless",contains:[{className:"regexp",contains:[e.BACKSLASH_ESCAPE,l],illegal:/\n/,variants:[{begin:"/",end:"/[a-z]*"},{begin:/%r\{/,end:/\}[a-z]*/},{begin:"%r\\(",end:"\\)[a-z]*"},{begin:"%r!",end:"![a-z]*"},{begin:"%r\\[",end:"\\][a-z]*"}]}].concat(r,o),relevance:0}].concat(r,o);l.contains=m,p.contains=m;var h=[{begin:/^\s*=>/,starts:{end:"$",contains:m}},{className:"meta",begin:"^([>?]>|[\\w#]+\\(\\w+\\):\\d+:\\d+>|(\\w+-)?\\d+\\.\\d+\\.\\d+(p\\d+)?[^\\d][^>]+>)(?=[ ])",starts:{end:"$",contains:m}}];return o.unshift(r),{name:"Ruby",aliases:["rb","gemspec","podspec","thor","irb"],keywords:s,illegal:/\/\*/,contains:[e.SHEBANG({binary:"ruby"})].concat(h).concat(o).concat(m)}}},2731:function(e){e.exports=function(e){return{name:"Oracle Rules Language",keywords:{keyword:"BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM NUMDAYS READ_DATE STAGING",built_in:"IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,{className:"literal",variants:[{begin:"#\\s+",relevance:0},{begin:"#[a-zA-Z .]+"}]}]}}},4801:function(e){e.exports=function(e){var t="([ui](8|16|32|64|128|size)|f(32|64))?",n="drop i8 i16 i32 i64 i128 isize u8 u16 u32 u64 u128 usize f32 f64 str char bool Box Option Result String Vec Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator Extend IntoIterator DoubleEndedIterator ExactSizeIterator SliceConcatExt ToString assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! debug_assert! debug_assert_eq! env! panic! file! format! format_args! include_bin! include_str! line! local_data_key! module_path! option_env! print! println! select! stringify! try! unimplemented! unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!";return{name:"Rust",aliases:["rs"],keywords:{$pattern:e.IDENT_RE+"!?",keyword:"abstract as async await become box break const continue crate do dyn else enum extern false final fn for if impl in let loop macro match mod move mut override priv pub ref return self Self static struct super trait true try type typeof unsafe unsized use virtual where while yield",literal:"true false Some None Ok Err",built_in:n},illegal:"</",contains:[e.C_LINE_COMMENT_MODE,e.COMMENT("/\\*","\\*/",{contains:["self"]}),e.inherit(e.QUOTE_STRING_MODE,{begin:/b?"/,illegal:null}),{className:"string",variants:[{begin:/r(#*)"(.|\n)*?"\1(?!#)/},{begin:/b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/}]},{className:"symbol",begin:/'[a-zA-Z_][a-zA-Z0-9_]*/},{className:"number",variants:[{begin:"\\b0b([01_]+)"+t},{begin:"\\b0o([0-7_]+)"+t},{begin:"\\b0x([A-Fa-f0-9_]+)"+t},{begin:"\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)"+t}],relevance:0},{className:"function",beginKeywords:"fn",end:"(\\(|<)",excludeEnd:!0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"meta",begin:"#!?\\[",end:"\\]",contains:[{className:"meta-string",begin:/"/,end:/"/}]},{className:"class",beginKeywords:"type",end:";",contains:[e.inherit(e.UNDERSCORE_TITLE_MODE,{endsParent:!0})],illegal:"\\S"},{className:"class",beginKeywords:"trait enum struct union",end:/\{/,contains:[e.inherit(e.UNDERSCORE_TITLE_MODE,{endsParent:!0})],illegal:"[\\w\\d]"},{begin:e.IDENT_RE+"::",keywords:{built_in:n}},{begin:"->"}]}}},1621:function(e){e.exports=function(e){return{name:"SAS",case_insensitive:!0,keywords:{literal:"null missing _all_ _automatic_ _character_ _infile_ _n_ _name_ _null_ _numeric_ _user_ _webout_",meta:"do if then else end until while abort array attrib by call cards cards4 catname continue datalines datalines4 delete delim delimiter display dm drop endsas error file filename footnote format goto in infile informat input keep label leave length libname link list lostcard merge missing modify options output out page put redirect remove rename replace retain return select set skip startsas stop title update waitsas where window x systask add and alter as cascade check create delete describe distinct drop foreign from group having index insert into in key like message modify msgtype not null on or order primary references reset restrict select set table unique update validate view where"},contains:[{className:"keyword",begin:/^\s*(proc [\w\d_]+|data|run|quit)[\s;]/},{className:"variable",begin:/&[a-zA-Z_&][a-zA-Z0-9_]*\.?/},{className:"emphasis",begin:/^\s*datalines|cards.*;/,end:/^\s*;\s*$/},{className:"built_in",begin:"%(bquote|nrbquote|cmpres|qcmpres|compstor|datatyp|display|do|else|end|eval|global|goto|if|index|input|keydef|label|left|length|let|local|lowcase|macro|mend|nrbquote|nrquote|nrstr|put|qcmpres|qleft|qlowcase|qscan|qsubstr|qsysfunc|qtrim|quote|qupcase|scan|str|substr|superq|syscall|sysevalf|sysexec|sysfunc|sysget|syslput|sysprod|sysrc|sysrput|then|to|trim|unquote|until|upcase|verify|while|window)"},{className:"name",begin:/%[a-zA-Z_][a-zA-Z_0-9]*/},{className:"meta",begin:"[^%](abs|addr|airy|arcos|arsin|atan|attrc|attrn|band|betainv|blshift|bnot|bor|brshift|bxor|byte|cdf|ceil|cexist|cinv|close|cnonct|collate|compbl|compound|compress|cos|cosh|css|curobs|cv|daccdb|daccdbsl|daccsl|daccsyd|dacctab|dairy|date|datejul|datepart|datetime|day|dclose|depdb|depdbsl|depdbsl|depsl|depsl|depsyd|depsyd|deptab|deptab|dequote|dhms|dif|digamma|dim|dinfo|dnum|dopen|doptname|doptnum|dread|dropnote|dsname|erf|erfc|exist|exp|fappend|fclose|fcol|fdelete|fetch|fetchobs|fexist|fget|fileexist|filename|fileref|finfo|finv|fipname|fipnamel|fipstate|floor|fnonct|fnote|fopen|foptname|foptnum|fpoint|fpos|fput|fread|frewind|frlen|fsep|fuzz|fwrite|gaminv|gamma|getoption|getvarc|getvarn|hbound|hms|hosthelp|hour|ibessel|index|indexc|indexw|input|inputc|inputn|int|intck|intnx|intrr|irr|jbessel|juldate|kurtosis|lag|lbound|left|length|lgamma|libname|libref|log|log10|log2|logpdf|logpmf|logsdf|lowcase|max|mdy|mean|min|minute|mod|month|mopen|mort|n|netpv|nmiss|normal|note|npv|open|ordinal|pathname|pdf|peek|peekc|pmf|point|poisson|poke|probbeta|probbnml|probchi|probf|probgam|probhypr|probit|probnegb|probnorm|probt|put|putc|putn|qtr|quote|ranbin|rancau|ranexp|rangam|range|rank|rannor|ranpoi|rantbl|rantri|ranuni|repeat|resolve|reverse|rewind|right|round|saving|scan|sdf|second|sign|sin|sinh|skewness|soundex|spedis|sqrt|std|stderr|stfips|stname|stnamel|substr|sum|symget|sysget|sysmsg|sysprod|sysrc|system|tan|tanh|time|timepart|tinv|tnonct|today|translate|tranwrd|trigamma|trim|trimn|trunc|uniform|upcase|uss|var|varfmt|varinfmt|varlabel|varlen|varname|varnum|varray|varrayx|vartype|verify|vformat|vformatd|vformatdx|vformatn|vformatnx|vformatw|vformatwx|vformatx|vinarray|vinarrayx|vinformat|vinformatd|vinformatdx|vinformatn|vinformatnx|vinformatw|vinformatwx|vinformatx|vlabel|vlabelx|vlength|vlengthx|vname|vnamex|vtype|vtypex|weekday|year|yyq|zipfips|zipname|zipnamel|zipstate)[(]"},{className:"string",variants:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},e.COMMENT("\\*",";"),e.C_BLOCK_COMMENT_MODE]}}},65:function(e){e.exports=function(e){var t={className:"subst",variants:[{begin:"\\$[A-Za-z0-9_]+"},{begin:/\$\{/,end:/\}/}]},n={className:"string",variants:[{begin:'"""',end:'"""'},{begin:'"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE]},{begin:'[a-z]+"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE,t]},{className:"string",begin:'[a-z]+"""',end:'"""',contains:[t],relevance:10}]},a={className:"type",begin:"\\b[A-Z][A-Za-z0-9_]*",relevance:0},s={className:"title",begin:/[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,relevance:0},i={className:"class",beginKeywords:"class object trait type",end:/[:={\[\n;]/,excludeEnd:!0,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{beginKeywords:"extends with",relevance:10},{begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0,relevance:0,contains:[a]},{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,relevance:0,contains:[a]},s]},r={className:"function",beginKeywords:"def",end:/[:={\[(\n;]/,excludeEnd:!0,contains:[s]};return{name:"Scala",keywords:{literal:"true false null",keyword:"type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n,{className:"symbol",begin:"'\\w[\\w\\d_]*(?!')"},a,r,i,e.C_NUMBER_MODE,{className:"meta",begin:"@[A-Za-z]+"}]}}},6207:function(e){e.exports=function(e){var t="[^\\(\\)\\[\\]\\{\\}\",'`;#|\\\\\\s]+",n="(-|\\+)?\\d+([./]\\d+)?",a={$pattern:t,"builtin-name":"case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules ' * + , ,@ - ... / ; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"},s={className:"literal",begin:"(#t|#f|#\\\\"+t+"|#\\\\.)"},i={className:"number",variants:[{begin:n,relevance:0},{begin:n+"[+\\-]"+n+"i",relevance:0},{begin:"#b[0-1]+(/[0-1]+)?"},{begin:"#o[0-7]+(/[0-7]+)?"},{begin:"#x[0-9a-f]+(/[0-9a-f]+)?"}]},r=e.QUOTE_STRING_MODE,o=[e.COMMENT(";","$",{relevance:0}),e.COMMENT("#\\|","\\|#")],l={begin:t,relevance:0},c={className:"symbol",begin:"'"+t},d={endsWithParent:!0,relevance:0},u={variants:[{begin:/'/},{begin:"`"}],contains:[{begin:"\\(",end:"\\)",contains:["self",s,r,i,l,c]}]},p={className:"name",relevance:0,begin:t,keywords:a},m={variants:[{begin:"\\(",end:"\\)"},{begin:"\\[",end:"\\]"}],contains:[{begin:/lambda/,endsWithParent:!0,returnBegin:!0,contains:[p,{endsParent:!0,variants:[{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/}],contains:[l]}]},p,d]};return d.contains=[s,i,r,l,c,u,m].concat(o),{name:"Scheme",illegal:/\S/,contains:[e.SHEBANG(),i,r,c,u,m].concat(o)}}},7422:function(e){e.exports=function(e){var t=[e.C_NUMBER_MODE,{className:"string",begin:"'|\"",end:"'|\"",contains:[e.BACKSLASH_ESCAPE,{begin:"''"}]}];return{name:"Scilab",aliases:["sci"],keywords:{$pattern:/%?\w+/,keyword:"abort break case clear catch continue do elseif else endfunction end for function global if pause return resume select try then while",literal:"%f %F %t %T %pi %eps %inf %nan %e %i %z %s",built_in:"abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan type typename warning zeros matrix"},illegal:'("|#|/\\*|\\s+/\\w+)',contains:[{className:"function",beginKeywords:"function",end:"$",contains:[e.UNDERSCORE_TITLE_MODE,{className:"params",begin:"\\(",end:"\\)"}]},{begin:"[a-zA-Z_][a-zA-Z_0-9]*[\\.']+",relevance:0},{begin:"\\[",end:"\\][\\.']*",relevance:0,contains:t},e.COMMENT("//","$")].concat(t)}}},3785:function(e){var t=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],n=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],a=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],s=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],i=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","auto","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","clip-path","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-variant","font-variant-ligatures","font-variation-settings","font-weight","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inherit","initial","justify-content","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marks","mask","max-height","max-width","min-height","min-width","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","perspective","perspective-origin","pointer-events","position","quotes","resize","right","src","tab-size","table-layout","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-indent","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"].reverse();e.exports=function(e){var r=function(e){return{IMPORTANT:{className:"meta",begin:"!important"},HEXCOLOR:{className:"number",begin:"#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})"},ATTRIBUTE_SELECTOR_MODE:{className:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}}}(e),o=s,l=a,c="@[a-z-]+",d={className:"variable",begin:"(\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\b"};return{name:"SCSS",case_insensitive:!0,illegal:"[=/|']",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"selector-id",begin:"#[A-Za-z0-9_-]+",relevance:0},{className:"selector-class",begin:"\\.[A-Za-z0-9_-]+",relevance:0},r.ATTRIBUTE_SELECTOR_MODE,{className:"selector-tag",begin:"\\b("+t.join("|")+")\\b",relevance:0},{className:"selector-pseudo",begin:":("+l.join("|")+")"},{className:"selector-pseudo",begin:"::("+o.join("|")+")"},d,{begin:/\(/,end:/\)/,contains:[e.CSS_NUMBER_MODE]},{className:"attribute",begin:"\\b("+i.join("|")+")\\b"},{begin:"\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"},{begin:":",end:";",contains:[d,r.HEXCOLOR,e.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,r.IMPORTANT]},{begin:"@(page|font-face)",lexemes:c,keywords:"@page @font-face"},{begin:"@",end:"[{;]",returnBegin:!0,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:n.join(" ")},contains:[{begin:c,className:"keyword"},{begin:/[a-z-]+(?=:)/,className:"attribute"},d,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,r.HEXCOLOR,e.CSS_NUMBER_MODE]}]}}},5789:function(e){e.exports=function(e){return{name:"Shell Session",aliases:["console"],contains:[{className:"meta",begin:/^\s{0,3}[/~\w\d[\]()@-]*[>%$#]/,starts:{end:/[^\\](?=\s*$)/,subLanguage:"bash"}}]}}},358:function(e){e.exports=function(e){var t=["add","and","cmp","cmpg","cmpl","const","div","double","float","goto","if","int","long","move","mul","neg","new","nop","not","or","rem","return","shl","shr","sput","sub","throw","ushr","xor"];return{name:"Smali",contains:[{className:"string",begin:'"',end:'"',relevance:0},e.COMMENT("#","$",{relevance:0}),{className:"keyword",variants:[{begin:"\\s*\\.end\\s[a-zA-Z0-9]*"},{begin:"^[ ]*\\.[a-zA-Z]*",relevance:0},{begin:"\\s:[a-zA-Z_0-9]*",relevance:0},{begin:"\\s("+["transient","constructor","abstract","final","synthetic","public","private","protected","static","bridge","system"].join("|")+")"}]},{className:"built_in",variants:[{begin:"\\s("+t.join("|")+")\\s"},{begin:"\\s("+t.join("|")+")((-|/)[a-zA-Z0-9]+)+\\s",relevance:10},{begin:"\\s("+["aget","aput","array","check","execute","fill","filled","goto/16","goto/32","iget","instance","invoke","iput","monitor","packed","sget","sparse"].join("|")+")((-|/)[a-zA-Z0-9]+)*\\s",relevance:10}]},{className:"class",begin:"L[^(;:\n]*;",relevance:0},{begin:"[vp][0-9]+"}]}}},4006:function(e){e.exports=function(e){var t="[a-z][a-zA-Z0-9_]*",n={className:"string",begin:"\\$.{1}"},a={className:"symbol",begin:"#"+e.UNDERSCORE_IDENT_RE};return{name:"Smalltalk",aliases:["st"],keywords:"self super nil true false thisContext",contains:[e.COMMENT('"','"'),e.APOS_STRING_MODE,{className:"type",begin:"\\b[A-Z][A-Za-z0-9_]*",relevance:0},{begin:t+":",relevance:0},e.C_NUMBER_MODE,a,n,{begin:"\\|[ ]*"+t+"([ ]+"+t+")*[ ]*\\|",returnBegin:!0,end:/\|/,illegal:/\S/,contains:[{begin:"(\\|[ ]*)?"+t}]},{begin:"#\\(",end:"\\)",contains:[e.APOS_STRING_MODE,n,e.C_NUMBER_MODE,a]}]}}},5585:function(e){e.exports=function(e){return{name:"SML (Standard ML)",aliases:["ml"],keywords:{$pattern:"[a-z_]\\w*!?",keyword:"abstype and andalso as case datatype do else end eqtype exception fn fun functor handle if in include infix infixr let local nonfix of op open orelse raise rec sharing sig signature struct structure then type val with withtype where while",built_in:"array bool char exn int list option order real ref string substring vector unit word",literal:"true false NONE SOME LESS EQUAL GREATER nil"},illegal:/\/\/|>>/,contains:[{className:"literal",begin:/\[(\|\|)?\]|\(\)/,relevance:0},e.COMMENT("\\(\\*","\\*\\)",{contains:["self"]}),{className:"symbol",begin:"'[A-Za-z_](?!')[\\w']*"},{className:"type",begin:"`[A-Z][\\w']*"},{className:"type",begin:"\\b[A-Z][\\w']*",relevance:0},{begin:"[a-z_]\\w*'[\\w']*"},e.inherit(e.APOS_STRING_MODE,{className:"string",relevance:0}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),{className:"number",begin:"\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",relevance:0},{begin:/[-=]>/}]}}},2287:function(e){e.exports=function(e){var t={className:"string",variants:[{begin:'"',end:'"',contains:[{begin:'""',relevance:0}]},{begin:"'",end:"'",contains:[{begin:"''",relevance:0}]}]},n={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{"meta-keyword":"define undef ifdef ifndef else endif include"},contains:[{begin:/\\\n/,relevance:0},e.inherit(t,{className:"meta-string"}),{className:"meta-string",begin:/<[^\n>]*>/,end:/$/,illegal:"\\n"},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]};return{name:"SQF",case_insensitive:!0,keywords:{keyword:"case catch default do else exit exitWith for forEach from if private switch then throw to try waitUntil while with",built_in:"abs accTime acos action actionIDs actionKeys actionKeysImages actionKeysNames actionKeysNamesArray actionName actionParams activateAddons activatedAddons activateKey add3DENConnection add3DENEventHandler add3DENLayer addAction addBackpack addBackpackCargo addBackpackCargoGlobal addBackpackGlobal addCamShake addCuratorAddons addCuratorCameraArea addCuratorEditableObjects addCuratorEditingArea addCuratorPoints addEditorObject addEventHandler addForce addGoggles addGroupIcon addHandgunItem addHeadgear addItem addItemCargo addItemCargoGlobal addItemPool addItemToBackpack addItemToUniform addItemToVest addLiveStats addMagazine addMagazineAmmoCargo addMagazineCargo addMagazineCargoGlobal addMagazineGlobal addMagazinePool addMagazines addMagazineTurret addMenu addMenuItem addMissionEventHandler addMPEventHandler addMusicEventHandler addOwnedMine addPlayerScores addPrimaryWeaponItem addPublicVariableEventHandler addRating addResources addScore addScoreSide addSecondaryWeaponItem addSwitchableUnit addTeamMember addToRemainsCollector addTorque addUniform addVehicle addVest addWaypoint addWeapon addWeaponCargo addWeaponCargoGlobal addWeaponGlobal addWeaponItem addWeaponPool addWeaponTurret admin agent agents AGLToASL aimedAtTarget aimPos airDensityRTD airplaneThrottle airportSide AISFinishHeal alive all3DENEntities allAirports allControls allCurators allCutLayers allDead allDeadMen allDisplays allGroups allMapMarkers allMines allMissionObjects allow3DMode allowCrewInImmobile allowCuratorLogicIgnoreAreas allowDamage allowDammage allowFileOperations allowFleeing allowGetIn allowSprint allPlayers allSimpleObjects allSites allTurrets allUnits allUnitsUAV allVariables ammo ammoOnPylon and animate animateBay animateDoor animatePylon animateSource animationNames animationPhase animationSourcePhase animationState append apply armoryPoints arrayIntersect asin ASLToAGL ASLToATL assert assignAsCargo assignAsCargoIndex assignAsCommander assignAsDriver assignAsGunner assignAsTurret assignCurator assignedCargo assignedCommander assignedDriver assignedGunner assignedItems assignedTarget assignedTeam assignedVehicle assignedVehicleRole assignItem assignTeam assignToAirport atan atan2 atg ATLToASL attachedObject attachedObjects attachedTo attachObject attachTo attackEnabled backpack backpackCargo backpackContainer backpackItems backpackMagazines backpackSpaceFor behaviour benchmark binocular boundingBox boundingBoxReal boundingCenter breakOut breakTo briefingName buildingExit buildingPos buttonAction buttonSetAction cadetMode call callExtension camCommand camCommit camCommitPrepared camCommitted camConstuctionSetParams camCreate camDestroy cameraEffect cameraEffectEnableHUD cameraInterest cameraOn cameraView campaignConfigFile camPreload camPreloaded camPrepareBank camPrepareDir camPrepareDive camPrepareFocus camPrepareFov camPrepareFovRange camPreparePos camPrepareRelPos camPrepareTarget camSetBank camSetDir camSetDive camSetFocus camSetFov camSetFovRange camSetPos camSetRelPos camSetTarget camTarget camUseNVG canAdd canAddItemToBackpack canAddItemToUniform canAddItemToVest cancelSimpleTaskDestination canFire canMove canSlingLoad canStand canSuspend canTriggerDynamicSimulation canUnloadInCombat canVehicleCargo captive captiveNum cbChecked cbSetChecked ceil channelEnabled cheatsEnabled checkAIFeature checkVisibility className clearAllItemsFromBackpack clearBackpackCargo clearBackpackCargoGlobal clearGroupIcons clearItemCargo clearItemCargoGlobal clearItemPool clearMagazineCargo clearMagazineCargoGlobal clearMagazinePool clearOverlay clearRadio clearWeaponCargo clearWeaponCargoGlobal clearWeaponPool clientOwner closeDialog closeDisplay closeOverlay collapseObjectTree collect3DENHistory collectiveRTD combatMode commandArtilleryFire commandChat commander commandFire commandFollow commandFSM commandGetOut commandingMenu commandMove commandRadio commandStop commandSuppressiveFire commandTarget commandWatch comment commitOverlay compile compileFinal completedFSM composeText configClasses configFile configHierarchy configName configProperties configSourceAddonList configSourceMod configSourceModList confirmSensorTarget connectTerminalToUAV controlsGroupCtrl copyFromClipboard copyToClipboard copyWaypoints cos count countEnemy countFriendly countSide countType countUnknown create3DENComposition create3DENEntity createAgent createCenter createDialog createDiaryLink createDiaryRecord createDiarySubject createDisplay createGearDialog createGroup createGuardedPoint createLocation createMarker createMarkerLocal createMenu createMine createMissionDisplay createMPCampaignDisplay createSimpleObject createSimpleTask createSite createSoundSource createTask createTeam createTrigger createUnit createVehicle createVehicleCrew createVehicleLocal crew ctAddHeader ctAddRow ctClear ctCurSel ctData ctFindHeaderRows ctFindRowHeader ctHeaderControls ctHeaderCount ctRemoveHeaders ctRemoveRows ctrlActivate ctrlAddEventHandler ctrlAngle ctrlAutoScrollDelay ctrlAutoScrollRewind ctrlAutoScrollSpeed ctrlChecked ctrlClassName ctrlCommit ctrlCommitted ctrlCreate ctrlDelete ctrlEnable ctrlEnabled ctrlFade ctrlHTMLLoaded ctrlIDC ctrlIDD ctrlMapAnimAdd ctrlMapAnimClear ctrlMapAnimCommit ctrlMapAnimDone ctrlMapCursor ctrlMapMouseOver ctrlMapScale ctrlMapScreenToWorld ctrlMapWorldToScreen ctrlModel ctrlModelDirAndUp ctrlModelScale ctrlParent ctrlParentControlsGroup ctrlPosition ctrlRemoveAllEventHandlers ctrlRemoveEventHandler ctrlScale ctrlSetActiveColor ctrlSetAngle ctrlSetAutoScrollDelay ctrlSetAutoScrollRewind ctrlSetAutoScrollSpeed ctrlSetBackgroundColor ctrlSetChecked ctrlSetEventHandler ctrlSetFade ctrlSetFocus ctrlSetFont ctrlSetFontH1 ctrlSetFontH1B ctrlSetFontH2 ctrlSetFontH2B ctrlSetFontH3 ctrlSetFontH3B ctrlSetFontH4 ctrlSetFontH4B ctrlSetFontH5 ctrlSetFontH5B ctrlSetFontH6 ctrlSetFontH6B ctrlSetFontHeight ctrlSetFontHeightH1 ctrlSetFontHeightH2 ctrlSetFontHeightH3 ctrlSetFontHeightH4 ctrlSetFontHeightH5 ctrlSetFontHeightH6 ctrlSetFontHeightSecondary ctrlSetFontP ctrlSetFontPB ctrlSetFontSecondary ctrlSetForegroundColor ctrlSetModel ctrlSetModelDirAndUp ctrlSetModelScale ctrlSetPixelPrecision ctrlSetPosition ctrlSetScale ctrlSetStructuredText ctrlSetText ctrlSetTextColor ctrlSetTooltip ctrlSetTooltipColorBox ctrlSetTooltipColorShade ctrlSetTooltipColorText ctrlShow ctrlShown ctrlText ctrlTextHeight ctrlTextWidth ctrlType ctrlVisible ctRowControls ctRowCount ctSetCurSel ctSetData ctSetHeaderTemplate ctSetRowTemplate ctSetValue ctValue curatorAddons curatorCamera curatorCameraArea curatorCameraAreaCeiling curatorCoef curatorEditableObjects curatorEditingArea curatorEditingAreaType curatorMouseOver curatorPoints curatorRegisteredObjects curatorSelected curatorWaypointCost current3DENOperation currentChannel currentCommand currentMagazine currentMagazineDetail currentMagazineDetailTurret currentMagazineTurret currentMuzzle currentNamespace currentTask currentTasks currentThrowable currentVisionMode currentWaypoint currentWeapon currentWeaponMode currentWeaponTurret currentZeroing cursorObject cursorTarget customChat customRadio cutFadeOut cutObj cutRsc cutText damage date dateToNumber daytime deActivateKey debriefingText debugFSM debugLog deg delete3DENEntities deleteAt deleteCenter deleteCollection deleteEditorObject deleteGroup deleteGroupWhenEmpty deleteIdentity deleteLocation deleteMarker deleteMarkerLocal deleteRange deleteResources deleteSite deleteStatus deleteTeam deleteVehicle deleteVehicleCrew deleteWaypoint detach detectedMines diag_activeMissionFSMs diag_activeScripts diag_activeSQFScripts diag_activeSQSScripts diag_captureFrame diag_captureFrameToFile diag_captureSlowFrame diag_codePerformance diag_drawMode diag_enable diag_enabled diag_fps diag_fpsMin diag_frameNo diag_lightNewLoad diag_list diag_log diag_logSlowFrame diag_mergeConfigFile diag_recordTurretLimits diag_setLightNew diag_tickTime diag_toggle dialog diarySubjectExists didJIP didJIPOwner difficulty difficultyEnabled difficultyEnabledRTD difficultyOption direction directSay disableAI disableCollisionWith disableConversation disableDebriefingStats disableMapIndicators disableNVGEquipment disableRemoteSensors disableSerialization disableTIEquipment disableUAVConnectability disableUserInput displayAddEventHandler displayCtrl displayParent displayRemoveAllEventHandlers displayRemoveEventHandler displaySetEventHandler dissolveTeam distance distance2D distanceSqr distributionRegion do3DENAction doArtilleryFire doFire doFollow doFSM doGetOut doMove doorPhase doStop doSuppressiveFire doTarget doWatch drawArrow drawEllipse drawIcon drawIcon3D drawLine drawLine3D drawLink drawLocation drawPolygon drawRectangle drawTriangle driver drop dynamicSimulationDistance dynamicSimulationDistanceCoef dynamicSimulationEnabled dynamicSimulationSystemEnabled echo edit3DENMissionAttributes editObject editorSetEventHandler effectiveCommander emptyPositions enableAI enableAIFeature enableAimPrecision enableAttack enableAudioFeature enableAutoStartUpRTD enableAutoTrimRTD enableCamShake enableCaustics enableChannel enableCollisionWith enableCopilot enableDebriefingStats enableDiagLegend enableDynamicSimulation enableDynamicSimulationSystem enableEndDialog enableEngineArtillery enableEnvironment enableFatigue enableGunLights enableInfoPanelComponent enableIRLasers enableMimics enablePersonTurret enableRadio enableReload enableRopeAttach enableSatNormalOnDetail enableSaving enableSentences enableSimulation enableSimulationGlobal enableStamina enableTeamSwitch enableTraffic enableUAVConnectability enableUAVWaypoints enableVehicleCargo enableVehicleSensor enableWeaponDisassembly endLoadingScreen endMission engineOn enginesIsOnRTD enginesRpmRTD enginesTorqueRTD entities environmentEnabled estimatedEndServerTime estimatedTimeLeft evalObjectArgument everyBackpack everyContainer exec execEditorScript execFSM execVM exp expectedDestination exportJIPMessages eyeDirection eyePos face faction fadeMusic fadeRadio fadeSound fadeSpeech failMission fillWeaponsFromPool find findCover findDisplay findEditorObject findEmptyPosition findEmptyPositionReady findIf findNearestEnemy finishMissionInit finite fire fireAtTarget firstBackpack flag flagAnimationPhase flagOwner flagSide flagTexture fleeing floor flyInHeight flyInHeightASL fog fogForecast fogParams forceAddUniform forcedMap forceEnd forceFlagTexture forceFollowRoad forceMap forceRespawn forceSpeed forceWalk forceWeaponFire forceWeatherChange forEachMember forEachMemberAgent forEachMemberTeam forgetTarget format formation formationDirection formationLeader formationMembers formationPosition formationTask formatText formLeader freeLook fromEditor fuel fullCrew gearIDCAmmoCount gearSlotAmmoCount gearSlotData get3DENActionState get3DENAttribute get3DENCamera get3DENConnections get3DENEntity get3DENEntityID get3DENGrid get3DENIconsVisible get3DENLayerEntities get3DENLinesVisible get3DENMissionAttribute get3DENMouseOver get3DENSelected getAimingCoef getAllEnvSoundControllers getAllHitPointsDamage getAllOwnedMines getAllSoundControllers getAmmoCargo getAnimAimPrecision getAnimSpeedCoef getArray getArtilleryAmmo getArtilleryComputerSettings getArtilleryETA getAssignedCuratorLogic getAssignedCuratorUnit getBackpackCargo getBleedingRemaining getBurningValue getCameraViewDirection getCargoIndex getCenterOfMass getClientState getClientStateNumber getCompatiblePylonMagazines getConnectedUAV getContainerMaxLoad getCursorObjectParams getCustomAimCoef getDammage getDescription getDir getDirVisual getDLCAssetsUsage getDLCAssetsUsageByName getDLCs getEditorCamera getEditorMode getEditorObjectScope getElevationOffset getEnvSoundController getFatigue getForcedFlagTexture getFriend getFSMVariable getFuelCargo getGroupIcon getGroupIconParams getGroupIcons getHideFrom getHit getHitIndex getHitPointDamage getItemCargo getMagazineCargo getMarkerColor getMarkerPos getMarkerSize getMarkerType getMass getMissionConfig getMissionConfigValue getMissionDLCs getMissionLayerEntities getModelInfo getMousePosition getMusicPlayedTime getNumber getObjectArgument getObjectChildren getObjectDLC getObjectMaterials getObjectProxy getObjectTextures getObjectType getObjectViewDistance getOxygenRemaining getPersonUsedDLCs getPilotCameraDirection getPilotCameraPosition getPilotCameraRotation getPilotCameraTarget getPlateNumber getPlayerChannel getPlayerScores getPlayerUID getPos getPosASL getPosASLVisual getPosASLW getPosATL getPosATLVisual getPosVisual getPosWorld getPylonMagazines getRelDir getRelPos getRemoteSensorsDisabled getRepairCargo getResolution getShadowDistance getShotParents getSlingLoad getSoundController getSoundControllerResult getSpeed getStamina getStatValue getSuppression getTerrainGrid getTerrainHeightASL getText getTotalDLCUsageTime getUnitLoadout getUnitTrait getUserMFDText getUserMFDvalue getVariable getVehicleCargo getWeaponCargo getWeaponSway getWingsOrientationRTD getWingsPositionRTD getWPPos glanceAt globalChat globalRadio goggles goto group groupChat groupFromNetId groupIconSelectable groupIconsVisible groupId groupOwner groupRadio groupSelectedUnits groupSelectUnit gunner gusts halt handgunItems handgunMagazine handgunWeapon handsHit hasInterface hasPilotCamera hasWeapon hcAllGroups hcGroupParams hcLeader hcRemoveAllGroups hcRemoveGroup hcSelected hcSelectGroup hcSetGroup hcShowBar hcShownBar headgear hideBody hideObject hideObjectGlobal hideSelection hint hintC hintCadet hintSilent hmd hostMission htmlLoad HUDMovementLevels humidity image importAllGroups importance in inArea inAreaArray incapacitatedState inflame inflamed infoPanel infoPanelComponentEnabled infoPanelComponents infoPanels inGameUISetEventHandler inheritsFrom initAmbientLife inPolygon inputAction inRangeOfArtillery insertEditorObject intersect is3DEN is3DENMultiplayer isAbleToBreathe isAgent isArray isAutoHoverOn isAutonomous isAutotest isBleeding isBurning isClass isCollisionLightOn isCopilotEnabled isDamageAllowed isDedicated isDLCAvailable isEngineOn isEqualTo isEqualType isEqualTypeAll isEqualTypeAny isEqualTypeArray isEqualTypeParams isFilePatchingEnabled isFlashlightOn isFlatEmpty isForcedWalk isFormationLeader isGroupDeletedWhenEmpty isHidden isInRemainsCollector isInstructorFigureEnabled isIRLaserOn isKeyActive isKindOf isLaserOn isLightOn isLocalized isManualFire isMarkedForCollection isMultiplayer isMultiplayerSolo isNil isNull isNumber isObjectHidden isObjectRTD isOnRoad isPipEnabled isPlayer isRealTime isRemoteExecuted isRemoteExecutedJIP isServer isShowing3DIcons isSimpleObject isSprintAllowed isStaminaEnabled isSteamMission isStreamFriendlyUIEnabled isText isTouchingGround isTurnedOut isTutHintsEnabled isUAVConnectable isUAVConnected isUIContext isUniformAllowed isVehicleCargo isVehicleRadarOn isVehicleSensorEnabled isWalking isWeaponDeployed isWeaponRested itemCargo items itemsWithMagazines join joinAs joinAsSilent joinSilent joinString kbAddDatabase kbAddDatabaseTargets kbAddTopic kbHasTopic kbReact kbRemoveTopic kbTell kbWasSaid keyImage keyName knowsAbout land landAt landResult language laserTarget lbAdd lbClear lbColor lbColorRight lbCurSel lbData lbDelete lbIsSelected lbPicture lbPictureRight lbSelection lbSetColor lbSetColorRight lbSetCurSel lbSetData lbSetPicture lbSetPictureColor lbSetPictureColorDisabled lbSetPictureColorSelected lbSetPictureRight lbSetPictureRightColor lbSetPictureRightColorDisabled lbSetPictureRightColorSelected lbSetSelectColor lbSetSelectColorRight lbSetSelected lbSetText lbSetTextRight lbSetTooltip lbSetValue lbSize lbSort lbSortByValue lbText lbTextRight lbValue leader leaderboardDeInit leaderboardGetRows leaderboardInit leaderboardRequestRowsFriends leaderboardsRequestUploadScore leaderboardsRequestUploadScoreKeepBest leaderboardState leaveVehicle libraryCredits libraryDisclaimers lifeState lightAttachObject lightDetachObject lightIsOn lightnings limitSpeed linearConversion lineIntersects lineIntersectsObjs lineIntersectsSurfaces lineIntersectsWith linkItem list listObjects listRemoteTargets listVehicleSensors ln lnbAddArray lnbAddColumn lnbAddRow lnbClear lnbColor lnbCurSelRow lnbData lnbDeleteColumn lnbDeleteRow lnbGetColumnsPosition lnbPicture lnbSetColor lnbSetColumnsPos lnbSetCurSelRow lnbSetData lnbSetPicture lnbSetText lnbSetValue lnbSize lnbSort lnbSortByValue lnbText lnbValue load loadAbs loadBackpack loadFile loadGame loadIdentity loadMagazine loadOverlay loadStatus loadUniform loadVest local localize locationPosition lock lockCameraTo lockCargo lockDriver locked lockedCargo lockedDriver lockedTurret lockIdentity lockTurret lockWP log logEntities logNetwork logNetworkTerminate lookAt lookAtPos magazineCargo magazines magazinesAllTurrets magazinesAmmo magazinesAmmoCargo magazinesAmmoFull magazinesDetail magazinesDetailBackpack magazinesDetailUniform magazinesDetailVest magazinesTurret magazineTurretAmmo mapAnimAdd mapAnimClear mapAnimCommit mapAnimDone mapCenterOnCamera mapGridPosition markAsFinishedOnSteam markerAlpha markerBrush markerColor markerDir markerPos markerShape markerSize markerText markerType max members menuAction menuAdd menuChecked menuClear menuCollapse menuData menuDelete menuEnable menuEnabled menuExpand menuHover menuPicture menuSetAction menuSetCheck menuSetData menuSetPicture menuSetValue menuShortcut menuShortcutText menuSize menuSort menuText menuURL menuValue min mineActive mineDetectedBy missionConfigFile missionDifficulty missionName missionNamespace missionStart missionVersion mod modelToWorld modelToWorldVisual modelToWorldVisualWorld modelToWorldWorld modParams moonIntensity moonPhase morale move move3DENCamera moveInAny moveInCargo moveInCommander moveInDriver moveInGunner moveInTurret moveObjectToEnd moveOut moveTime moveTo moveToCompleted moveToFailed musicVolume name nameSound nearEntities nearestBuilding nearestLocation nearestLocations nearestLocationWithDubbing nearestObject nearestObjects nearestTerrainObjects nearObjects nearObjectsReady nearRoads nearSupplies nearTargets needReload netId netObjNull newOverlay nextMenuItemIndex nextWeatherChange nMenuItems not numberOfEnginesRTD numberToDate objectCurators objectFromNetId objectParent objStatus onBriefingGroup onBriefingNotes onBriefingPlan onBriefingTeamSwitch onCommandModeChanged onDoubleClick onEachFrame onGroupIconClick onGroupIconOverEnter onGroupIconOverLeave onHCGroupSelectionChanged onMapSingleClick onPlayerConnected onPlayerDisconnected onPreloadFinished onPreloadStarted onShowNewObject onTeamSwitch openCuratorInterface openDLCPage openMap openSteamApp openYoutubeVideo or orderGetIn overcast overcastForecast owner param params parseNumber parseSimpleArray parseText parsingNamespace particlesQuality pickWeaponPool pitch pixelGrid pixelGridBase pixelGridNoUIScale pixelH pixelW playableSlotsNumber playableUnits playAction playActionNow player playerRespawnTime playerSide playersNumber playGesture playMission playMove playMoveNow playMusic playScriptedMission playSound playSound3D position positionCameraToWorld posScreenToWorld posWorldToScreen ppEffectAdjust ppEffectCommit ppEffectCommitted ppEffectCreate ppEffectDestroy ppEffectEnable ppEffectEnabled ppEffectForceInNVG precision preloadCamera preloadObject preloadSound preloadTitleObj preloadTitleRsc preprocessFile preprocessFileLineNumbers primaryWeapon primaryWeaponItems primaryWeaponMagazine priority processDiaryLink productVersion profileName profileNamespace profileNameSteam progressLoadingScreen progressPosition progressSetPosition publicVariable publicVariableClient publicVariableServer pushBack pushBackUnique putWeaponPool queryItemsPool queryMagazinePool queryWeaponPool rad radioChannelAdd radioChannelCreate radioChannelRemove radioChannelSetCallSign radioChannelSetLabel radioVolume rain rainbow random rank rankId rating rectangular registeredTasks registerTask reload reloadEnabled remoteControl remoteExec remoteExecCall remoteExecutedOwner remove3DENConnection remove3DENEventHandler remove3DENLayer removeAction removeAll3DENEventHandlers removeAllActions removeAllAssignedItems removeAllContainers removeAllCuratorAddons removeAllCuratorCameraAreas removeAllCuratorEditingAreas removeAllEventHandlers removeAllHandgunItems removeAllItems removeAllItemsWithMagazines removeAllMissionEventHandlers removeAllMPEventHandlers removeAllMusicEventHandlers removeAllOwnedMines removeAllPrimaryWeaponItems removeAllWeapons removeBackpack removeBackpackGlobal removeCuratorAddons removeCuratorCameraArea removeCuratorEditableObjects removeCuratorEditingArea removeDrawIcon removeDrawLinks removeEventHandler removeFromRemainsCollector removeGoggles removeGroupIcon removeHandgunItem removeHeadgear removeItem removeItemFromBackpack removeItemFromUniform removeItemFromVest removeItems removeMagazine removeMagazineGlobal removeMagazines removeMagazinesTurret removeMagazineTurret removeMenuItem removeMissionEventHandler removeMPEventHandler removeMusicEventHandler removeOwnedMine removePrimaryWeaponItem removeSecondaryWeaponItem removeSimpleTask removeSwitchableUnit removeTeamMember removeUniform removeVest removeWeapon removeWeaponAttachmentCargo removeWeaponCargo removeWeaponGlobal removeWeaponTurret reportRemoteTarget requiredVersion resetCamShake resetSubgroupDirection resize resources respawnVehicle restartEditorCamera reveal revealMine reverse reversedMouseY roadAt roadsConnectedTo roleDescription ropeAttachedObjects ropeAttachedTo ropeAttachEnabled ropeAttachTo ropeCreate ropeCut ropeDestroy ropeDetach ropeEndPosition ropeLength ropes ropeUnwind ropeUnwound rotorsForcesRTD rotorsRpmRTD round runInitScript safeZoneH safeZoneW safeZoneWAbs safeZoneX safeZoneXAbs safeZoneY save3DENInventory saveGame saveIdentity saveJoysticks saveOverlay saveProfileNamespace saveStatus saveVar savingEnabled say say2D say3D scopeName score scoreSide screenshot screenToWorld scriptDone scriptName scudState secondaryWeapon secondaryWeaponItems secondaryWeaponMagazine select selectBestPlaces selectDiarySubject selectedEditorObjects selectEditorObject selectionNames selectionPosition selectLeader selectMax selectMin selectNoPlayer selectPlayer selectRandom selectRandomWeighted selectWeapon selectWeaponTurret sendAUMessage sendSimpleCommand sendTask sendTaskResult sendUDPMessage serverCommand serverCommandAvailable serverCommandExecutable serverName serverTime set set3DENAttribute set3DENAttributes set3DENGrid set3DENIconsVisible set3DENLayer set3DENLinesVisible set3DENLogicType set3DENMissionAttribute set3DENMissionAttributes set3DENModelsVisible set3DENObjectType set3DENSelected setAccTime setActualCollectiveRTD setAirplaneThrottle setAirportSide setAmmo setAmmoCargo setAmmoOnPylon setAnimSpeedCoef setAperture setApertureNew setArmoryPoints setAttributes setAutonomous setBehaviour setBleedingRemaining setBrakesRTD setCameraInterest setCamShakeDefParams setCamShakeParams setCamUseTI setCaptive setCenterOfMass setCollisionLight setCombatMode setCompassOscillation setConvoySeparation setCuratorCameraAreaCeiling setCuratorCoef setCuratorEditingAreaType setCuratorWaypointCost setCurrentChannel setCurrentTask setCurrentWaypoint setCustomAimCoef setCustomWeightRTD setDamage setDammage setDate setDebriefingText setDefaultCamera setDestination setDetailMapBlendPars setDir setDirection setDrawIcon setDriveOnPath setDropInterval setDynamicSimulationDistance setDynamicSimulationDistanceCoef setEditorMode setEditorObjectScope setEffectCondition setEngineRPMRTD setFace setFaceAnimation setFatigue setFeatureType setFlagAnimationPhase setFlagOwner setFlagSide setFlagTexture setFog setFormation setFormationTask setFormDir setFriend setFromEditor setFSMVariable setFuel setFuelCargo setGroupIcon setGroupIconParams setGroupIconsSelectable setGroupIconsVisible setGroupId setGroupIdGlobal setGroupOwner setGusts setHideBehind setHit setHitIndex setHitPointDamage setHorizonParallaxCoef setHUDMovementLevels setIdentity setImportance setInfoPanel setLeader setLightAmbient setLightAttenuation setLightBrightness setLightColor setLightDayLight setLightFlareMaxDistance setLightFlareSize setLightIntensity setLightnings setLightUseFlare setLocalWindParams setMagazineTurretAmmo setMarkerAlpha setMarkerAlphaLocal setMarkerBrush setMarkerBrushLocal setMarkerColor setMarkerColorLocal setMarkerDir setMarkerDirLocal setMarkerPos setMarkerPosLocal setMarkerShape setMarkerShapeLocal setMarkerSize setMarkerSizeLocal setMarkerText setMarkerTextLocal setMarkerType setMarkerTypeLocal setMass setMimic setMousePosition setMusicEffect setMusicEventHandler setName setNameSound setObjectArguments setObjectMaterial setObjectMaterialGlobal setObjectProxy setObjectTexture setObjectTextureGlobal setObjectViewDistance setOvercast setOwner setOxygenRemaining setParticleCircle setParticleClass setParticleFire setParticleParams setParticleRandom setPilotCameraDirection setPilotCameraRotation setPilotCameraTarget setPilotLight setPiPEffect setPitch setPlateNumber setPlayable setPlayerRespawnTime setPos setPosASL setPosASL2 setPosASLW setPosATL setPosition setPosWorld setPylonLoadOut setPylonsPriority setRadioMsg setRain setRainbow setRandomLip setRank setRectangular setRepairCargo setRotorBrakeRTD setShadowDistance setShotParents setSide setSimpleTaskAlwaysVisible setSimpleTaskCustomData setSimpleTaskDescription setSimpleTaskDestination setSimpleTaskTarget setSimpleTaskType setSimulWeatherLayers setSize setSkill setSlingLoad setSoundEffect setSpeaker setSpeech setSpeedMode setStamina setStaminaScheme setStatValue setSuppression setSystemOfUnits setTargetAge setTaskMarkerOffset setTaskResult setTaskState setTerrainGrid setText setTimeMultiplier setTitleEffect setTrafficDensity setTrafficDistance setTrafficGap setTrafficSpeed setTriggerActivation setTriggerArea setTriggerStatements setTriggerText setTriggerTimeout setTriggerType setType setUnconscious setUnitAbility setUnitLoadout setUnitPos setUnitPosWeak setUnitRank setUnitRecoilCoefficient setUnitTrait setUnloadInCombat setUserActionText setUserMFDText setUserMFDvalue setVariable setVectorDir setVectorDirAndUp setVectorUp setVehicleAmmo setVehicleAmmoDef setVehicleArmor setVehicleCargo setVehicleId setVehicleLock setVehiclePosition setVehicleRadar setVehicleReceiveRemoteTargets setVehicleReportOwnPosition setVehicleReportRemoteTargets setVehicleTIPars setVehicleVarName setVelocity setVelocityModelSpace setVelocityTransformation setViewDistance setVisibleIfTreeCollapsed setWantedRPMRTD setWaves setWaypointBehaviour setWaypointCombatMode setWaypointCompletionRadius setWaypointDescription setWaypointForceBehaviour setWaypointFormation setWaypointHousePosition setWaypointLoiterRadius setWaypointLoiterType setWaypointName setWaypointPosition setWaypointScript setWaypointSpeed setWaypointStatements setWaypointTimeout setWaypointType setWaypointVisible setWeaponReloadingTime setWind setWindDir setWindForce setWindStr setWingForceScaleRTD setWPPos show3DIcons showChat showCinemaBorder showCommandingMenu showCompass showCuratorCompass showGPS showHUD showLegend showMap shownArtilleryComputer shownChat shownCompass shownCuratorCompass showNewEditorObject shownGPS shownHUD shownMap shownPad shownRadio shownScoretable shownUAVFeed shownWarrant shownWatch showPad showRadio showScoretable showSubtitles showUAVFeed showWarrant showWatch showWaypoint showWaypoints side sideChat sideEnemy sideFriendly sideRadio simpleTasks simulationEnabled simulCloudDensity simulCloudOcclusion simulInClouds simulWeatherSync sin size sizeOf skill skillFinal skipTime sleep sliderPosition sliderRange sliderSetPosition sliderSetRange sliderSetSpeed sliderSpeed slingLoadAssistantShown soldierMagazines someAmmo sort soundVolume spawn speaker speed speedMode splitString sqrt squadParams stance startLoadingScreen step stop stopEngineRTD stopped str sunOrMoon supportInfo suppressFor surfaceIsWater surfaceNormal surfaceType swimInDepth switchableUnits switchAction switchCamera switchGesture switchLight switchMove synchronizedObjects synchronizedTriggers synchronizedWaypoints synchronizeObjectsAdd synchronizeObjectsRemove synchronizeTrigger synchronizeWaypoint systemChat systemOfUnits tan targetKnowledge targets targetsAggregate targetsQuery taskAlwaysVisible taskChildren taskCompleted taskCustomData taskDescription taskDestination taskHint taskMarkerOffset taskParent taskResult taskState taskType teamMember teamName teams teamSwitch teamSwitchEnabled teamType terminate terrainIntersect terrainIntersectASL terrainIntersectAtASL text textLog textLogFormat tg time timeMultiplier titleCut titleFadeOut titleObj titleRsc titleText toArray toFixed toLower toString toUpper triggerActivated triggerActivation triggerArea triggerAttachedVehicle triggerAttachObject triggerAttachVehicle triggerDynamicSimulation triggerStatements triggerText triggerTimeout triggerTimeoutCurrent triggerType turretLocal turretOwner turretUnit tvAdd tvClear tvCollapse tvCollapseAll tvCount tvCurSel tvData tvDelete tvExpand tvExpandAll tvPicture tvSetColor tvSetCurSel tvSetData tvSetPicture tvSetPictureColor tvSetPictureColorDisabled tvSetPictureColorSelected tvSetPictureRight tvSetPictureRightColor tvSetPictureRightColorDisabled tvSetPictureRightColorSelected tvSetText tvSetTooltip tvSetValue tvSort tvSortByValue tvText tvTooltip tvValue type typeName typeOf UAVControl uiNamespace uiSleep unassignCurator unassignItem unassignTeam unassignVehicle underwater uniform uniformContainer uniformItems uniformMagazines unitAddons unitAimPosition unitAimPositionVisual unitBackpack unitIsUAV unitPos unitReady unitRecoilCoefficient units unitsBelowHeight unlinkItem unlockAchievement unregisterTask updateDrawIcon updateMenuItem updateObjectTree useAISteeringComponent useAudioTimeForMoves userInputDisabled vectorAdd vectorCos vectorCrossProduct vectorDiff vectorDir vectorDirVisual vectorDistance vectorDistanceSqr vectorDotProduct vectorFromTo vectorMagnitude vectorMagnitudeSqr vectorModelToWorld vectorModelToWorldVisual vectorMultiply vectorNormalized vectorUp vectorUpVisual vectorWorldToModel vectorWorldToModelVisual vehicle vehicleCargoEnabled vehicleChat vehicleRadio vehicleReceiveRemoteTargets vehicleReportOwnPosition vehicleReportRemoteTargets vehicles vehicleVarName velocity velocityModelSpace verifySignature vest vestContainer vestItems vestMagazines viewDistance visibleCompass visibleGPS visibleMap visiblePosition visiblePositionASL visibleScoretable visibleWatch waves waypointAttachedObject waypointAttachedVehicle waypointAttachObject waypointAttachVehicle waypointBehaviour waypointCombatMode waypointCompletionRadius waypointDescription waypointForceBehaviour waypointFormation waypointHousePosition waypointLoiterRadius waypointLoiterType waypointName waypointPosition waypoints waypointScript waypointsEnabledUAV waypointShow waypointSpeed waypointStatements waypointTimeout waypointTimeoutCurrent waypointType waypointVisible weaponAccessories weaponAccessoriesCargo weaponCargo weaponDirection weaponInertia weaponLowered weapons weaponsItems weaponsItemsCargo weaponState weaponsTurret weightRTD WFSideText wind ",literal:"blufor civilian configNull controlNull displayNull east endl false grpNull independent lineBreak locationNull nil objNull opfor pi resistance scriptNull sideAmbientLife sideEmpty sideLogic sideUnknown taskNull teamMemberNull true west"},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.NUMBER_MODE,{className:"variable",begin:/\b_+[a-zA-Z]\w*/},{className:"title",begin:/[a-zA-Z][a-zA-Z0-9]+_fnc_\w*/},t,n],illegal:/#|^\$ /}}},4467:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function a(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}e.exports=function(e){var t=e.COMMENT("--","$"),s=["true","false","unknown"],i=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],r=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],o=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],l=r,c=[].concat(["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update   ","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year"],["add","asc","collation","desc","final","first","last","view"]).filter((function(e){return!r.includes(e)})),d={begin:n(/\b/,a.apply(void 0,l),/\s*\(/),keywords:{built_in:l}};return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.exceptions,a=t.when;return n=n||[],e.map((function(e){return e.match(/\|\d+$/)||n.includes(e)?e:a(e)?"".concat(e,"|0"):e}))}(c,{when:function(e){return e.length<3}}),literal:s,type:i,built_in:["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"]},contains:[{begin:a.apply(void 0,o),keywords:{$pattern:/[\w\.]+/,keyword:c.concat(o),literal:s,type:i}},{className:"type",begin:a.apply(void 0,["double precision","large object","with timezone","without timezone"])},d,{className:"variable",begin:/@[a-z0-9]+/},{className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/"/,end:/"/,contains:[{begin:/""/}]},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,{className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0}]}}},109:function(e){e.exports=function(e){var t=e.COMMENT("--","$");return{name:"SQL (more)",aliases:["mysql","oracle"],disableAutodetect:!0,case_insensitive:!0,illegal:/[<>{}*]/,contains:[{beginKeywords:"begin end start commit rollback savepoint lock alter create drop rename call delete do handler insert load replace select truncate update set show pragma grant merge describe use explain help declare prepare execute deallocate release unlock purge reset change stop analyze cache flush optimize repair kill install uninstall checksum restore check backup revoke comment values with",end:/;/,endsWithParent:!0,keywords:{$pattern:/[\w\.]+/,keyword:"as abort abs absolute acc acce accep accept access accessed accessible account acos action activate add addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias all allocate allow alter always analyze ancillary and anti any anydata anydataset anyschema anytype apply archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound bucket buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base char_length character_length characters characterset charindex charset charsetform charsetid check checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation collect colu colum column column_value columns columns_updated comment commit compact compatibility compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection consider consistent constant constraint constraints constructor container content contents context contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor deterministic diagnostics difference dimension direct_load directory disable disable_all disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding execu execut execute exempt exists exit exp expire explain explode export export_set extended extent external external_1 external_2 externally extract failed failed_login_attempts failover failure far fast feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final finish first first_value fixed flash_cache flashback floor flush following follows for forall force foreign form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ftp full function general generated get get_format get_lock getdate getutcdate global global_name globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex hierarchy high high_priority hosts hour hours http id ident_current ident_incr ident_seed identified identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile initial initialized initially initrans inmemory inner innodb input insert install instance instantiable instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lateral lax lcase lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime managed management manual map mapping mask master master_pos_wait match matched materialized max maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans md5 measures median medium member memcompress memory merge microsecond mid migration min minextents minimum mining minus minute minutes minvalue missing mod mode model modification modify module monitoring month months mount move movement multiset mutex name name_const names nan national native natural nav nchar nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck noswitch not nothing notice notnull notrim novalidate now nowait nth_value nullif nulls num numb numbe nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary out outer outfile outline output over overflow overriding package pad parallel parallel_enable parameters parent parse partial partition partitions pascal passing password password_grace_time password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction prediction_cost prediction_details prediction_probability prediction_set prepare present preserve prior priority private private_sga privileges procedural procedure procedure_analyze processlist profiles project prompt protection public publishingservername purge quarter query quick quiesce quota quotename radians raise rand range rank raw read reads readsize rebuild record records recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename repair repeat replace replicate replication required reset resetlogs resize resource respect restore restricted result result_cache resumable resume retention return returning returns reuse reverse revoke right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll sdo_georaster sdo_topo_geometry search sec_to_time second seconds section securefile security seed segment select self semi sequence sequential serializable server servererror session session_user sessions_per_user set sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone standby start starting startup statement static statistics stats_binomial_test stats_crosstab stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tablesample tan tdo template temporary terminated tertiary_weights test than then thread through tier ties time time_format time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unnest unpivot unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear wellformed when whene whenev wheneve whenever where while whitespace window with within without work wrapped xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek",literal:"true false null unknown",built_in:"array bigint binary bit blob bool boolean char character date dec decimal float int int8 integer interval number numeric real record serial serial8 smallint text time timestamp tinyint varchar varchar2 varying void"},contains:[{className:"string",begin:"'",end:"'",contains:[{begin:"''"}]},{className:"string",begin:'"',end:'"',contains:[{begin:'""'}]},{className:"string",begin:"`",end:"`"},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,e.HASH_COMMENT_MODE]},e.C_BLOCK_COMMENT_MODE,t,e.HASH_COMMENT_MODE]}}},8413:function(e){e.exports=function(e){return{name:"Stan",aliases:["stanfuncs"],keywords:{$pattern:e.IDENT_RE,title:["functions","model","data","parameters","quantities","transformed","generated"],keyword:["for","in","if","else","while","break","continue","return"].concat(["int","real","vector","ordered","positive_ordered","simplex","unit_vector","row_vector","matrix","cholesky_factor_corr|10","cholesky_factor_cov|10","corr_matrix|10","cov_matrix|10","void"]).concat(["print","reject","increment_log_prob|10","integrate_ode|10","integrate_ode_rk45|10","integrate_ode_bdf|10","algebra_solver"]),built_in:["Phi","Phi_approx","abs","acos","acosh","algebra_solver","append_array","append_col","append_row","asin","asinh","atan","atan2","atanh","bernoulli_cdf","bernoulli_lccdf","bernoulli_lcdf","bernoulli_logit_lpmf","bernoulli_logit_rng","bernoulli_lpmf","bernoulli_rng","bessel_first_kind","bessel_second_kind","beta_binomial_cdf","beta_binomial_lccdf","beta_binomial_lcdf","beta_binomial_lpmf","beta_binomial_rng","beta_cdf","beta_lccdf","beta_lcdf","beta_lpdf","beta_rng","binary_log_loss","binomial_cdf","binomial_coefficient_log","binomial_lccdf","binomial_lcdf","binomial_logit_lpmf","binomial_lpmf","binomial_rng","block","categorical_logit_lpmf","categorical_logit_rng","categorical_lpmf","categorical_rng","cauchy_cdf","cauchy_lccdf","cauchy_lcdf","cauchy_lpdf","cauchy_rng","cbrt","ceil","chi_square_cdf","chi_square_lccdf","chi_square_lcdf","chi_square_lpdf","chi_square_rng","cholesky_decompose","choose","col","cols","columns_dot_product","columns_dot_self","cos","cosh","cov_exp_quad","crossprod","csr_extract_u","csr_extract_v","csr_extract_w","csr_matrix_times_vector","csr_to_dense_matrix","cumulative_sum","determinant","diag_matrix","diag_post_multiply","diag_pre_multiply","diagonal","digamma","dims","dirichlet_lpdf","dirichlet_rng","distance","dot_product","dot_self","double_exponential_cdf","double_exponential_lccdf","double_exponential_lcdf","double_exponential_lpdf","double_exponential_rng","e","eigenvalues_sym","eigenvectors_sym","erf","erfc","exp","exp2","exp_mod_normal_cdf","exp_mod_normal_lccdf","exp_mod_normal_lcdf","exp_mod_normal_lpdf","exp_mod_normal_rng","expm1","exponential_cdf","exponential_lccdf","exponential_lcdf","exponential_lpdf","exponential_rng","fabs","falling_factorial","fdim","floor","fma","fmax","fmin","fmod","frechet_cdf","frechet_lccdf","frechet_lcdf","frechet_lpdf","frechet_rng","gamma_cdf","gamma_lccdf","gamma_lcdf","gamma_lpdf","gamma_p","gamma_q","gamma_rng","gaussian_dlm_obs_lpdf","get_lp","gumbel_cdf","gumbel_lccdf","gumbel_lcdf","gumbel_lpdf","gumbel_rng","head","hypergeometric_lpmf","hypergeometric_rng","hypot","inc_beta","int_step","integrate_ode","integrate_ode_bdf","integrate_ode_rk45","inv","inv_Phi","inv_chi_square_cdf","inv_chi_square_lccdf","inv_chi_square_lcdf","inv_chi_square_lpdf","inv_chi_square_rng","inv_cloglog","inv_gamma_cdf","inv_gamma_lccdf","inv_gamma_lcdf","inv_gamma_lpdf","inv_gamma_rng","inv_logit","inv_sqrt","inv_square","inv_wishart_lpdf","inv_wishart_rng","inverse","inverse_spd","is_inf","is_nan","lbeta","lchoose","lgamma","lkj_corr_cholesky_lpdf","lkj_corr_cholesky_rng","lkj_corr_lpdf","lkj_corr_rng","lmgamma","lmultiply","log","log10","log1m","log1m_exp","log1m_inv_logit","log1p","log1p_exp","log2","log_determinant","log_diff_exp","log_falling_factorial","log_inv_logit","log_mix","log_rising_factorial","log_softmax","log_sum_exp","logistic_cdf","logistic_lccdf","logistic_lcdf","logistic_lpdf","logistic_rng","logit","lognormal_cdf","lognormal_lccdf","lognormal_lcdf","lognormal_lpdf","lognormal_rng","machine_precision","matrix_exp","max","mdivide_left_spd","mdivide_left_tri_low","mdivide_right_spd","mdivide_right_tri_low","mean","min","modified_bessel_first_kind","modified_bessel_second_kind","multi_gp_cholesky_lpdf","multi_gp_lpdf","multi_normal_cholesky_lpdf","multi_normal_cholesky_rng","multi_normal_lpdf","multi_normal_prec_lpdf","multi_normal_rng","multi_student_t_lpdf","multi_student_t_rng","multinomial_lpmf","multinomial_rng","multiply_log","multiply_lower_tri_self_transpose","neg_binomial_2_cdf","neg_binomial_2_lccdf","neg_binomial_2_lcdf","neg_binomial_2_log_lpmf","neg_binomial_2_log_rng","neg_binomial_2_lpmf","neg_binomial_2_rng","neg_binomial_cdf","neg_binomial_lccdf","neg_binomial_lcdf","neg_binomial_lpmf","neg_binomial_rng","negative_infinity","normal_cdf","normal_lccdf","normal_lcdf","normal_lpdf","normal_rng","not_a_number","num_elements","ordered_logistic_lpmf","ordered_logistic_rng","owens_t","pareto_cdf","pareto_lccdf","pareto_lcdf","pareto_lpdf","pareto_rng","pareto_type_2_cdf","pareto_type_2_lccdf","pareto_type_2_lcdf","pareto_type_2_lpdf","pareto_type_2_rng","pi","poisson_cdf","poisson_lccdf","poisson_lcdf","poisson_log_lpmf","poisson_log_rng","poisson_lpmf","poisson_rng","positive_infinity","pow","print","prod","qr_Q","qr_R","quad_form","quad_form_diag","quad_form_sym","rank","rayleigh_cdf","rayleigh_lccdf","rayleigh_lcdf","rayleigh_lpdf","rayleigh_rng","reject","rep_array","rep_matrix","rep_row_vector","rep_vector","rising_factorial","round","row","rows","rows_dot_product","rows_dot_self","scaled_inv_chi_square_cdf","scaled_inv_chi_square_lccdf","scaled_inv_chi_square_lcdf","scaled_inv_chi_square_lpdf","scaled_inv_chi_square_rng","sd","segment","sin","singular_values","sinh","size","skew_normal_cdf","skew_normal_lccdf","skew_normal_lcdf","skew_normal_lpdf","skew_normal_rng","softmax","sort_asc","sort_desc","sort_indices_asc","sort_indices_desc","sqrt","sqrt2","square","squared_distance","step","student_t_cdf","student_t_lccdf","student_t_lcdf","student_t_lpdf","student_t_rng","sub_col","sub_row","sum","tail","tan","tanh","target","tcrossprod","tgamma","to_array_1d","to_array_2d","to_matrix","to_row_vector","to_vector","trace","trace_gen_quad_form","trace_quad_form","trigamma","trunc","uniform_cdf","uniform_lccdf","uniform_lcdf","uniform_lpdf","uniform_rng","variance","von_mises_lpdf","von_mises_rng","weibull_cdf","weibull_lccdf","weibull_lcdf","weibull_lpdf","weibull_rng","wiener_lpdf","wishart_lpdf","wishart_rng"]},contains:[e.C_LINE_COMMENT_MODE,e.COMMENT(/#/,/$/,{relevance:0,keywords:{"meta-keyword":"include"}}),e.COMMENT(/\/\*/,/\*\//,{relevance:0,contains:[{className:"doctag",begin:/@(return|param)/}]}),{begin:/<\s*lower\s*=/,keywords:"lower"},{begin:/[<,]\s*upper\s*=/,keywords:"upper"},{className:"keyword",begin:/\btarget\s*\+=/,relevance:10},{begin:"~\\s*("+e.IDENT_RE+")\\s*\\(",keywords:["bernoulli","bernoulli_logit","beta","beta_binomial","binomial","binomial_logit","categorical","categorical_logit","cauchy","chi_square","dirichlet","double_exponential","exp_mod_normal","exponential","frechet","gamma","gaussian_dlm_obs","gumbel","hypergeometric","inv_chi_square","inv_gamma","inv_wishart","lkj_corr","lkj_corr_cholesky","logistic","lognormal","multi_gp","multi_gp_cholesky","multi_normal","multi_normal_cholesky","multi_normal_prec","multi_student_t","multinomial","neg_binomial","neg_binomial_2","neg_binomial_2_log","normal","ordered_logistic","pareto","pareto_type_2","poisson","poisson_log","rayleigh","scaled_inv_chi_square","skew_normal","student_t","uniform","von_mises","weibull","wiener","wishart"]},{className:"number",variants:[{begin:/\b\d+(?:\.\d*)?(?:[eE][+-]?\d+)?/},{begin:/\.\d+(?:[eE][+-]?\d+)?\b/}],relevance:0},{className:"string",begin:'"',end:'"',relevance:0}]}}},250:function(e){e.exports=function(e){return{name:"Stata",aliases:["do","ado"],case_insensitive:!0,keywords:"if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey bias binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 bubble bubbleplot ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d|0 datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e|0 ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error esize est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 forest forestplot form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate funnel funnelplot g|0 gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h|0 hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l|0 la lab labbe labbeplot labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m|0 ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize menl meqparse mer merg merge meta mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n|0 nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trimfill trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u|0 unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5",contains:[{className:"symbol",begin:/`[a-zA-Z0-9_]+'/},{className:"variable",begin:/\$\{?[a-zA-Z0-9_]+\}?/},{className:"string",variants:[{begin:'`"[^\r\n]*?"\''},{begin:'"[^\r\n"]*"'}]},{className:"built_in",variants:[{begin:"\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\()"}]},e.COMMENT("^[ \t]*\\*.*$",!1),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]}}},716:function(e){e.exports=function(e){return{name:"STEP Part 21",aliases:["p21","step","stp"],case_insensitive:!0,keywords:{$pattern:"[A-Z_][A-Z0-9_.]*",keyword:"HEADER ENDSEC DATA"},contains:[{className:"meta",begin:"ISO-10303-21;",relevance:10},{className:"meta",begin:"END-ISO-10303-21;",relevance:10},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.COMMENT("/\\*\\*!","\\*/"),e.C_NUMBER_MODE,e.inherit(e.APOS_STRING_MODE,{illegal:null}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),{className:"string",begin:"'",end:"'"},{className:"symbol",variants:[{begin:"#",end:"\\d+",illegal:"\\W"}]}]}}},9914:function(e){var t=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],n=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],a=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],s=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],i=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","auto","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","clip-path","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-variant","font-variant-ligatures","font-variation-settings","font-weight","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inherit","initial","justify-content","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marks","mask","max-height","max-width","min-height","min-width","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","perspective","perspective-origin","pointer-events","position","quotes","resize","right","src","tab-size","table-layout","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-indent","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"].reverse();e.exports=function(e){var r=function(e){return{IMPORTANT:{className:"meta",begin:"!important"},HEXCOLOR:{className:"number",begin:"#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})"},ATTRIBUTE_SELECTOR_MODE:{className:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]}}}(e),o={className:"variable",begin:"\\$"+e.IDENT_RE},l="(?=[.\\s\\n[:,(])";return{name:"Stylus",aliases:["styl"],case_insensitive:!1,keywords:"if else for in",illegal:"("+["\\?","(\\bReturn\\b)","(\\bEnd\\b)","(\\bend\\b)","(\\bdef\\b)",";","#\\s","\\*\\s","===\\s","\\|","%"].join("|")+")",contains:[e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,r.HEXCOLOR,{begin:"\\.[a-zA-Z][a-zA-Z0-9_-]*"+l,className:"selector-class"},{begin:"#[a-zA-Z][a-zA-Z0-9_-]*"+l,className:"selector-id"},{begin:"\\b("+t.join("|")+")"+l,className:"selector-tag"},{className:"selector-pseudo",begin:"&?:("+a.join("|")+")"+l},{className:"selector-pseudo",begin:"&?::("+s.join("|")+")"+l},r.ATTRIBUTE_SELECTOR_MODE,{className:"keyword",begin:/@media/,starts:{end:/[{;}]/,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:n.join(" ")},contains:[e.CSS_NUMBER_MODE]}},{className:"keyword",begin:"@((-(o|moz|ms|webkit)-)?("+["charset","css","debug","extend","font-face","for","import","include","keyframes","media","mixin","page","warn","while"].join("|")+"))\\b"},o,e.CSS_NUMBER_MODE,{className:"function",begin:"^[a-zA-Z][a-zA-Z0-9_-]*\\(.*\\)",illegal:"[\\n]",returnBegin:!0,contains:[{className:"title",begin:"\\b[a-zA-Z][a-zA-Z0-9_-]*"},{className:"params",begin:/\(/,end:/\)/,contains:[r.HEXCOLOR,o,e.APOS_STRING_MODE,e.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE]}]},{className:"attribute",begin:"\\b("+i.join("|")+")\\b",starts:{end:/;|$/,contains:[r.HEXCOLOR,o,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.CSS_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,r.IMPORTANT],illegal:/\./,relevance:0}}]}}},7972:function(e){e.exports=function(e){return{name:"SubUnit",case_insensitive:!0,contains:[{className:"string",begin:"\\[\n(multipart)?",end:"\\]\n"},{className:"string",begin:"\\d{4}-\\d{2}-\\d{2}(\\s+)\\d{2}:\\d{2}:\\d{2}.\\d+Z"},{className:"string",begin:"(\\+|-)\\d+"},{className:"keyword",relevance:10,variants:[{begin:"^(test|testing|success|successful|failure|error|skip|xfail|uxsuccess)(:?)\\s+(test)?"},{begin:"^progress(:?)(\\s+)?(pop|push)?"},{begin:"^tags:"},{begin:"^time:"}]}]}}},7689:function(e,t,n){var a=n(4704).default,s=n(861).default;function i(e){return e?"string"===typeof e?e:e.source:null}function r(e){return o("(?=",e,")")}function o(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return i(e)})).join("")}function l(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return"("+t.map((function(e){return i(e)})).join("|")+")"}var c=function(e){return o(/\b/,e,/\w$/.test(e)?/\b/:/\B/)},d=["Protocol","Type"].map(c),u=["init","self"].map(c),p=["Any","Self"],m=["associatedtype","async","await",/as\?/,/as!/,"as","break","case","catch","class","continue","convenience","default","defer","deinit","didSet","do","dynamic","else","enum","extension","fallthrough",/fileprivate\(set\)/,"fileprivate","final","for","func","get","guard","if","import","indirect","infix",/init\?/,/init!/,"inout",/internal\(set\)/,"internal","in","is","lazy","let","mutating","nonmutating",/open\(set\)/,"open","operator","optional","override","postfix","precedencegroup","prefix",/private\(set\)/,"private","protocol",/public\(set\)/,"public","repeat","required","rethrows","return","set","some","static","struct","subscript","super","switch","throws","throw",/try\?/,/try!/,"try","typealias",/unowned\(safe\)/,/unowned\(unsafe\)/,"unowned","var","weak","where","while","willSet"],h=["false","nil","true"],f=["assignment","associativity","higherThan","left","lowerThan","none","right"],g=["#colorLiteral","#column","#dsohandle","#else","#elseif","#endif","#error","#file","#fileID","#fileLiteral","#filePath","#function","#if","#imageLiteral","#keyPath","#line","#selector","#sourceLocation","#warn_unqualified_access","#warning"],x=["abs","all","any","assert","assertionFailure","debugPrint","dump","fatalError","getVaList","isKnownUniquelyReferenced","max","min","numericCast","pointwiseMax","pointwiseMin","precondition","preconditionFailure","print","readLine","repeatElement","sequence","stride","swap","swift_unboxFromSwiftValueWithType","transcode","type","unsafeBitCast","unsafeDowncast","withExtendedLifetime","withUnsafeMutablePointer","withUnsafePointer","withVaList","withoutActuallyEscaping","zip"],_=l(/[/=\-+!*%<>&|^~?]/,/[\u00A1-\u00A7]/,/[\u00A9\u00AB]/,/[\u00AC\u00AE]/,/[\u00B0\u00B1]/,/[\u00B6\u00BB\u00BF\u00D7\u00F7]/,/[\u2016-\u2017]/,/[\u2020-\u2027]/,/[\u2030-\u203E]/,/[\u2041-\u2053]/,/[\u2055-\u205E]/,/[\u2190-\u23FF]/,/[\u2500-\u2775]/,/[\u2794-\u2BFF]/,/[\u2E00-\u2E7F]/,/[\u3001-\u3003]/,/[\u3008-\u3020]/,/[\u3030]/),b=l(_,/[\u0300-\u036F]/,/[\u1DC0-\u1DFF]/,/[\u20D0-\u20FF]/,/[\uFE00-\uFE0F]/,/[\uFE20-\uFE2F]/),y=o(_,b,"*"),v=l(/[a-zA-Z_]/,/[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/,/[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/,/[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/,/[\u1E00-\u1FFF]/,/[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/,/[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/,/[\u2C00-\u2DFF\u2E80-\u2FFF]/,/[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/,/[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/,/[\uFE47-\uFEFE\uFF00-\uFFFD]/),N=l(v,/\d/,/[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/),E=o(v,N,"*"),S=o(/[A-Z]/,N,"*"),j=["autoclosure",o(/convention\(/,l("swift","block","c"),/\)/),"discardableResult","dynamicCallable","dynamicMemberLookup","escaping","frozen","GKInspectable","IBAction","IBDesignable","IBInspectable","IBOutlet","IBSegueAction","inlinable","main","nonobjc","NSApplicationMain","NSCopying","NSManaged",o(/objc\(/,E,/\)/),"objc","objcMembers","propertyWrapper","requires_stored_property_inits","testable","UIApplicationMain","unknown","usableFromInline"],T=["iOS","iOSApplicationExtension","macOS","macOSApplicationExtension","macCatalyst","macCatalystApplicationExtension","watchOS","watchOSApplicationExtension","tvOS","tvOSApplicationExtension","swift"];e.exports=function(e){var t={match:/\s+/,relevance:0},n=e.COMMENT("/\\*","\\*/",{contains:["self"]}),i=[e.C_LINE_COMMENT_MODE,n],_={className:"keyword",begin:o(/\./,r(l.apply(void 0,s(d).concat(s(u))))),end:l.apply(void 0,s(d).concat(s(u))),excludeBegin:!0},v={match:o(/\./,l.apply(void 0,m)),relevance:0},w=m.filter((function(e){return"string"===typeof e})).concat(["_|0"]),I=m.filter((function(e){return"string"!==typeof e})).concat(p).map(c),C={variants:[{className:"keyword",match:l.apply(void 0,s(I).concat(s(u)))}]},O={$pattern:l(/\b\w+/,/#\w+/),keyword:w.concat(g),literal:h},R=[_,v,C],A=[{match:o(/\./,l.apply(void 0,x)),relevance:0},{className:"built_in",match:o(/\b/,l.apply(void 0,x),/(?=\()/)}],k={match:/->/,relevance:0},D=[k,{className:"operator",relevance:0,variants:[{match:y},{match:"\\.(\\.|".concat(b,")+")}]}],P="([0-9]_*)+",M="([0-9a-fA-F]_*)+",L={className:"number",relevance:0,variants:[{match:"\\b(".concat(P,")(\\.(").concat(P,"))?")+"([eE][+-]?(".concat(P,"))?\\b")},{match:"\\b0x(".concat(M,")(\\.(").concat(M,"))?")+"([pP][+-]?(".concat(P,"))?\\b")},{match:/\b0o([0-7]_*)+\b/},{match:/\b0b([01]_*)+\b/}]},F=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{className:"subst",variants:[{match:o(/\\/,e,/[0\\tnr"']/)},{match:o(/\\/,e,/u\{[0-9a-fA-F]{1,8}\}/)}]}},U=function(){return{className:"subst",match:o(/\\/,arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",/[\t ]*(?:[\r\n]|\r\n)/)}},B=function(){return{className:"subst",label:"interpol",begin:o(/\\/,arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",/\(/),end:/\)/}},G=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{begin:o(e,/"""/),end:o(/"""/,e),contains:[F(e),U(e),B(e)]}},H=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{begin:o(e,/"/),end:o(/"/,e),contains:[F(e),B(e)]}},z={className:"string",variants:[G(),G("#"),G("##"),G("###"),H(),H("#"),H("##"),H("###")]},Y={match:o(/`/,E,/`/)},q=[Y,{className:"variable",match:/\$\d+/},{className:"variable",match:"\\$".concat(N,"+")}],V=[{match:/(@|#)available/,className:"keyword",starts:{contains:[{begin:/\(/,end:/\)/,keywords:T,contains:[].concat(D,[L,z])}]}},{className:"keyword",match:o(/@/,l.apply(void 0,j))},{className:"meta",match:o(/@/,E)}],W={match:r(/\b[A-Z]/),relevance:0,contains:[{className:"type",match:o(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,N,"+")},{className:"type",match:S,relevance:0},{match:/[?!]+/,relevance:0},{match:/\.\.\./,relevance:0},{match:o(/\s+&\s+/,r(S)),relevance:0}]},Q={begin:/</,end:/>/,keywords:O,contains:[].concat(i,R,V,[k,W])};W.contains.push(Q);var $,K={begin:/\(/,end:/\)/,relevance:0,keywords:O,contains:["self",{match:o(E,/\s*:/),keywords:"_|0",relevance:0}].concat(i,R,A,D,[L,z],q,V,[W])},X={beginKeywords:"func",contains:[{className:"title",match:l(Y.match,E,y),endsParent:!0,relevance:0},t]},Z={begin:/</,end:/>/,contains:[].concat(i,[W])},J={begin:/\(/,end:/\)/,keywords:O,contains:[{begin:l(r(o(E,/\s*:/)),r(o(E,/\s+/,E,/\s*:/))),end:/:/,relevance:0,contains:[{className:"keyword",match:/\b_\b/},{className:"params",match:E}]}].concat(i,R,D,[L,z],V,[W,K]),endsParent:!0,illegal:/["']/},ee={className:"function",match:r(/\bfunc\b/),contains:[X,Z,J,t],illegal:[/\[/,/%/]},te={className:"function",match:/\b(subscript|init[?!]?)\s*(?=[<(])/,keywords:{keyword:"subscript init init? init!",$pattern:/\w+[?!]?/},contains:[Z,J,t],illegal:/\[|%/},ne={beginKeywords:"operator",end:e.MATCH_NOTHING_RE,contains:[{className:"title",match:y,endsParent:!0,relevance:0}]},ae={beginKeywords:"precedencegroup",end:e.MATCH_NOTHING_RE,contains:[{className:"title",match:S,relevance:0},{begin:/{/,end:/}/,relevance:0,endsParent:!0,keywords:[].concat(f,h),contains:[W]}]},se=a(z.variants);try{for(se.s();!($=se.n()).done;){var ie=$.value.contains.find((function(e){return"interpol"===e.label}));ie.keywords=O;var re=[].concat(R,A,D,[L,z],q);ie.contains=[].concat(s(re),[{begin:/\(/,end:/\)/,contains:["self"].concat(s(re))}])}}catch(oe){se.e(oe)}finally{se.f()}return{name:"Swift",keywords:O,contains:[].concat(i,[ee,te,{className:"class",beginKeywords:"struct protocol class extension enum",end:"\\{",excludeEnd:!0,keywords:O,contains:[e.inherit(e.TITLE_MODE,{begin:/[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/})].concat(R)},ne,ae,{beginKeywords:"import",end:/$/,contains:[].concat(i),relevance:0}],R,A,D,[L,z],q,V,[W,K])}}},8073:function(e){e.exports=function(e){return{name:"Tagger Script",contains:[{className:"comment",begin:/\$noop\(/,end:/\)/,contains:[{begin:/\(/,end:/\)/,contains:["self",{begin:/\\./}]}],relevance:10},{className:"keyword",begin:/\$(?!noop)[a-zA-Z][_a-zA-Z0-9]*/,end:/\(/,excludeEnd:!0},{className:"variable",begin:/%[_a-zA-Z0-9:]*/,end:"%"},{className:"symbol",begin:/\\./}]}}},5913:function(e){e.exports=function(e){return{name:"Test Anything Protocol",case_insensitive:!0,contains:[e.HASH_COMMENT_MODE,{className:"meta",variants:[{begin:"^TAP version (\\d+)$"},{begin:"^1\\.\\.(\\d+)$"}]},{begin:/---$/,end:"\\.\\.\\.$",subLanguage:"yaml",relevance:0},{className:"number",begin:" (\\d+) "},{className:"symbol",variants:[{begin:"^ok"},{begin:"^not ok"}]}]}}},7125:function(e){function t(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var n,a=/[a-zA-Z_][a-zA-Z0-9_]*/,s={className:"number",variants:[e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE]};return{name:"Tcl",aliases:["tk"],keywords:"after append apply array auto_execok auto_import auto_load auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock close concat continue dde dict encoding eof error eval exec exit expr fblocked fconfigure fcopy file fileevent filename flush for foreach format gets glob global history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename return safe scan seek set socket source split string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update uplevel upvar variable vwait while",contains:[e.COMMENT(";[ \\t]*#","$"),e.COMMENT("^[ \\t]*#","$"),{beginKeywords:"proc",end:"[\\{]",excludeEnd:!0,contains:[{className:"title",begin:"[ \\t\\n\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",end:"[ \\t\\n\\r]",endsWithParent:!0,excludeEnd:!0}]},{className:"variable",variants:[{begin:t(/\$/,(n=/::/,t("(",n,")?")),a,"(::",a,")*")},{begin:"\\$\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",end:"\\}",contains:[s]}]},{className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[e.inherit(e.QUOTE_STRING_MODE,{illegal:null})]},s]}}},4938:function(e){e.exports=function(e){var t="bool byte i16 i32 i64 double string binary";return{name:"Thrift",keywords:{keyword:"namespace const typedef struct enum service exception void oneway set list map required optional",built_in:t,literal:"true false"},contains:[e.QUOTE_STRING_MODE,e.NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"class",beginKeywords:"struct enum service exception",end:/\{/,illegal:/\n/,contains:[e.inherit(e.TITLE_MODE,{starts:{endsWithParent:!0,excludeEnd:!0}})]},{begin:"\\b(set|list|map)\\s*<",end:">",keywords:t,contains:["self"]}]}}},9115:function(e){e.exports=function(e){var t={className:"number",begin:"[1-9][0-9]*",relevance:0},n={className:"symbol",begin:":[^\\]]+"};return{name:"TP",keywords:{keyword:"ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN SUBSTR FINDSTR VOFFSET PROG ATTR MN POS",literal:"ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET"},contains:[{className:"built_in",begin:"(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\[",end:"\\]",contains:["self",t,n]},{className:"built_in",begin:"(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\[",end:"\\]",contains:["self",t,e.QUOTE_STRING_MODE,n]},{className:"keyword",begin:"/(PROG|ATTR|MN|POS|END)\\b"},{className:"keyword",begin:"(CALL|RUN|POINT_LOGIC|LBL)\\b"},{className:"keyword",begin:"\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)"},{className:"number",begin:"\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\b",relevance:0},e.COMMENT("//","[;$]"),e.COMMENT("!","[;$]"),e.COMMENT("--eg:","$"),e.QUOTE_STRING_MODE,{className:"string",begin:"'",end:"'"},e.C_NUMBER_MODE,{className:"variable",begin:"\\$[A-Za-z0-9_]+"}]}}},8099:function(e){e.exports=function(e){var t="attribute block constant cycle date dump include max min parent random range source template_from_string",n={beginKeywords:t,keywords:{name:t},relevance:0,contains:[{className:"params",begin:"\\(",end:"\\)"}]},a={begin:/\|[A-Za-z_]+:?/,keywords:"abs batch capitalize column convert_encoding date date_modify default escape filter first format inky_to_html inline_css join json_encode keys last length lower map markdown merge nl2br number_format raw reduce replace reverse round slice sort spaceless split striptags title trim upper url_encode",contains:[n]},s="apply autoescape block deprecated do embed extends filter flush for from if import include macro sandbox set use verbatim with";return s=s+" "+s.split(" ").map((function(e){return"end"+e})).join(" "),{name:"Twig",aliases:["craftcms"],case_insensitive:!0,subLanguage:"xml",contains:[e.COMMENT(/\{#/,/#\}/),{className:"template-tag",begin:/\{%/,end:/%\}/,contains:[{className:"name",begin:/\w+/,keywords:s,starts:{endsWithParent:!0,contains:[a,n],relevance:0}}]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:["self",a,n]}]}}},4888:function(e){var t="[A-Za-z$_][0-9A-Za-z$_]*",n=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],a=["true","false","null","undefined","NaN","Infinity"],s=[].concat(["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],["arguments","this","super","console","window","document","localStorage","module","global"],["Intl","DataView","Number","Math","Date","String","RegExp","Object","Function","Boolean","Error","Symbol","Set","Map","WeakSet","WeakMap","Proxy","Reflect","JSON","Promise","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Float32Array","Array","Uint8Array","Uint8ClampedArray","ArrayBuffer","BigInt64Array","BigUint64Array","BigInt"],["EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"]);function i(e){return r("(?=",e,")")}function r(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return(t=e)?"string"===typeof t?t:t.source:null;var t})).join("")}e.exports=function(e){var o=t,l={$pattern:t,keyword:n.concat(["type","namespace","typedef","interface","public","private","protected","implements","declare","abstract","readonly"]),literal:a,built_in:s.concat(["any","void","number","boolean","string","object","never","enum"])},c={className:"meta",begin:"@"+o},d=function(e,t,n){var a=e.contains.findIndex((function(e){return e.label===t}));if(-1===a)throw new Error("can not find mode to replace");e.contains.splice(a,1,n)},u=function(e){var o=t,l="<>",c="</>",d={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:function(e,t){var n=e[0].length+e.index,a=e.input[n];"<"!==a?">"===a&&(function(e,t){var n=t.after,a="</"+e[0].slice(1);return-1!==e.input.indexOf(a,n)}(e,{after:n})||t.ignoreMatch()):t.ignoreMatch()}},u={$pattern:t,keyword:n,literal:a,built_in:s},p="[0-9](_?[0-9])*",m="\\.(".concat(p,")"),h="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",f={className:"number",variants:[{begin:"(\\b(".concat(h,")((").concat(m,")|\\.)?|(").concat(m,"))")+"[eE][+-]?(".concat(p,")\\b")},{begin:"\\b(".concat(h,")\\b((").concat(m,")\\b|\\.)?|(").concat(m,")\\b")},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},g={className:"subst",begin:"\\$\\{",end:"\\}",keywords:u,contains:[]},x={begin:"html`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,g],subLanguage:"xml"}},_={begin:"css`",end:"",starts:{end:"`",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,g],subLanguage:"css"}},b={className:"string",begin:"`",end:"`",contains:[e.BACKSLASH_ESCAPE,g]},y={className:"comment",variants:[e.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+",contains:[{className:"type",begin:"\\{",end:"\\}",relevance:0},{className:"variable",begin:o+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]},v=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,x,_,b,f,e.REGEXP_MODE];g.contains=v.concat({begin:/\{/,end:/\}/,keywords:u,contains:["self"].concat(v)});var N=[].concat(y,g.contains),E=N.concat([{begin:/\(/,end:/\)/,keywords:u,contains:["self"].concat(N)}]),S={className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:E};return{name:"Javascript",aliases:["js","jsx","mjs","cjs"],keywords:u,exports:{PARAMS_CONTAINS:E},illegal:/#(?![$_A-z])/,contains:[e.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,x,_,b,y,f,{begin:r(/[{,\n]\s*/,i(r(/(((\/\/.*$)|(\/\*(\*[^/]|[^*])*\*\/))\s*)*/,o+"\\s*:"))),relevance:0,contains:[{className:"attr",begin:o+i("\\s*:"),relevance:0}]},{begin:"("+e.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",contains:[y,e.REGEXP_MODE,{className:"function",begin:"(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+e.UNDERSCORE_IDENT_RE+")\\s*=>",returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:e.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:E}]}]},{begin:/,/,relevance:0},{className:"",begin:/\s/,end:/\s*/,skip:!0},{variants:[{begin:l,end:c},{begin:d.begin,"on:begin":d.isTrulyOpeningTag,end:d.end}],subLanguage:"xml",contains:[{begin:d.begin,end:d.end,skip:!0,contains:["self"]}]}],relevance:0},{className:"function",beginKeywords:"function",end:/[{;]/,excludeEnd:!0,keywords:u,contains:["self",e.inherit(e.TITLE_MODE,{begin:o}),S],illegal:/%/},{beginKeywords:"while if switch catch for"},{className:"function",begin:e.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,contains:[S,e.inherit(e.TITLE_MODE,{begin:o})]},{variants:[{begin:"\\."+o},{begin:"\\$"+o}],relevance:0},{className:"class",beginKeywords:"class",end:/[{;=]/,excludeEnd:!0,illegal:/[:"[\]]/,contains:[{beginKeywords:"extends"},e.UNDERSCORE_TITLE_MODE]},{begin:/\b(?=constructor)/,end:/[{;]/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:o}),"self",S]},{begin:"(get|set)\\s+(?="+o+"\\()",end:/\{/,keywords:"get set",contains:[e.inherit(e.TITLE_MODE,{begin:o}),{begin:/\(\)/},S]},{begin:/\$[(.]/}]}}(e);return Object.assign(u.keywords,l),u.exports.PARAMS_CONTAINS.push(c),u.contains=u.contains.concat([c,{beginKeywords:"namespace",end:/\{/,excludeEnd:!0},{beginKeywords:"interface",end:/\{/,excludeEnd:!0,keywords:"interface extends"}]),d(u,"shebang",e.SHEBANG()),d(u,"use_strict",{className:"meta",relevance:10,begin:/^\s*['"]use strict['"]/}),u.contains.find((function(e){return"function"===e.className})).relevance=0,Object.assign(u,{name:"TypeScript",aliases:["ts","tsx"]}),u}},1936:function(e){e.exports=function(e){return{name:"Vala",keywords:{keyword:"char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 uint16 uint32 uint64 float double bool struct enum string void weak unowned owned async signal static abstract interface override virtual delegate if while do for foreach else switch case break default return try catch public private protected internal using new this get set const stdout stdin stderr var",built_in:"DBus GLib CCode Gee Object Gtk Posix",literal:"false true null"},contains:[{className:"class",beginKeywords:"class interface namespace",end:/\{/,excludeEnd:!0,illegal:"[^,:\\n\\s\\.]",contains:[e.UNDERSCORE_TITLE_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:"string",begin:'"""',end:'"""',relevance:5},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,{className:"meta",begin:"^#",end:"$",relevance:2}]}}},1608:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function a(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}e.exports=function(e){var t=/\d{1,2}\/\d{1,2}\/\d{4}/,s=/\d{4}-\d{1,2}-\d{1,2}/,i=/(\d|1[012])(:\d+){0,2} *(AM|PM)/,r=/\d{1,2}(:\d{1,2}){1,2}/,o={className:"literal",variants:[{begin:n(/# */,a(s,t),/ *#/)},{begin:n(/# */,r,/ *#/)},{begin:n(/# */,i,/ *#/)},{begin:n(/# */,a(s,t),/ +/,a(i,r),/ *#/)}]},l=e.COMMENT(/'''/,/$/,{contains:[{className:"doctag",begin:/<\/?/,end:/>/}]}),c=e.COMMENT(null,/$/,{variants:[{begin:/'/},{begin:/([\t ]|^)REM(?=\s)/}]});return{name:"Visual Basic .NET",aliases:["vb"],case_insensitive:!0,classNameAliases:{label:"symbol"},keywords:{keyword:"addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield",built_in:"addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort",type:"boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort",literal:"true false nothing"},illegal:"//|\\{|\\}|endif|gosub|variant|wend|^\\$ ",contains:[{className:"string",begin:/"(""|[^/n])"C\b/},{className:"string",begin:/"/,end:/"/,illegal:/\n/,contains:[{begin:/""/}]},o,{className:"number",relevance:0,variants:[{begin:/\b\d[\d_]*((\.[\d_]+(E[+-]?[\d_]+)?)|(E[+-]?[\d_]+))[RFD@!#]?/},{begin:/\b\d[\d_]*((U?[SIL])|[%&])?/},{begin:/&H[\dA-F_]+((U?[SIL])|[%&])?/},{begin:/&O[0-7_]+((U?[SIL])|[%&])?/},{begin:/&B[01_]+((U?[SIL])|[%&])?/}]},{className:"label",begin:/^\w+:/},l,c,{className:"meta",begin:/[\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\b/,end:/$/,keywords:{"meta-keyword":"const disable else elseif enable end externalsource if region then"},contains:[c]}]}}},1434:function(e){e.exports=function(e){return{name:"VBScript in HTML",subLanguage:"xml",contains:[{begin:"<%",end:"%>",subLanguage:"vbscript"}]}}},5827:function(e,t,n){var a=n(861).default;function s(e){return e?"string"===typeof e?e:e.source:null}function i(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((function(e){return s(e)})).join("")}function r(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return"("+t.map((function(e){return s(e)})).join("|")+")"}e.exports=function(e){var t="lcase month vartype instrrev ubound setlocale getobject rgb getref string weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency conversions csng timevalue second year space abs clng timeserial fixs len asc isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim strcomp int createobject loadpicture tan formatnumber mid split  cint sin datepart ltrim sqr time derived eval date formatpercent exp inputbox left ascw chrw regexp cstr err".split(" ");return{name:"VBScript",aliases:["vbs"],case_insensitive:!0,keywords:{keyword:"call class const dim do loop erase execute executeglobal exit for each next function if then else on error option explicit new private property let get public randomize redim rem select case set stop sub while wend with end to elseif is or xor and not class_initialize class_terminate default preserve in me byval byref step resume goto",built_in:["server","response","request","scriptengine","scriptenginebuildversion","scriptengineminorversion","scriptenginemajorversion"],literal:"true false null nothing empty"},illegal:"//",contains:[{begin:i(r.apply(void 0,a(t)),"\\s*\\("),relevance:0,keywords:{built_in:t}},e.inherit(e.QUOTE_STRING_MODE,{contains:[{begin:'""'}]}),e.COMMENT(/'/,/$/,{relevance:0}),e.C_NUMBER_MODE]}}},2683:function(e){e.exports=function(e){return{name:"Verilog",aliases:["v","sv","svh"],case_insensitive:!1,keywords:{$pattern:/[\w\$]+/,keyword:"accept_on alias always always_comb always_ff always_latch and assert assign assume automatic before begin bind bins binsof bit break buf|0 bufif0 bufif1 byte case casex casez cell chandle checker class clocking cmos config const constraint context continue cover covergroup coverpoint cross deassign default defparam design disable dist do edge else end endcase endchecker endclass endclocking endconfig endfunction endgenerate endgroup endinterface endmodule endpackage endprimitive endprogram endproperty endspecify endsequence endtable endtask enum event eventually expect export extends extern final first_match for force foreach forever fork forkjoin function generate|5 genvar global highz0 highz1 if iff ifnone ignore_bins illegal_bins implements implies import incdir include initial inout input inside instance int integer interconnect interface intersect join join_any join_none large let liblist library local localparam logic longint macromodule matches medium modport module nand negedge nettype new nexttime nmos nor noshowcancelled not notif0 notif1 or output package packed parameter pmos posedge primitive priority program property protected pull0 pull1 pulldown pullup pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared sequence shortint shortreal showcancelled signed small soft solve specify specparam static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on sync_reject_on table tagged task this throughout time timeprecision timeunit tran tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 unsigned until until_with untyped use uwire var vectored virtual void wait wait_order wand weak weak0 weak1 while wildcard wire with within wor xnor xor",literal:"null",built_in:"$finish $stop $exit $fatal $error $warning $info $realtime $time $printtimescale $bitstoreal $bitstoshortreal $itor $signed $cast $bits $stime $timeformat $realtobits $shortrealtobits $rtoi $unsigned $asserton $assertkill $assertpasson $assertfailon $assertnonvacuouson $assertoff $assertcontrol $assertpassoff $assertfailoff $assertvacuousoff $isunbounded $sampled $fell $changed $past_gclk $fell_gclk $changed_gclk $rising_gclk $steady_gclk $coverage_control $coverage_get $coverage_save $set_coverage_db_name $rose $stable $past $rose_gclk $stable_gclk $future_gclk $falling_gclk $changing_gclk $display $coverage_get_max $coverage_merge $get_coverage $load_coverage_db $typename $unpacked_dimensions $left $low $increment $clog2 $ln $log10 $exp $sqrt $pow $floor $ceil $sin $cos $tan $countbits $onehot $isunknown $fatal $warning $dimensions $right $high $size $asin $acos $atan $atan2 $hypot $sinh $cosh $tanh $asinh $acosh $atanh $countones $onehot0 $error $info $random $dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson $dist_t $dist_uniform $q_initialize $q_remove $q_exam $async$and$array $async$nand$array $async$or$array $async$nor$array $sync$and$array $sync$nand$array $sync$or$array $sync$nor$array $q_add $q_full $psprintf $async$and$plane $async$nand$plane $async$or$plane $async$nor$plane $sync$and$plane $sync$nand$plane $sync$or$plane $sync$nor$plane $system $display $displayb $displayh $displayo $strobe $strobeb $strobeh $strobeo $write $readmemb $readmemh $writememh $value$plusargs $dumpvars $dumpon $dumplimit $dumpports $dumpportson $dumpportslimit $writeb $writeh $writeo $monitor $monitorb $monitorh $monitoro $writememb $dumpfile $dumpoff $dumpall $dumpflush $dumpportsoff $dumpportsall $dumpportsflush $fclose $fdisplay $fdisplayb $fdisplayh $fdisplayo $fstrobe $fstrobeb $fstrobeh $fstrobeo $swrite $swriteb $swriteh $swriteo $fscanf $fread $fseek $fflush $feof $fopen $fwrite $fwriteb $fwriteh $fwriteo $fmonitor $fmonitorb $fmonitorh $fmonitoro $sformat $sformatf $fgetc $ungetc $fgets $sscanf $rewind $ftell $ferror"},contains:[e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE,e.QUOTE_STRING_MODE,{className:"number",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:"\\b((\\d+'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)"},{begin:"\\B(('(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)"},{begin:"\\b([0-9_])+",relevance:0}]},{className:"variable",variants:[{begin:"#\\((?!parameter).+\\)"},{begin:"\\.\\w+",relevance:0}]},{className:"meta",begin:"`",end:"$",keywords:{"meta-keyword":"define __FILE__ __LINE__ begin_keywords celldefine default_nettype define else elsif end_keywords endcelldefine endif ifdef ifndef include line nounconnected_drive pragma resetall timescale unconnected_drive undef undefineall"},relevance:0}]}}},9047:function(e){e.exports=function(e){var t="\\d(_|\\d)*",n="[eE][-+]?"+t,a="\\b("+(t+"#\\w+(\\.\\w+)?#("+n+")?")+"|"+(t+"(\\."+t+")?("+n+")?")+")";return{name:"VHDL",case_insensitive:!0,keywords:{keyword:"abs access after alias all and architecture array assert assume assume_guarantee attribute begin block body buffer bus case component configuration constant context cover disconnect downto default else elsif end entity exit fairness file for force function generate generic group guarded if impure in inertial inout is label library linkage literal loop map mod nand new next nor not null of on open or others out package parameter port postponed procedure process property protected pure range record register reject release rem report restrict restrict_guarantee return rol ror select sequence severity shared signal sla sll sra srl strong subtype then to transport type unaffected units until use variable view vmode vprop vunit wait when while with xnor xor",built_in:"boolean bit character integer time delay_length natural positive string bit_vector file_open_kind file_open_status std_logic std_logic_vector unsigned signed boolean_vector integer_vector std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed real_vector time_vector",literal:"false true note warning error failure line text side width"},illegal:/\{/,contains:[e.C_BLOCK_COMMENT_MODE,e.COMMENT("--","$"),e.QUOTE_STRING_MODE,{className:"number",begin:a,relevance:0},{className:"string",begin:"'(U|X|0|1|Z|W|L|H|-)'",contains:[e.BACKSLASH_ESCAPE]},{className:"symbol",begin:"'[A-Za-z](_?[A-Za-z0-9])*",contains:[e.BACKSLASH_ESCAPE]}]}}},7924:function(e){e.exports=function(e){return{name:"Vim Script",keywords:{$pattern:/[!#@\w]+/,keyword:"N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank",built_in:"synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv complete_check add getwinposx getqflist getwinposy screencol clearmatches empty extend getcmdpos mzeval garbagecollect setreg ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable shiftwidth max sinh isdirectory synID system inputrestore winline atan visualmode inputlist tabpagewinnr round getregtype mapcheck hasmapto histdel argidx findfile sha256 exists toupper getcmdline taglist string getmatches bufnr strftime winwidth bufexists strtrans tabpagebuflist setcmdpos remote_read printf setloclist getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval resolve libcallnr foldclosedend reverse filter has_key bufname str2float strlen setline getcharmod setbufvar index searchpos shellescape undofile foldclosed setqflist buflisted strchars str2nr virtcol floor remove undotree remote_expr winheight gettabwinvar reltime cursor tabpagenr finddir localtime acos getloclist search tanh matchend rename gettabvar strdisplaywidth type abs py3eval setwinvar tolower wildmenumode log10 spellsuggest bufloaded synconcealed nextnonblank server2client complete settabwinvar executable input wincol setmatches getftype hlID inputsave searchpair or screenrow line settabvar histadd deepcopy strpart remote_peek and eval getftime submatch screenchar winsaveview matchadd mkdir screenattr getfontname libcall reltimestr getfsize winnr invert pow getbufline byte2line soundfold repeat fnameescape tagfiles sin strwidth spellbadword trunc maparg log lispindent hostname setpos globpath remote_foreground getchar synIDattr fnamemodify cscope_connection stridx winbufnr indent min complete_add nr2char searchpairpos inputdialog values matchlist items hlexists strridx browsedir expand fmod pathshorten line2byte argc count getwinvar glob foldtextresult getreg foreground cosh matchdelete has char2nr simplify histget searchdecl iconv winrestcmd pumvisible writefile foldlevel haslocaldir keys cos matchstr foldtext histnr tan tempname getcwd byteidx getbufvar islocked escape eventhandler remote_send serverlist winrestview synstack pyeval prevnonblank readfile cindent filereadable changenr exp"},illegal:/;/,contains:[e.NUMBER_MODE,{className:"string",begin:"'",end:"'",illegal:"\\n"},{className:"string",begin:/"(\\"|\n\\|[^"\n])*"/},e.COMMENT('"',"$"),{className:"variable",begin:/[bwtglsav]:[\w\d_]*/},{className:"function",beginKeywords:"function function!",end:"$",relevance:0,contains:[e.TITLE_MODE,{className:"params",begin:"\\(",end:"\\)"}]},{className:"symbol",begin:/<[\w-]+>/}]}}},8966:function(e){e.exports=function(e){return{name:"Intel x86 Assembly",case_insensitive:!0,keywords:{$pattern:"[.%]?"+e.IDENT_RE,keyword:"lock rep repe repz repne repnz xaquire xrelease bnd nobnd aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63",built_in:"ip eip rip al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 cs ds es fs gs ss st st0 st1 st2 st3 st4 st5 st6 st7 mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0 k1 k2 k3 k4 k5 k6 k7 bnd0 bnd1 bnd2 bnd3 cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d r0h r1h r2h r3h r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l db dw dd dq dt ddq do dy dz resb resw resd resq rest resdq reso resy resz incbin equ times byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr",meta:"%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif %if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep %endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment .nolist __FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ __UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend align alignb sectalign daz nodaz up down zero default option assume public bits use16 use32 use64 default section segment absolute extern global common cpu float __utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ __float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ __Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__"},contains:[e.COMMENT(";","$",{relevance:0}),{className:"number",variants:[{begin:"\\b(?:([0-9][0-9_]*)?\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|(0[Xx])?[0-9][0-9_]*(\\.[0-9_]*)?(?:[pP](?:[+-]?[0-9_]+)?)?)\\b",relevance:0},{begin:"\\$[0-9][0-9A-Fa-f]*",relevance:0},{begin:"\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\b"},{begin:"\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\b"}]},e.QUOTE_STRING_MODE,{className:"string",variants:[{begin:"'",end:"[^\\\\]'"},{begin:"`",end:"[^\\\\]`"}],relevance:0},{className:"symbol",variants:[{begin:"^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)"},{begin:"^\\s*%%[A-Za-z0-9_$#@~.?]*:"}],relevance:0},{className:"subst",begin:"%[0-9]+",relevance:0},{className:"subst",begin:"%!S+",relevance:0},{className:"meta",begin:/^\s*\.[\w_-]+/}]}}},8579:function(e){e.exports=function(e){var t={$pattern:/[a-zA-Z][a-zA-Z0-9_?]*/,keyword:"if then else do while until for loop import with is as where when by data constant integer real text name boolean symbol infix prefix postfix block tree",literal:"true false nil",built_in:"in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin acos atan exp expm1 log log2 log10 log1p pi at text_length text_range text_find text_replace contains page slide basic_slide title_slide title subtitle fade_in fade_out fade_at clear_color color line_color line_width texture_wrap texture_transform texture scale_?x scale_?y scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y rotate_?z? rectangle circle ellipse sphere path line_to move_to quad_to curve_to theme background contents locally time mouse_?x mouse_?y mouse_buttons ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts"},n={className:"string",begin:'"',end:'"',illegal:"\\n"},a={beginKeywords:"import",end:"$",keywords:t,contains:[n]},s={className:"function",begin:/[a-z][^\n]*->/,returnBegin:!0,end:/->/,contains:[e.inherit(e.TITLE_MODE,{starts:{endsWithParent:!0,keywords:t}})]};return{name:"XL",aliases:["tao"],keywords:t,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,n,{className:"string",begin:"'",end:"'",illegal:"\\n"},{className:"string",begin:"<<",end:">>"},s,a,{className:"number",begin:"[0-9]+#[0-9A-Z_]+(\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?"},e.NUMBER_MODE]}}},1107:function(e){function t(e){return e?"string"===typeof e?e:e.source:null}function n(e){return a("(?=",e,")")}function a(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return n.map((function(e){return t(e)})).join("")}function s(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];return"("+n.map((function(e){return t(e)})).join("|")+")"}e.exports=function(e){var t=a(/[A-Z_]/,a("(",/[A-Z0-9_.-]*:/,")?"),/[A-Z0-9_.-]*/),i={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},r={begin:/\s/,contains:[{className:"meta-keyword",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\n/}]},o=e.inherit(r,{begin:/\(/,end:/\)/}),l=e.inherit(e.APOS_STRING_MODE,{className:"meta-string"}),c=e.inherit(e.QUOTE_STRING_MODE,{className:"meta-string"}),d={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:"attr",begin:/[A-Za-z0-9._:-]+/,relevance:0},{begin:/=\s*/,relevance:0,contains:[{className:"string",endsParent:!0,variants:[{begin:/"/,end:/"/,contains:[i]},{begin:/'/,end:/'/,contains:[i]},{begin:/[^\s"'=<>`]+/}]}]}]};return{name:"HTML, XML",aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist","wsf","svg"],case_insensitive:!0,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,relevance:10,contains:[r,c,l,o,{begin:/\[/,end:/\]/,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,contains:[r,o,c,l]}]}]},e.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\[CDATA\[/,end:/\]\]>/,relevance:10},i,{className:"meta",begin:/<\?xml/,end:/\?>/,relevance:10},{className:"tag",begin:/<style(?=\s|>)/,end:/>/,keywords:{name:"style"},contains:[d],starts:{end:/<\/style>/,returnEnd:!0,subLanguage:["css","xml"]}},{className:"tag",begin:/<script(?=\s|>)/,end:/>/,keywords:{name:"script"},contains:[d],starts:{end:/<\/script>/,returnEnd:!0,subLanguage:["javascript","handlebars","xml"]}},{className:"tag",begin:/<>|<\/>/},{className:"tag",begin:a(/</,n(a(t,s(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[{className:"name",begin:t,relevance:0,starts:d}]},{className:"tag",begin:a(/<\//,n(a(t,/>/))),contains:[{className:"name",begin:t,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}}},5554:function(e){e.exports=function(e){return{name:"XQuery",aliases:["xpath","xq"],case_insensitive:!1,illegal:/(proc)|(abstract)|(extends)|(until)|(#)/,keywords:{$pattern:/[a-zA-Z$][a-zA-Z0-9_:-]*/,keyword:"module schema namespace boundary-space preserve no-preserve strip default collation base-uri ordering context decimal-format decimal-separator copy-namespaces empty-sequence except exponent-separator external grouping-separator inherit no-inherit lax minus-sign per-mille percent schema-attribute schema-element strict unordered zero-digit declare import option function validate variable for at in let where order group by return if then else tumbling sliding window start when only end previous next stable ascending descending allowing empty greatest least some every satisfies switch case typeswitch try catch and or to union intersect instance of treat as castable cast map array delete insert into replace value rename copy modify update",type:"item document-node node attribute document element comment namespace namespace-node processing-instruction text construction xs:anyAtomicType xs:untypedAtomic xs:duration xs:time xs:decimal xs:float xs:double xs:gYearMonth xs:gYear xs:gMonthDay xs:gMonth xs:gDay xs:boolean xs:base64Binary xs:hexBinary xs:anyURI xs:QName xs:NOTATION xs:dateTime xs:dateTimeStamp xs:date xs:string xs:normalizedString xs:token xs:language xs:NMTOKEN xs:Name xs:NCName xs:ID xs:IDREF xs:ENTITY xs:integer xs:nonPositiveInteger xs:negativeInteger xs:long xs:int xs:short xs:byte xs:nonNegativeInteger xs:unisignedLong xs:unsignedInt xs:unsignedShort xs:unsignedByte xs:positiveInteger xs:yearMonthDuration xs:dayTimeDuration",literal:"eq ne lt le gt ge is self:: child:: descendant:: descendant-or-self:: attribute:: following:: following-sibling:: parent:: ancestor:: ancestor-or-self:: preceding:: preceding-sibling:: NaN"},contains:[{className:"variable",begin:/[$][\w\-:]+/},{className:"built_in",variants:[{begin:/\barray:/,end:/(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\b/},{begin:/\bmap:/,end:/(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\b/},{begin:/\bmath:/,end:/(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\b/},{begin:/\bop:/,end:/\(/,excludeEnd:!0},{begin:/\bfn:/,end:/\(/,excludeEnd:!0},{begin:/[^</$:'"-]\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\b/},{begin:/\blocal:/,end:/\(/,excludeEnd:!0},{begin:/\bzip:/,end:/(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\b/},{begin:/\b(?:util|db|functx|app|xdmp|xmldb):/,end:/\(/,excludeEnd:!0}]},{className:"string",variants:[{begin:/"/,end:/"/,contains:[{begin:/""/,relevance:0}]},{begin:/'/,end:/'/,contains:[{begin:/''/,relevance:0}]}]},{className:"number",begin:/(\b0[0-7_]+)|(\b0x[0-9a-fA-F_]+)|(\b[1-9][0-9_]*(\.[0-9_]+)?)|[0_]\b/,relevance:0},{className:"comment",begin:/\(:/,end:/:\)/,relevance:10,contains:[{className:"doctag",begin:/@\w+/}]},{className:"meta",begin:/%[\w\-:]+/},{className:"title",begin:/\bxquery version "[13]\.[01]"\s?(?:encoding ".+")?/,end:/;/},{beginKeywords:"element attribute comment document processing-instruction",end:/\{/,excludeEnd:!0},{begin:/<([\w._:-]+)(\s+\S*=('|").*('|"))?>/,end:/(\/[\w._:-]+>)/,subLanguage:"xml",contains:[{begin:/\{/,end:/\}/,subLanguage:"xquery"},"self"]}]}}},7712:function(e){e.exports=function(e){var t="true false yes no null",n="[\\w#;/?:@&=+$,.~*'()[\\]]+",a={className:"string",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/\S+/}],contains:[e.BACKSLASH_ESCAPE,{className:"template-variable",variants:[{begin:/\{\{/,end:/\}\}/},{begin:/%\{/,end:/\}/}]}]},s=e.inherit(a,{variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/},{begin:/[^\s,{}[\]]+/}]}),i={className:"number",begin:"\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\.[0-9]*)?([ \\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\b"},r={end:",",endsWithParent:!0,excludeEnd:!0,keywords:t,relevance:0},o={begin:/\{/,end:/\}/,contains:[r],illegal:"\\n",relevance:0},l={begin:"\\[",end:"\\]",contains:[r],illegal:"\\n",relevance:0},c=[{className:"attr",variants:[{begin:"\\w[\\w :\\/.-]*:(?=[ \t]|$)"},{begin:'"\\w[\\w :\\/.-]*":(?=[ \t]|$)'},{begin:"'\\w[\\w :\\/.-]*':(?=[ \t]|$)"}]},{className:"meta",begin:"^---\\s*$",relevance:10},{className:"string",begin:"[\\|>]([1-9]?[+-])?[ ]*\\n( +)[^ ][^\\n]*\\n(\\2[^\\n]+\\n?)*"},{begin:"<%[%=-]?",end:"[%-]?%>",subLanguage:"ruby",excludeBegin:!0,excludeEnd:!0,relevance:0},{className:"type",begin:"!\\w+!"+n},{className:"type",begin:"!<"+n+">"},{className:"type",begin:"!"+n},{className:"type",begin:"!!"+n},{className:"meta",begin:"&"+e.UNDERSCORE_IDENT_RE+"$"},{className:"meta",begin:"\\*"+e.UNDERSCORE_IDENT_RE+"$"},{className:"bullet",begin:"-(?=[ ]|$)",relevance:0},e.HASH_COMMENT_MODE,{beginKeywords:t,keywords:{literal:t}},i,{className:"number",begin:e.C_NUMBER_RE+"\\b",relevance:0},o,l,a],d=[].concat(c);return d.pop(),d.push(s),r.contains=d,{name:"YAML",case_insensitive:!0,aliases:["yml"],contains:c}}},5772:function(e){e.exports=function(e){var t={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[e.inherit(e.APOS_STRING_MODE,{illegal:null}),e.inherit(e.QUOTE_STRING_MODE,{illegal:null})]},n=e.UNDERSCORE_TITLE_MODE,a={variants:[e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE]},s="namespace class interface use extends function return abstract final public protected private static deprecated throw try catch Exception echo empty isset instanceof unset let var new const self require if else elseif switch case default do while loop for continue break likely unlikely __LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ array boolean float double integer object resource string char long unsigned bool int uint ulong uchar true false null undefined";return{name:"Zephir",aliases:["zep"],keywords:s,contains:[e.C_LINE_COMMENT_MODE,e.COMMENT(/\/\*/,/\*\//,{contains:[{className:"doctag",begin:/@[A-Za-z]+/}]}),{className:"string",begin:/<<<['"]?\w+['"]?$/,end:/^\w+;/,contains:[e.BACKSLASH_ESCAPE]},{begin:/(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},{className:"function",beginKeywords:"function fn",end:/[;{]/,excludeEnd:!0,illegal:/\$|\[|%/,contains:[n,{className:"params",begin:/\(/,end:/\)/,keywords:s,contains:["self",e.C_BLOCK_COMMENT_MODE,t,a]}]},{className:"class",beginKeywords:"class interface",end:/\{/,excludeEnd:!0,illegal:/[:($"]/,contains:[{beginKeywords:"extends implements"},n]},{beginKeywords:"namespace",end:/;/,illegal:/[.']/,contains:[n]},{beginKeywords:"use",end:/;/,contains:[n]},{begin:/=>/},t,a]}}},3703:function(e,t,n){"use strict";var a=n(2905);e.exports=a,a.registerLanguage("1c",n(6078)),a.registerLanguage("abnf",n(1290)),a.registerLanguage("accesslog",n(5187)),a.registerLanguage("actionscript",n(4235)),a.registerLanguage("ada",n(8985)),a.registerLanguage("angelscript",n(6591)),a.registerLanguage("apache",n(1957)),a.registerLanguage("applescript",n(3965)),a.registerLanguage("arcade",n(6158)),a.registerLanguage("arduino",n(7108)),a.registerLanguage("armasm",n(2436)),a.registerLanguage("xml",n(1107)),a.registerLanguage("asciidoc",n(6513)),a.registerLanguage("aspectj",n(8830)),a.registerLanguage("autohotkey",n(3189)),a.registerLanguage("autoit",n(3501)),a.registerLanguage("avrasm",n(2204)),a.registerLanguage("awk",n(5014)),a.registerLanguage("axapta",n(5957)),a.registerLanguage("bash",n(6734)),a.registerLanguage("basic",n(1782)),a.registerLanguage("bnf",n(8683)),a.registerLanguage("brainfuck",n(9532)),a.registerLanguage("c-like",n(6670)),a.registerLanguage("c",n(7133)),a.registerLanguage("cal",n(5546)),a.registerLanguage("capnproto",n(4052)),a.registerLanguage("ceylon",n(7263)),a.registerLanguage("clean",n(3270)),a.registerLanguage("clojure",n(7672)),a.registerLanguage("clojure-repl",n(7217)),a.registerLanguage("cmake",n(9469)),a.registerLanguage("coffeescript",n(4585)),a.registerLanguage("coq",n(741)),a.registerLanguage("cos",n(3979)),a.registerLanguage("cpp",n(4709)),a.registerLanguage("crmsh",n(815)),a.registerLanguage("crystal",n(763)),a.registerLanguage("csharp",n(6385)),a.registerLanguage("csp",n(5343)),a.registerLanguage("css",n(8575)),a.registerLanguage("d",n(3128)),a.registerLanguage("markdown",n(4387)),a.registerLanguage("dart",n(4881)),a.registerLanguage("delphi",n(6088)),a.registerLanguage("diff",n(9682)),a.registerLanguage("django",n(5547)),a.registerLanguage("dns",n(1868)),a.registerLanguage("dockerfile",n(1715)),a.registerLanguage("dos",n(8030)),a.registerLanguage("dsconfig",n(7572)),a.registerLanguage("dts",n(8829)),a.registerLanguage("dust",n(8378)),a.registerLanguage("ebnf",n(1755)),a.registerLanguage("elixir",n(718)),a.registerLanguage("elm",n(9280)),a.registerLanguage("ruby",n(2907)),a.registerLanguage("erb",n(1879)),a.registerLanguage("erlang-repl",n(5217)),a.registerLanguage("erlang",n(1160)),a.registerLanguage("excel",n(2680)),a.registerLanguage("fix",n(3960)),a.registerLanguage("flix",n(6985)),a.registerLanguage("fortran",n(8563)),a.registerLanguage("fsharp",n(9333)),a.registerLanguage("gams",n(3907)),a.registerLanguage("gauss",n(6301)),a.registerLanguage("gcode",n(7285)),a.registerLanguage("gherkin",n(2274)),a.registerLanguage("glsl",n(7216)),a.registerLanguage("gml",n(776)),a.registerLanguage("go",n(5196)),a.registerLanguage("golo",n(8305)),a.registerLanguage("gradle",n(5909)),a.registerLanguage("groovy",n(8018)),a.registerLanguage("haml",n(2160)),a.registerLanguage("handlebars",n(2778)),a.registerLanguage("haskell",n(8862)),a.registerLanguage("haxe",n(6174)),a.registerLanguage("hsp",n(5765)),a.registerLanguage("htmlbars",n(5627)),a.registerLanguage("http",n(7053)),a.registerLanguage("hy",n(5219)),a.registerLanguage("inform7",n(1510)),a.registerLanguage("ini",n(2839)),a.registerLanguage("irpf90",n(6411)),a.registerLanguage("isbl",n(472)),a.registerLanguage("java",n(1956)),a.registerLanguage("javascript",n(5418)),a.registerLanguage("jboss-cli",n(352)),a.registerLanguage("json",n(7411)),a.registerLanguage("julia",n(1026)),a.registerLanguage("julia-repl",n(6183)),a.registerLanguage("kotlin",n(3282)),a.registerLanguage("lasso",n(699)),a.registerLanguage("latex",n(9941)),a.registerLanguage("ldif",n(1151)),a.registerLanguage("leaf",n(7898)),a.registerLanguage("less",n(7515)),a.registerLanguage("lisp",n(2569)),a.registerLanguage("livecodeserver",n(5261)),a.registerLanguage("livescript",n(4260)),a.registerLanguage("llvm",n(3770)),a.registerLanguage("lsl",n(4552)),a.registerLanguage("lua",n(9615)),a.registerLanguage("makefile",n(1818)),a.registerLanguage("mathematica",n(9437)),a.registerLanguage("matlab",n(4658)),a.registerLanguage("maxima",n(1060)),a.registerLanguage("mel",n(9102)),a.registerLanguage("mercury",n(1711)),a.registerLanguage("mipsasm",n(8714)),a.registerLanguage("mizar",n(4138)),a.registerLanguage("perl",n(5201)),a.registerLanguage("mojolicious",n(8592)),a.registerLanguage("monkey",n(7653)),a.registerLanguage("moonscript",n(5326)),a.registerLanguage("n1ql",n(4730)),a.registerLanguage("nginx",n(6630)),a.registerLanguage("nim",n(9203)),a.registerLanguage("nix",n(8373)),a.registerLanguage("node-repl",n(8824)),a.registerLanguage("nsis",n(5505)),a.registerLanguage("objectivec",n(3567)),a.registerLanguage("ocaml",n(8036)),a.registerLanguage("openscad",n(6424)),a.registerLanguage("oxygene",n(9727)),a.registerLanguage("parser3",n(7157)),a.registerLanguage("pf",n(450)),a.registerLanguage("pgsql",n(9465)),a.registerLanguage("php",n(3610)),a.registerLanguage("php-template",n(2638)),a.registerLanguage("plaintext",n(7721)),a.registerLanguage("pony",n(7524)),a.registerLanguage("powershell",n(601)),a.registerLanguage("processing",n(7670)),a.registerLanguage("profile",n(7568)),a.registerLanguage("prolog",n(696)),a.registerLanguage("properties",n(4450)),a.registerLanguage("protobuf",n(8513)),a.registerLanguage("puppet",n(4146)),a.registerLanguage("purebasic",n(7215)),a.registerLanguage("python",n(5609)),a.registerLanguage("python-repl",n(2888)),a.registerLanguage("q",n(4754)),a.registerLanguage("qml",n(1687)),a.registerLanguage("r",n(7191)),a.registerLanguage("reasonml",n(8670)),a.registerLanguage("rib",n(5649)),a.registerLanguage("roboconf",n(8624)),a.registerLanguage("routeros",n(2965)),a.registerLanguage("rsl",n(6009)),a.registerLanguage("ruleslanguage",n(2731)),a.registerLanguage("rust",n(4801)),a.registerLanguage("sas",n(1621)),a.registerLanguage("scala",n(65)),a.registerLanguage("scheme",n(6207)),a.registerLanguage("scilab",n(7422)),a.registerLanguage("scss",n(3785)),a.registerLanguage("shell",n(5789)),a.registerLanguage("smali",n(358)),a.registerLanguage("smalltalk",n(4006)),a.registerLanguage("sml",n(5585)),a.registerLanguage("sqf",n(2287)),a.registerLanguage("sql_more",n(109)),a.registerLanguage("sql",n(4467)),a.registerLanguage("stan",n(8413)),a.registerLanguage("stata",n(250)),a.registerLanguage("step21",n(716)),a.registerLanguage("stylus",n(9914)),a.registerLanguage("subunit",n(7972)),a.registerLanguage("swift",n(7689)),a.registerLanguage("taggerscript",n(8073)),a.registerLanguage("yaml",n(7712)),a.registerLanguage("tap",n(5913)),a.registerLanguage("tcl",n(7125)),a.registerLanguage("thrift",n(4938)),a.registerLanguage("tp",n(9115)),a.registerLanguage("twig",n(8099)),a.registerLanguage("typescript",n(4888)),a.registerLanguage("vala",n(1936)),a.registerLanguage("vbnet",n(1608)),a.registerLanguage("vbscript",n(5827)),a.registerLanguage("vbscript-html",n(1434)),a.registerLanguage("verilog",n(2683)),a.registerLanguage("vhdl",n(9047)),a.registerLanguage("vim",n(7924)),a.registerLanguage("x86asm",n(8966)),a.registerLanguage("xl",n(8579)),a.registerLanguage("xquery",n(5554)),a.registerLanguage("zephir",n(5772))},2905:function(e,t,n){"use strict";var a=n(478),s=n(7867);t.highlight=r,t.highlightAuto=function(e,t){var n,o,l,c,d=t||{},u=d.subset||a.listLanguages(),p=d.prefix,m=u.length,h=-1;null!==p&&void 0!==p||(p=i);if("string"!==typeof e)throw s("Expected `string` for value, got `%s`",e);o={relevance:0,language:null,value:[]},n={relevance:0,language:null,value:[]};for(;++h<m;)c=u[h],a.getLanguage(c)&&((l=r(c,e,t)).language=c,l.relevance>o.relevance&&(o=l),l.relevance>n.relevance&&(o=n,n=l));o.language&&(n.secondBest=o);return n},t.registerLanguage=function(e,t){a.registerLanguage(e,t)},t.listLanguages=function(){return a.listLanguages()},t.registerAlias=function(e,t){var n,s=e;t&&((s={})[e]=t);for(n in s)a.registerAliases(s[n],{languageName:n})},o.prototype.addText=function(e){var t,n,a=this.stack;if(""===e)return;t=a[a.length-1],(n=t.children[t.children.length-1])&&"text"===n.type?n.value+=e:t.children.push({type:"text",value:e})},o.prototype.addKeyword=function(e,t){this.openNode(t),this.addText(e),this.closeNode()},o.prototype.addSublanguage=function(e,t){var n=this.stack,a=n[n.length-1],s=e.rootNode.children,i=t?{type:"element",tagName:"span",properties:{className:[t]},children:s}:s;a.children=a.children.concat(i)},o.prototype.openNode=function(e){var t=this.stack,n=this.options.classPrefix+e,a=t[t.length-1],s={type:"element",tagName:"span",properties:{className:[n]},children:[]};a.children.push(s),t.push(s)},o.prototype.closeNode=function(){this.stack.pop()},o.prototype.closeAllNodes=l,o.prototype.finalize=l,o.prototype.toHTML=function(){return""};var i="hljs-";function r(e,t,n){var r,l=a.configure({}),c=(n||{}).prefix;if("string"!==typeof e)throw s("Expected `string` for name, got `%s`",e);if(!a.getLanguage(e))throw s("Unknown language: `%s` is not registered",e);if("string"!==typeof t)throw s("Expected `string` for value, got `%s`",t);if(null!==c&&void 0!==c||(c=i),a.configure({__emitter:o,classPrefix:c}),r=a.highlight(t,{language:e,ignoreIllegals:!0}),a.configure(l||{}),r.errorRaised)throw r.errorRaised;return{relevance:r.relevance,language:r.language,value:r.emitter.rootNode.children}}function o(e){this.options=e,this.rootNode={children:[]},this.stack=[this.rootNode]}function l(){}},4463:function(e,t,n){"use strict";var a=n(2791),s=n(5296);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var r=new Set,o={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(o[e]=t,e=0;e<t.length;e++)r.add(t[e])}var d=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),u=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,m={},h={};function f(e,t,n,a,s,i,r){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=r}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new f(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new f(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new f(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new f(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new f(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new f(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new f(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new f(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new f(e,5,!1,e.toLowerCase(),null,!1,!1)}));var x=/[\-:]([a-z])/g;function _(e){return e[1].toUpperCase()}function b(e,t,n,a){var s=g.hasOwnProperty(t)?g[t]:null;(null!==s?0!==s.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,s,a)&&(n=null),a||null===s?function(e){return!!u.call(h,e)||!u.call(m,e)&&(p.test(e)?h[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=null===n?3!==s.type&&"":n:(t=s.attributeName,a=s.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(s=s.type)||4===s&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(x,_);g[t]=new f(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(x,_);g[t]=new f(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(x,_);g[t]=new f(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new f(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new f("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new f(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,v=Symbol.for("react.element"),N=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),S=Symbol.for("react.strict_mode"),j=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),w=Symbol.for("react.context"),I=Symbol.for("react.forward_ref"),C=Symbol.for("react.suspense"),O=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),A=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var k=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function P(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var M,L=Object.assign;function F(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var U=!1;function B(e,t){if(!e||U)return"";U=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var a=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){a=c}e.call(t.prototype)}else{try{throw Error()}catch(c){a=c}e()}}catch(c){if(c&&a&&"string"===typeof c.stack){for(var s=c.stack.split("\n"),i=a.stack.split("\n"),r=s.length-1,o=i.length-1;1<=r&&0<=o&&s[r]!==i[o];)o--;for(;1<=r&&0<=o;r--,o--)if(s[r]!==i[o]){if(1!==r||1!==o)do{if(r--,0>--o||s[r]!==i[o]){var l="\n"+s[r].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=r&&0<=o);break}}}finally{U=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function G(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case E:return"Fragment";case N:return"Portal";case j:return"Profiler";case S:return"StrictMode";case C:return"Suspense";case O:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case w:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case I:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case A:t=e._payload,e=e._init;try{return H(e(t))}catch(n){}}return null}function z(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===S?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function Y(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var s=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){a=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function W(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=q(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function Q(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=Y(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Z(e,t){X(e,t);var n=Y(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,Y(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&a&&(e[n].defaultSelected=!0)}else{for(n=""+Y(n),t=null,s=0;s<e.length;s++){if(e[s].value===n)return e[s].selected=!0,void(a&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(te(n)){if(1<n.length)throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Y(n)}}function ie(e,t){var n=Y(t.value),a=Y(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function re(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,de,ue=(de=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return de(e,t)}))}:de);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var me={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function fe(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||me.hasOwnProperty(e)&&me[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),s=fe(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,s):e[n]=s}}Object.keys(me).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),me[t]=me[e]}))}));var xe=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function _e(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function ve(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ne=null,Ee=null,Se=null;function je(e){if(e=bs(e)){if("function"!==typeof Ne)throw Error(i(280));var t=e.stateNode;t&&(t=vs(t),Ne(e.stateNode,e.type,t))}}function Te(e){Ee?Se?Se.push(e):Se=[e]:Ee=e}function we(){if(Ee){var e=Ee,t=Se;if(Se=Ee=null,je(e),t)for(e=0;e<t.length;e++)je(t[e])}}function Ie(e,t){return e(t)}function Ce(){}var Oe=!1;function Re(e,t,n){if(Oe)return e(t,n);Oe=!0;try{return Ie(e,t,n)}finally{Oe=!1,(null!==Ee||null!==Se)&&(Ce(),we())}}function Ae(e,t){var n=e.stateNode;if(null===n)return null;var a=vs(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}var ke=!1;if(d)try{var De={};Object.defineProperty(De,"passive",{get:function(){ke=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(de){ke=!1}function Pe(e,t,n,a,s,i,r,o,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(d){this.onError(d)}}var Me=!1,Le=null,Fe=!1,Ue=null,Be={onError:function(e){Me=!0,Le=e}};function Ge(e,t,n,a,s,i,r,o,l){Me=!1,Le=null,Pe.apply(Be,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function ze(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ye(e){if(He(e)!==e)throw Error(i(188))}function qe(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,a=t;;){var s=n.return;if(null===s)break;var r=s.alternate;if(null===r){if(null!==(a=s.return)){n=a;continue}break}if(s.child===r.child){for(r=s.child;r;){if(r===n)return Ye(s),e;if(r===a)return Ye(s),t;r=r.sibling}throw Error(i(188))}if(n.return!==a.return)n=s,a=r;else{for(var o=!1,l=s.child;l;){if(l===n){o=!0,n=s,a=r;break}if(l===a){o=!0,a=s,n=r;break}l=l.sibling}if(!o){for(l=r.child;l;){if(l===n){o=!0,n=r,a=s;break}if(l===a){o=!0,a=r,n=s;break}l=l.sibling}if(!o)throw Error(i(189))}}if(n.alternate!==a)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var We=s.unstable_scheduleCallback,Qe=s.unstable_cancelCallback,$e=s.unstable_shouldYield,Ke=s.unstable_requestPaint,Xe=s.unstable_now,Ze=s.unstable_getCurrentPriorityLevel,Je=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,nt=s.unstable_LowPriority,at=s.unstable_IdlePriority,st=null,it=null;var rt=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2;var ct=64,dt=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,s=e.suspendedLanes,i=e.pingedLanes,r=268435455&n;if(0!==r){var o=r&~s;0!==o?a=ut(o):0!==(i&=r)&&(a=ut(i))}else 0!==(r=n&~s)?a=ut(r):0!==i&&(a=ut(i));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&s)&&((s=a&-a)>=(i=t&-t)||16===s&&0!==(4194240&i)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)s=1<<(n=31-rt(t)),a|=e[n],t&=~s;return a}function mt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ft(){var e=ct;return 0===(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function xt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-rt(t)]=n}function _t(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-rt(n),s=1<<a;s&t|e[a]&t&&(e[a]|=t),n&=~s}}var bt=0;function yt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var vt,Nt,Et,St,jt,Tt=!1,wt=[],It=null,Ct=null,Ot=null,Rt=new Map,At=new Map,kt=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Pt(e,t){switch(e){case"focusin":case"focusout":It=null;break;case"dragenter":case"dragleave":Ct=null;break;case"mouseover":case"mouseout":Ot=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":At.delete(t.pointerId)}}function Mt(e,t,n,a,s,i){return null===e||e.nativeEvent!==i?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:i,targetContainers:[s]},null!==t&&(null!==(t=bs(t))&&Nt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Lt(e){var t=_s(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=ze(n)))return e.blockedOn=t,void jt(e.priority,(function(){Et(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=bs(n))&&Nt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ye=a,n.target.dispatchEvent(a),ye=null,t.shift()}return!0}function Ut(e,t,n){Ft(e)&&n.delete(t)}function Bt(){Tt=!1,null!==It&&Ft(It)&&(It=null),null!==Ct&&Ft(Ct)&&(Ct=null),null!==Ot&&Ft(Ot)&&(Ot=null),Rt.forEach(Ut),At.forEach(Ut)}function Gt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Bt)))}function Ht(e){function t(t){return Gt(t,e)}if(0<wt.length){Gt(wt[0],e);for(var n=1;n<wt.length;n++){var a=wt[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==It&&Gt(It,e),null!==Ct&&Gt(Ct,e),null!==Ot&&Gt(Ot,e),Rt.forEach(t),At.forEach(t),n=0;n<kt.length;n++)(a=kt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<kt.length&&null===(n=kt[0]).blockedOn;)Lt(n),null===n.blockedOn&&kt.shift()}var zt=y.ReactCurrentBatchConfig,Yt=!0;function qt(e,t,n,a){var s=bt,i=zt.transition;zt.transition=null;try{bt=1,Wt(e,t,n,a)}finally{bt=s,zt.transition=i}}function Vt(e,t,n,a){var s=bt,i=zt.transition;zt.transition=null;try{bt=4,Wt(e,t,n,a)}finally{bt=s,zt.transition=i}}function Wt(e,t,n,a){if(Yt){var s=$t(e,t,n,a);if(null===s)Ya(e,t,a,Qt,n),Pt(e,a);else if(function(e,t,n,a,s){switch(t){case"focusin":return It=Mt(It,e,t,n,a,s),!0;case"dragenter":return Ct=Mt(Ct,e,t,n,a,s),!0;case"mouseover":return Ot=Mt(Ot,e,t,n,a,s),!0;case"pointerover":var i=s.pointerId;return Rt.set(i,Mt(Rt.get(i)||null,e,t,n,a,s)),!0;case"gotpointercapture":return i=s.pointerId,At.set(i,Mt(At.get(i)||null,e,t,n,a,s)),!0}return!1}(s,e,t,n,a))a.stopPropagation();else if(Pt(e,a),4&t&&-1<Dt.indexOf(e)){for(;null!==s;){var i=bs(s);if(null!==i&&vt(i),null===(i=$t(e,t,n,a))&&Ya(e,t,a,Qt,n),i===s)break;s=i}null!==s&&a.stopPropagation()}else Ya(e,t,a,null,n)}}var Qt=null;function $t(e,t,n,a){if(Qt=null,null!==(e=_s(e=ve(a))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=ze(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Qt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Xt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,a=n.length,s="value"in Xt?Xt.value:Xt.textContent,i=s.length;for(e=0;e<a&&n[e]===s[e];e++);var r=a-e;for(t=1;t<=r&&n[a-t]===s[i-t];t++);return Jt=s.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function sn(e){function t(t,n,a,s,i){for(var r in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=s,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(r)&&(t=e[r],this[r]=t?t(s):s[r]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?nn:an,this.isPropagationStopped=an,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var rn,on,ln,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=sn(cn),un=L({},cn,{view:0,detail:0}),pn=sn(un),mn=L({},un,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:jn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(rn=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=rn=0,ln=e),rn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),hn=sn(mn),fn=sn(L({},mn,{dataTransfer:0})),gn=sn(L({},un,{relatedTarget:0})),xn=sn(L({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),_n=L({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=sn(_n),yn=sn(L({},cn,{data:0})),vn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},En={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=En[e])&&!!t[e]}function jn(){return Sn}var Tn=L({},un,{key:function(e){if(e.key){var t=vn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Nn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:jn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),wn=sn(Tn),In=sn(L({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Cn=sn(L({},un,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:jn})),On=sn(L({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=L({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),An=sn(Rn),kn=[9,13,27,32],Dn=d&&"CompositionEvent"in window,Pn=null;d&&"documentMode"in document&&(Pn=document.documentMode);var Mn=d&&"TextEvent"in window&&!Pn,Ln=d&&(!Dn||Pn&&8<Pn&&11>=Pn),Fn=String.fromCharCode(32),Un=!1;function Bn(e,t){switch(e){case"keyup":return-1!==kn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Gn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1;var zn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!zn[e.type]:"textarea"===t}function qn(e,t,n,a){Te(a),0<(t=Va(t,"onChange")).length&&(n=new dn("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Vn=null,Wn=null;function Qn(e){Fa(e,0)}function $n(e){if(W(ys(e)))return e}function Kn(e,t){if("change"===e)return t}var Xn=!1;if(d){var Zn;if(d){var Jn="oninput"in document;if(!Jn){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),Jn="function"===typeof ea.oninput}Zn=Jn}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function ta(){Vn&&(Vn.detachEvent("onpropertychange",na),Wn=Vn=null)}function na(e){if("value"===e.propertyName&&$n(Wn)){var t=[];qn(t,Wn,e,ve(e)),Re(Qn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Wn=n,(Vn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function sa(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $n(Wn)}function ia(e,t){if("click"===e)return $n(t)}function ra(e,t){if("input"===e||"change"===e)return $n(t)}var oa="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function la(e,t){if(oa(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var s=n[a];if(!u.call(t,s)||!oa(e[s],t[s]))return!1}return!0}function ca(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function da(e,t){var n,a=ca(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ca(a)}}function ua(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ua(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pa(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function ma(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function ha(e){var t=pa(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ua(n.ownerDocument.documentElement,n)){if(null!==a&&ma(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=n.textContent.length,i=Math.min(a.start,s);a=void 0===a.end?i:Math.min(a.end,s),!e.extend&&i>a&&(s=a,a=i,i=s),s=da(n,i);var r=da(n,a);s&&r&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==r.node||e.focusOffset!==r.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),i>a?(e.addRange(t),e.extend(r.node,r.offset)):(t.setEnd(r.node,r.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var fa=d&&"documentMode"in document&&11>=document.documentMode,ga=null,xa=null,_a=null,ba=!1;function ya(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;ba||null==ga||ga!==Q(a)||("selectionStart"in(a=ga)&&ma(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},_a&&la(_a,a)||(_a=a,0<(a=Va(xa,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function va(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Na={animationend:va("Animation","AnimationEnd"),animationiteration:va("Animation","AnimationIteration"),animationstart:va("Animation","AnimationStart"),transitionend:va("Transition","TransitionEnd")},Ea={},Sa={};function ja(e){if(Ea[e])return Ea[e];if(!Na[e])return e;var t,n=Na[e];for(t in n)if(n.hasOwnProperty(t)&&t in Sa)return Ea[e]=n[t];return e}d&&(Sa=document.createElement("div").style,"AnimationEvent"in window||(delete Na.animationend.animation,delete Na.animationiteration.animation,delete Na.animationstart.animation),"TransitionEvent"in window||delete Na.transitionend.transition);var Ta=ja("animationend"),wa=ja("animationiteration"),Ia=ja("animationstart"),Ca=ja("transitionend"),Oa=new Map,Ra="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Aa(e,t){Oa.set(e,t),l(t,[e])}for(var ka=0;ka<Ra.length;ka++){var Da=Ra[ka];Aa(Da.toLowerCase(),"on"+(Da[0].toUpperCase()+Da.slice(1)))}Aa(Ta,"onAnimationEnd"),Aa(wa,"onAnimationIteration"),Aa(Ia,"onAnimationStart"),Aa("dblclick","onDoubleClick"),Aa("focusin","onFocus"),Aa("focusout","onBlur"),Aa(Ca,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Pa="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ma=new Set("cancel close invalid load scroll toggle".split(" ").concat(Pa));function La(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,s,r,o,l,c){if(Ge.apply(this,arguments),Me){if(!Me)throw Error(i(198));var d=Le;Me=!1,Le=null,Fe||(Fe=!0,Ue=d)}}(a,t,void 0,e),e.currentTarget=null}function Fa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],s=a.event;a=a.listeners;e:{var i=void 0;if(t)for(var r=a.length-1;0<=r;r--){var o=a[r],l=o.instance,c=o.currentTarget;if(o=o.listener,l!==i&&s.isPropagationStopped())break e;La(s,o,c),i=l}else for(r=0;r<a.length;r++){if(l=(o=a[r]).instance,c=o.currentTarget,o=o.listener,l!==i&&s.isPropagationStopped())break e;La(s,o,c),i=l}}}if(Fe)throw e=Ue,Fe=!1,Ue=null,e}function Ua(e,t){var n=t[fs];void 0===n&&(n=t[fs]=new Set);var a=e+"__bubble";n.has(a)||(za(t,e,2,!1),n.add(a))}function Ba(e,t,n){var a=0;t&&(a|=4),za(n,e,a,t)}var Ga="_reactListening"+Math.random().toString(36).slice(2);function Ha(e){if(!e[Ga]){e[Ga]=!0,r.forEach((function(t){"selectionchange"!==t&&(Ma.has(t)||Ba(t,!1,e),Ba(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ga]||(t[Ga]=!0,Ba("selectionchange",!1,t))}}function za(e,t,n,a){switch(Kt(t)){case 1:var s=qt;break;case 4:s=Vt;break;default:s=Wt}n=s.bind(null,t,n,e),s=void 0,!ke||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),a?void 0!==s?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):void 0!==s?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function Ya(e,t,n,a,s){var i=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var r=a.tag;if(3===r||4===r){var o=a.stateNode.containerInfo;if(o===s||8===o.nodeType&&o.parentNode===s)break;if(4===r)for(r=a.return;null!==r;){var l=r.tag;if((3===l||4===l)&&((l=r.stateNode.containerInfo)===s||8===l.nodeType&&l.parentNode===s))return;r=r.return}for(;null!==o;){if(null===(r=_s(o)))return;if(5===(l=r.tag)||6===l){a=i=r;continue e}o=o.parentNode}}a=a.return}Re((function(){var a=i,s=ve(n),r=[];e:{var o=Oa.get(e);if(void 0!==o){var l=dn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=wn;break;case"focusin":c="focus",l=gn;break;case"focusout":c="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Cn;break;case Ta:case wa:case Ia:l=xn;break;case Ca:l=On;break;case"scroll":l=pn;break;case"wheel":l=An;break;case"copy":case"cut":case"paste":l=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=In}var d=0!==(4&t),u=!d&&"scroll"===e,p=d?null!==o?o+"Capture":null:o;d=[];for(var m,h=a;null!==h;){var f=(m=h).stateNode;if(5===m.tag&&null!==f&&(m=f,null!==p&&(null!=(f=Ae(h,p))&&d.push(qa(h,f,m)))),u)break;h=h.return}0<d.length&&(o=new l(o,c,null,n,s),r.push({event:o,listeners:d}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===ye||!(c=n.relatedTarget||n.fromElement)||!_s(c)&&!c[hs])&&(l||o)&&(o=s.window===s?s:(o=s.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=a,null!==(c=(c=n.relatedTarget||n.toElement)?_s(c):null)&&(c!==(u=He(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=a),l!==c)){if(d=hn,f="onMouseLeave",p="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(d=In,f="onPointerLeave",p="onPointerEnter",h="pointer"),u=null==l?o:ys(l),m=null==c?o:ys(c),(o=new d(f,h+"leave",l,n,s)).target=u,o.relatedTarget=m,f=null,_s(s)===a&&((d=new d(p,h+"enter",c,n,s)).target=m,d.relatedTarget=u,f=d),u=f,l&&c)e:{for(p=c,h=0,m=d=l;m;m=Wa(m))h++;for(m=0,f=p;f;f=Wa(f))m++;for(;0<h-m;)d=Wa(d),h--;for(;0<m-h;)p=Wa(p),m--;for(;h--;){if(d===p||null!==p&&d===p.alternate)break e;d=Wa(d),p=Wa(p)}d=null}else d=null;null!==l&&Qa(r,o,l,d,!1),null!==c&&null!==u&&Qa(r,u,c,d,!0)}if("select"===(l=(o=a?ys(a):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Kn;else if(Yn(o))if(Xn)g=ra;else{g=sa;var x=aa}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=ia);switch(g&&(g=g(e,a))?qn(r,g,n,s):(x&&x(e,o,a),"focusout"===e&&(x=o._wrapperState)&&x.controlled&&"number"===o.type&&ee(o,"number",o.value)),x=a?ys(a):window,e){case"focusin":(Yn(x)||"true"===x.contentEditable)&&(ga=x,xa=a,_a=null);break;case"focusout":_a=xa=ga=null;break;case"mousedown":ba=!0;break;case"contextmenu":case"mouseup":case"dragend":ba=!1,ya(r,n,s);break;case"selectionchange":if(fa)break;case"keydown":case"keyup":ya(r,n,s)}var _;if(Dn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Hn?Bn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Ln&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Hn&&(_=en()):(Zt="value"in(Xt=s)?Xt.value:Xt.textContent,Hn=!0)),0<(x=Va(a,b)).length&&(b=new yn(b,e,null,n,s),r.push({event:b,listeners:x}),_?b.data=_:null!==(_=Gn(n))&&(b.data=_))),(_=Mn?function(e,t){switch(e){case"compositionend":return Gn(t);case"keypress":return 32!==t.which?null:(Un=!0,Fn);case"textInput":return(e=t.data)===Fn&&Un?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Dn&&Bn(e,t)?(e=en(),Jt=Zt=Xt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Va(a,"onBeforeInput")).length&&(s=new yn("onBeforeInput","beforeinput",null,n,s),r.push({event:s,listeners:a}),s.data=_))}Fa(r,t)}))}function qa(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Va(e,t){for(var n=t+"Capture",a=[];null!==e;){var s=e,i=s.stateNode;5===s.tag&&null!==i&&(s=i,null!=(i=Ae(e,n))&&a.unshift(qa(e,i,s)),null!=(i=Ae(e,t))&&a.push(qa(e,i,s))),e=e.return}return a}function Wa(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qa(e,t,n,a,s){for(var i=t._reactName,r=[];null!==n&&n!==a;){var o=n,l=o.alternate,c=o.stateNode;if(null!==l&&l===a)break;5===o.tag&&null!==c&&(o=c,s?null!=(l=Ae(n,i))&&r.unshift(qa(n,l,o)):s||null!=(l=Ae(n,i))&&r.push(qa(n,l,o))),n=n.return}0!==r.length&&e.push({event:t,listeners:r})}var $a=/\r\n?/g,Ka=/\u0000|\uFFFD/g;function Xa(e){return("string"===typeof e?e:""+e).replace($a,"\n").replace(Ka,"")}function Za(e,t,n){if(t=Xa(t),Xa(e)!==t&&n)throw Error(i(425))}function Ja(){}var es=null,ts=null;function ns(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var as="function"===typeof setTimeout?setTimeout:void 0,ss="function"===typeof clearTimeout?clearTimeout:void 0,is="function"===typeof Promise?Promise:void 0,rs="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof is?function(e){return is.resolve(null).then(e).catch(os)}:as;function os(e){setTimeout((function(){throw e}))}function ls(e,t){var n=t,a=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0===a)return e.removeChild(s),void Ht(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=s}while(n);Ht(t)}function cs(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ds(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var us=Math.random().toString(36).slice(2),ps="__reactFiber$"+us,ms="__reactProps$"+us,hs="__reactContainer$"+us,fs="__reactEvents$"+us,gs="__reactListeners$"+us,xs="__reactHandles$"+us;function _s(e){var t=e[ps];if(t)return t;for(var n=e.parentNode;n;){if(t=n[hs]||n[ps]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ds(e);null!==e;){if(n=e[ps])return n;e=ds(e)}return t}n=(e=n).parentNode}return null}function bs(e){return!(e=e[ps]||e[hs])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ys(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function vs(e){return e[ms]||null}var Ns=[],Es=-1;function Ss(e){return{current:e}}function js(e){0>Es||(e.current=Ns[Es],Ns[Es]=null,Es--)}function Ts(e,t){Es++,Ns[Es]=e.current,e.current=t}var ws={},Is=Ss(ws),Cs=Ss(!1),Os=ws;function Rs(e,t){var n=e.type.contextTypes;if(!n)return ws;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var s,i={};for(s in n)i[s]=t[s];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function As(e){return null!==(e=e.childContextTypes)&&void 0!==e}function ks(){js(Cs),js(Is)}function Ds(e,t,n){if(Is.current!==ws)throw Error(i(168));Ts(Is,t),Ts(Cs,n)}function Ps(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var s in a=a.getChildContext())if(!(s in t))throw Error(i(108,z(e)||"Unknown",s));return L({},n,a)}function Ms(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ws,Os=Is.current,Ts(Is,e),Ts(Cs,Cs.current),!0}function Ls(e,t,n){var a=e.stateNode;if(!a)throw Error(i(169));n?(e=Ps(e,t,Os),a.__reactInternalMemoizedMergedChildContext=e,js(Cs),js(Is),Ts(Is,e)):js(Cs),Ts(Cs,n)}var Fs=null,Us=!1,Bs=!1;function Gs(e){null===Fs?Fs=[e]:Fs.push(e)}function Hs(){if(!Bs&&null!==Fs){Bs=!0;var e=0,t=bt;try{var n=Fs;for(bt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Fs=null,Us=!1}catch(s){throw null!==Fs&&(Fs=Fs.slice(e+1)),We(Je,Hs),s}finally{bt=t,Bs=!1}}return null}var zs=[],Ys=0,qs=null,Vs=0,Ws=[],Qs=0,$s=null,Ks=1,Xs="";function Zs(e,t){zs[Ys++]=Vs,zs[Ys++]=qs,qs=e,Vs=t}function Js(e,t,n){Ws[Qs++]=Ks,Ws[Qs++]=Xs,Ws[Qs++]=$s,$s=e;var a=Ks;e=Xs;var s=32-rt(a)-1;a&=~(1<<s),n+=1;var i=32-rt(t)+s;if(30<i){var r=s-s%5;i=(a&(1<<r)-1).toString(32),a>>=r,s-=r,Ks=1<<32-rt(t)+s|n<<s|a,Xs=i+e}else Ks=1<<i|n<<s|a,Xs=e}function ei(e){null!==e.return&&(Zs(e,1),Js(e,1,0))}function ti(e){for(;e===qs;)qs=zs[--Ys],zs[Ys]=null,Vs=zs[--Ys],zs[Ys]=null;for(;e===$s;)$s=Ws[--Qs],Ws[Qs]=null,Xs=Ws[--Qs],Ws[Qs]=null,Ks=Ws[--Qs],Ws[Qs]=null}var ni=null,ai=null,si=!1,ii=null;function ri(e,t){var n=Ac(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function oi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ni=e,ai=cs(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ni=e,ai=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==$s?{id:Ks,overflow:Xs}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ac(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ni=e,ai=null,!0);default:return!1}}function li(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ci(e){if(si){var t=ai;if(t){var n=t;if(!oi(e,t)){if(li(e))throw Error(i(418));t=cs(n.nextSibling);var a=ni;t&&oi(e,t)?ri(a,n):(e.flags=-4097&e.flags|2,si=!1,ni=e)}}else{if(li(e))throw Error(i(418));e.flags=-4097&e.flags|2,si=!1,ni=e}}}function di(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ni=e}function ui(e){if(e!==ni)return!1;if(!si)return di(e),si=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ns(e.type,e.memoizedProps)),t&&(t=ai)){if(li(e))throw pi(),Error(i(418));for(;t;)ri(e,t),t=cs(t.nextSibling)}if(di(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ai=cs(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ai=null}}else ai=ni?cs(e.stateNode.nextSibling):null;return!0}function pi(){for(var e=ai;e;)e=cs(e.nextSibling)}function mi(){ai=ni=null,si=!1}function hi(e){null===ii?ii=[e]:ii.push(e)}var fi=y.ReactCurrentBatchConfig;function gi(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var xi=Ss(null),_i=null,bi=null,yi=null;function vi(){yi=bi=_i=null}function Ni(e){var t=xi.current;js(xi),e._currentValue=t}function Ei(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Si(e,t){_i=e,yi=bi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(yo=!0),e.firstContext=null)}function ji(e){var t=e._currentValue;if(yi!==e)if(e={context:e,memoizedValue:t,next:null},null===bi){if(null===_i)throw Error(i(308));bi=e,_i.dependencies={lanes:0,firstContext:e}}else bi=bi.next=e;return t}var Ti=null;function wi(e){null===Ti?Ti=[e]:Ti.push(e)}function Ii(e,t,n,a){var s=t.interleaved;return null===s?(n.next=n,wi(t)):(n.next=s.next,s.next=n),t.interleaved=n,Ci(e,a)}function Ci(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Oi=!1;function Ri(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ai(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ki(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Di(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Cl)){var s=a.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),a.pending=t,Ci(e,n)}return null===(s=a.interleaved)?(t.next=t,wi(a)):(t.next=s.next,s.next=t),a.interleaved=t,Ci(e,n)}function Pi(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,_t(e,n)}}function Mi(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var s=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var r={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?s=i=r:i=i.next=r,n=n.next}while(null!==n);null===i?s=i=t:i=i.next=t}else s=i=t;return n={baseState:a.baseState,firstBaseUpdate:s,lastBaseUpdate:i,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Li(e,t,n,a){var s=e.updateQueue;Oi=!1;var i=s.firstBaseUpdate,r=s.lastBaseUpdate,o=s.shared.pending;if(null!==o){s.shared.pending=null;var l=o,c=l.next;l.next=null,null===r?i=c:r.next=c,r=l;var d=e.alternate;null!==d&&((o=(d=d.updateQueue).lastBaseUpdate)!==r&&(null===o?d.firstBaseUpdate=c:o.next=c,d.lastBaseUpdate=l))}if(null!==i){var u=s.baseState;for(r=0,d=c=l=null,o=i;;){var p=o.lane,m=o.eventTime;if((a&p)===p){null!==d&&(d=d.next={eventTime:m,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var h=e,f=o;switch(p=t,m=n,f.tag){case 1:if("function"===typeof(h=f.payload)){u=h.call(m,u,p);break e}u=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null===(p="function"===typeof(h=f.payload)?h.call(m,u,p):h)||void 0===p)break e;u=L({},u,p);break e;case 2:Oi=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(p=s.effects)?s.effects=[o]:p.push(o))}else m={eventTime:m,lane:p,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===d?(c=d=m,l=u):d=d.next=m,r|=p;if(null===(o=o.next)){if(null===(o=s.shared.pending))break;o=(p=o).next,p.next=null,s.lastBaseUpdate=p,s.shared.pending=null}}if(null===d&&(l=u),s.baseState=l,s.firstBaseUpdate=c,s.lastBaseUpdate=d,null!==(t=s.shared.interleaved)){s=t;do{r|=s.lane,s=s.next}while(s!==t)}else null===i&&(s.shared.lanes=0);Ll|=r,e.lanes=r,e.memoizedState=u}}function Fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],s=a.callback;if(null!==s){if(a.callback=null,a=n,"function"!==typeof s)throw Error(i(191,s));s.call(a)}}}var Ui=(new a.Component).refs;function Bi(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Gi={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=tc(),s=nc(e),i=ki(a,s);i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=Di(e,i,s))&&(ac(t,e,s,a),Pi(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=tc(),s=nc(e),i=ki(a,s);i.tag=1,i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=Di(e,i,s))&&(ac(t,e,s,a),Pi(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tc(),a=nc(e),s=ki(n,a);s.tag=2,void 0!==t&&null!==t&&(s.callback=t),null!==(t=Di(e,s,a))&&(ac(t,e,a,n),Pi(t,e,a))}};function Hi(e,t,n,a,s,i,r){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,i,r):!t.prototype||!t.prototype.isPureReactComponent||(!la(n,a)||!la(s,i))}function zi(e,t,n){var a=!1,s=ws,i=t.contextType;return"object"===typeof i&&null!==i?i=ji(i):(s=As(t)?Os:Is.current,i=(a=null!==(a=t.contextTypes)&&void 0!==a)?Rs(e,s):ws),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Gi,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=i),t}function Yi(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Gi.enqueueReplaceState(t,t.state,null)}function qi(e,t,n,a){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs=Ui,Ri(e);var i=t.contextType;"object"===typeof i&&null!==i?s.context=ji(i):(i=As(t)?Os:Is.current,s.context=Rs(e,i)),s.state=e.memoizedState,"function"===typeof(i=t.getDerivedStateFromProps)&&(Bi(e,t,i,n),s.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(t=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&Gi.enqueueReplaceState(s,s.state,null),Li(e,n,s,a),s.state=e.memoizedState),"function"===typeof s.componentDidMount&&(e.flags|=4194308)}function Vi(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var a=n.stateNode}if(!a)throw Error(i(147,e));var s=a,r=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===r?t.ref:(t=function(e){var t=s.refs;t===Ui&&(t=s.refs={}),null===e?delete t[r]:t[r]=e},t._stringRef=r,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function Wi(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Qi(e){return(0,e._init)(e._payload)}function $i(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Dc(e,t)).index=0,e.sibling=null,e}function r(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,a){return null===t||6!==t.tag?((t=Fc(n,e.mode,a)).return=e,t):((t=s(t,n)).return=e,t)}function c(e,t,n,a){var i=n.type;return i===E?u(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===A&&Qi(i)===t.type)?((a=s(t,n.props)).ref=Vi(e,t,n),a.return=e,a):((a=Pc(n.type,n.key,n.props,null,e.mode,a)).ref=Vi(e,t,n),a.return=e,a)}function d(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Uc(n,e.mode,a)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function u(e,t,n,a,i){return null===t||7!==t.tag?((t=Mc(n,e.mode,a,i)).return=e,t):((t=s(t,n)).return=e,t)}function p(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Fc(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case v:return(n=Pc(t.type,t.key,t.props,null,e.mode,n)).ref=Vi(e,null,t),n.return=e,n;case N:return(t=Uc(t,e.mode,n)).return=e,t;case A:return p(e,(0,t._init)(t._payload),n)}if(te(t)||P(t))return(t=Mc(t,e.mode,n,null)).return=e,t;Wi(e,t)}return null}function m(e,t,n,a){var s=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==s?null:l(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case v:return n.key===s?c(e,t,n,a):null;case N:return n.key===s?d(e,t,n,a):null;case A:return m(e,t,(s=n._init)(n._payload),a)}if(te(n)||P(n))return null!==s?null:u(e,t,n,a,null);Wi(e,n)}return null}function h(e,t,n,a,s){if("string"===typeof a&&""!==a||"number"===typeof a)return l(t,e=e.get(n)||null,""+a,s);if("object"===typeof a&&null!==a){switch(a.$$typeof){case v:return c(t,e=e.get(null===a.key?n:a.key)||null,a,s);case N:return d(t,e=e.get(null===a.key?n:a.key)||null,a,s);case A:return h(e,t,n,(0,a._init)(a._payload),s)}if(te(a)||P(a))return u(t,e=e.get(n)||null,a,s,null);Wi(t,a)}return null}function f(s,i,o,l){for(var c=null,d=null,u=i,f=i=0,g=null;null!==u&&f<o.length;f++){u.index>f?(g=u,u=null):g=u.sibling;var x=m(s,u,o[f],l);if(null===x){null===u&&(u=g);break}e&&u&&null===x.alternate&&t(s,u),i=r(x,i,f),null===d?c=x:d.sibling=x,d=x,u=g}if(f===o.length)return n(s,u),si&&Zs(s,f),c;if(null===u){for(;f<o.length;f++)null!==(u=p(s,o[f],l))&&(i=r(u,i,f),null===d?c=u:d.sibling=u,d=u);return si&&Zs(s,f),c}for(u=a(s,u);f<o.length;f++)null!==(g=h(u,s,f,o[f],l))&&(e&&null!==g.alternate&&u.delete(null===g.key?f:g.key),i=r(g,i,f),null===d?c=g:d.sibling=g,d=g);return e&&u.forEach((function(e){return t(s,e)})),si&&Zs(s,f),c}function g(s,o,l,c){var d=P(l);if("function"!==typeof d)throw Error(i(150));if(null==(l=d.call(l)))throw Error(i(151));for(var u=d=null,f=o,g=o=0,x=null,_=l.next();null!==f&&!_.done;g++,_=l.next()){f.index>g?(x=f,f=null):x=f.sibling;var b=m(s,f,_.value,c);if(null===b){null===f&&(f=x);break}e&&f&&null===b.alternate&&t(s,f),o=r(b,o,g),null===u?d=b:u.sibling=b,u=b,f=x}if(_.done)return n(s,f),si&&Zs(s,g),d;if(null===f){for(;!_.done;g++,_=l.next())null!==(_=p(s,_.value,c))&&(o=r(_,o,g),null===u?d=_:u.sibling=_,u=_);return si&&Zs(s,g),d}for(f=a(s,f);!_.done;g++,_=l.next())null!==(_=h(f,s,g,_.value,c))&&(e&&null!==_.alternate&&f.delete(null===_.key?g:_.key),o=r(_,o,g),null===u?d=_:u.sibling=_,u=_);return e&&f.forEach((function(e){return t(s,e)})),si&&Zs(s,g),d}return function e(a,i,r,l){if("object"===typeof r&&null!==r&&r.type===E&&null===r.key&&(r=r.props.children),"object"===typeof r&&null!==r){switch(r.$$typeof){case v:e:{for(var c=r.key,d=i;null!==d;){if(d.key===c){if((c=r.type)===E){if(7===d.tag){n(a,d.sibling),(i=s(d,r.props.children)).return=a,a=i;break e}}else if(d.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===A&&Qi(c)===d.type){n(a,d.sibling),(i=s(d,r.props)).ref=Vi(a,d,r),i.return=a,a=i;break e}n(a,d);break}t(a,d),d=d.sibling}r.type===E?((i=Mc(r.props.children,a.mode,l,r.key)).return=a,a=i):((l=Pc(r.type,r.key,r.props,null,a.mode,l)).ref=Vi(a,i,r),l.return=a,a=l)}return o(a);case N:e:{for(d=r.key;null!==i;){if(i.key===d){if(4===i.tag&&i.stateNode.containerInfo===r.containerInfo&&i.stateNode.implementation===r.implementation){n(a,i.sibling),(i=s(i,r.children||[])).return=a,a=i;break e}n(a,i);break}t(a,i),i=i.sibling}(i=Uc(r,a.mode,l)).return=a,a=i}return o(a);case A:return e(a,i,(d=r._init)(r._payload),l)}if(te(r))return f(a,i,r,l);if(P(r))return g(a,i,r,l);Wi(a,r)}return"string"===typeof r&&""!==r||"number"===typeof r?(r=""+r,null!==i&&6===i.tag?(n(a,i.sibling),(i=s(i,r)).return=a,a=i):(n(a,i),(i=Fc(r,a.mode,l)).return=a,a=i),o(a)):n(a,i)}}var Ki=$i(!0),Xi=$i(!1),Zi={},Ji=Ss(Zi),er=Ss(Zi),tr=Ss(Zi);function nr(e){if(e===Zi)throw Error(i(174));return e}function ar(e,t){switch(Ts(tr,t),Ts(er,e),Ts(Ji,Zi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}js(Ji),Ts(Ji,t)}function sr(){js(Ji),js(er),js(tr)}function ir(e){nr(tr.current);var t=nr(Ji.current),n=le(t,e.type);t!==n&&(Ts(er,e),Ts(Ji,n))}function rr(e){er.current===e&&(js(Ji),js(er))}var or=Ss(0);function lr(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var cr=[];function dr(){for(var e=0;e<cr.length;e++)cr[e]._workInProgressVersionPrimary=null;cr.length=0}var ur=y.ReactCurrentDispatcher,pr=y.ReactCurrentBatchConfig,mr=0,hr=null,fr=null,gr=null,xr=!1,_r=!1,br=0,yr=0;function vr(){throw Error(i(321))}function Nr(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!oa(e[n],t[n]))return!1;return!0}function Er(e,t,n,a,s,r){if(mr=r,hr=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ur.current=null===e||null===e.memoizedState?ro:oo,e=n(a,s),_r){r=0;do{if(_r=!1,br=0,25<=r)throw Error(i(301));r+=1,gr=fr=null,t.updateQueue=null,ur.current=lo,e=n(a,s)}while(_r)}if(ur.current=io,t=null!==fr&&null!==fr.next,mr=0,gr=fr=hr=null,xr=!1,t)throw Error(i(300));return e}function Sr(){var e=0!==br;return br=0,e}function jr(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===gr?hr.memoizedState=gr=e:gr=gr.next=e,gr}function Tr(){if(null===fr){var e=hr.alternate;e=null!==e?e.memoizedState:null}else e=fr.next;var t=null===gr?hr.memoizedState:gr.next;if(null!==t)gr=t,fr=e;else{if(null===e)throw Error(i(310));e={memoizedState:(fr=e).memoizedState,baseState:fr.baseState,baseQueue:fr.baseQueue,queue:fr.queue,next:null},null===gr?hr.memoizedState=gr=e:gr=gr.next=e}return gr}function wr(e,t){return"function"===typeof t?t(e):t}function Ir(e){var t=Tr(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var a=fr,s=a.baseQueue,r=n.pending;if(null!==r){if(null!==s){var o=s.next;s.next=r.next,r.next=o}a.baseQueue=s=r,n.pending=null}if(null!==s){r=s.next,a=a.baseState;var l=o=null,c=null,d=r;do{var u=d.lane;if((mr&u)===u)null!==c&&(c=c.next={lane:0,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null}),a=d.hasEagerState?d.eagerState:e(a,d.action);else{var p={lane:u,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null};null===c?(l=c=p,o=a):c=c.next=p,hr.lanes|=u,Ll|=u}d=d.next}while(null!==d&&d!==r);null===c?o=a:c.next=l,oa(a,t.memoizedState)||(yo=!0),t.memoizedState=a,t.baseState=o,t.baseQueue=c,n.lastRenderedState=a}if(null!==(e=n.interleaved)){s=e;do{r=s.lane,hr.lanes|=r,Ll|=r,s=s.next}while(s!==e)}else null===s&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Cr(e){var t=Tr(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var a=n.dispatch,s=n.pending,r=t.memoizedState;if(null!==s){n.pending=null;var o=s=s.next;do{r=e(r,o.action),o=o.next}while(o!==s);oa(r,t.memoizedState)||(yo=!0),t.memoizedState=r,null===t.baseQueue&&(t.baseState=r),n.lastRenderedState=r}return[r,a]}function Or(){}function Rr(e,t){var n=hr,a=Tr(),s=t(),r=!oa(a.memoizedState,s);if(r&&(a.memoizedState=s,yo=!0),a=a.queue,zr(Dr.bind(null,n,a,e),[e]),a.getSnapshot!==t||r||null!==gr&&1&gr.memoizedState.tag){if(n.flags|=2048,Fr(9,kr.bind(null,n,a,s,t),void 0,null),null===Ol)throw Error(i(349));0!==(30&mr)||Ar(n,t,s)}return s}function Ar(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=hr.updateQueue)?(t={lastEffect:null,stores:null},hr.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function kr(e,t,n,a){t.value=n,t.getSnapshot=a,Pr(t)&&Mr(e)}function Dr(e,t,n){return n((function(){Pr(t)&&Mr(e)}))}function Pr(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!oa(e,n)}catch(a){return!0}}function Mr(e){var t=Ci(e,1);null!==t&&ac(t,e,1,-1)}function Lr(e){var t=jr();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:wr,lastRenderedState:e},t.queue=e,e=e.dispatch=to.bind(null,hr,e),[t.memoizedState,e]}function Fr(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=hr.updateQueue)?(t={lastEffect:null,stores:null},hr.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Ur(){return Tr().memoizedState}function Br(e,t,n,a){var s=jr();hr.flags|=e,s.memoizedState=Fr(1|t,n,void 0,void 0===a?null:a)}function Gr(e,t,n,a){var s=Tr();a=void 0===a?null:a;var i=void 0;if(null!==fr){var r=fr.memoizedState;if(i=r.destroy,null!==a&&Nr(a,r.deps))return void(s.memoizedState=Fr(t,n,i,a))}hr.flags|=e,s.memoizedState=Fr(1|t,n,i,a)}function Hr(e,t){return Br(8390656,8,e,t)}function zr(e,t){return Gr(2048,8,e,t)}function Yr(e,t){return Gr(4,2,e,t)}function qr(e,t){return Gr(4,4,e,t)}function Vr(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wr(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Gr(4,4,Vr.bind(null,t,e),n)}function Qr(){}function $r(e,t){var n=Tr();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&Nr(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Kr(e,t){var n=Tr();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&Nr(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Xr(e,t,n){return 0===(21&mr)?(e.baseState&&(e.baseState=!1,yo=!0),e.memoizedState=n):(oa(n,t)||(n=ft(),hr.lanes|=n,Ll|=n,e.baseState=!0),t)}function Zr(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var a=pr.transition;pr.transition={};try{e(!1),t()}finally{bt=n,pr.transition=a}}function Jr(){return Tr().memoizedState}function eo(e,t,n){var a=nc(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},no(e))ao(t,n);else if(null!==(n=Ii(e,t,n,a))){ac(n,e,a,tc()),so(n,t,a)}}function to(e,t,n){var a=nc(e),s={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(no(e))ao(t,s);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var r=t.lastRenderedState,o=i(r,n);if(s.hasEagerState=!0,s.eagerState=o,oa(o,r)){var l=t.interleaved;return null===l?(s.next=s,wi(t)):(s.next=l.next,l.next=s),void(t.interleaved=s)}}catch(c){}null!==(n=Ii(e,t,s,a))&&(ac(n,e,a,s=tc()),so(n,t,a))}}function no(e){var t=e.alternate;return e===hr||null!==t&&t===hr}function ao(e,t){_r=xr=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function so(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,_t(e,n)}}var io={readContext:ji,useCallback:vr,useContext:vr,useEffect:vr,useImperativeHandle:vr,useInsertionEffect:vr,useLayoutEffect:vr,useMemo:vr,useReducer:vr,useRef:vr,useState:vr,useDebugValue:vr,useDeferredValue:vr,useTransition:vr,useMutableSource:vr,useSyncExternalStore:vr,useId:vr,unstable_isNewReconciler:!1},ro={readContext:ji,useCallback:function(e,t){return jr().memoizedState=[e,void 0===t?null:t],e},useContext:ji,useEffect:Hr,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Br(4194308,4,Vr.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Br(4194308,4,e,t)},useInsertionEffect:function(e,t){return Br(4,2,e,t)},useMemo:function(e,t){var n=jr();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=jr();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=eo.bind(null,hr,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},jr().memoizedState=e},useState:Lr,useDebugValue:Qr,useDeferredValue:function(e){return jr().memoizedState=e},useTransition:function(){var e=Lr(!1),t=e[0];return e=Zr.bind(null,e[1]),jr().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=hr,s=jr();if(si){if(void 0===n)throw Error(i(407));n=n()}else{if(n=t(),null===Ol)throw Error(i(349));0!==(30&mr)||Ar(a,t,n)}s.memoizedState=n;var r={value:n,getSnapshot:t};return s.queue=r,Hr(Dr.bind(null,a,r,e),[e]),a.flags|=2048,Fr(9,kr.bind(null,a,r,n,t),void 0,null),n},useId:function(){var e=jr(),t=Ol.identifierPrefix;if(si){var n=Xs;t=":"+t+"R"+(n=(Ks&~(1<<32-rt(Ks)-1)).toString(32)+n),0<(n=br++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=yr++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},oo={readContext:ji,useCallback:$r,useContext:ji,useEffect:zr,useImperativeHandle:Wr,useInsertionEffect:Yr,useLayoutEffect:qr,useMemo:Kr,useReducer:Ir,useRef:Ur,useState:function(){return Ir(wr)},useDebugValue:Qr,useDeferredValue:function(e){return Xr(Tr(),fr.memoizedState,e)},useTransition:function(){return[Ir(wr)[0],Tr().memoizedState]},useMutableSource:Or,useSyncExternalStore:Rr,useId:Jr,unstable_isNewReconciler:!1},lo={readContext:ji,useCallback:$r,useContext:ji,useEffect:zr,useImperativeHandle:Wr,useInsertionEffect:Yr,useLayoutEffect:qr,useMemo:Kr,useReducer:Cr,useRef:Ur,useState:function(){return Cr(wr)},useDebugValue:Qr,useDeferredValue:function(e){var t=Tr();return null===fr?t.memoizedState=e:Xr(t,fr.memoizedState,e)},useTransition:function(){return[Cr(wr)[0],Tr().memoizedState]},useMutableSource:Or,useSyncExternalStore:Rr,useId:Jr,unstable_isNewReconciler:!1};function co(e,t){try{var n="",a=t;do{n+=G(a),a=a.return}while(a);var s=n}catch(i){s="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:t,stack:s,digest:null}}function uo(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function po(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var mo="function"===typeof WeakMap?WeakMap:Map;function ho(e,t,n){(n=ki(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){ql||(ql=!0,Vl=a),po(0,t)},n}function fo(e,t,n){(n=ki(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var s=t.value;n.payload=function(){return a(s)},n.callback=function(){po(0,t)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(n.callback=function(){po(0,t),"function"!==typeof a&&(null===Wl?Wl=new Set([this]):Wl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function go(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new mo;var s=new Set;a.set(t,s)}else void 0===(s=a.get(t))&&(s=new Set,a.set(t,s));s.has(n)||(s.add(n),e=Tc.bind(null,e,t,n),t.then(e,e))}function xo(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function _o(e,t,n,a,s){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=ki(-1,1)).tag=2,Di(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var bo=y.ReactCurrentOwner,yo=!1;function vo(e,t,n,a){t.child=null===e?Xi(t,null,n,a):Ki(t,e.child,n,a)}function No(e,t,n,a,s){n=n.render;var i=t.ref;return Si(t,s),a=Er(e,t,n,a,i,s),n=Sr(),null===e||yo?(si&&n&&ei(t),t.flags|=1,vo(e,t,a,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,qo(e,t,s))}function Eo(e,t,n,a,s){if(null===e){var i=n.type;return"function"!==typeof i||kc(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Pc(n.type,null,a,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,So(e,t,i,a,s))}if(i=e.child,0===(e.lanes&s)){var r=i.memoizedProps;if((n=null!==(n=n.compare)?n:la)(r,a)&&e.ref===t.ref)return qo(e,t,s)}return t.flags|=1,(e=Dc(i,a)).ref=t.ref,e.return=t,t.child=e}function So(e,t,n,a,s){if(null!==e){var i=e.memoizedProps;if(la(i,a)&&e.ref===t.ref){if(yo=!1,t.pendingProps=a=i,0===(e.lanes&s))return t.lanes=e.lanes,qo(e,t,s);0!==(131072&e.flags)&&(yo=!0)}}return wo(e,t,n,a,s)}function jo(e,t,n){var a=t.pendingProps,s=a.children,i=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ts(Dl,kl),kl|=n;else{if(0===(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ts(Dl,kl),kl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==i?i.baseLanes:n,Ts(Dl,kl),kl|=a}else null!==i?(a=i.baseLanes|n,t.memoizedState=null):a=n,Ts(Dl,kl),kl|=a;return vo(e,t,s,n),t.child}function To(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function wo(e,t,n,a,s){var i=As(n)?Os:Is.current;return i=Rs(t,i),Si(t,s),n=Er(e,t,n,a,i,s),a=Sr(),null===e||yo?(si&&a&&ei(t),t.flags|=1,vo(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,qo(e,t,s))}function Io(e,t,n,a,s){if(As(n)){var i=!0;Ms(t)}else i=!1;if(Si(t,s),null===t.stateNode)Yo(e,t),zi(t,n,a),qi(t,n,a,s),a=!0;else if(null===e){var r=t.stateNode,o=t.memoizedProps;r.props=o;var l=r.context,c=n.contextType;"object"===typeof c&&null!==c?c=ji(c):c=Rs(t,c=As(n)?Os:Is.current);var d=n.getDerivedStateFromProps,u="function"===typeof d||"function"===typeof r.getSnapshotBeforeUpdate;u||"function"!==typeof r.UNSAFE_componentWillReceiveProps&&"function"!==typeof r.componentWillReceiveProps||(o!==a||l!==c)&&Yi(t,r,a,c),Oi=!1;var p=t.memoizedState;r.state=p,Li(t,a,r,s),l=t.memoizedState,o!==a||p!==l||Cs.current||Oi?("function"===typeof d&&(Bi(t,n,d,a),l=t.memoizedState),(o=Oi||Hi(t,n,o,a,p,l,c))?(u||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||("function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"===typeof r.componentDidMount&&(t.flags|=4194308)):("function"===typeof r.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=l),r.props=a,r.state=l,r.context=c,a=o):("function"===typeof r.componentDidMount&&(t.flags|=4194308),a=!1)}else{r=t.stateNode,Ai(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:gi(t.type,o),r.props=c,u=t.pendingProps,p=r.context,"object"===typeof(l=n.contextType)&&null!==l?l=ji(l):l=Rs(t,l=As(n)?Os:Is.current);var m=n.getDerivedStateFromProps;(d="function"===typeof m||"function"===typeof r.getSnapshotBeforeUpdate)||"function"!==typeof r.UNSAFE_componentWillReceiveProps&&"function"!==typeof r.componentWillReceiveProps||(o!==u||p!==l)&&Yi(t,r,a,l),Oi=!1,p=t.memoizedState,r.state=p,Li(t,a,r,s);var h=t.memoizedState;o!==u||p!==h||Cs.current||Oi?("function"===typeof m&&(Bi(t,n,m,a),h=t.memoizedState),(c=Oi||Hi(t,n,c,a,p,h,l)||!1)?(d||"function"!==typeof r.UNSAFE_componentWillUpdate&&"function"!==typeof r.componentWillUpdate||("function"===typeof r.componentWillUpdate&&r.componentWillUpdate(a,h,l),"function"===typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(a,h,l)),"function"===typeof r.componentDidUpdate&&(t.flags|=4),"function"===typeof r.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof r.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof r.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=h),r.props=a,r.state=h,r.context=l,a=c):("function"!==typeof r.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof r.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),a=!1)}return Co(e,t,n,a,i,s)}function Co(e,t,n,a,s,i){To(e,t);var r=0!==(128&t.flags);if(!a&&!r)return s&&Ls(t,n,!1),qo(e,t,i);a=t.stateNode,bo.current=t;var o=r&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&r?(t.child=Ki(t,e.child,null,i),t.child=Ki(t,null,o,i)):vo(e,t,o,i),t.memoizedState=a.state,s&&Ls(t,n,!0),t.child}function Oo(e){var t=e.stateNode;t.pendingContext?Ds(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ds(0,t.context,!1),ar(e,t.containerInfo)}function Ro(e,t,n,a,s){return mi(),hi(s),t.flags|=256,vo(e,t,n,a),t.child}var Ao,ko,Do,Po,Mo={dehydrated:null,treeContext:null,retryLane:0};function Lo(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fo(e,t,n){var a,s=t.pendingProps,r=or.current,o=!1,l=0!==(128&t.flags);if((a=l)||(a=(null===e||null!==e.memoizedState)&&0!==(2&r)),a?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(r|=1),Ts(or,1&r),null===e)return ci(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=s.children,e=s.fallback,o?(s=t.mode,o=t.child,l={mode:"hidden",children:l},0===(1&s)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Lc(l,s,0,null),e=Mc(e,s,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Lo(n),t.memoizedState=Mo,e):Uo(t,l));if(null!==(r=e.memoizedState)&&null!==(a=r.dehydrated))return function(e,t,n,a,s,r,o){if(n)return 256&t.flags?(t.flags&=-257,Bo(e,t,o,a=uo(Error(i(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(r=a.fallback,s=t.mode,a=Lc({mode:"visible",children:a.children},s,0,null),(r=Mc(r,s,o,null)).flags|=2,a.return=t,r.return=t,a.sibling=r,t.child=a,0!==(1&t.mode)&&Ki(t,e.child,null,o),t.child.memoizedState=Lo(o),t.memoizedState=Mo,r);if(0===(1&t.mode))return Bo(e,t,o,null);if("$!"===s.data){if(a=s.nextSibling&&s.nextSibling.dataset)var l=a.dgst;return a=l,Bo(e,t,o,a=uo(r=Error(i(419)),a,void 0))}if(l=0!==(o&e.childLanes),yo||l){if(null!==(a=Ol)){switch(o&-o){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!==(s&(a.suspendedLanes|o))?0:s)&&s!==r.retryLane&&(r.retryLane=s,Ci(e,s),ac(a,e,s,-1))}return gc(),Bo(e,t,o,a=uo(Error(i(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Ic.bind(null,e),s._reactRetry=t,null):(e=r.treeContext,ai=cs(s.nextSibling),ni=t,si=!0,ii=null,null!==e&&(Ws[Qs++]=Ks,Ws[Qs++]=Xs,Ws[Qs++]=$s,Ks=e.id,Xs=e.overflow,$s=t),t=Uo(t,a.children),t.flags|=4096,t)}(e,t,l,s,a,r,n);if(o){o=s.fallback,l=t.mode,a=(r=e.child).sibling;var c={mode:"hidden",children:s.children};return 0===(1&l)&&t.child!==r?((s=t.child).childLanes=0,s.pendingProps=c,t.deletions=null):(s=Dc(r,c)).subtreeFlags=14680064&r.subtreeFlags,null!==a?o=Dc(a,o):(o=Mc(o,l,n,null)).flags|=2,o.return=t,s.return=t,s.sibling=o,t.child=s,s=o,o=t.child,l=null===(l=e.child.memoizedState)?Lo(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=Mo,s}return e=(o=e.child).sibling,s=Dc(o,{mode:"visible",children:s.children}),0===(1&t.mode)&&(s.lanes=n),s.return=t,s.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=s,t.memoizedState=null,s}function Uo(e,t){return(t=Lc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bo(e,t,n,a){return null!==a&&hi(a),Ki(t,e.child,null,n),(e=Uo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Go(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Ei(e.return,t,n)}function Ho(e,t,n,a,s){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:s}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=a,i.tail=n,i.tailMode=s)}function zo(e,t,n){var a=t.pendingProps,s=a.revealOrder,i=a.tail;if(vo(e,t,a.children,n),0!==(2&(a=or.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Go(e,n,t);else if(19===e.tag)Go(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Ts(or,a),0===(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;null!==n;)null!==(e=n.alternate)&&null===lr(e)&&(s=n),n=n.sibling;null===(n=s)?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),Ho(t,!1,s,n,i);break;case"backwards":for(n=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===lr(e)){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}Ho(t,!0,n,null,i);break;case"together":Ho(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Yo(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function qo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ll|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Dc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Vo(e,t){if(!si)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Wo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var s=e.child;null!==s;)n|=s.lanes|s.childLanes,a|=14680064&s.subtreeFlags,a|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)n|=s.lanes|s.childLanes,a|=s.subtreeFlags,a|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Qo(e,t,n){var a=t.pendingProps;switch(ti(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Wo(t),null;case 1:case 17:return As(t.type)&&ks(),Wo(t),null;case 3:return a=t.stateNode,sr(),js(Cs),js(Is),dr(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ui(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ii&&(oc(ii),ii=null))),ko(e,t),Wo(t),null;case 5:rr(t);var s=nr(tr.current);if(n=t.type,null!==e&&null!=t.stateNode)Do(e,t,n,a,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(i(166));return Wo(t),null}if(e=nr(Ji.current),ui(t)){a=t.stateNode,n=t.type;var r=t.memoizedProps;switch(a[ps]=t,a[ms]=r,e=0!==(1&t.mode),n){case"dialog":Ua("cancel",a),Ua("close",a);break;case"iframe":case"object":case"embed":Ua("load",a);break;case"video":case"audio":for(s=0;s<Pa.length;s++)Ua(Pa[s],a);break;case"source":Ua("error",a);break;case"img":case"image":case"link":Ua("error",a),Ua("load",a);break;case"details":Ua("toggle",a);break;case"input":K(a,r),Ua("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!r.multiple},Ua("invalid",a);break;case"textarea":se(a,r),Ua("invalid",a)}for(var l in _e(n,r),s=null,r)if(r.hasOwnProperty(l)){var c=r[l];"children"===l?"string"===typeof c?a.textContent!==c&&(!0!==r.suppressHydrationWarning&&Za(a.textContent,c,e),s=["children",c]):"number"===typeof c&&a.textContent!==""+c&&(!0!==r.suppressHydrationWarning&&Za(a.textContent,c,e),s=["children",""+c]):o.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Ua("scroll",a)}switch(n){case"input":V(a),J(a,r,!0);break;case"textarea":V(a),re(a);break;case"select":case"option":break;default:"function"===typeof r.onClick&&(a.onclick=Ja)}a=s,t.updateQueue=a,null!==a&&(t.flags|=4)}else{l=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=l.createElement(n,{is:a.is}):(e=l.createElement(n),"select"===n&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,n),e[ps]=t,e[ms]=a,Ao(e,t,!1,!1),t.stateNode=e;e:{switch(l=be(n,a),n){case"dialog":Ua("cancel",e),Ua("close",e),s=a;break;case"iframe":case"object":case"embed":Ua("load",e),s=a;break;case"video":case"audio":for(s=0;s<Pa.length;s++)Ua(Pa[s],e);s=a;break;case"source":Ua("error",e),s=a;break;case"img":case"image":case"link":Ua("error",e),Ua("load",e),s=a;break;case"details":Ua("toggle",e),s=a;break;case"input":K(e,a),s=$(e,a),Ua("invalid",e);break;case"option":default:s=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},s=L({},a,{value:void 0}),Ua("invalid",e);break;case"textarea":se(e,a),s=ae(e,a),Ua("invalid",e)}for(r in _e(n,s),c=s)if(c.hasOwnProperty(r)){var d=c[r];"style"===r?ge(e,d):"dangerouslySetInnerHTML"===r?null!=(d=d?d.__html:void 0)&&ue(e,d):"children"===r?"string"===typeof d?("textarea"!==n||""!==d)&&pe(e,d):"number"===typeof d&&pe(e,""+d):"suppressContentEditableWarning"!==r&&"suppressHydrationWarning"!==r&&"autoFocus"!==r&&(o.hasOwnProperty(r)?null!=d&&"onScroll"===r&&Ua("scroll",e):null!=d&&b(e,r,d,l))}switch(n){case"input":V(e),J(e,a,!1);break;case"textarea":V(e),re(e);break;case"option":null!=a.value&&e.setAttribute("value",""+Y(a.value));break;case"select":e.multiple=!!a.multiple,null!=(r=a.value)?ne(e,!!a.multiple,r,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=Ja)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Wo(t),null;case 6:if(e&&null!=t.stateNode)Po(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(i(166));if(n=nr(tr.current),nr(Ji.current),ui(t)){if(a=t.stateNode,n=t.memoizedProps,a[ps]=t,(r=a.nodeValue!==n)&&null!==(e=ni))switch(e.tag){case 3:Za(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Za(a.nodeValue,n,0!==(1&e.mode))}r&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[ps]=t,t.stateNode=a}return Wo(t),null;case 13:if(js(or),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(si&&null!==ai&&0!==(1&t.mode)&&0===(128&t.flags))pi(),mi(),t.flags|=98560,r=!1;else if(r=ui(t),null!==a&&null!==a.dehydrated){if(null===e){if(!r)throw Error(i(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(i(317));r[ps]=t}else mi(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Wo(t),r=!1}else null!==ii&&(oc(ii),ii=null),r=!0;if(!r)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&or.current)?0===Pl&&(Pl=3):gc())),null!==t.updateQueue&&(t.flags|=4),Wo(t),null);case 4:return sr(),ko(e,t),null===e&&Ha(t.stateNode.containerInfo),Wo(t),null;case 10:return Ni(t.type._context),Wo(t),null;case 19:if(js(or),null===(r=t.memoizedState))return Wo(t),null;if(a=0!==(128&t.flags),null===(l=r.rendering))if(a)Vo(r,!1);else{if(0!==Pl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=lr(e))){for(t.flags|=128,Vo(r,!1),null!==(a=l.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(r=n).flags&=14680066,null===(l=r.alternate)?(r.childLanes=0,r.lanes=e,r.child=null,r.subtreeFlags=0,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null,r.stateNode=null):(r.childLanes=l.childLanes,r.lanes=l.lanes,r.child=l.child,r.subtreeFlags=0,r.deletions=null,r.memoizedProps=l.memoizedProps,r.memoizedState=l.memoizedState,r.updateQueue=l.updateQueue,r.type=l.type,e=l.dependencies,r.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ts(or,1&or.current|2),t.child}e=e.sibling}null!==r.tail&&Xe()>zl&&(t.flags|=128,a=!0,Vo(r,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=lr(l))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Vo(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate&&!si)return Wo(t),null}else 2*Xe()-r.renderingStartTime>zl&&1073741824!==n&&(t.flags|=128,a=!0,Vo(r,!1),t.lanes=4194304);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.renderingStartTime=Xe(),t.sibling=null,n=or.current,Ts(or,a?1&n|2:1&n),t):(Wo(t),null);case 22:case 23:return pc(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&kl)&&(Wo(t),6&t.subtreeFlags&&(t.flags|=8192)):Wo(t),null;case 24:case 25:return null}throw Error(i(156,t.tag))}function $o(e,t){switch(ti(t),t.tag){case 1:return As(t.type)&&ks(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return sr(),js(Cs),js(Is),dr(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return rr(t),null;case 13:if(js(or),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(i(340));mi()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return js(or),null;case 4:return sr(),null;case 10:return Ni(t.type._context),null;case 22:case 23:return pc(),null;default:return null}}Ao=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ko=function(){},Do=function(e,t,n,a){var s=e.memoizedProps;if(s!==a){e=t.stateNode,nr(Ji.current);var i,r=null;switch(n){case"input":s=$(e,s),a=$(e,a),r=[];break;case"select":s=L({},s,{value:void 0}),a=L({},a,{value:void 0}),r=[];break;case"textarea":s=ae(e,s),a=ae(e,a),r=[];break;default:"function"!==typeof s.onClick&&"function"===typeof a.onClick&&(e.onclick=Ja)}for(d in _e(n,a),n=null,s)if(!a.hasOwnProperty(d)&&s.hasOwnProperty(d)&&null!=s[d])if("style"===d){var l=s[d];for(i in l)l.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(o.hasOwnProperty(d)?r||(r=[]):(r=r||[]).push(d,null));for(d in a){var c=a[d];if(l=null!=s?s[d]:void 0,a.hasOwnProperty(d)&&c!==l&&(null!=c||null!=l))if("style"===d)if(l){for(i in l)!l.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&l[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(r||(r=[]),r.push(d,n)),n=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(r=r||[]).push(d,c)):"children"===d?"string"!==typeof c&&"number"!==typeof c||(r=r||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(o.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&Ua("scroll",e),r||l===c||(r=[])):(r=r||[]).push(d,c))}n&&(r=r||[]).push("style",n);var d=r;(t.updateQueue=d)&&(t.flags|=4)}},Po=function(e,t,n,a){n!==a&&(t.flags|=4)};var Ko=!1,Xo=!1,Zo="function"===typeof WeakSet?WeakSet:Set,Jo=null;function el(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){jc(e,t,a)}else n.current=null}function tl(e,t,n){try{n()}catch(a){jc(e,t,a)}}var nl=!1;function al(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var s=a=a.next;do{if((s.tag&e)===e){var i=s.destroy;s.destroy=void 0,void 0!==i&&tl(t,n,i)}s=s.next}while(s!==a)}}function sl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function il(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function rl(e){var t=e.alternate;null!==t&&(e.alternate=null,rl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ps],delete t[ms],delete t[fs],delete t[gs],delete t[xs])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ol(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ol(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cl(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Ja));else if(4!==a&&null!==(e=e.child))for(cl(e,t,n),e=e.sibling;null!==e;)cl(e,t,n),e=e.sibling}function dl(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(dl(e,t,n),e=e.sibling;null!==e;)dl(e,t,n),e=e.sibling}var ul=null,pl=!1;function ml(e,t,n){for(n=n.child;null!==n;)hl(e,t,n),n=n.sibling}function hl(e,t,n){if(it&&"function"===typeof it.onCommitFiberUnmount)try{it.onCommitFiberUnmount(st,n)}catch(o){}switch(n.tag){case 5:Xo||el(n,t);case 6:var a=ul,s=pl;ul=null,ml(e,t,n),pl=s,null!==(ul=a)&&(pl?(e=ul,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):ul.removeChild(n.stateNode));break;case 18:null!==ul&&(pl?(e=ul,n=n.stateNode,8===e.nodeType?ls(e.parentNode,n):1===e.nodeType&&ls(e,n),Ht(e)):ls(ul,n.stateNode));break;case 4:a=ul,s=pl,ul=n.stateNode.containerInfo,pl=!0,ml(e,t,n),ul=a,pl=s;break;case 0:case 11:case 14:case 15:if(!Xo&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){s=a=a.next;do{var i=s,r=i.destroy;i=i.tag,void 0!==r&&(0!==(2&i)||0!==(4&i))&&tl(n,t,r),s=s.next}while(s!==a)}ml(e,t,n);break;case 1:if(!Xo&&(el(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(o){jc(n,t,o)}ml(e,t,n);break;case 21:ml(e,t,n);break;case 22:1&n.mode?(Xo=(a=Xo)||null!==n.memoizedState,ml(e,t,n),Xo=a):ml(e,t,n);break;default:ml(e,t,n)}}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zo),t.forEach((function(t){var a=Cc.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function gl(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var s=n[a];try{var r=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,pl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,pl=!0;break e}l=l.return}if(null===ul)throw Error(i(160));hl(r,o,s),ul=null,pl=!1;var c=s.alternate;null!==c&&(c.return=null),s.return=null}catch(d){jc(s,t,d)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)xl(t,e),t=t.sibling}function xl(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gl(t,e),_l(e),4&a){try{al(3,e,e.return),sl(3,e)}catch(g){jc(e,e.return,g)}try{al(5,e,e.return)}catch(g){jc(e,e.return,g)}}break;case 1:gl(t,e),_l(e),512&a&&null!==n&&el(n,n.return);break;case 5:if(gl(t,e),_l(e),512&a&&null!==n&&el(n,n.return),32&e.flags){var s=e.stateNode;try{pe(s,"")}catch(g){jc(e,e.return,g)}}if(4&a&&null!=(s=e.stateNode)){var r=e.memoizedProps,o=null!==n?n.memoizedProps:r,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===r.type&&null!=r.name&&X(s,r),be(l,o);var d=be(l,r);for(o=0;o<c.length;o+=2){var u=c[o],p=c[o+1];"style"===u?ge(s,p):"dangerouslySetInnerHTML"===u?ue(s,p):"children"===u?pe(s,p):b(s,u,p,d)}switch(l){case"input":Z(s,r);break;case"textarea":ie(s,r);break;case"select":var m=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!r.multiple;var h=r.value;null!=h?ne(s,!!r.multiple,h,!1):m!==!!r.multiple&&(null!=r.defaultValue?ne(s,!!r.multiple,r.defaultValue,!0):ne(s,!!r.multiple,r.multiple?[]:"",!1))}s[ms]=r}catch(g){jc(e,e.return,g)}}break;case 6:if(gl(t,e),_l(e),4&a){if(null===e.stateNode)throw Error(i(162));s=e.stateNode,r=e.memoizedProps;try{s.nodeValue=r}catch(g){jc(e,e.return,g)}}break;case 3:if(gl(t,e),_l(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(g){jc(e,e.return,g)}break;case 4:default:gl(t,e),_l(e);break;case 13:gl(t,e),_l(e),8192&(s=e.child).flags&&(r=null!==s.memoizedState,s.stateNode.isHidden=r,!r||null!==s.alternate&&null!==s.alternate.memoizedState||(Hl=Xe())),4&a&&fl(e);break;case 22:if(u=null!==n&&null!==n.memoizedState,1&e.mode?(Xo=(d=Xo)||u,gl(t,e),Xo=d):gl(t,e),_l(e),8192&a){if(d=null!==e.memoizedState,(e.stateNode.isHidden=d)&&!u&&0!==(1&e.mode))for(Jo=e,u=e.child;null!==u;){for(p=Jo=u;null!==Jo;){switch(h=(m=Jo).child,m.tag){case 0:case 11:case 14:case 15:al(4,m,m.return);break;case 1:el(m,m.return);var f=m.stateNode;if("function"===typeof f.componentWillUnmount){a=m,n=m.return;try{t=a,f.props=t.memoizedProps,f.state=t.memoizedState,f.componentWillUnmount()}catch(g){jc(a,n,g)}}break;case 5:el(m,m.return);break;case 22:if(null!==m.memoizedState){Nl(p);continue}}null!==h?(h.return=m,Jo=h):Nl(p)}u=u.sibling}e:for(u=null,p=e;;){if(5===p.tag){if(null===u){u=p;try{s=p.stateNode,d?"function"===typeof(r=s.style).setProperty?r.setProperty("display","none","important"):r.display="none":(l=p.stateNode,o=void 0!==(c=p.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,l.style.display=fe("display",o))}catch(g){jc(e,e.return,g)}}}else if(6===p.tag){if(null===u)try{p.stateNode.nodeValue=d?"":p.memoizedProps}catch(g){jc(e,e.return,g)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;u===p&&(u=null),p=p.return}u===p&&(u=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:gl(t,e),_l(e),4&a&&fl(e);case 21:}}function _l(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ol(n)){var a=n;break e}n=n.return}throw Error(i(160))}switch(a.tag){case 5:var s=a.stateNode;32&a.flags&&(pe(s,""),a.flags&=-33),dl(e,ll(e),s);break;case 3:case 4:var r=a.stateNode.containerInfo;cl(e,ll(e),r);break;default:throw Error(i(161))}}catch(o){jc(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,n){Jo=e,yl(e,t,n)}function yl(e,t,n){for(var a=0!==(1&e.mode);null!==Jo;){var s=Jo,i=s.child;if(22===s.tag&&a){var r=null!==s.memoizedState||Ko;if(!r){var o=s.alternate,l=null!==o&&null!==o.memoizedState||Xo;o=Ko;var c=Xo;if(Ko=r,(Xo=l)&&!c)for(Jo=s;null!==Jo;)l=(r=Jo).child,22===r.tag&&null!==r.memoizedState?El(s):null!==l?(l.return=r,Jo=l):El(s);for(;null!==i;)Jo=i,yl(i,t,n),i=i.sibling;Jo=s,Ko=o,Xo=c}vl(e)}else 0!==(8772&s.subtreeFlags)&&null!==i?(i.return=s,Jo=i):vl(e)}}function vl(e){for(;null!==Jo;){var t=Jo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xo||sl(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Xo)if(null===n)a.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:gi(t.type,n.memoizedProps);a.componentDidUpdate(s,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var r=t.updateQueue;null!==r&&Fi(t,r,a);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Fi(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var d=t.alternate;if(null!==d){var u=d.memoizedState;if(null!==u){var p=u.dehydrated;null!==p&&Ht(p)}}}break;default:throw Error(i(163))}Xo||512&t.flags&&il(t)}catch(m){jc(t,t.return,m)}}if(t===e){Jo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Jo=n;break}Jo=t.return}}function Nl(e){for(;null!==Jo;){var t=Jo;if(t===e){Jo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Jo=n;break}Jo=t.return}}function El(e){for(;null!==Jo;){var t=Jo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{sl(4,t)}catch(l){jc(t,n,l)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var s=t.return;try{a.componentDidMount()}catch(l){jc(t,s,l)}}var i=t.return;try{il(t)}catch(l){jc(t,i,l)}break;case 5:var r=t.return;try{il(t)}catch(l){jc(t,r,l)}}}catch(l){jc(t,t.return,l)}if(t===e){Jo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Jo=o;break}Jo=t.return}}var Sl,jl=Math.ceil,Tl=y.ReactCurrentDispatcher,wl=y.ReactCurrentOwner,Il=y.ReactCurrentBatchConfig,Cl=0,Ol=null,Rl=null,Al=0,kl=0,Dl=Ss(0),Pl=0,Ml=null,Ll=0,Fl=0,Ul=0,Bl=null,Gl=null,Hl=0,zl=1/0,Yl=null,ql=!1,Vl=null,Wl=null,Ql=!1,$l=null,Kl=0,Xl=0,Zl=null,Jl=-1,ec=0;function tc(){return 0!==(6&Cl)?Xe():-1!==Jl?Jl:Jl=Xe()}function nc(e){return 0===(1&e.mode)?1:0!==(2&Cl)&&0!==Al?Al&-Al:null!==fi.transition?(0===ec&&(ec=ft()),ec):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function ac(e,t,n,a){if(50<Xl)throw Xl=0,Zl=null,Error(i(185));xt(e,n,a),0!==(2&Cl)&&e===Ol||(e===Ol&&(0===(2&Cl)&&(Fl|=n),4===Pl&&lc(e,Al)),sc(e,a),1===n&&0===Cl&&0===(1&t.mode)&&(zl=Xe()+500,Us&&Hs()))}function sc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,s=e.expirationTimes,i=e.pendingLanes;0<i;){var r=31-rt(i),o=1<<r,l=s[r];-1===l?0!==(o&n)&&0===(o&a)||(s[r]=mt(o,t)):l<=t&&(e.expiredLanes|=o),i&=~o}}(e,t);var a=pt(e,e===Ol?Al:0);if(0===a)null!==n&&Qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Qe(n),1===t)0===e.tag?function(e){Us=!0,Gs(e)}(cc.bind(null,e)):Gs(cc.bind(null,e)),rs((function(){0===(6&Cl)&&Hs()})),n=null;else{switch(yt(a)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Oc(n,ic.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ic(e,t){if(Jl=-1,ec=0,0!==(6&Cl))throw Error(i(327));var n=e.callbackNode;if(Ec()&&e.callbackNode!==n)return null;var a=pt(e,e===Ol?Al:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=xc(e,a);else{t=a;var s=Cl;Cl|=2;var r=fc();for(Ol===e&&Al===t||(Yl=null,zl=Xe()+500,mc(e,t));;)try{bc();break}catch(l){hc(e,l)}vi(),Tl.current=r,Cl=s,null!==Rl?t=0:(Ol=null,Al=0,t=Pl)}if(0!==t){if(2===t&&(0!==(s=ht(e))&&(a=s,t=rc(e,s))),1===t)throw n=Ml,mc(e,0),lc(e,a),sc(e,Xe()),n;if(6===t)lc(e,a);else{if(s=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var s=n[a],i=s.getSnapshot;s=s.value;try{if(!oa(i(),s))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=xc(e,a))&&(0!==(r=ht(e))&&(a=r,t=rc(e,r))),1===t))throw n=Ml,mc(e,0),lc(e,a),sc(e,Xe()),n;switch(e.finishedWork=s,e.finishedLanes=a,t){case 0:case 1:throw Error(i(345));case 2:case 5:Nc(e,Gl,Yl);break;case 3:if(lc(e,a),(130023424&a)===a&&10<(t=Hl+500-Xe())){if(0!==pt(e,0))break;if(((s=e.suspendedLanes)&a)!==a){tc(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=as(Nc.bind(null,e,Gl,Yl),t);break}Nc(e,Gl,Yl);break;case 4:if(lc(e,a),(4194240&a)===a)break;for(t=e.eventTimes,s=-1;0<a;){var o=31-rt(a);r=1<<o,(o=t[o])>s&&(s=o),a&=~r}if(a=s,10<(a=(120>(a=Xe()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*jl(a/1960))-a)){e.timeoutHandle=as(Nc.bind(null,e,Gl,Yl),a);break}Nc(e,Gl,Yl);break;default:throw Error(i(329))}}}return sc(e,Xe()),e.callbackNode===n?ic.bind(null,e):null}function rc(e,t){var n=Bl;return e.current.memoizedState.isDehydrated&&(mc(e,t).flags|=256),2!==(e=xc(e,t))&&(t=Gl,Gl=n,null!==t&&oc(t)),e}function oc(e){null===Gl?Gl=e:Gl.push.apply(Gl,e)}function lc(e,t){for(t&=~Ul,t&=~Fl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-rt(t),a=1<<n;e[n]=-1,t&=~a}}function cc(e){if(0!==(6&Cl))throw Error(i(327));Ec();var t=pt(e,0);if(0===(1&t))return sc(e,Xe()),null;var n=xc(e,t);if(0!==e.tag&&2===n){var a=ht(e);0!==a&&(t=a,n=rc(e,a))}if(1===n)throw n=Ml,mc(e,0),lc(e,t),sc(e,Xe()),n;if(6===n)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Nc(e,Gl,Yl),sc(e,Xe()),null}function dc(e,t){var n=Cl;Cl|=1;try{return e(t)}finally{0===(Cl=n)&&(zl=Xe()+500,Us&&Hs())}}function uc(e){null!==$l&&0===$l.tag&&0===(6&Cl)&&Ec();var t=Cl;Cl|=1;var n=Il.transition,a=bt;try{if(Il.transition=null,bt=1,e)return e()}finally{bt=a,Il.transition=n,0===(6&(Cl=t))&&Hs()}}function pc(){kl=Dl.current,js(Dl)}function mc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ss(n)),null!==Rl)for(n=Rl.return;null!==n;){var a=n;switch(ti(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&ks();break;case 3:sr(),js(Cs),js(Is),dr();break;case 5:rr(a);break;case 4:sr();break;case 13:case 19:js(or);break;case 10:Ni(a.type._context);break;case 22:case 23:pc()}n=n.return}if(Ol=e,Rl=e=Dc(e.current,null),Al=kl=t,Pl=0,Ml=null,Ul=Fl=Ll=0,Gl=Bl=null,null!==Ti){for(t=0;t<Ti.length;t++)if(null!==(a=(n=Ti[t]).interleaved)){n.interleaved=null;var s=a.next,i=n.pending;if(null!==i){var r=i.next;i.next=s,a.next=r}n.pending=a}Ti=null}return e}function hc(e,t){for(;;){var n=Rl;try{if(vi(),ur.current=io,xr){for(var a=hr.memoizedState;null!==a;){var s=a.queue;null!==s&&(s.pending=null),a=a.next}xr=!1}if(mr=0,gr=fr=hr=null,_r=!1,br=0,wl.current=null,null===n||null===n.return){Pl=1,Ml=t,Rl=null;break}e:{var r=e,o=n.return,l=n,c=t;if(t=Al,l.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var d=c,u=l,p=u.tag;if(0===(1&u.mode)&&(0===p||11===p||15===p)){var m=u.alternate;m?(u.updateQueue=m.updateQueue,u.memoizedState=m.memoizedState,u.lanes=m.lanes):(u.updateQueue=null,u.memoizedState=null)}var h=xo(o);if(null!==h){h.flags&=-257,_o(h,o,l,0,t),1&h.mode&&go(r,d,t),c=d;var f=(t=h).updateQueue;if(null===f){var g=new Set;g.add(c),t.updateQueue=g}else f.add(c);break e}if(0===(1&t)){go(r,d,t),gc();break e}c=Error(i(426))}else if(si&&1&l.mode){var x=xo(o);if(null!==x){0===(65536&x.flags)&&(x.flags|=256),_o(x,o,l,0,t),hi(co(c,l));break e}}r=c=co(c,l),4!==Pl&&(Pl=2),null===Bl?Bl=[r]:Bl.push(r),r=o;do{switch(r.tag){case 3:r.flags|=65536,t&=-t,r.lanes|=t,Mi(r,ho(0,c,t));break e;case 1:l=c;var _=r.type,b=r.stateNode;if(0===(128&r.flags)&&("function"===typeof _.getDerivedStateFromError||null!==b&&"function"===typeof b.componentDidCatch&&(null===Wl||!Wl.has(b)))){r.flags|=65536,t&=-t,r.lanes|=t,Mi(r,fo(r,l,t));break e}}r=r.return}while(null!==r)}vc(n)}catch(y){t=y,Rl===n&&null!==n&&(Rl=n=n.return);continue}break}}function fc(){var e=Tl.current;return Tl.current=io,null===e?io:e}function gc(){0!==Pl&&3!==Pl&&2!==Pl||(Pl=4),null===Ol||0===(268435455&Ll)&&0===(268435455&Fl)||lc(Ol,Al)}function xc(e,t){var n=Cl;Cl|=2;var a=fc();for(Ol===e&&Al===t||(Yl=null,mc(e,t));;)try{_c();break}catch(s){hc(e,s)}if(vi(),Cl=n,Tl.current=a,null!==Rl)throw Error(i(261));return Ol=null,Al=0,Pl}function _c(){for(;null!==Rl;)yc(Rl)}function bc(){for(;null!==Rl&&!$e();)yc(Rl)}function yc(e){var t=Sl(e.alternate,e,kl);e.memoizedProps=e.pendingProps,null===t?vc(e):Rl=t,wl.current=null}function vc(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Qo(n,t,kl)))return void(Rl=n)}else{if(null!==(n=$o(n,t)))return n.flags&=32767,void(Rl=n);if(null===e)return Pl=6,void(Rl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rl=t);Rl=t=e}while(null!==t);0===Pl&&(Pl=5)}function Nc(e,t,n){var a=bt,s=Il.transition;try{Il.transition=null,bt=1,function(e,t,n,a){do{Ec()}while(null!==$l);if(0!==(6&Cl))throw Error(i(327));n=e.finishedWork;var s=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var r=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-rt(n),i=1<<s;t[s]=0,a[s]=-1,e[s]=-1,n&=~i}}(e,r),e===Ol&&(Rl=Ol=null,Al=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Ql||(Ql=!0,Oc(tt,(function(){return Ec(),null}))),r=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||r){r=Il.transition,Il.transition=null;var o=bt;bt=1;var l=Cl;Cl|=4,wl.current=null,function(e,t){if(es=Yt,ma(e=pa())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var s=a.anchorOffset,r=a.focusNode;a=a.focusOffset;try{n.nodeType,r.nodeType}catch(v){n=null;break e}var o=0,l=-1,c=-1,d=0,u=0,p=e,m=null;t:for(;;){for(var h;p!==n||0!==s&&3!==p.nodeType||(l=o+s),p!==r||0!==a&&3!==p.nodeType||(c=o+a),3===p.nodeType&&(o+=p.nodeValue.length),null!==(h=p.firstChild);)m=p,p=h;for(;;){if(p===e)break t;if(m===n&&++d===s&&(l=o),m===r&&++u===a&&(c=o),null!==(h=p.nextSibling))break;m=(p=m).parentNode}p=h}n=-1===l||-1===c?null:{start:l,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(ts={focusedElem:e,selectionRange:n},Yt=!1,Jo=t;null!==Jo;)if(e=(t=Jo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Jo=e;else for(;null!==Jo;){t=Jo;try{var f=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==f){var g=f.memoizedProps,x=f.memoizedState,_=t.stateNode,b=_.getSnapshotBeforeUpdate(t.elementType===t.type?g:gi(t.type,g),x);_.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var y=t.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(i(163))}}catch(v){jc(t,t.return,v)}if(null!==(e=t.sibling)){e.return=t.return,Jo=e;break}Jo=t.return}f=nl,nl=!1}(e,n),xl(n,e),ha(ts),Yt=!!es,ts=es=null,e.current=n,bl(n,e,s),Ke(),Cl=l,bt=o,Il.transition=r}else e.current=n;if(Ql&&(Ql=!1,$l=e,Kl=s),r=e.pendingLanes,0===r&&(Wl=null),function(e){if(it&&"function"===typeof it.onCommitFiberRoot)try{it.onCommitFiberRoot(st,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),sc(e,Xe()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],a(s.value,{componentStack:s.stack,digest:s.digest});if(ql)throw ql=!1,e=Vl,Vl=null,e;0!==(1&Kl)&&0!==e.tag&&Ec(),r=e.pendingLanes,0!==(1&r)?e===Zl?Xl++:(Xl=0,Zl=e):Xl=0,Hs()}(e,t,n,a)}finally{Il.transition=s,bt=a}return null}function Ec(){if(null!==$l){var e=yt(Kl),t=Il.transition,n=bt;try{if(Il.transition=null,bt=16>e?16:e,null===$l)var a=!1;else{if(e=$l,$l=null,Kl=0,0!==(6&Cl))throw Error(i(331));var s=Cl;for(Cl|=4,Jo=e.current;null!==Jo;){var r=Jo,o=r.child;if(0!==(16&Jo.flags)){var l=r.deletions;if(null!==l){for(var c=0;c<l.length;c++){var d=l[c];for(Jo=d;null!==Jo;){var u=Jo;switch(u.tag){case 0:case 11:case 15:al(8,u,r)}var p=u.child;if(null!==p)p.return=u,Jo=p;else for(;null!==Jo;){var m=(u=Jo).sibling,h=u.return;if(rl(u),u===d){Jo=null;break}if(null!==m){m.return=h,Jo=m;break}Jo=h}}}var f=r.alternate;if(null!==f){var g=f.child;if(null!==g){f.child=null;do{var x=g.sibling;g.sibling=null,g=x}while(null!==g)}}Jo=r}}if(0!==(2064&r.subtreeFlags)&&null!==o)o.return=r,Jo=o;else e:for(;null!==Jo;){if(0!==(2048&(r=Jo).flags))switch(r.tag){case 0:case 11:case 15:al(9,r,r.return)}var _=r.sibling;if(null!==_){_.return=r.return,Jo=_;break e}Jo=r.return}}var b=e.current;for(Jo=b;null!==Jo;){var y=(o=Jo).child;if(0!==(2064&o.subtreeFlags)&&null!==y)y.return=o,Jo=y;else e:for(o=b;null!==Jo;){if(0!==(2048&(l=Jo).flags))try{switch(l.tag){case 0:case 11:case 15:sl(9,l)}}catch(N){jc(l,l.return,N)}if(l===o){Jo=null;break e}var v=l.sibling;if(null!==v){v.return=l.return,Jo=v;break e}Jo=l.return}}if(Cl=s,Hs(),it&&"function"===typeof it.onPostCommitFiberRoot)try{it.onPostCommitFiberRoot(st,e)}catch(N){}a=!0}return a}finally{bt=n,Il.transition=t}}return!1}function Sc(e,t,n){e=Di(e,t=ho(0,t=co(n,t),1),1),t=tc(),null!==e&&(xt(e,1,t),sc(e,t))}function jc(e,t,n){if(3===e.tag)Sc(e,e,n);else for(;null!==t;){if(3===t.tag){Sc(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Wl||!Wl.has(a))){t=Di(t,e=fo(t,e=co(n,e),1),1),e=tc(),null!==t&&(xt(t,1,e),sc(t,e));break}}t=t.return}}function Tc(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=tc(),e.pingedLanes|=e.suspendedLanes&n,Ol===e&&(Al&n)===n&&(4===Pl||3===Pl&&(130023424&Al)===Al&&500>Xe()-Hl?mc(e,0):Ul|=n),sc(e,t)}function wc(e,t){0===t&&(0===(1&e.mode)?t=1:(t=dt,0===(130023424&(dt<<=1))&&(dt=4194304)));var n=tc();null!==(e=Ci(e,t))&&(xt(e,t,n),sc(e,n))}function Ic(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),wc(e,n)}function Cc(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,s=e.memoizedState;null!==s&&(n=s.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(i(314))}null!==a&&a.delete(t),wc(e,n)}function Oc(e,t){return We(e,t)}function Rc(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ac(e,t,n,a){return new Rc(e,t,n,a)}function kc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dc(e,t){var n=e.alternate;return null===n?((n=Ac(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Pc(e,t,n,a,s,r){var o=2;if(a=e,"function"===typeof e)kc(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case E:return Mc(n.children,s,r,t);case S:o=8,s|=8;break;case j:return(e=Ac(12,n,t,2|s)).elementType=j,e.lanes=r,e;case C:return(e=Ac(13,n,t,s)).elementType=C,e.lanes=r,e;case O:return(e=Ac(19,n,t,s)).elementType=O,e.lanes=r,e;case k:return Lc(n,s,r,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:o=10;break e;case w:o=9;break e;case I:o=11;break e;case R:o=14;break e;case A:o=16,a=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Ac(o,n,t,s)).elementType=e,t.type=a,t.lanes=r,t}function Mc(e,t,n,a){return(e=Ac(7,e,a,t)).lanes=n,e}function Lc(e,t,n,a){return(e=Ac(22,e,a,t)).elementType=k,e.lanes=n,e.stateNode={isHidden:!1},e}function Fc(e,t,n){return(e=Ac(6,e,null,t)).lanes=n,e}function Uc(e,t,n){return(t=Ac(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bc(e,t,n,a,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function Gc(e,t,n,a,s,i,r,o,l){return e=new Bc(e,t,n,o,l),1===t?(t=1,!0===i&&(t|=8)):t=0,i=Ac(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ri(i),e}function Hc(e){if(!e)return ws;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(As(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(i(171))}if(1===e.tag){var n=e.type;if(As(n))return Ps(e,n,t)}return t}function zc(e,t,n,a,s,i,r,o,l){return(e=Gc(n,a,!0,e,0,i,0,o,l)).context=Hc(null),n=e.current,(i=ki(a=tc(),s=nc(n))).callback=void 0!==t&&null!==t?t:null,Di(n,i,s),e.current.lanes=s,xt(e,s,a),sc(e,a),e}function Yc(e,t,n,a){var s=t.current,i=tc(),r=nc(s);return n=Hc(n),null===t.context?t.context=n:t.pendingContext=n,(t=ki(i,r)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Di(s,t,r))&&(ac(e,s,r,i),Pi(e,s,r)),r}function qc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Wc(e,t){Vc(e,t),(e=e.alternate)&&Vc(e,t)}Sl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Cs.current)yo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return yo=!1,function(e,t,n){switch(t.tag){case 3:Oo(t),mi();break;case 5:ir(t);break;case 1:As(t.type)&&Ms(t);break;case 4:ar(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,s=t.memoizedProps.value;Ts(xi,a._currentValue),a._currentValue=s;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Ts(or,1&or.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Fo(e,t,n):(Ts(or,1&or.current),null!==(e=qo(e,t,n))?e.sibling:null);Ts(or,1&or.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return zo(e,t,n);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),Ts(or,or.current),a)break;return null;case 22:case 23:return t.lanes=0,jo(e,t,n)}return qo(e,t,n)}(e,t,n);yo=0!==(131072&e.flags)}else yo=!1,si&&0!==(1048576&t.flags)&&Js(t,Vs,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Yo(e,t),e=t.pendingProps;var s=Rs(t,Is.current);Si(t,n),s=Er(null,t,a,e,s,n);var r=Sr();return t.flags|=1,"object"===typeof s&&null!==s&&"function"===typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,As(a)?(r=!0,Ms(t)):r=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Ri(t),s.updater=Gi,t.stateNode=s,s._reactInternals=t,qi(t,a,e,n),t=Co(null,t,a,!0,r,n)):(t.tag=0,si&&r&&ei(t),vo(null,t,s,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Yo(e,t),e=t.pendingProps,a=(s=a._init)(a._payload),t.type=a,s=t.tag=function(e){if("function"===typeof e)return kc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===I)return 11;if(e===R)return 14}return 2}(a),e=gi(a,e),s){case 0:t=wo(null,t,a,e,n);break e;case 1:t=Io(null,t,a,e,n);break e;case 11:t=No(null,t,a,e,n);break e;case 14:t=Eo(null,t,a,gi(a.type,e),n);break e}throw Error(i(306,a,""))}return t;case 0:return a=t.type,s=t.pendingProps,wo(e,t,a,s=t.elementType===a?s:gi(a,s),n);case 1:return a=t.type,s=t.pendingProps,Io(e,t,a,s=t.elementType===a?s:gi(a,s),n);case 3:e:{if(Oo(t),null===e)throw Error(i(387));a=t.pendingProps,s=(r=t.memoizedState).element,Ai(e,t),Li(t,a,null,n);var o=t.memoizedState;if(a=o.element,r.isDehydrated){if(r={element:a,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=r,t.memoizedState=r,256&t.flags){t=Ro(e,t,a,n,s=co(Error(i(423)),t));break e}if(a!==s){t=Ro(e,t,a,n,s=co(Error(i(424)),t));break e}for(ai=cs(t.stateNode.containerInfo.firstChild),ni=t,si=!0,ii=null,n=Xi(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(mi(),a===s){t=qo(e,t,n);break e}vo(e,t,a,n)}t=t.child}return t;case 5:return ir(t),null===e&&ci(t),a=t.type,s=t.pendingProps,r=null!==e?e.memoizedProps:null,o=s.children,ns(a,s)?o=null:null!==r&&ns(a,r)&&(t.flags|=32),To(e,t),vo(e,t,o,n),t.child;case 6:return null===e&&ci(t),null;case 13:return Fo(e,t,n);case 4:return ar(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Ki(t,null,a,n):vo(e,t,a,n),t.child;case 11:return a=t.type,s=t.pendingProps,No(e,t,a,s=t.elementType===a?s:gi(a,s),n);case 7:return vo(e,t,t.pendingProps,n),t.child;case 8:case 12:return vo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,s=t.pendingProps,r=t.memoizedProps,o=s.value,Ts(xi,a._currentValue),a._currentValue=o,null!==r)if(oa(r.value,o)){if(r.children===s.children&&!Cs.current){t=qo(e,t,n);break e}}else for(null!==(r=t.child)&&(r.return=t);null!==r;){var l=r.dependencies;if(null!==l){o=r.child;for(var c=l.firstContext;null!==c;){if(c.context===a){if(1===r.tag){(c=ki(-1,n&-n)).tag=2;var d=r.updateQueue;if(null!==d){var u=(d=d.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),d.pending=c}}r.lanes|=n,null!==(c=r.alternate)&&(c.lanes|=n),Ei(r.return,n,t),l.lanes|=n;break}c=c.next}}else if(10===r.tag)o=r.type===t.type?null:r.child;else if(18===r.tag){if(null===(o=r.return))throw Error(i(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Ei(o,n,t),o=r.sibling}else o=r.child;if(null!==o)o.return=r;else for(o=r;null!==o;){if(o===t){o=null;break}if(null!==(r=o.sibling)){r.return=o.return,o=r;break}o=o.return}r=o}vo(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,a=t.pendingProps.children,Si(t,n),a=a(s=ji(s)),t.flags|=1,vo(e,t,a,n),t.child;case 14:return s=gi(a=t.type,t.pendingProps),Eo(e,t,a,s=gi(a.type,s),n);case 15:return So(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,s=t.pendingProps,s=t.elementType===a?s:gi(a,s),Yo(e,t),t.tag=1,As(a)?(e=!0,Ms(t)):e=!1,Si(t,n),zi(t,a,s),qi(t,a,s,n),Co(null,t,a,!0,e,n);case 19:return zo(e,t,n);case 22:return jo(e,t,n)}throw Error(i(156,t.tag))};var Qc="function"===typeof reportError?reportError:function(e){console.error(e)};function $c(e){this._internalRoot=e}function Kc(e){this._internalRoot=e}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function ed(e,t,n,a,s){var i=n._reactRootContainer;if(i){var r=i;if("function"===typeof s){var o=s;s=function(){var e=qc(r);o.call(e)}}Yc(t,r,e,s)}else r=function(e,t,n,a,s){if(s){if("function"===typeof a){var i=a;a=function(){var e=qc(r);i.call(e)}}var r=zc(t,a,e,0,null,!1,0,"",Jc);return e._reactRootContainer=r,e[hs]=r.current,Ha(8===e.nodeType?e.parentNode:e),uc(),r}for(;s=e.lastChild;)e.removeChild(s);if("function"===typeof a){var o=a;a=function(){var e=qc(l);o.call(e)}}var l=Gc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=l,e[hs]=l.current,Ha(8===e.nodeType?e.parentNode:e),uc((function(){Yc(t,l,n,a)})),l}(n,t,e,s,a);return qc(r)}Kc.prototype.render=$c.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(i(409));Yc(e,t,null,null)},Kc.prototype.unmount=$c.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){Yc(null,e,null,null)})),t[hs]=null}},Kc.prototype.unstable_scheduleHydration=function(e){if(e){var t=St();e={blockedOn:null,target:e,priority:t};for(var n=0;n<kt.length&&0!==t&&t<kt[n].priority;n++);kt.splice(n,0,e),0===n&&Lt(e)}},vt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ut(t.pendingLanes);0!==n&&(_t(t,1|n),sc(t,Xe()),0===(6&Cl)&&(zl=Xe()+500,Hs()))}break;case 13:uc((function(){var t=Ci(e,1);if(null!==t){var n=tc();ac(t,e,1,n)}})),Wc(e,1)}},Nt=function(e){if(13===e.tag){var t=Ci(e,134217728);if(null!==t)ac(t,e,134217728,tc());Wc(e,134217728)}},Et=function(e){if(13===e.tag){var t=nc(e),n=Ci(e,t);if(null!==n)ac(n,e,t,tc());Wc(e,t)}},St=function(){return bt},jt=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},Ne=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var s=vs(a);if(!s)throw Error(i(90));W(a),Z(a,s)}}}break;case"textarea":ie(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ie=dc,Ce=uc;var td={usingClientEntryPoint:!1,Events:[bs,ys,vs,Te,we,dc]},nd={findFiberByHostInstance:_s,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ad={bundleType:nd.bundleType,version:nd.version,rendererPackageName:nd.rendererPackageName,rendererConfig:nd.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=qe(e))?null:e.stateNode},findFiberByHostInstance:nd.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var sd=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sd.isDisabled&&sd.supportsFiber)try{st=sd.inject(ad),it=sd}catch(de){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=td,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xc(t))throw Error(i(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:N,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xc(e))throw Error(i(299));var n=!1,a="",s=Qc;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=Gc(e,1,!1,null,0,n,0,a,s),e[hs]=t.current,Ha(8===e.nodeType?e.parentNode:e),new $c(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return e=null===(e=qe(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,n){if(!Zc(t))throw Error(i(200));return ed(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xc(e))throw Error(i(405));var a=null!=n&&n.hydratedSources||null,s=!1,r="",o=Qc;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(s=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=zc(t,null,e,1,null!=n?n:null,s,0,r,o),e[hs]=t.current,Ha(e),a)for(e=0;e<a.length;e++)s=(s=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new Kc(t)},t.render=function(e,t,n){if(!Zc(t))throw Error(i(200));return ed(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zc(e))throw Error(i(40));return!!e._reactRootContainer&&(uc((function(){ed(null,null,e,!1,(function(){e._reactRootContainer=null,e[hs]=null}))})),!0)},t.unstable_batchedUpdates=dc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zc(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return ed(e,t,n,!1,a)},t.version="18.2.0-next-9e3b772b8-20220608"},1250:function(e,t,n){"use strict";var a=n(4164);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},4164:function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(4463)},6374:function(e,t,n){"use strict";var a=n(2791),s=Symbol.for("react.element"),i=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,o=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var a,i={},c=null,d=null;for(a in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(d=t.ref),t)r.call(t,a)&&!l.hasOwnProperty(a)&&(i[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===i[a]&&(i[a]=t[a]);return{$$typeof:s,type:e,key:c,ref:d,props:i,_owner:o.current}}t.Fragment=i,t.jsx=c,t.jsxs=c},9117:function(e,t){"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),m=Symbol.iterator;var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f=Object.assign,g={};function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function _(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},_.prototype=x.prototype;var y=b.prototype=new _;y.constructor=b,f(y,x.prototype),y.isPureReactComponent=!0;var v=Array.isArray,N=Object.prototype.hasOwnProperty,E={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function j(e,t,a){var s,i={},r=null,o=null;if(null!=t)for(s in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(r=""+t.key),t)N.call(t,s)&&!S.hasOwnProperty(s)&&(i[s]=t[s]);var l=arguments.length-2;if(1===l)i.children=a;else if(1<l){for(var c=Array(l),d=0;d<l;d++)c[d]=arguments[d+2];i.children=c}if(e&&e.defaultProps)for(s in l=e.defaultProps)void 0===i[s]&&(i[s]=l[s]);return{$$typeof:n,type:e,key:r,ref:o,props:i,_owner:E.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var w=/\/+/g;function I(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,s,i,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case a:l=!0}}if(l)return r=r(l=e),e=""===i?"."+I(l,0):i,v(r)?(s="",null!=e&&(s=e.replace(w,"$&/")+"/"),C(r,t,s,"",(function(e){return e}))):null!=r&&(T(r)&&(r=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(r,s+(!r.key||l&&l.key===r.key?"":(""+r.key).replace(w,"$&/")+"/")+e)),t.push(r)),1;if(l=0,i=""===i?".":i+":",v(e))for(var c=0;c<e.length;c++){var d=i+I(o=e[c],c);l+=C(o,t,s,d,r)}else if(d=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=m&&e[m]||e["@@iterator"])?e:null}(e),"function"===typeof d)for(e=d.call(e),c=0;!(o=e.next()).done;)l+=C(o=o.value,t,s,d=i+I(o,c++),r);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function O(e,t,n){if(null==e)return e;var a=[],s=0;return C(e,a,"","",(function(e){return t.call(n,e,s++)})),a}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var A={current:null},k={transition:null},D={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:k,ReactCurrentOwner:E};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=x,t.Fragment=s,t.Profiler=r,t.PureComponent=b,t.StrictMode=i,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=f({},e.props),i=e.key,r=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(r=t.ref,o=E.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)N.call(t,c)&&!S.hasOwnProperty(c)&&(s[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){l=Array(c);for(var d=0;d<c;d++)l[d]=arguments[d+2];s.children=l}return{$$typeof:n,type:e.type,key:i,ref:r,props:s,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=j,t.createFactory=function(e){var t=j.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=k.transition;k.transition={};try{e()}finally{k.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return A.current.useCallback(e,t)},t.useContext=function(e){return A.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return A.current.useDeferredValue(e)},t.useEffect=function(e,t){return A.current.useEffect(e,t)},t.useId=function(){return A.current.useId()},t.useImperativeHandle=function(e,t,n){return A.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return A.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return A.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return A.current.useMemo(e,t)},t.useReducer=function(e,t,n){return A.current.useReducer(e,t,n)},t.useRef=function(e){return A.current.useRef(e)},t.useState=function(e){return A.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return A.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return A.current.useTransition()},t.version="18.2.0"},2791:function(e,t,n){"use strict";e.exports=n(9117)},184:function(e,t,n){"use strict";e.exports=n(6374)},6813:function(e,t){"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,s=e[a];if(!(0<i(s,t)))break e;e[a]=t,e[n]=s,n=a}}function a(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,s=e.length,r=s>>>1;a<r;){var o=2*(a+1)-1,l=e[o],c=o+1,d=e[c];if(0>i(l,n))c<s&&0>i(d,l)?(e[a]=d,e[c]=n,a=c):(e[a]=l,e[o]=n,a=o);else{if(!(c<s&&0>i(d,n)))break e;e[a]=d,e[c]=n,a=c}}}return t}function i(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var r=performance;t.unstable_now=function(){return r.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var c=[],d=[],u=1,p=null,m=3,h=!1,f=!1,g=!1,x="function"===typeof setTimeout?setTimeout:null,_="function"===typeof clearTimeout?clearTimeout:null,b="undefined"!==typeof setImmediate?setImmediate:null;function y(e){for(var t=a(d);null!==t;){if(null===t.callback)s(d);else{if(!(t.startTime<=e))break;s(d),t.sortIndex=t.expirationTime,n(c,t)}t=a(d)}}function v(e){if(g=!1,y(e),!f)if(null!==a(c))f=!0,k(N);else{var t=a(d);null!==t&&D(v,t.startTime-e)}}function N(e,n){f=!1,g&&(g=!1,_(T),T=-1),h=!0;var i=m;try{for(y(n),p=a(c);null!==p&&(!(p.expirationTime>n)||e&&!C());){var r=p.callback;if("function"===typeof r){p.callback=null,m=p.priorityLevel;var o=r(p.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?p.callback=o:p===a(c)&&s(c),y(n)}else s(c);p=a(c)}if(null!==p)var l=!0;else{var u=a(d);null!==u&&D(v,u.startTime-n),l=!1}return l}finally{p=null,m=i,h=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,S=!1,j=null,T=-1,w=5,I=-1;function C(){return!(t.unstable_now()-I<w)}function O(){if(null!==j){var e=t.unstable_now();I=e;var n=!0;try{n=j(!0,e)}finally{n?E():(S=!1,j=null)}}else S=!1}if("function"===typeof b)E=function(){b(O)};else if("undefined"!==typeof MessageChannel){var R=new MessageChannel,A=R.port2;R.port1.onmessage=O,E=function(){A.postMessage(null)}}else E=function(){x(O,0)};function k(e){j=e,S||(S=!0,E())}function D(e,n){T=x((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){f||h||(f=!0,k(N))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):w=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return m},t.unstable_getFirstCallbackNode=function(){return a(c)},t.unstable_next=function(e){switch(m){case 1:case 2:case 3:var t=3;break;default:t=m}var n=m;m=t;try{return e()}finally{m=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=m;m=e;try{return t()}finally{m=n}},t.unstable_scheduleCallback=function(e,s,i){var r=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?r+i:r:i=r,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:u++,callback:s,priorityLevel:e,startTime:i,expirationTime:o=i+o,sortIndex:-1},i>r?(e.sortIndex=i,n(d,e),null===a(c)&&e===a(d)&&(g?(_(T),T=-1):g=!0,D(v,i-r))):(e.sortIndex=o,n(c,e),f||h||(f=!0,k(N))),e},t.unstable_shouldYield=C,t.unstable_wrapCallback=function(e){var t=m;return function(){var n=m;m=t;try{return e.apply(this,arguments)}finally{m=n}}}},5296:function(e,t,n){"use strict";e.exports=n(6813)},3897:function(e){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a},e.exports.__esModule=!0,e.exports.default=e.exports},5372:function(e){e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},3405:function(e,t,n){var a=n(3897);e.exports=function(e){if(Array.isArray(e))return a(e)},e.exports.__esModule=!0,e.exports.default=e.exports},6115:function(e){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e},e.exports.__esModule=!0,e.exports.default=e.exports},6690:function(e){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},9728:function(e,t,n){var a=n(4062);function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,a(s.key),s)}}e.exports=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},4704:function(e,t,n){var a=n(6116);e.exports=function(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=a(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var s=0,i=function(){};return{s:i,n:function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){l=!0,r=e},f:function(){try{o||null==n.return||n.return()}finally{if(l)throw r}}}},e.exports.__esModule=!0,e.exports.default=e.exports},6389:function(e,t,n){var a=n(3808),s=n(9617),i=n(4993);e.exports=function(e){var t=s();return function(){var n,s=a(e);if(t){var r=a(this).constructor;n=Reflect.construct(s,arguments,r)}else n=s.apply(this,arguments);return i(this,n)}},e.exports.__esModule=!0,e.exports.default=e.exports},3808:function(e){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},1655:function(e,t,n){var a=n(6015);e.exports=function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)},e.exports.__esModule=!0,e.exports.default=e.exports},9617:function(e){e.exports=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}},e.exports.__esModule=!0,e.exports.default=e.exports},9498:function(e){e.exports=function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},8872:function(e){e.exports=function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,s,i,r,o=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(a=i.call(n)).done)&&(o.push(a.value),o.length!==t);l=!0);}catch(d){c=!0,s=d}finally{try{if(!l&&null!=n.return&&(r=n.return(),Object(r)!==r))return}finally{if(c)throw s}}return o}},e.exports.__esModule=!0,e.exports.default=e.exports},2218:function(e){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},2281:function(e){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},4993:function(e,t,n){var a=n(8698).default,s=n(6115);e.exports=function(e,t){if(t&&("object"===a(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return s(e)},e.exports.__esModule=!0,e.exports.default=e.exports},6015:function(e){function t(n,a){return e.exports=t=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n,a)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},7424:function(e,t,n){var a=n(5372),s=n(8872),i=n(6116),r=n(2218);e.exports=function(e,t){return a(e)||s(e,t)||i(e,t)||r()},e.exports.__esModule=!0,e.exports.default=e.exports},861:function(e,t,n){var a=n(3405),s=n(9498),i=n(6116),r=n(2281);e.exports=function(e){return a(e)||s(e)||i(e)||r()},e.exports.__esModule=!0,e.exports.default=e.exports},5036:function(e,t,n){var a=n(8698).default;e.exports=function(e,t){if("object"!==a(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!==a(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)},e.exports.__esModule=!0,e.exports.default=e.exports},4062:function(e,t,n){var a=n(8698).default,s=n(5036);e.exports=function(e){var t=s(e,"string");return"symbol"===a(t)?t:String(t)},e.exports.__esModule=!0,e.exports.default=e.exports},8698:function(e){function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},6116:function(e,t,n){var a=n(3897);e.exports=function(e,t){if(e){if("string"===typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",function(){"use strict";var e,t=n(2791),a=n(1250);function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function i(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function r(e,t){if(e){if("string"===typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}function o(e){return function(e){if(Array.isArray(e))return s(e)}(e)||i(e)||r(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function d(e){var t=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==c(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===c(t)?t:String(t)}function u(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,d(a.key),a)}}function p(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function h(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}function g(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function x(e,t){if(t&&("object"===c(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){var t=g();return function(){var n,a=f(e);if(t){var s=f(this).constructor;n=Reflect.construct(a,arguments,s)}else n=a.apply(this,arguments);return x(this,n)}}function b(e,t,n){return b=g()?Reflect.construct.bind():function(e,t,n){var a=[null];a.push.apply(a,t);var s=new(Function.bind.apply(e,a));return n&&m(s,n.prototype),s},b.apply(null,arguments)}function y(e){var t="function"===typeof Map?new Map:void 0;return y=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return b(e,arguments,f(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),m(a,e)},y(e)}function v(e){if(Array.isArray(e))return e}function N(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function E(e,t){return v(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,s,i,r,o=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(a=i.call(n)).done)&&(o.push(a.value),o.length!==t);l=!0);}catch(d){c=!0,s=d}finally{try{if(!l&&null!=n.return&&(r=n.return(),Object(r)!==r))return}finally{if(c)throw s}}return o}}(e,t)||r(e,t)||N()}function S(){return S=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},S.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));var j,T="popstate";function w(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function I(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function C(e,t){return{usr:e.state,key:e.key,idx:t}}function O(e,t,n,a){return void 0===n&&(n=null),S({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?A(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function R(e){var t=e.pathname,n=void 0===t?"/":t,a=e.search,s=void 0===a?"":a,i=e.hash,r=void 0===i?"":i;return s&&"?"!==s&&(n+="?"===s.charAt(0)?s:"?"+s),r&&"#"!==r&&(n+="#"===r.charAt(0)?r:"#"+r),n}function A(e){var t={};if(e){var n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));var a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function k(t,n,a,s){void 0===s&&(s={});var i=s,r=i.window,o=void 0===r?document.defaultView:r,l=i.v5Compat,c=void 0!==l&&l,d=o.history,u=e.Pop,p=null,m=h();function h(){return(d.state||{idx:null}).idx}function f(){u=e.Pop;var t=h(),n=null==t?null:t-m;m=t,p&&p({action:u,location:x.location,delta:n})}function g(e){var t="null"!==o.location.origin?o.location.origin:o.location.href,n="string"===typeof e?e:R(e);return w(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==m&&(m=0,d.replaceState(S({},d.state,{idx:m}),""));var x={get action(){return u},get location(){return t(o,d)},listen:function(e){if(p)throw new Error("A history only accepts one active listener");return o.addEventListener(T,f),p=e,function(){o.removeEventListener(T,f),p=null}},createHref:function(e){return n(o,e)},createURL:g,encodeLocation:function(e){var t=g(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(t,n){u=e.Push;var s=O(x.location,t,n);a&&a(s,t);var i=C(s,m=h()+1),r=x.createHref(s);try{d.pushState(i,"",r)}catch(l){if(l instanceof DOMException&&"DataCloneError"===l.name)throw l;o.location.assign(r)}c&&p&&p({action:u,location:x.location,delta:1})},replace:function(t,n){u=e.Replace;var s=O(x.location,t,n);a&&a(s,t);var i=C(s,m=h()),r=x.createHref(s);d.replaceState(i,"",r),c&&p&&p({action:u,location:x.location,delta:0})},go:function(e){return d.go(e)}};return x}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(j||(j={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function D(e,t,n){void 0===n&&(n="/");var a=Q(("string"===typeof t?A(t):t).pathname||"/",n);if(null==a)return null;var s=P(e);!function(e){e.sort((function(e,t){return e.score!==t.score?t.score-e.score:function(e,t){var n=e.length===t.length&&e.slice(0,-1).every((function(e,n){return e===t[n]}));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((function(e){return e.childrenIndex})),t.routesMeta.map((function(e){return e.childrenIndex})))}))}(s);for(var i=null,r=0;null==i&&r<s.length;++r)i=q(s[r],W(a));return i}function P(e,t,n,a){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a="");var s=function(e,s,i){var r={relativePath:void 0===i?e.path||"":i,caseSensitive:!0===e.caseSensitive,childrenIndex:s,route:e};r.relativePath.startsWith("/")&&(w(r.relativePath.startsWith(a),'Absolute route path "'+r.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),r.relativePath=r.relativePath.slice(a.length));var o=Z([a,r.relativePath]),l=n.concat(r);e.children&&e.children.length>0&&(w(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+o+'".'),P(e.children,t,l,o)),(null!=e.path||e.index)&&t.push({path:o,score:Y(o,e.index),routesMeta:l})};return e.forEach((function(e,t){var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?")){var a,i=function(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=r(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0,s=function(){};return{s:s,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){l=!0,i=e},f:function(){try{o||null==n.return||n.return()}finally{if(l)throw i}}}}(M(e.path));try{for(i.s();!(a=i.n()).done;){var o=a.value;s(e,t,o)}}catch(l){i.e(l)}finally{i.f()}}else s(e,t)})),t}function M(e){var t=e.split("/");if(0===t.length)return[];var n,a=v(n=t)||i(n)||r(n)||N(),s=a[0],l=a.slice(1),c=s.endsWith("?"),d=s.replace(/\?$/,"");if(0===l.length)return c?[d,""]:[d];var u=M(l.join("/")),p=[];return p.push.apply(p,o(u.map((function(e){return""===e?d:[d,e].join("/")})))),c&&p.push.apply(p,o(u)),p.map((function(t){return e.startsWith("/")&&""===t?"/":t}))}var L=/^:\w+$/,F=3,U=2,B=1,G=10,H=-2,z=function(e){return"*"===e};function Y(e,t){var n=e.split("/"),a=n.length;return n.some(z)&&(a+=H),t&&(a+=U),n.filter((function(e){return!z(e)})).reduce((function(e,t){return e+(L.test(t)?F:""===t?B:G)}),a)}function q(e,t){for(var n=e.routesMeta,a={},s="/",i=[],r=0;r<n.length;++r){var o=n[r],l=r===n.length-1,c="/"===s?t:t.slice(s.length)||"/",d=V({path:o.relativePath,caseSensitive:o.caseSensitive,end:l},c);if(!d)return null;Object.assign(a,d.params);var u=o.route;i.push({params:a,pathname:Z([s,d.pathname]),pathnameBase:J(Z([s,d.pathnameBase])),route:u}),"/"!==d.pathnameBase&&(s=Z([s,d.pathnameBase]))}return i}function V(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});var n=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);I("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');var a=[],s="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,(function(e,t){return a.push(t),"/([^\\/]+)"}));e.endsWith("*")?(a.push("*"),s+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?s+="\\/*$":""!==e&&"/"!==e&&(s+="(?:(?=\\/|$))");var i=new RegExp(s,t?void 0:"i");return[i,a]}(e.path,e.caseSensitive,e.end),a=E(n,2),s=a[0],i=a[1],r=t.match(s);if(!r)return null;var o=r[0],l=o.replace(/(.)\/+$/,"$1"),c=r.slice(1);return{params:i.reduce((function(e,t,n){if("*"===t){var a=c[n]||"";l=o.slice(0,o.length-a.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return I(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(c[n]||"",t),e}),{}),pathname:o,pathnameBase:l,pattern:e}}function W(e){try{return decodeURI(e)}catch(t){return I(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function Q(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;var n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}function $(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function K(e){return e.filter((function(e,t){return 0===t||e.route.path&&e.route.path.length>0}))}function X(e,t,n,a){var s;void 0===a&&(a=!1),"string"===typeof e?s=A(e):(w(!(s=S({},e)).pathname||!s.pathname.includes("?"),$("?","pathname","search",s)),w(!s.pathname||!s.pathname.includes("#"),$("#","pathname","hash",s)),w(!s.search||!s.search.includes("#"),$("#","search","hash",s)));var i,r=""===e||""===s.pathname,o=r?"/":s.pathname;if(a||null==o)i=n;else{var l=t.length-1;if(o.startsWith("..")){for(var c=o.split("/");".."===c[0];)c.shift(),l-=1;s.pathname=c.join("/")}i=l>=0?t[l]:"/"}var d=function(e,t){void 0===t&&(t="/");var n="string"===typeof e?A(e):e,a=n.pathname,s=n.search,i=void 0===s?"":s,r=n.hash,o=void 0===r?"":r,l=a?a.startsWith("/")?a:function(e,t){var n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((function(e){".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(a,t):t;return{pathname:l,search:ee(i),hash:te(o)}}(s,i),u=o&&"/"!==o&&o.endsWith("/"),p=(r||"."===o)&&n.endsWith("/");return d.pathname.endsWith("/")||!u&&!p||(d.pathname+="/"),d}var Z=function(e){return e.join("/").replace(/\/\/+/g,"/")},J=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},ee=function(e){return e&&"?"!==e?e.startsWith("?")?e:"?"+e:""},te=function(e){return e&&"#"!==e?e.startsWith("#")?e:"#"+e:""},ne=function(e){h(n,e);var t=_(n);function n(){return l(this,n),t.apply(this,arguments)}return p(n)}(y(Error));function ae(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}var se=["post","put","patch","delete"],ie=(new Set(se),["get"].concat(se));new Set(ie),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function re(){return re=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},re.apply(this,arguments)}var oe=t.createContext(null);var le=t.createContext(null);var ce=t.createContext(null);var de=t.createContext(null);var ue=t.createContext(null);var pe=t.createContext({outlet:null,matches:[],isDataRoute:!1});var me=t.createContext(null);function he(){return null!=t.useContext(ue)}function fe(){return he()||w(!1),t.useContext(ue).location}function ge(e){t.useContext(de).static||t.useLayoutEffect(e)}function xe(){return t.useContext(pe).isDataRoute?function(){var e=Ie(Ne.UseNavigateStable).router,n=Oe(Ee.UseNavigateStable),a=t.useRef(!1);return ge((function(){a.current=!0})),t.useCallback((function(t,s){void 0===s&&(s={}),a.current&&("number"===typeof t?e.navigate(t):e.navigate(t,re({fromRouteId:n},s)))}),[e,n])}():function(){he()||w(!1);var e=t.useContext(oe),n=t.useContext(de),a=n.basename,s=n.navigator,i=t.useContext(pe).matches,r=fe().pathname,o=JSON.stringify(K(i).map((function(e){return e.pathnameBase}))),l=t.useRef(!1);return ge((function(){l.current=!0})),t.useCallback((function(t,n){if(void 0===n&&(n={}),l.current)if("number"!==typeof t){var i=X(t,JSON.parse(o),r,"path"===n.relative);null==e&&"/"!==a&&(i.pathname="/"===i.pathname?a:Z([a,i.pathname])),(n.replace?s.replace:s.push)(i,n.state,n)}else s.go(t)}),[a,s,o,r,e])}()}var _e=t.createContext(null);function be(e,n){var a=(void 0===n?{}:n).relative,s=t.useContext(pe).matches,i=fe().pathname,r=JSON.stringify(K(s).map((function(e){return e.pathnameBase})));return t.useMemo((function(){return X(e,JSON.parse(r),i,"path"===a)}),[e,r,i,a])}function ye(n,a,s){he()||w(!1);var i,r=t.useContext(de).navigator,o=t.useContext(pe).matches,l=o[o.length-1],c=l?l.params:{},d=(l&&l.pathname,l?l.pathnameBase:"/"),u=(l&&l.route,fe());if(a){var p,m="string"===typeof a?A(a):a;"/"===d||(null==(p=m.pathname)?void 0:p.startsWith(d))||w(!1),i=m}else i=u;var h=i.pathname||"/",f=D(n,{pathname:"/"===d?h:h.slice(d.length)||"/"});var g=we(f&&f.map((function(e){return Object.assign({},e,{params:Object.assign({},c,e.params),pathname:Z([d,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?d:Z([d,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])})})),o,s);return a&&g?t.createElement(ue.Provider,{value:{location:re({pathname:"/",search:"",hash:"",state:null,key:"default"},i),navigationType:e.Pop}},g):g}function ve(){var e=function(){var e,n=t.useContext(me),a=Ce(Ee.UseRouteError),s=Oe(Ee.UseRouteError);if(n)return n;return null==(e=a.errors)?void 0:e[s]}(),n=ae(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),a=e instanceof Error?e.stack:null,s="rgba(200,200,200, 0.5)",i={padding:"0.5rem",backgroundColor:s};return t.createElement(t.Fragment,null,t.createElement("h2",null,"Unexpected Application Error!"),t.createElement("h3",{style:{fontStyle:"italic"}},n),a?t.createElement("pre",{style:i},a):null,null)}var Ne,Ee,Se=t.createElement(ve,null),je=function(e){h(a,e);var n=_(a);function a(e){var t;return l(this,a),(t=n.call(this,e)).state={location:e.location,revalidation:e.revalidation,error:e.error},t}return p(a,[{key:"componentDidCatch",value:function(e,t){console.error("React Router caught the following error during render",e,t)}},{key:"render",value:function(){return this.state.error?t.createElement(pe.Provider,{value:this.props.routeContext},t.createElement(me.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}],[{key:"getDerivedStateFromError",value:function(e){return{error:e}}},{key:"getDerivedStateFromProps",value:function(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}}]),a}(t.Component);function Te(e){var n=e.routeContext,a=e.match,s=e.children,i=t.useContext(oe);return i&&i.static&&i.staticContext&&(a.route.errorElement||a.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=a.route.id),t.createElement(pe.Provider,{value:n},s)}function we(e,n,a){var s;if(void 0===n&&(n=[]),void 0===a&&(a=null),null==e){var i;if(null==(i=a)||!i.errors)return null;e=a.matches}var r=e,o=null==(s=a)?void 0:s.errors;if(null!=o){var l=r.findIndex((function(e){return e.route.id&&(null==o?void 0:o[e.route.id])}));l>=0||w(!1),r=r.slice(0,Math.min(r.length,l+1))}return r.reduceRight((function(e,s,i){var l=s.route.id?null==o?void 0:o[s.route.id]:null,c=null;a&&(c=s.route.errorElement||Se);var d=n.concat(r.slice(0,i+1)),u=function(){var n;return n=l?c:s.route.Component?t.createElement(s.route.Component,null):s.route.element?s.route.element:e,t.createElement(Te,{match:s,routeContext:{outlet:e,matches:d,isDataRoute:null!=a},children:n})};return a&&(s.route.ErrorBoundary||s.route.errorElement||0===i)?t.createElement(je,{location:a.location,revalidation:a.revalidation,component:c,error:l,children:u(),routeContext:{outlet:null,matches:d,isDataRoute:!0}}):u()}),null)}function Ie(e){var n=t.useContext(oe);return n||w(!1),n}function Ce(e){var n=t.useContext(le);return n||w(!1),n}function Oe(e){var n=function(e){var n=t.useContext(pe);return n||w(!1),n}(),a=n.matches[n.matches.length-1];return a.route.id||w(!1),a.route.id}!function(e){e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate"}(Ne||(Ne={})),function(e){e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId"}(Ee||(Ee={}));var Re;function Ae(e){return function(e){var n=t.useContext(pe).outlet;return n?t.createElement(_e.Provider,{value:e},n):n}(e.context)}function ke(e){w(!1)}function De(n){var a=n.basename,s=void 0===a?"/":a,i=n.children,r=void 0===i?null:i,o=n.location,l=n.navigationType,c=void 0===l?e.Pop:l,d=n.navigator,u=n.static,p=void 0!==u&&u;he()&&w(!1);var m=s.replace(/^\/*/,"/"),h=t.useMemo((function(){return{basename:m,navigator:d,static:p}}),[m,d,p]);"string"===typeof o&&(o=A(o));var f=o,g=f.pathname,x=void 0===g?"/":g,_=f.search,b=void 0===_?"":_,y=f.hash,v=void 0===y?"":y,N=f.state,E=void 0===N?null:N,S=f.key,j=void 0===S?"default":S,T=t.useMemo((function(){var e=Q(x,m);return null==e?null:{location:{pathname:e,search:b,hash:v,state:E,key:j},navigationType:c}}),[m,x,b,v,E,j,c]);return null==T?null:t.createElement(de.Provider,{value:h},t.createElement(ue.Provider,{children:r,value:T}))}function Pe(e){var t=e.children,n=e.location;return ye(Le(t),n)}!function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"}(Re||(Re={}));var Me=new Promise((function(){}));t.Component;function Le(e,n){void 0===n&&(n=[]);var a=[];return t.Children.forEach(e,(function(e,s){if(t.isValidElement(e)){var i=[].concat(o(n),[s]);if(e.type!==t.Fragment){e.type!==ke&&w(!1),e.props.index&&e.props.children&&w(!1);var r={id:e.props.id||i.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(r.children=Le(e.props.children,i)),a.push(r)}else a.push.apply(a,Le(e.props.children,i))}})),a}function Fe(){return Fe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},Fe.apply(this,arguments)}function Ue(e,t){if(null==e)return{};var n,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}var Be=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset"],Ge=["aria-current","caseSensitive","className","end","style","to","children"];function He(e){var n,a=e.basename,s=e.children,i=e.window,r=t.useRef();null==r.current&&(r.current=(void 0===(n={window:i,v5Compat:!0})&&(n={}),k((function(e,t){var n=e.location;return O("",{pathname:n.pathname,search:n.search,hash:n.hash},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:R(t)}),null,n)));var o=r.current,l=E(t.useState({action:o.action,location:o.location}),2),c=l[0],d=l[1],u=t.useCallback((function(e){t.startTransition((function(){return d(e)}))}),[d]);return t.useLayoutEffect((function(){return o.listen(u)}),[o,u]),t.createElement(De,{basename:a,children:s,location:c.location,navigationType:c.action,navigator:o})}var ze="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Ye=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,qe=t.forwardRef((function(e,n){var a,s=e.onClick,i=e.relative,r=e.reloadDocument,o=e.replace,l=e.state,c=e.target,d=e.to,u=e.preventScrollReset,p=Ue(e,Be),m=t.useContext(de).basename,h=!1;if("string"===typeof d&&Ye.test(d)&&(a=d,ze))try{var f=new URL(window.location.href),g=d.startsWith("//")?new URL(f.protocol+d):new URL(d),x=Q(g.pathname,m);g.origin===f.origin&&null!=x?d=x+g.search+g.hash:h=!0}catch(y){}var _=function(e,n){var a=(void 0===n?{}:n).relative;he()||w(!1);var s=t.useContext(de),i=s.basename,r=s.navigator,o=be(e,{relative:a}),l=o.hash,c=o.pathname,d=o.search,u=c;return"/"!==i&&(u="/"===c?i:Z([i,c])),r.createHref({pathname:u,search:d,hash:l})}(d,{relative:i}),b=function(e,n){var a=void 0===n?{}:n,s=a.target,i=a.replace,r=a.state,o=a.preventScrollReset,l=a.relative,c=xe(),d=fe(),u=be(e,{relative:l});return t.useCallback((function(t){if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,s)){t.preventDefault();var n=void 0!==i?i:R(d)===R(u);c(e,{replace:n,state:r,preventScrollReset:o,relative:l})}}),[d,c,u,i,r,s,e,o,l])}(d,{replace:o,state:l,target:c,preventScrollReset:u,relative:i});return t.createElement("a",Fe({},p,{href:a||_,onClick:h||r?s:function(e){s&&s(e),e.defaultPrevented||b(e)},ref:n,target:c}))}));var Ve=t.forwardRef((function(e,n){var a=e["aria-current"],s=void 0===a?"page":a,i=e.caseSensitive,r=void 0!==i&&i,o=e.className,l=void 0===o?"":o,c=e.end,d=void 0!==c&&c,u=e.style,p=e.to,m=e.children,h=Ue(e,Ge),f=be(p,{relative:h.relative}),g=fe(),x=t.useContext(le),_=t.useContext(de).navigator,b=_.encodeLocation?_.encodeLocation(f).pathname:f.pathname,y=g.pathname,v=x&&x.navigation&&x.navigation.location?x.navigation.location.pathname:null;r||(y=y.toLowerCase(),v=v?v.toLowerCase():null,b=b.toLowerCase());var N,E=y===b||!d&&y.startsWith(b)&&"/"===y.charAt(b.length),S=null!=v&&(v===b||!d&&v.startsWith(b)&&"/"===v.charAt(b.length)),j=E?s:void 0;N="function"===typeof l?l({isActive:E,isPending:S}):[l,E?"active":null,S?"pending":null].filter(Boolean).join(" ");var T="function"===typeof u?u({isActive:E,isPending:S}):u;return t.createElement(qe,Fe({},h,{"aria-current":j,className:N,ref:n,style:T,to:p}),"function"===typeof m?m({isActive:E,isPending:S}):m)}));var We,Qe;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmitImpl="useSubmitImpl",e.UseFetcher="useFetcher"})(We||(We={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Qe||(Qe={}));var $e=n(184),Ke=function(){return(0,$e.jsxs)("div",{className:"text-white font-monset bg-white dark:bg-slate-900 h-full pb-10",children:[(0,$e.jsx)("section",{className:"h-auto flex flex-col items-center  font-rigtheous pt-20 bg-white dark:bg-slate-900",children:(0,$e.jsx)("h5",{className:"text-color-mode font-bold text-3xl md:text-4xl",style:{marginTop:"-15px"},children:"Welcome to Phyed"})}),(0,$e.jsx)("section",{className:"mx-6 ld:mx-16 mt-10 grid md:grid-cols-2 lg:grid-cols-3 gap-10",children:[{id:1,name:"PYTHON",learn:"Learn Python",path:"/python/intro",description:"A Web Server Programming Language"},{id:2,name:"C++",learn:"Learn C++",path:"/cpluspage/cpp-intro",description:"A programming language"},{id:3,name:"ALGORITHM",learn:"Learn Algorithm",path:"/algorithm/sorting-intro",description:"Programming language for Automation"},{id:4,name:"IoT",learn:"Learn IoT",path:"/IoT/IoT-Intro-Definition",description:"Programming language for Automation"},{id:5,name:"NumPy",learn:"Learn Numpy",path:"/NumPy/NumPy-Introduction",description:"A Programming language"},{id:6,name:"Pandas",learn:"Learn Pandas",path:"/Pandas/Pandas-Introduction",description:"A Python Library to Work with Data"}].map((function(e){return(0,$e.jsxs)("article",{className:"bg-gray-500 font-rigtheous text-center py-10 h-auto w-auto rounded-lg",style:{backgroundColor:"#60A5FA"},children:[(0,$e.jsx)("h3",{className:"pt-2 mb-4 text-xl md:text-2xl font-bold",children:e.name}),(0,$e.jsx)("p",{className:"font-semibold mb-10",children:e.description}),(0,$e.jsx)(qe,{to:e.path,className:"bg-red-400 rounded-lg px-4 py-2",style:{backgroundColor:"#FA9F60"},children:e.learn})]},e.id)}))})]})};function Xe(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}function Ze(e,t,n){return(t=d(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Je(){return Je=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},Je.apply(this,arguments)}function et(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function tt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?et(Object(n),!0).forEach((function(t){Ze(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):et(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var nt={};function at(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0;return function(e){if(0===e.length||1===e.length)return e;var t=e.join(".");return nt[t]||(nt[t]=function(e){var t=e.length;return 0===t||1===t?e:2===t?[e[0],e[1],"".concat(e[0],".").concat(e[1]),"".concat(e[1],".").concat(e[0])]:3===t?[e[0],e[1],e[2],"".concat(e[0],".").concat(e[1]),"".concat(e[0],".").concat(e[2]),"".concat(e[1],".").concat(e[0]),"".concat(e[1],".").concat(e[2]),"".concat(e[2],".").concat(e[0]),"".concat(e[2],".").concat(e[1]),"".concat(e[0],".").concat(e[1],".").concat(e[2]),"".concat(e[0],".").concat(e[2],".").concat(e[1]),"".concat(e[1],".").concat(e[0],".").concat(e[2]),"".concat(e[1],".").concat(e[2],".").concat(e[0]),"".concat(e[2],".").concat(e[0],".").concat(e[1]),"".concat(e[2],".").concat(e[1],".").concat(e[0])]:t>=4?[e[0],e[1],e[2],e[3],"".concat(e[0],".").concat(e[1]),"".concat(e[0],".").concat(e[2]),"".concat(e[0],".").concat(e[3]),"".concat(e[1],".").concat(e[0]),"".concat(e[1],".").concat(e[2]),"".concat(e[1],".").concat(e[3]),"".concat(e[2],".").concat(e[0]),"".concat(e[2],".").concat(e[1]),"".concat(e[2],".").concat(e[3]),"".concat(e[3],".").concat(e[0]),"".concat(e[3],".").concat(e[1]),"".concat(e[3],".").concat(e[2]),"".concat(e[0],".").concat(e[1],".").concat(e[2]),"".concat(e[0],".").concat(e[1],".").concat(e[3]),"".concat(e[0],".").concat(e[2],".").concat(e[1]),"".concat(e[0],".").concat(e[2],".").concat(e[3]),"".concat(e[0],".").concat(e[3],".").concat(e[1]),"".concat(e[0],".").concat(e[3],".").concat(e[2]),"".concat(e[1],".").concat(e[0],".").concat(e[2]),"".concat(e[1],".").concat(e[0],".").concat(e[3]),"".concat(e[1],".").concat(e[2],".").concat(e[0]),"".concat(e[1],".").concat(e[2],".").concat(e[3]),"".concat(e[1],".").concat(e[3],".").concat(e[0]),"".concat(e[1],".").concat(e[3],".").concat(e[2]),"".concat(e[2],".").concat(e[0],".").concat(e[1]),"".concat(e[2],".").concat(e[0],".").concat(e[3]),"".concat(e[2],".").concat(e[1],".").concat(e[0]),"".concat(e[2],".").concat(e[1],".").concat(e[3]),"".concat(e[2],".").concat(e[3],".").concat(e[0]),"".concat(e[2],".").concat(e[3],".").concat(e[1]),"".concat(e[3],".").concat(e[0],".").concat(e[1]),"".concat(e[3],".").concat(e[0],".").concat(e[2]),"".concat(e[3],".").concat(e[1],".").concat(e[0]),"".concat(e[3],".").concat(e[1],".").concat(e[2]),"".concat(e[3],".").concat(e[2],".").concat(e[0]),"".concat(e[3],".").concat(e[2],".").concat(e[1]),"".concat(e[0],".").concat(e[1],".").concat(e[2],".").concat(e[3]),"".concat(e[0],".").concat(e[1],".").concat(e[3],".").concat(e[2]),"".concat(e[0],".").concat(e[2],".").concat(e[1],".").concat(e[3]),"".concat(e[0],".").concat(e[2],".").concat(e[3],".").concat(e[1]),"".concat(e[0],".").concat(e[3],".").concat(e[1],".").concat(e[2]),"".concat(e[0],".").concat(e[3],".").concat(e[2],".").concat(e[1]),"".concat(e[1],".").concat(e[0],".").concat(e[2],".").concat(e[3]),"".concat(e[1],".").concat(e[0],".").concat(e[3],".").concat(e[2]),"".concat(e[1],".").concat(e[2],".").concat(e[0],".").concat(e[3]),"".concat(e[1],".").concat(e[2],".").concat(e[3],".").concat(e[0]),"".concat(e[1],".").concat(e[3],".").concat(e[0],".").concat(e[2]),"".concat(e[1],".").concat(e[3],".").concat(e[2],".").concat(e[0]),"".concat(e[2],".").concat(e[0],".").concat(e[1],".").concat(e[3]),"".concat(e[2],".").concat(e[0],".").concat(e[3],".").concat(e[1]),"".concat(e[2],".").concat(e[1],".").concat(e[0],".").concat(e[3]),"".concat(e[2],".").concat(e[1],".").concat(e[3],".").concat(e[0]),"".concat(e[2],".").concat(e[3],".").concat(e[0],".").concat(e[1]),"".concat(e[2],".").concat(e[3],".").concat(e[1],".").concat(e[0]),"".concat(e[3],".").concat(e[0],".").concat(e[1],".").concat(e[2]),"".concat(e[3],".").concat(e[0],".").concat(e[2],".").concat(e[1]),"".concat(e[3],".").concat(e[1],".").concat(e[0],".").concat(e[2]),"".concat(e[3],".").concat(e[1],".").concat(e[2],".").concat(e[0]),"".concat(e[3],".").concat(e[2],".").concat(e[0],".").concat(e[1]),"".concat(e[3],".").concat(e[2],".").concat(e[1],".").concat(e[0])]:void 0}(e)),nt[t]}(e.filter((function(e){return"token"!==e}))).reduce((function(e,t){return tt(tt({},e),n[t])}),t)}function st(e){return e.join(" ")}function it(e){var n=e.node,a=e.stylesheet,s=e.style,i=void 0===s?{}:s,r=e.useInlineStyles,o=e.key,l=n.properties,c=n.type,d=n.tagName,u=n.value;if("text"===c)return u;if(d){var p,m=function(e,t){var n=0;return function(a){return n+=1,a.map((function(a,s){return it({node:a,stylesheet:e,useInlineStyles:t,key:"code-segment-".concat(n,"-").concat(s)})}))}}(a,r);if(r){var h=Object.keys(a).reduce((function(e,t){return t.split(".").forEach((function(t){e.includes(t)||e.push(t)})),e}),[]),f=l.className&&l.className.includes("token")?["token"]:[],g=l.className&&f.concat(l.className.filter((function(e){return!h.includes(e)})));p=tt(tt({},l),{},{className:st(g)||void 0,style:at(l.className,Object.assign({},l.style,i),a)})}else p=tt(tt({},l),{},{className:st(l.className)});var x=m(n.children);return t.createElement(d,Je({key:o},p),x)}}var rt=function(e,t){return-1!==e.listLanguages().indexOf(t)},ot=["language","children","style","customStyle","codeTagProps","useInlineStyles","showLineNumbers","showInlineLineNumbers","startingLineNumber","lineNumberContainerStyle","lineNumberStyle","wrapLines","wrapLongLines","lineProps","renderer","PreTag","CodeTag","code","astGenerator"];function lt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function ct(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?lt(Object(n),!0).forEach((function(t){Ze(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):lt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var dt=/\n/g;function ut(e){var n=e.codeString,a=e.codeStyle,s=e.containerStyle,i=void 0===s?{float:"left",paddingRight:"10px"}:s,r=e.numberStyle,o=void 0===r?{}:r,l=e.startingLineNumber;return t.createElement("code",{style:Object.assign({},a,i)},function(e){var n=e.lines,a=e.startingLineNumber,s=e.style;return n.map((function(e,n){var i=n+a;return t.createElement("span",{key:"line-".concat(n),className:"react-syntax-highlighter-line-number",style:"function"===typeof s?s(i):s},"".concat(i,"\n"))}))}({lines:n.replace(/\n$/,"").split("\n"),style:o,startingLineNumber:l}))}function pt(e,t){return{type:"element",tagName:"span",properties:{key:"line-number--".concat(e),className:["comment","linenumber","react-syntax-highlighter-line-number"],style:t},children:[{type:"text",value:e}]}}function mt(e,t,n){var a,s={display:"inline-block",minWidth:(a=n,"".concat(a.toString().length,".25em")),paddingRight:"1em",textAlign:"right",userSelect:"none"},i="function"===typeof e?e(t):e;return ct(ct({},s),i)}function ht(e){var t=e.children,n=e.lineNumber,a=e.lineNumberStyle,s=e.largestLineNumber,i=e.showInlineLineNumbers,r=e.lineProps,o=void 0===r?{}:r,l=e.className,c=void 0===l?[]:l,d=e.showLineNumbers,u=e.wrapLongLines,p="function"===typeof o?o(n):o;if(p.className=c,n&&i){var m=mt(a,n,s);t.unshift(pt(n,m))}return u&d&&(p.style=ct(ct({},p.style),{},{display:"flex"})),{type:"element",tagName:"span",properties:p,children:t}}function ft(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=0;a<e.length;a++){var s=e[a];if("text"===s.type)n.push(ht({children:[s],className:o(new Set(t))}));else if(s.children){var i=t.concat(s.properties.className);ft(s.children,i).forEach((function(e){return n.push(e)}))}}return n}function gt(e,t,n,a,s,i,r,o,l){var c,d=ft(e.value),u=[],p=-1,m=0;function h(e,i){var c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return t||c.length>0?function(e,t){return ht({children:e,lineNumber:t,lineNumberStyle:o,largestLineNumber:r,showInlineLineNumbers:s,lineProps:n,className:arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],showLineNumbers:a,wrapLongLines:l})}(e,i,c):function(e,t){if(a&&t&&s){var n=mt(o,t,r);e.unshift(pt(t,n))}return e}(e,i)}for(var f=function(){var e=d[m],t=e.children[0].value;if(t.match(dt)){var n=t.split("\n");n.forEach((function(t,s){var r=a&&u.length+i,o={type:"text",value:"".concat(t,"\n")};if(0===s){var l=h(d.slice(p+1,m).concat(ht({children:[o],className:e.properties.className})),r);u.push(l)}else if(s===n.length-1){var c=d[m+1]&&d[m+1].children&&d[m+1].children[0],f={type:"text",value:"".concat(t)};if(c){var g=ht({children:[f],className:e.properties.className});d.splice(m+1,0,g)}else{var x=h([f],r,e.properties.className);u.push(x)}}else{var _=h([o],r,e.properties.className);u.push(_)}})),p=m}m++};m<d.length;)f();if(p!==d.length-1){var g=d.slice(p+1,d.length);if(g&&g.length){var x=h(g,a&&u.length+i);u.push(x)}}return t?u:(c=[]).concat.apply(c,u)}function xt(e){var t=e.rows,n=e.stylesheet,a=e.useInlineStyles;return t.map((function(e,t){return it({node:e,stylesheet:n,useInlineStyles:a,key:"code-segement".concat(t)})}))}function _t(e){return e&&"undefined"!==typeof e.highlightAuto}var bt,yt,vt=n(3703),Nt=(bt=n.n(vt)(),yt={hljs:{display:"block",overflowX:"auto",padding:"0.5em",background:"#F0F0F0",color:"#444"},"hljs-subst":{color:"#444"},"hljs-comment":{color:"#888888"},"hljs-keyword":{fontWeight:"bold"},"hljs-attribute":{fontWeight:"bold"},"hljs-selector-tag":{fontWeight:"bold"},"hljs-meta-keyword":{fontWeight:"bold"},"hljs-doctag":{fontWeight:"bold"},"hljs-name":{fontWeight:"bold"},"hljs-type":{color:"#880000"},"hljs-string":{color:"#880000"},"hljs-number":{color:"#880000"},"hljs-selector-id":{color:"#880000"},"hljs-selector-class":{color:"#880000"},"hljs-quote":{color:"#880000"},"hljs-template-tag":{color:"#880000"},"hljs-deletion":{color:"#880000"},"hljs-title":{color:"#880000",fontWeight:"bold"},"hljs-section":{color:"#880000",fontWeight:"bold"},"hljs-regexp":{color:"#BC6060"},"hljs-symbol":{color:"#BC6060"},"hljs-variable":{color:"#BC6060"},"hljs-template-variable":{color:"#BC6060"},"hljs-link":{color:"#BC6060"},"hljs-selector-attr":{color:"#BC6060"},"hljs-selector-pseudo":{color:"#BC6060"},"hljs-literal":{color:"#78A960"},"hljs-built_in":{color:"#397300"},"hljs-bullet":{color:"#397300"},"hljs-code":{color:"#397300"},"hljs-addition":{color:"#397300"},"hljs-meta":{color:"#1f7199"},"hljs-meta-string":{color:"#4d99bf"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"}},function(e){var n=e.language,a=e.children,s=e.style,i=void 0===s?yt:s,r=e.customStyle,o=void 0===r?{}:r,l=e.codeTagProps,c=void 0===l?{className:n?"language-".concat(n):void 0,style:ct(ct({},i['code[class*="language-"]']),i['code[class*="language-'.concat(n,'"]')])}:l,d=e.useInlineStyles,u=void 0===d||d,p=e.showLineNumbers,m=void 0!==p&&p,h=e.showInlineLineNumbers,f=void 0===h||h,g=e.startingLineNumber,x=void 0===g?1:g,_=e.lineNumberContainerStyle,b=e.lineNumberStyle,y=void 0===b?{}:b,v=e.wrapLines,N=e.wrapLongLines,E=void 0!==N&&N,S=e.lineProps,j=void 0===S?{}:S,T=e.renderer,w=e.PreTag,I=void 0===w?"pre":w,C=e.CodeTag,O=void 0===C?"code":C,R=e.code,A=void 0===R?(Array.isArray(a)?a[0]:a)||"":R,k=e.astGenerator,D=Xe(e,ot);k=k||bt;var P=m?t.createElement(ut,{containerStyle:_,codeStyle:c.style||{},numberStyle:y,startingLineNumber:x,codeString:A}):null,M=i.hljs||i['pre[class*="language-"]']||{backgroundColor:"#fff"},L=_t(k)?"hljs":"prismjs",F=u?Object.assign({},D,{style:Object.assign({},M,o)}):Object.assign({},D,{className:D.className?"".concat(L," ").concat(D.className):L,style:Object.assign({},o)});if(c.style=ct(ct({},c.style),{},E?{whiteSpace:"pre-wrap"}:{whiteSpace:"pre"}),!k)return t.createElement(I,F,P,t.createElement(O,c,A));(void 0===v&&T||E)&&(v=!0),T=T||xt;var U=[{type:"text",value:A}],B=function(e){var t=e.astGenerator,n=e.language,a=e.code,s=e.defaultCodeValue;if(_t(t)){var i=rt(t,n);return"text"===n?{value:s,language:"text"}:i?t.highlight(n,a):t.highlightAuto(a)}try{return n&&"text"!==n?{value:t.highlight(a,n)}:{value:s}}catch(r){return{value:s}}}({astGenerator:k,language:n,code:A,defaultCodeValue:U});null===B.language&&(B.value=U);var G=gt(B,v,j,m,f,x,B.value.length+x,y,E);return t.createElement(I,F,t.createElement(O,c,!f&&P,T({rows:G,stylesheet:i,useInlineStyles:u})))});Nt.supportedLanguages=["1c","abnf","accesslog","actionscript","ada","angelscript","apache","applescript","arcade","arduino","armasm","asciidoc","aspectj","autohotkey","autoit","avrasm","awk","axapta","bash","basic","bnf","brainfuck","c-like","c","cal","capnproto","ceylon","clean","clojure-repl","clojure","cmake","coffeescript","coq","cos","cpp","crmsh","crystal","csharp","csp","css","d","dart","delphi","diff","django","dns","dockerfile","dos","dsconfig","dts","dust","ebnf","elixir","elm","erb","erlang-repl","erlang","excel","fix","flix","fortran","fsharp","gams","gauss","gcode","gherkin","glsl","gml","go","golo","gradle","groovy","haml","handlebars","haskell","haxe","hsp","htmlbars","http","hy","inform7","ini","irpf90","isbl","java","javascript","jboss-cli","json","julia-repl","julia","kotlin","lasso","latex","ldif","leaf","less","lisp","livecodeserver","livescript","llvm","lsl","lua","makefile","markdown","mathematica","matlab","maxima","mel","mercury","mipsasm","mizar","mojolicious","monkey","moonscript","n1ql","nginx","nim","nix","node-repl","nsis","objectivec","ocaml","openscad","oxygene","parser3","perl","pf","pgsql","php-template","php","plaintext","pony","powershell","processing","profile","prolog","properties","protobuf","puppet","purebasic","python-repl","python","q","qml","r","reasonml","rib","roboconf","routeros","rsl","ruby","ruleslanguage","rust","sas","scala","scheme","scilab","scss","shell","smali","smalltalk","sml","sqf","sql","sql_more","stan","stata","step21","stylus","subunit","swift","taggerscript","tap","tcl","thrift","tp","twig","typescript","vala","vbnet","vbscript-html","vbscript","verilog","vhdl","vim","x86asm","xl","xml","xquery","yaml","zephir"];var Et=Nt,St={hljs:{display:"block",overflowX:"auto",padding:"0.5em",color:"#abb2bf",background:"#282c34"},"hljs-comment":{color:"#5c6370",fontStyle:"italic"},"hljs-quote":{color:"#5c6370",fontStyle:"italic"},"hljs-doctag":{color:"#c678dd"},"hljs-keyword":{color:"#c678dd"},"hljs-formula":{color:"#c678dd"},"hljs-section":{color:"#e06c75"},"hljs-name":{color:"#e06c75"},"hljs-selector-tag":{color:"#e06c75"},"hljs-deletion":{color:"#e06c75"},"hljs-subst":{color:"#e06c75"},"hljs-literal":{color:"#56b6c2"},"hljs-string":{color:"#98c379"},"hljs-regexp":{color:"#98c379"},"hljs-addition":{color:"#98c379"},"hljs-attribute":{color:"#98c379"},"hljs-meta-string":{color:"#98c379"},"hljs-built_in":{color:"#e6c07b"},"hljs-class .hljs-title":{color:"#e6c07b"},"hljs-attr":{color:"#d19a66"},"hljs-variable":{color:"#d19a66"},"hljs-template-variable":{color:"#d19a66"},"hljs-type":{color:"#d19a66"},"hljs-selector-class":{color:"#d19a66"},"hljs-selector-attr":{color:"#d19a66"},"hljs-selector-pseudo":{color:"#d19a66"},"hljs-number":{color:"#d19a66"},"hljs-symbol":{color:"#61aeee"},"hljs-bullet":{color:"#61aeee"},"hljs-link":{color:"#61aeee",textDecoration:"underline"},"hljs-meta":{color:"#61aeee"},"hljs-selector-id":{color:"#61aeee"},"hljs-title":{color:"#61aeee"},"hljs-emphasis":{fontStyle:"italic"},"hljs-strong":{fontWeight:"bold"}},jt={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},Tt=t.createContext&&t.createContext(jt),wt=function(){return wt=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},wt.apply(this,arguments)},It=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)t.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(e,a[s])&&(n[a[s]]=e[a[s]])}return n};function Ct(e){return e&&e.map((function(e,n){return t.createElement(e.tag,wt({key:n},e.attr),Ct(e.child))}))}function Ot(e){return function(n){return t.createElement(Rt,wt({attr:wt({},e.attr)},n),Ct(e.child))}}function Rt(e){var n=function(n){var a,s=e.attr,i=e.size,r=e.title,o=It(e,["attr","size","title"]),l=i||n.size||"1em";return n.className&&(a=n.className),e.className&&(a=(a?a+" ":"")+e.className),t.createElement("svg",wt({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},n.attr,s,o,{className:a,style:wt(wt({color:e.color||n.color},n.style),e.style),height:l,width:l,xmlns:"http://www.w3.org/2000/svg"}),r&&t.createElement("title",null,r),e.children)};return void 0!==Tt?t.createElement(Tt.Consumer,null,(function(e){return n(e)})):n(jt)}function At(e){return Ot({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"}}]})(e)}function kt(e){return Ot({tag:"svg",attr:{viewBox:"0 0 384 512"},child:[{tag:"path",attr:{d:"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z"}}]})(e)}function Dt(e){return Ot({tag:"svg",attr:{viewBox:"0 0 352 512"},child:[{tag:"path",attr:{d:"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"}}]})(e)}function Pt(e){return Ot({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z"}}]})(e)}function Mt(e){return Ot({tag:"svg",attr:{viewBox:"0 0 512 512"},child:[{tag:"path",attr:{d:"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z"}}]})(e)}var Lt=function(){var e=E((0,t.useState)(!1),2),n=e[0],a=e[1],s='\n        #include <iostream>\n\n        int main() {\n            std::cout << "Hello!" << std::endl;\n            return 0;\n        } \n      ';return(0,$e.jsxs)("div",{className:"p-6 text-sm",children:[(0,$e.jsx)("h4",{className:"pt-4 text-2xl font-bold",children:"Introduction to C++"}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["C++ is a programming language that allows us to give instructions to a computer and make it do things. It's like talking to the computer in its own language. Just like we use words and sentences to communicate with each other, we use code to communicate with the computer.",(0,$e.jsx)("br",{})," ",(0,$e.jsx)("br",{})," In C++, we write code using a combination of words, numbers, and symbols. We can tell the computer to do different tasks by writing different instructions or commands in our code. Let's imagine that you have a robot friend, and you want to teach it how to say \"Hello!\" to you. In C++, you can write a simple program to do that. Here's what the program might look like:"]}),(0,$e.jsx)("p",{className:"text-justify pt-6",children:"In C++, we write code using a combination of words, numbers, and symbols. We can tell the computer to do different tasks by writing different instructions or commands in our code."}),(0,$e.jsx)("p",{className:"text-justify pt-6",children:"Let's imagine that you have a robot friend, and you want to teach it how to say \"Hello!\" to you. In C++, you can write a simple program to do that. Here's what the program might look like:"}),(0,$e.jsxs)("section",{className:"bg-gray-400 h-auto mt-6 w-60 md:w-3/5 ml-0 md:ml-20 rounded-lg overflow-hidden text-base",children:[(0,$e.jsxs)("article",{className:"flex items-center text-white justify-between p-1 px-4 text-sm",children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{children:"Example"})}),n?(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",children:[(0,$e.jsx)(At,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copied"})]}):(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",onClick:function(){navigator.clipboard.writeText(s),a(!0),setTimeout((function(){a(!1)}),3e3)},children:[(0,$e.jsx)(kt,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copy"})]})]}),(0,$e.jsx)(Et,{language:"jsx",style:St,children:s})]}),(0,$e.jsxs)("section",{className:"pt-6",children:[(0,$e.jsx)("h3",{children:"Let's break it down step by step:"}),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("p",{className:"pt-4",children:["1. ",(0,$e.jsx)("span",{className:"text-green-500",children:"#include <iostream> "}),': This line tells the computer to include a special library called "iostream." This library helps us to do input and output operations, like printing text on the screen.']}),(0,$e.jsxs)("p",{className:"pt-4",children:["2. ",(0,$e.jsxs)("span",{className:"text-green-500",children:["int main() "," "]}),": This is the main part of our program. It's like the brain of the program. Whatever instructions we write inside these curly braces ",", the computer will follow them."]}),(0,$e.jsxs)("p",{className:"pt-4",children:["3. ",(0,$e.jsx)("span",{className:"text-green-500",children:"std::cout <<std::endl; "}),": Here, ",(0,$e.jsx)("span",{className:"text-green-500",children:"std::cout "}),' is a way to tell the computer to display something on the screen. In this case, we want it to display the text "Hello!" The ',(0,$e.jsx)("span",{className:"text-green-500",children:"<<"}),"  symbols are used to connect the text with the ",(0,$e.jsx)("span",{className:"text-green-500",children:"std::cout "}),' command. The std::endl part is used to move to the next line after displaying "Hello!"']}),(0,$e.jsxs)("p",{className:"pt-4",children:["4. ",(0,$e.jsx)("span",{className:"text-green-500",children:"return 0;"}),"This line tells the computer that the program has finished running and it can stop. The number 0 here represents a successful program execution."]})]})]}),(0,$e.jsx)("div",{className:"pt-6",children:(0,$e.jsx)("h5",{className:"text-justify",children:"To make the computer understand and run our program, we need a special software called a compiler. The compiler takes our code and translates it into a language that the computer can understand. Once we have the compiled program, we can run it, and the computer will display \"Hello!\" on the screen, just as we instructed. That's a simple introduction to C++! It's like giving instructions to a computer using code. With more practice and learning, you can make the computer do even more amazing things."})})]})},Ft=function(){return(0,$e.jsxs)("div",{className:"p-4 text-md text-sm",children:[(0,$e.jsxs)("section",{children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md bg-blue-400 w-full",children:"1. Installing Visual Studio Code (VS Code):"}),(0,$e.jsx)("div",{children:(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Visual Studio Code is a special program that helps us write and manage our code easily. It's like a digital notebook for writing code."}),(0,$e.jsxs)("li",{className:"pt-4",children:["To install VS Code, you can visit the official website of ",(0,$e.jsx)("a",{href:"https://code.visualstudio.com",target:"_blank",rel:"noopener noreferrer",className:"text-green-600",children:"Visual Studio Code"})," and look for the download button."]}),(0,$e.jsx)("li",{className:"pt-4",children:"Click on the download button, and it will start downloading the installer file. Once the download is complete, open the installer."}),(0,$e.jsx)("li",{className:"pt-4",children:'The installer will guide you through the installation process. Just follow the instructions and click on the buttons that say "Next" or "Install."'}),(0,$e.jsx)("li",{className:"pt-4",children:"After the installation is finished, you can find the VS Code icon on your computer's desktop or in the list of installed programs."}),(0,$e.jsx)("li",{className:"pt-4",children:"Double-click on the VS Code icon, and it will open up the program for you to start coding!"})]})})]}),(0,$e.jsxs)("section",{children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold mt-6 rounded-md bg-blue-400 w-full",children:"2. Installing the g++ compiler"}),(0,$e.jsx)("div",{children:(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"The g++ compiler is a special program that helps us convert our C++ code into a language that the computer can understand and run."}),(0,$e.jsx)("li",{className:"pt-4",children:"To install the g++ compiler, we need to use a software called MinGW. MinGW is a development environment for C++ programming."}),(0,$e.jsxs)("li",{className:"pt-4",children:["You can visit the ",(0,$e.jsx)("a",{href:"http://mingw.org",target:"_blank",rel:"noopener noreferrer",className:"text-green-600",children:"MinGW website"})," and look for the download section."]}),(0,$e.jsx)("li",{className:"pt-4",children:"Find the download link for the latest version of MinGW and click on it to start the download."}),(0,$e.jsx)("li",{className:"pt-4",children:"Once the download is complete, open the installer."}),(0,$e.jsx)("li",{className:"pt-4",children:'The installer will guide you through the installation process. Just follow the instructions and click on the buttons that say "Next" or "Install."'}),(0,$e.jsx)("li",{className:"pt-4",children:"During the installation, make sure to select the option to install the g++ compiler."}),(0,$e.jsx)("li",{className:"pt-4",children:"After the installation is finished, you will have the g++ compiler installed on your computer. It's now ready to compile your C++ code!"})]})})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, installing these programs may require the help of an adult or someone who knows how to install software on your computer. Always ask for assistance and permission when installing new programs."})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Once you have VS Code and the g++ compiler installed, you can open VS Code, write your C++ code, and use the g++ compiler to compile and run your programs. Have fun coding!"})]})]})},Ut=function(){var e=E((0,t.useState)(!1),2),n=e[0],a=e[1],s='\n      std::cout << "Hello!" << std::endl;\n      int age = 10;\n      int result = age * 2;\n      std::cout << "Twice your age is: " << result << std::endl;\n  \n      ';return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 text-md text-justify",children:[(0,$e.jsx)("div",{className:"p-4 text-sm mt-6 card-bg text-white rounded-lg  flex",children:(0,$e.jsx)("p",{children:"A C++ program is like a set of instructions that we give to the computer to perform a specific task. It has a specific structure that we follow to write our instructions. Let's break it down step by step"})}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Preprocessor directives"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"These are special instructions that we include at the beginning of our program to tell the computer to do certain things before running our main code."}),(0,$e.jsx)("li",{className:"pt-4",children:'An example of a preprocessor directive is #include <iostream>. It tells the computer to include a library called "iostream" that helps us with input and output operations, like printing text on the screen.'})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. The main() function"}),(0,$e.jsxs)("ul",{className:"list-disc px-6",children:[(0,$e.jsx)("li",{className:"pt-4",children:'The main function is the most important part of our program. It acts as the starting point and the "brain" of our program.'}),(0,$e.jsx)("li",{className:"pt-4",children:"We write our main code inside this function. The computer will execute the instructions written inside the main function."}),(0,$e.jsxs)("li",{className:"pt-4",children:["The structure of the main function looks like this: int main() '","'. It starts with int which means the main function will return an integer value. The "," braces contain our instructions or code."]})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Instructions or code "}),(0,$e.jsxs)("ul",{className:"list-disc px-6",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Inside the main function, we write instructions or code to tell the computer what to do. These instructions are like steps that the computer follows in order."}),(0,$e.jsx)("li",{className:"pt-4",children:"For example, we can tell the computer to display some text on the screen or perform calculations."}),(0,$e.jsx)("li",{className:"pt-4",children:"We write our instructions line by line, and each line ends with a semicolon (;)."}),(0,$e.jsx)("li",{className:"pt-4",children:"Here's an example of code inside the main function:"}),(0,$e.jsxs)("section",{className:"bg-gray-400 h-auto mt-6 w-52 md:w-3/5 ml-0 md:ml-20 rounded-lg overflow-hidden text-base",children:[(0,$e.jsxs)("article",{className:"flex items-center text-white justify-between p-1 px-4 text-sm",children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{children:"Example"})}),n?(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",children:[(0,$e.jsx)(At,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copied"})]}):(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",onClick:function(){navigator.clipboard.writeText(s),a(!0),setTimeout((function(){a(!1)}),3e3)},children:[(0,$e.jsx)(kt,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copy"})]})]}),(0,$e.jsx)(Et,{language:"jsx",style:St,children:s})]}),(0,$e.jsx)("li",{className:"pt-4",children:'In this example, we are displaying the text "Hello!" on the screen, assigning a value of 10 to the variable age, performing a calculation to double the value of age, and then displaying the result on the screen.'})]})]})]})})},Bt=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 text-md text-justify",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Variable Scope"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Variable scope refers to where a variable is accessible or visible in a program. It's like knowing where you can find and use a toy in your room."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have two toy boxes: one in your bedroom and one in the living room. The toys in each box can only be used in their respective rooms."}),(0,$e.jsx)("li",{className:"pt-4",children:"In programming, variables have scopes that determine where they can be used in the program."}),(0,$e.jsx)("li",{className:"pt-4",children:"There are two main types of variable scope:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Local scope:"})," Variables with local scope are like toys in your bedroom. They can only be used within a specific part of the program, such as inside a function or a code block (within curly braces ",")."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Global scope:"}),"Variables with global scope are like toys in the living room. They can be accessed and used from anywhere in the program, including inside functions or code blocks."]})]}),(0,$e.jsx)("li",{className:"pt-4",children:"Variables help us store and manipulate data, making our programs more dynamic and flexible."})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Data Types"}),(0,$e.jsxs)("div",{className:"pt-6 px-8",children:[(0,$e.jsxs)("ul",{className:"list-disc px-6",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Data types in C++ define the type of data that a variable can hold. It's like categorising toys based on what they are, such as cars, dolls, or blocks."}),(0,$e.jsx)("li",{className:"pt-4",children:"Some common data types in C++ are:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Integer:"})," This data type is used for whole numbers. For example, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"int"}),"  data type to store someone's age."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Floating-point:"}),"This data type is used for numbers with decimal points. For example, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float"}),"  or ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"double"}),"  data type to store someone's height."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Character:"}),"This data type is used for individual characters, like letters or symbols. For example, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"char"})," data type to store a single letter like 'A'."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Boolean:"}),"This data type is used to represent true or false values. For example, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"bool"})," data type to store whether it's raining ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(true)"}),"   or not  ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(false)"}),"."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"String:"}),"This data type is used for a sequence of characters, like words or sentences. For example, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"string"})," data type to store someone's name."]})]}),(0,$e.jsx)("li",{className:"pt-4",children:"Each data type has a specific way of storing and representing data in the computer's memory. By using different data types, we can store different kinds of information in our programs."})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, variable scope determines where a variable can be accessed in a program, and data types define the type of data a variable can hold. Understanding variable scope and data types helps us manage and use variables effectively in our programs, just like knowing where to find and use toys in different parts of our house."})]})]})]})]})})},Gt=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1];return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"bg-gray-400  h-auto mt-6 w-60 md:w-auto md:ml-5 md:mr-5 rounded-lg overflow-hidden text-xs md:text-sm",children:[(0,$e.jsxs)("article",{className:"flex items-center text-white justify-between p-1 px-4 text-sm",children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{children:"Example"})}),s?(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",children:[(0,$e.jsx)(At,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copied"})]}):(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",onClick:function(){navigator.clipboard.writeText(n),i(!0),setTimeout((function(){i(!1)}),3e3)},children:[(0,$e.jsx)(kt,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copy"})]})]}),(0,$e.jsx)(Et,{language:"jsx",style:St,children:n})]})})},Ht=function(){var e=E((0,t.useState)(!1),2),n=e[0],a=e[1],s="\n        // This is a comment explaining the purpose of the code.\n\n      ";return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 text-md text-justify",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Variables"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Variables are like containers that hold information or values. We can give them names and use them to store different types of data, such as numbers, text, or true/false values."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a box with a label on it. The label is the variable name, and the box holds the value."}),(0,$e.jsxs)("li",{className:"pt-4",children:["For example, let's say we have a variable called age to store a person's ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"age"})," . We can assign a value to it like this:  ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"int age = 10;"})," . Here, int tells the computer that age is an integer (a whole number), and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"10"})," is the value we assign to it."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We can also change the value of a variable later in the program. For example: ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"age = 12"})," ; assigns a new value of ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"12"})," to the age variable."]}),(0,$e.jsx)("li",{className:"pt-4",children:"Variables help us store and manipulate data, making our programs more dynamic and flexible."})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Comments"}),(0,$e.jsxs)("div",{className:"pt-6 px-8",children:[(0,$e.jsx)("p",{className:"",children:"Comments are notes or explanations we write in our code that the computer ignores when running the program. They are meant for humans to understand the code better."}),(0,$e.jsx)("p",{className:"pt-4",children:"Comments are like sticky notes or captions that we can add to our program to remind ourselves or explain something to others."}),(0,$e.jsx)("p",{className:"pt-4",children:"In C++, we can write comments in two ways"}),(0,$e.jsxs)("ul",{className:"list-disc px-6",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Single-line comments:"}),"  These are comments that only apply to a single line. We start them with ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"//"}),". Anything after ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"//"}),"  on the same line is considered a comment and is not executed by the computer."]}),(0,$e.jsx)(Gt,{children:s}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Multi-line comments:"}),"  These comments can span multiple lines. We start them with ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"/*"}),"  and end them with ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"*/"})," . Everything between ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"/* and */"}),"  is considered a comment."]}),(0,$e.jsxs)("section",{className:"bg-gray-400 h-auto mt-6 w-52 md:w-3/5 ml-0 md:ml-20 rounded-lg overflow-hidden text-base",children:[(0,$e.jsxs)("article",{className:"flex items-center text-white justify-between p-1 px-4 text-sm",children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{children:"Example"})}),n?(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",children:[(0,$e.jsx)(At,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copied"})]}):(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",onClick:function(){navigator.clipboard.writeText(s),a(!0),setTimeout((function(){a(!1)}),3e3)},children:[(0,$e.jsx)(kt,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copy"})]})]}),(0,$e.jsx)(Et,{language:"jsx",style:St,children:"\n        /*\n        This is a multi-line comment\n        explaining a block of code.\n        */\n      "})]}),(0,$e.jsx)("li",{className:"pt-4",children:"Comments are useful for documenting our code, making it easier to understand and maintain. They help us and others read and remember the purpose of different parts of our program."})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, variables are like labelled boxes that store values, and comments are notes we write in our code to explain things. By using variables and comments, we can make our programs more organised and easier to understand."})]})]})]})]})})},zt=function(){var e=E((0,t.useState)(!1),2);e[0],e[1];return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm ",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Output (Displaying Information)"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Output in C++ means showing or displaying information on the screen, just like when you want to share something with others."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In C++, we use a special command called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cout"})," to display information on the screen."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Imagine you have a magic board where you can write messages. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cout"})," command is like your magic board, and you can use it to write messages that the computer will display."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Here's an example of using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cout"}),"  to display a message on the screen:"]}),(0,$e.jsx)(Gt,{children:'\n      #include <iostream>\n\n      int main() {\n          std::cout << "Hello, friends!" << std::endl;\n          return 0;\n      }\n    '}),(0,$e.jsxs)("ul",{className:"list-disc px-16",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cout"}),' is the command to display something on the screen. We can put the message we want to display between double quotation marks (" ").']}),(0,$e.jsxs)("li",{className:"pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"<<"})," symbol connects the message with the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cout"})," command. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::endl"})," part is used to move to the next line after displaying the message."]})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Input (Getting Information)"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Input in C++ means getting information from the user, just like when you ask a friend for their name or age."}),(0,$e.jsxs)("li",{className:"pt-4",children:["In C++, we use a special command called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cin"})," to get information from the user."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Imagine you have a magic ear that can listen to what others say. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cin"}),"  command is like your magic ear, and you can use it to listen to what the user types."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Here's an example of using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cin"}),"  to get a number from the user:"]})]}),(0,$e.jsx)(Gt,{children:'\n      #include <iostream>\n\n      int main() {\n          int age;\n          std::cout << "Enter your age: ";\n          std::cin >> age;\n          std::cout << "You entered: " << age << std::endl;\n          return 0;\n      }\n    '}),(0,$e.jsxs)("ul",{className:"list-disc px-16",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, we first declare a variable called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"age"})," to store the user's input. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"int"})," in ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"int age;"})," means the variable will hold an integer (a whole number)."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We use ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cout"})," to display a message asking the user to enter their age."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Then, we use ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cin"})," to get the user's input. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"<<"})," symbol is used to connect the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cin"})," command with the variable where we want to store the input (in this case, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"age;"}),"). "]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Finally, we use ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cout"}),"  again to display the user's input back on the screen."]})]})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, variables are like labelled boxes that store values, and comments are notes we write in our code to explain things. By using variables and comments, we can make our programs more organised and easier to understand."})]})]})})},Yt=function(){return(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md bg-blue-400 w-full",children:"1. Header Files:"}),(0,$e.jsx)("div",{children:(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Header files in C++ are like special books that contain extra information or tools that we can use in our programs."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a bookshelf with different books, and each book has a different topic or set of tools."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, we use header files to include additional functionality or tools in our programs."}),(0,$e.jsxs)("li",{className:"pt-4",children:["For example, if we want to use some special commands to work with numbers, we can include the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"<cmath>"})," header file. It's like taking out a book from the shelf that has tools for doing math."]}),(0,$e.jsx)("li",{className:"pt-4",children:"By including the appropriate header file at the beginning of our program, we can access and use the extra functionality provided by that file."})]})})]}),(0,$e.jsxs)("section",{children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold mt-6 rounded-md bg-blue-400 w-full",children:"2. Operators"}),(0,$e.jsx)("div",{children:(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Operators in C++ are like special symbols or signs that help us perform different actions or operations."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a set of symbols that represent different actions, like adding, subtracting, or comparing things."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, we use operators to perform actions on data, such as performing calculations or comparing values."}),(0,$e.jsx)("li",{className:"pt-4",children:"Here are some common operators in C++:"}),(0,$e.jsxs)("ul",{className:"list-disc px-8",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Arithmetic operators:"})," These operators are used for basic math calculations, such as addition (+), subtraction (-), multiplication (*), division (/), and more."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Comparison operators:"}),"These operators are used to compare values and determine if they are equal (==), not equal (!=), greater than (>), less than (<), etc."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Assignment operator:"}),"The assignment operator (=) is used to assign a value to a variable."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Logical operators:"}),"These operators are used to perform logical operations, such as combining conditions with AND (&&) and OR (||), or negating a condition with NOT (!)."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"String:"}),"This data type is used for a sequence of characters, like words or sentences. For example, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"string"})," data type to store someone's name."]})]}),(0,$e.jsx)("li",{children:"By using operators, we can perform different actions on data, make decisions in our programs, and perform calculations, just like using different symbols to do different tasks."})]})})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, header files provide additional functionality or tools for our programs, like books with specialised information, and operators are like special symbols that help us perform actions or operations on data, just like using different symbols to perform different tasks."})]})]})},qt=function(){return(0,$e.jsx)("div",{className:"h-full text-sm md:text-lg",children:(0,$e.jsxs)("section",{className:"p-4 text-md text-justify text-sm ",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Reference Variables"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Reference variables in C++ are like nicknames or aliases that we give to existing variables. They allow us to refer to the same data by different names."}),(0,$e.jsx)("li",{className:"pt-4",children:'Imagine you have a classmate named Sarah. You can give her a nickname like "Sara" so that when you say "Sara," everyone knows you\'re talking about Sarah.'}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, reference variables allow us to create an alternative name or reference for an existing variable."}),(0,$e.jsxs)("li",{className:"pt-4",children:["For example, let's say we have a variable called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"score"})," that stores a student's test score. We can create a reference variable called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"result"}),"  that refers to the same data as ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"score"})," "]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Any changes made to ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"score"}),"  will also affect ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"result"}),", and vice versa. It's like having two different names for the same thing."]})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Typecasting"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Typecasting in C++ is like temporarily changing the type or format of a value to perform a specific operation or assignment."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a toy car that can only fit in a small box, but you want to put it in a bigger box. You need to change its size or shape temporarily to fit it in the bigger box."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, typecasting allows us to change the data type of a value to another data type."}),(0,$e.jsx)("li",{className:"pt-4",children:"There are two types of typecasting: implicit typecasting (automatic) and explicit typecasting (manual)."}),(0,$e.jsx)("li",{className:"pt-4",children:"Implicit typecasting happens automatically when the compiler can convert one data type to another safely. For example, converting an integer to a floating-point number."}),(0,$e.jsxs)("ul",{className:"list-disc px-6",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["For example, if we have an integer variable ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"number"})," and we want to treat it as a floating-point number, we can use explicit typecasting:",(0,$e.jsx)("br",{})," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float newNumber = static_cast <float> (number);."})]}),(0,$e.jsxs)("li",{className:"pt-4",children:[" Here, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"static_cast <float> "})," tells the compiler to convert ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"number"})," to a floating-point number, and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"newNumber"})," will hold the converted value."]})]})]})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, reference variables are like nicknames or aliases that refer to the same data by different names, and typecasting is like temporarily changing the type or format of a value to perform a specific operation or assignment. Understanding reference variables and type casting helps us work with variables and manipulate data effectively in our programs, just like using different names or changing the shape of objects as needed."})]})]})})},Vt=function(){var e=E((0,t.useState)(!1),2),n=e[0],a=e[1],s='\n            #include <iostream>\n\n            // Function to calculate the average age\n            double calculateAverageAge(int ages[], int size) {\n                int sum = 0;\n            \n                for (int i = 0; i < size; ++i) {\n                    sum += ages[i];\n                }\n            \n                return static_cast<double>(sum) / size;\n            }\n            \n            int main() {\n                int group1[] = {20, 25, 22, 23, 28};\n                int group2[] = {18, 19, 20, 22, 21, 24, 23};\n            \n                // Calling the function for group1\n                double avg1 = calculateAverageAge(group1, 5);\n                std::cout << "Average age of group1: " << avg1 << std::endl;\n            \n        ';return(0,$e.jsxs)("div",{className:"p-4 text-md",children:[(0,$e.jsxs)("section",{children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md bg-blue-400 w-full",children:"1. Constants:"}),(0,$e.jsx)("div",{children:(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Constants in C++ are like fixed values that cannot be changed, just like a rule that never changes."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a rule that says you can only have one piece of candy per day. No matter how much you want more candy, you cannot change that rule."}),(0,$e.jsxs)("li",{className:"pt-4",children:["We declare constants using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"const"}),"  keyword and give them a name, just like giving a name to a rule."]}),(0,$e.jsx)("li",{className:"pt-4",children:"After the installation is finished, you can find the VS Code icon on your computer's desktop or in the list of installed programs."}),(0,$e.jsx)("li",{className:"pt-4",children:"Double-click on the VS Code icon, and it will open up the program for you to start coding!"})]})})]}),(0,$e.jsxs)("section",{className:"bg-gray-400 ml-4 h-auto mt-6 w-auto rounded-lg overflow-hidden text-base",children:[(0,$e.jsxs)("article",{className:"flex items-center text-white justify-between p-1 px-4 text-sm",children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{children:"Example"})}),n?(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",children:[(0,$e.jsx)(At,{className:""}),"3",(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copied"})]}):(0,$e.jsxs)("div",{className:"flex h-auto items-center cursor-pointer",onClick:function(){navigator.clipboard.writeText(s),a(!0),setTimeout((function(){a(!1)}),3e3)},children:[(0,$e.jsx)(kt,{className:""}),(0,$e.jsx)("p",{className:"pt-1 ml-0.5",children:"Copy"})]})]}),(0,$e.jsx)(Et,{language:"jsx",style:St,children:s})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, installing these programs may require the help of an adult or someone who knows how to install software on your computer. Always ask for assistance and permission when installing new programs."})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Once you have VS Code and the g++ compiler installed, you can open VS Code, write your C++ code, and use the g++ compiler to compile and run your programs. Have fun coding!"})]})]})},Wt=function(){return(0,$e.jsx)("div",{className:"h-full text-sm md:text-lg",children:(0,$e.jsxs)("section",{className:"p-2 text-md text-justify",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Control Structures"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Control structures in C++ are like instructions or rules that tell the computer what to do in different situations, just like following specific steps when playing a game."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you are playing a game with different levels, and for each level, you have different instructions or rules to follow."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, control structures help us control the flow of our program and make decisions based on certain conditions."}),(0,$e.jsx)("li",{className:"pt-4",children:"Control structures allow us to execute specific blocks of code or perform certain actions based on the conditions we specify."})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. If-Else Statements"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"If-else statements in C++ are like decision-making instructions that tell the computer to do different things based on whether a condition is true or false, just like making choices based on certain conditions."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a box of cookies, and you want to eat a cookie only if you have more than five cookies left."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, if-else statements help us make decisions by checking if a certain condition is true or false."}),(0,$e.jsx)("li",{className:"pt-4",children:"Here's an example of an if-else statement in C++:"}),(0,$e.jsx)(Gt,{children:'\n    int cookies = 7;\n    \n    if (cookies > 5) {\n        std::cout << "I can eat a cookie!" << std::endl;\n    } else {\n        std::cout << "I don\'t have enough cookies to eat." << std::endl;\n    }\n  '}),(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, the if-else statement checks if the variable ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"cookies"}),' is greater than 5. If it is, it displays the message "I can eat a cookie!" If it\'s not, it displays the message "I don\'t have enough cookies to eat."']}),(0,$e.jsx)("li",{className:"pt-4",children:"The computer follows the instructions based on the condition being true or false, just like you make choices based on certain conditions."})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Switch-Case Statements"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Switch-case statements in C++ are like multiple-choice instructions that tell the computer to do different things based on the value of a variable, just like following different instructions based on different options."}),(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a menu with different food options, and based on what you choose, you get a different meal."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, switch-case statements help us make decisions based on the value of a variable."}),(0,$e.jsx)("li",{className:"pt-4",children:"Here's an example of a switch-case statement in C++"}),(0,$e.jsx)(Gt,{children:'\n    int choice = 2;\n\n    switch (choice) {\n        case 1:\n            std::cout << "You chose option 1." << std::endl;\n            break;\n        case 2:\n            std::cout << "You chose option 2." << std::endl;\n            break;\n        default:\n            std::cout << "Invalid choice." << std::endl;\n            break;\n    }  \n  '}),(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, the switch-case statement checks the value of the variable ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"choice"}),". Based on the value, it executes the corresponding case."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["If ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"choice"}),' is 1, it displays "You chose option 1." If ',(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"choice"}),' is 2, it displays "You chose option 2." If the value doesn\'t match any of the cases, it executes the default case and displays "Invalid choice."']}),(0,$e.jsx)("li",{className:"pt-4",children:"The computer follows the instructions based on the value of the variable, just like you make choices based on different options."})]})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-6xl hidden md:block mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, control structures help us make decisions and control the flow of our program, if-else statements allow us to make choices based on conditions, and switch-case statements help us make decisions based on the value of a variable. Understanding control structures, if-else statements, and switch-case statements helps us write programs that can make decisions and respond differently based on different conditions, just like following instructions, making choices, and selecting options in a game or in real life."})]})]})})},Qt=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm ",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. For Loops"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Imagine you have a bag of marbles, and you want to count how many marbles are in the bag. You take out each marble and count them one by one."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, a for loop can help us count the marbles by repeating the counting process for a specific number of times."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of a for loop in C++:"}),(0,$e.jsx)(Gt,{children:'\n      for (int count = 1; count <= 10; count++) {\n        std::cout << "Count: " << count << std::endl;\n      }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"In this example, the for loop starts with an initial value of count as 1. It continues as long as the count is less than or equal to 10. After each iteration, it increments count by 1."}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-5",children:["The code inside the loop, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'std::cout <<  "Count: " << std::endl;'})," will be executed repeatedly, printing the value of count each time."]}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"So, the loop will count from 1 to 10, and the output will be:"}),(0,$e.jsx)(Gt,{children:"\n      Count: 1\n      Count: 2\n      Count: 3\n      ...\n      Count: 10\n    "})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. While Loops"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Imagine you are jumping on a trampoline, and you keep jumping until you get tired and decide to stop."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, a while loop can help us keep jumping on the trampoline as long as we're not tired."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of a while loop in C++:"}),(0,$e.jsx)(Gt,{children:'\n    int count = 1;\n    while (count <= 10) {\n        std::cout << "Jump " << count << std::endl;\n        count++;\n    }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"In this example, we start with count equal to 1. The while loop continues as long as count is less than or equal to 10."}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-5",children:["Inside the loop, we jump and print the current ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'count: std::cout <<  "Jump " << count std::endl;'})," Then, we increment count by 1."]}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"So, the loop will make us jump from 1 to 10, and the output will be:"}),(0,$e.jsx)(Gt,{children:'\n    int count = 1;\n    while (count <= 10) {\n        std::cout << "Jump " << count << std::endl;\n        count++;\n    }\n    '})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Do-While Loops"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you are playing a game where you need to roll a dice at least once, and then you decide if you want to roll it again based on the outcome."}),(0,$e.jsx)("li",{className:"pt-4",children:"In C++, a do-while loop can help us play the game by rolling the dice at least once and then deciding if we want to continue."}),(0,$e.jsx)("li",{className:"pt-4",children:"Here's an example of a do-while loop in C++:"}),(0,$e.jsx)(Gt,{children:'\n    int roll;\n    do {\n        roll = rand() % 6 + 1;\n        std::cout << "You rolled a " << roll << std::endl;\n    } while (roll != 6);\n    '}),(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, we start by declaring the variable ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"roll"}),". to store the result of each dice roll."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Inside the loop, we roll the dice and assign the result to ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"roll"})," using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"roll = rand() % 6 + 1;"}),". Then, we print the result."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["The loop continues as long as roll is not equal to 6 ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(while (roll != 6))"}),". If we roll a 6, the loop stops."]}),(0,$e.jsx)("li",{className:"pt-4",children:"So, the loop will keep rolling the dice until we roll a 6, and the output will show the results of each roll until we get a 6."})]})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember, for loops repeat a specific number of times, while loops repeat as long as a condition is true, and do-while loops repeat at least once and then continue as long as a condition is true. They help us perform tasks repeatedly in our programs, just like counting marbles, jumping on a trampoline, or playing a game."})]})]})})},$t=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm ",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Break Statement"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Imagine you are playing a game and you want to stop playing as soon as you win a certain level."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, the break statement helps us break out of a loop or switch-case statement and stop executing further code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of using the break statement in a while loop:"}),(0,$e.jsx)(Gt,{children:'\n    int level = 1;\n    while (level <= 10) {\n        std::cout << "Playing level " << level << std::endl;\n        if (level == 5) {\n            std::cout << "You won the game!" << std::endl;\n            break;\n        }\n        level++;\n    }\n    '}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"In this example, we have a while loop that simulates playing different levels of a game."}),(0,$e.jsxs)("li",{className:"pt-4",children:['Inside the loop, we print the current level we are playing. If the level reaches 5, we print "You won the game!" and use the ',(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"break"})," statement to exit the loop."]}),(0,$e.jsx)("li",{className:"pt-4",children:"The loop stops executing as soon as we win the game at level 5, and the output will be:"}),(0,$e.jsx)(Gt,{children:"\n      Playing level 1\n      Playing level 2\n      Playing level 3\n      Playing level 4\n      Playing level 5\n      You won the game!\n    "})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Continue Statement"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Imagine you are drawing a picture and you want to skip drawing a specific shape."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, the continue statement helps us skip the remaining code inside a loop for a particular iteration and move to the next iteration."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of using the continue statement in a for loop:"}),(0,$e.jsx)(Gt,{children:'\n    for (int i = 1; i <= 5; i++) {\n      if (i == 3) {\n          std::cout << "Skipping shape 3" << std::endl;\n          continue;\n      }\n      std::cout << "Drawing shape " << i << std::endl;\n    }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"In this example, we have a for loop that simulates drawing different shapes."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:'Inside the loop, we check if the current shape is number 3. If it is, we print "Skipping shape 3" and use the continue statement to skip the remaining code for that iteration.'}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"The loop continues with the next iteration and executes the remaining code for other shapes."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\n    Drawing shape 1\n    Drawing shape 2\n    Skipping shape 3\n    Drawing shape 4\n    Drawing shape 5\n    "}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"As you can see, shape 3 is skipped, and the loop continues drawing the remaining shapes."})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsxs)("p",{children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"break"})," statement allows us to exit a loop or switch-case statement, while the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"continue"})," statement allows us to skip the remaining code for a particular iteration and move to the next one. These statements help us control the flow of our program and make decisions based on specific conditions, just like stopping a game or skipping a step in a drawing"]})]})]})})},Kt=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm ",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Function Basic "}),(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"Function Declaration: "}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"A function declaration is like describing what a machine does before using it. It tells the computer about the function's name and the type of inputs and outputs it expects."}),(0,$e.jsx)(Gt,{children:"\n    // Function declaration\n    void sayHello(); \n  "}),(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"Function Definition: "}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"A function definition is like providing detailed instructions for a machine's operation. It specifies what the function does and how it does it."}),(0,$e.jsx)(Gt,{children:'\n    // Function definition\n    void sayHello() {\n        std::cout << "Hello there!" << std::endl;\n    }\n  '}),(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"Function Call:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"A function call is like pressing a button to activate a machine and make it perform its task. It executes the instructions defined in the function's body."}),(0,$e.jsx)(Gt,{children:"\n    // Function call\n    sayHello() \n  "}),(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"Putting It All Together:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"Let's bring everything together with a complete example. Imagine we have a machine that can add two numbers."}),(0,$e.jsx)(Gt,{children:'\n    // Function to add two numbers\n    int addNumbers(int a, int b) {\n        int sum = a + b;\n        return sum;\n    }\n    \n    int main() {\n        // Function call\n        int result = addNumbers(3, 5);  // Calling the function to add 3 and 5\n        std::cout << "The result is: " << result << std::endl;\n        return 0;\n    } \n  '}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, we have a function named ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"addNumbers"})," that takes two parameters a and b. It adds these numbers and returns the sum."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["In the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main() "})," function, we call ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"addNumbers"})," with the values 3 and 5. The returned ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"result"})," is stored in the result variable."]}),(0,$e.jsx)("li",{className:"pt-4",children:"The loop stops executing as soon as we win the game at level 5, and the output will be:"}),(0,$e.jsxs)("li",{className:"pt-4",children:["Finally, we print the result using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cout"}),"."]})]})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Understanding the basics of functions is like knowing how to use different machines. We declare a function to describe its purpose, define it to specify its instructions, and call it to activate its operation. By using functions, we can break down c"})]})]})})},Xt=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Function Parameters and Arguments"}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4 font-semibold",children:"Passing parameters to a function"}),(0,$e.jsx)("li",{className:"pt-4 font-semibold",children:"Function arguments"}),(0,$e.jsx)("li",{className:"pt-4 font-semibold",children:"Default arguments"})]}),(0,$e.jsxs)("p",{className:"pt-4",children:["Imagine we have a function called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"makeSandwich"})," that can make different types of sandwiches."]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"1. Function Parameters: "}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Parameters are like placeholders that the function expects to receive when it is called. They specify the type and name of the values we need to provide to the function."}),(0,$e.jsx)(Gt,{children:'\n    // Function declaration with parameters\n    void makeSandwich(std::string breadType, std::string filling) {\n        std::cout << "Making a " << breadType << " sandwich with " << filling << " filling." << std::endl;\n    }\n  '}),(0,$e.jsx)("ul",{className:"list-disc px-2 md:px-8",children:(0,$e.jsxs)("li",{className:"pt-4 px-5",children:["In this example, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"breadType"}),"  and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"filling"}),"  are the parameters of the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"makeSandwich"})," function. They represent the type of bread and the filling for the sandwich, respectively."]})})]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"2. Function Arguments "}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Arguments are the actual values we provide when calling a function. They correspond to the parameters of the function and are used to fill in the placeholders."}),(0,$e.jsx)(Gt,{children:' \n    // Function call with arguments\n    makeSandwich("whole wheat", "ham and cheese");\n  '}),(0,$e.jsx)("ul",{className:"list-disc px-2 md:px-8",children:(0,$e.jsxs)("li",{className:"pt-4 px-5",children:["In this example, we are calling the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"makeSandwich"})," function and providing the arguments ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'"whole wheat"'})," for breadType and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:' "ham and cheese" for filling.'}),"These values will be used inside the function to make the specific sandwich."]})})]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"3. Default Arguments "}),(0,$e.jsxs)("ul",{className:"list-disc px-5 md:px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Default arguments are values assigned to parameters in the function declaration. If no argument is provided for a parameter, the default value is used instead."}),(0,$e.jsx)(Gt,{children:' \n    // Function declaration with default argument\n    void makeSandwich(std::string breadType = "white bread", std::string filling = "peanut butter and jelly") {\n        std::cout << "Making a " << breadType << " sandwich with " << filling << " filling." << std::endl;\n    }\n  '}),(0,$e.jsx)("ul",{className:"list-disc px-2 md:px-8",children:(0,$e.jsx)("li",{className:"pt-4 px-5",children:'In this example, the makeSandwich function has default arguments of "white bread" for breadType and "peanut butter and jelly" for filling. If no arguments are provided when calling the function, these default values will be used.'})}),(0,$e.jsx)(Gt,{children:' \n    // Function calls\n    makeSandwich();  // Output: Making a white bread sandwich with peanut butter and jelly filling.\n    makeSandwich("rye bread", "turkey");  // Output: Making a rye bread sandwich with turkey filling.\n  '}),(0,$e.jsx)("ul",{className:"list-disc px-2 md:px-8",children:(0,$e.jsxs)("li",{className:"pt-4 px-5",children:["In the first function call, no arguments are provided, so the default values are used. In the second function call, we provide arguments ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'"rye bread"'})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'"turkey"'}),", which replace the default values."]})})]})]}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Understanding function parameters, arguments, and default arguments is like giving specific instructions to a sandwich-making machine. Parameters are the placeholders that tell the machine what types of bread and filling to expect, and arguments are the actual bread and filling we provide when using the machine. Default arguments are like pre-set choices for the bread and filling in case we don't provide any specific instructions. This way, we can customize the sandwiches we make without always having to specify every detail."})]})]})})},Zt=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Return Values"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Function return type"}),(0,$e.jsx)("li",{className:"pt-2",children:"Returning values from a function"})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, functions can perform specific tasks and sometimes produce a result or value as output. This output is called a return value. Just like a vending machine takes your money and gives you a chocolate bar, a function takes some input and gives you a result."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's imagine we have a function called \"addNumbers\" that adds two numbers together and returns the result. Here's how it looks:"}),(0,$e.jsx)(Gt,{children:'\n  int addNumbers(int a, int b) {\n    int sum = a + b;\n    return sum; // The result is returned using the "return" keyword\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, the function addNumbers takes two integers (a and b) as input. It adds them together and stores the result in a variable called sum. Finally, it uses the return keyword to send the value of sum back to the place where the function was called."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Now, let's see how we can use this function and understand the concept of return values."}),(0,$e.jsx)(Gt,{children:'\n    #include <iostream>\n\n    int addNumbers(int a, int b); // Function declaration\n    \n    int main() {\n        int num1 = 5;\n        int num2 = 3;\n        int result = addNumbers(num1, num2); // The return value is stored in the variable "result"\n    \n        std::cout << "The sum is: " << result << std::endl;\n    \n        return 0;\n    }\n    \n    int addNumbers(int a, int b) {\n        int sum = a + b;\n        return sum;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we first declare the addNumbers function at the beginning, so the compiler knows that it exists. Then, in the main function, we declare two variables num1 and num2 and assign them the values 5 and 3, respectively."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Next, we call the addNumbers function with num1 and num2 as arguments, and the return value is stored in a variable called result. The value returned by the addNumbers function (the sum of num1 and num2) is assigned to the result."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Finally, we print the result using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cout"}),' to display the message "The sum is: " followed by the value of the result.']}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["When we run this program, it will output: ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'"The sum is: 8".'})," "]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"So, in summary, return values allow functions to provide results or outputs that can be used in other parts of the program. It's like getting something back from the function after it performs its task, just like a vending machine giving you a chocolate bar after you insert money."})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Function Overloading"}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Overloading functions with different parameters"})}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Function overloading is a concept in C++ that allows us to define multiple functions with the same name but different parameters. It's like having different versions of a game, where each version has slightly different rules but shares the same name."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Let's imagine we want to create a function called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:'"calculateArea"'}),"  that calculates the area of different shapes. We can use function overloading to define multiple versions of this function, each tailored to a specific shape."]}),(0,$e.jsx)(Gt,{children:'\n    #include <iostream>\n\n    // Function to calculate the area of a rectangle\n    int calculateArea(int length, int width) {\n        return length * width;\n    }\n    \n    // Function to calculate the area of a circle\n    double calculateArea(double radius) {\n        return 3.14159 * radius * radius;\n    }\n    \n    int main() {\n        int rectangleLength = 5;\n        int rectangleWidth = 3;\n        double circleRadius = 2.5;\n    \n        int rectangleArea = calculateArea(rectangleLength, rectangleWidth);\n        double circleArea = calculateArea(circleRadius);\n    \n        std::cout << "Area of rectangle: " << rectangleArea << std::endl;\n        std::cout << "Area of circle: " << circleArea << std::endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we have two versions of the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"calculateArea"})," function. The first version takes two integers ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(length and width)"})," as parameters and calculates the area of a rectangle by multiplying the length and width. The second version takes a double ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(radius)"})," as a parameter and calculates the area of a circle using the formula ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" \u03c0 * radius * radius"}),"."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In the main function, we declare variables ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"rectangleLength, rectangleWidth, and circleRadius"}),"  to hold the dimensions of a rectangle and the radius of a circle, respectively."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We then call the calculateArea function twice: once with the rectangle dimensions and once with the circle radius. The return values of these function calls are stored in rectangleArea and circleArea, respectively."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Finally, we use ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::cout"}),"  to display the calculated areas of the rectangle and the circle."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"When we run this program, it will output:"}),(0,$e.jsx)(Gt,{children:"\n    Area of rectangle: 15\n    Area of circle: 19.6349\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"So, in summary, function overloading allows us to create multiple functions with the same name but different parameters. It helps us write more readable and organized code by grouping related functionality under the same function name. Just like different versions of a game have different rules but the same name, function overloading allows us to define different versions of a function with different parameter types or numbers."})]})]})})},Jt=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Function Scope and Lifetime"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Local variables"}),(0,$e.jsx)("li",{className:"pt-2",children:"Global variables"}),(0,$e.jsx)("li",{className:"pt-2",children:"Variable scope and visibility"})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"1. Local Variables: "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Local variables are declared inside a function or a block of code and are only accessible within that specific function or block. They have a limited scope, meaning they exist and can be used only within the function or block where they are declared."}),(0,$e.jsx)(Gt,{children:"\n      #include <iostream>\n\n      void myFunction() {\n          int x = 5;  // Local variable x, only accessible within this function\n          std::cout << x << std::endl;\n      }\n      \n      int main() {\n          myFunction();  // Calling the function\n          // std::cout << x << std::endl;  // This will give an error because x is not accessible here\n          return 0;\n      }\n    "}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"In this example, the variable x is declared inside the myFunction() function. It can be accessed and used within that function, but if we try to access it outside of the function (as shown in the commented line in main()), it will result in an error."})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"2. Global Variables: "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Global variables, on the other hand, are declared outside of any function or block, usually at the beginning of a program. They have a global scope, which means they can be accessed and used by any function or block throughout the entire program."}),(0,$e.jsx)(Gt,{children:"\n      #include <iostream>\n\n      int x = 5;  // Global variable, accessible throughout the program\n      \n      void myFunction() {\n        std::cout << x << std::endl;  // Accessing the global variable inside a function\n      }\n      \n      int main() {\n          std::cout << x << std::endl;  // Accessing the global variable in the main function\n          myFunction();  // Calling the function\n          return 0;\n      }\n    "}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-5",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"variable x"})," is declared outside of any function, making it a global variable. It can be accessed and used by both the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main() function and the myFunction()"})," function."]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"p-2 mt-4 text-md font-bold  w-fit",children:"3. Variable Scope and Visibility: "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The scope of a variable refers to the part of the program where the variable is visible and can be accessed. The visibility determines if a variable can be accessed from a particular part of the program."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Local variables have a limited scope, only being visible and accessible within the block or function where they are declared. Global variables have a global scope, making them visible and accessible throughout the entire program."}),(0,$e.jsx)(Gt,{children:'\n      #include <iostream>\n\n      int x = 10;  // Global variable\n      \n      void myFunction() {\n          int x = 5;  // Local variable with the same name as the global variable\n          std::cout << "Local x: " << x << std::endl;  // Accessing the local variable\n          std::cout << "Global x: " << ::x << std::endl;  // Accessing the global variable using the scope resolution operator (::)\n      }\n      \n      int main() {\n          std::cout << "Global x: " << x << std::endl;  // Accessing the global variable in the main function\n          myFunction();  // Calling the function\n          return 0;\n      }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"In this example, both a local variable x and a global variable x are declared. Inside the myFunction() function, we can access the local x variable using its name. To access the global x variable, we use the scope resolution operator ::."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-5",children:"I hope this explanation clarifies the concepts of local variables, global variables, and variable scope and visibility in C++ in a way that's easy to understand!."})]})]})})})},en=function(){return(0,$e.jsx)("div",{children:(0,$e.jsxs)("section",{className:"p-4 md:text-base text-justify text-sm",children:[(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Inline Functions"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Inline function definition"}),(0,$e.jsx)("li",{className:"pt-2",children:"Advantages and usage of inline functions"})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("h4",{className:"mt-4 text-md font-bold  w-fit",children:["1. Function Parameters:"," "]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'An inline function is a special type of function in programming that is defined with the keyword "inline" before the function declaration. When the inline function is invoked, the compiler replaces the function call with the actual code of the function, instead of executing a separate function call.'})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold  w-fit",children:"2. Advantages of Inline Functions"}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ",(0,$e.jsx)("span",{className:"font-semibold",children:"Efficiency:"})," Inline functions eliminate the overhead of function calls. Since the function code is directly inserted at the call site, there is no need to push arguments onto the stack, jump to a different location, and return from the function. This results in faster execution and can improve the performance of the program."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ",(0,$e.jsx)("span",{className:"font-semibold",children:"Reduced Function Call Overhead:"})," ","In some cases, when a function is called frequently, the overhead of function calls can become significant. By making the function inline, we can avoid this overhead and reduce the execution time."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ",(0,$e.jsx)("span",{className:"font-semibold",children:"Code Size Optimization:"})," ","Inline functions can lead to smaller executable code. Instead of generating separate function code for each call, the compiler includes the function code directly at the call site. This can result in smaller executable size, which can be beneficial for memory-constrained systems."]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold w-fit",children:"3. Usage of Inline Functions:"}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ","Inline functions are commonly used in scenarios where the function body is short and frequently called. For example, mathematical operations, accessors, or simple utility functions are good candidates for inlining. Here's an example to illustrate the usage of an inline function in C++:"," "]}),(0,$e.jsx)(Gt,{children:'\n    #include <iostream>\n\n    // Inline function definition\n    inline int square(int num) {\n        return num * num;\n    }\n    \n    int main() {\n      int number = 5;\n\n      // Function call is replaced with the actual code\n      int result = square(number);\n\n      std::cout << "The square of " << number << " is: " << result << std::endl;\n\n      return 0;\n    }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ","In the above example, we have an inline function called square() that calculates the square of a number. Inside the main() function, we call the square() function with the number 5. Since the function is inline, the compiler replaces the function call with the actual code of the square() function."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ","The resulting executable code will be similar to:"]}),(0,$e.jsx)(Gt,{children:'\n    int main() {\n      int number = 5;\n\n      int result = number * number;\n\n      std::cout << "The square of " << number << " is: " << result << std::endl;\n\n      return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"As you can see, the function call square(number) is replaced with number * number directly in the code."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"By using inline functions, we can achieve better performance and optimize the code execution. However, it's important to note that the decision to inline a function is ultimately up to the compiler. The inline keyword is a hint to the compiler, and it may choose to ignore it in certain situations."})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Function Templates"}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Generic functions using templates"})}),(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Function templates in programming allow us to write generic functions that can work with different types of data. They are like blueprints for functions that can be used to create specific functions for different types of data. Let's dive into the details in a way that's easy for a small kid to understand."})}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold underline w-fit",children:"What are Function Templates?"}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-2",children:[" ",'A function template is a way to define a function without specifying the exact type of data it will operate on. Instead, we use a placeholder called a "template parameter" to represent the data type. This allows us to write a single function that can be used with different data types.']})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold underline w-fit",children:"Why use Function Templates?"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"Function templates are useful when we want to write a function that performs the same logic regardless of the data type. It saves us from writing multiple versions of the same function for different data types. Templates also provide flexibility and reusability, as they can be used with various types without sacrificing code clarity or performance."})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold underline w-fit",children:"How to use Function Templates?"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:'To create a function template, we use the keyword "template" followed by the template parameter(s) in angle brackets <>. Here\'s an example in C++ to demonstrate a function template that adds two values:'}),(0,$e.jsx)(Gt,{children:'\n    #include <iostream>\n    // Function template for addition\n    template<typename T>\n    T add(T a, T b) {\n        return a + b;\n    }\n    \n    int main() {\n        int result1 = add(5, 3);  // Calls the add() template function with int type\n        double result2 = add(2.5, 3.7);  // Calls the add() template function with double type\n    \n        std::cout << "Result 1: " << result1 << std::endl;\n        std::cout << "Result 2: " << result2 << std::endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"In the above example, we define a function template called add() using the template keyword and the template parameter typename T. The template parameter T represents any data type."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"Inside the main() function, we call the add() function template twice: once with int arguments and once with double arguments. The compiler creates specific versions of the add() function for each data type based on the template parameter T."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"When we call add(5, 3), the compiler generates the following function:"}),(0,$e.jsx)(Gt,{children:"\n    int add(int a, int b) {\n      return a + b;\n    }\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"Similarly, when we call add(2.5, 3.7), the compiler generates the following function:"}),(0,$e.jsx)(Gt,{children:"\n    double add(double a, double b) {\n     return a + b;\n    }\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"The generated functions perform the addition based on the specific data types provided during the function call."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"By using function templates, we can create generic functions that work with different types of data without having to rewrite the same logic multiple times. This provides flexibility and promotes code reuse, making programming more efficient and concise."})]})]}),(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Function Pointers"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Pointers to functions"}),(0,$e.jsx)("li",{className:"pt-2",children:"Callback functions"})]}),(0,$e.jsx)("div",{children:(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Function pointers in programming allow us to store the memory address of a function and use it to call the function later. They are similar to variables that can hold the address of a function. Let's explain function pointers, why they are used, how they work, and provide an easy example for better understanding."})}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold underline w-fit",children:"What are Function Pointers?"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"In programming, functions reside in the memory, just like variables. Function pointers are variables that can hold the memory address of a function. They enable us to refer to a function by its address and use it to call the function later in the program."})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold underline w-fit",children:"Why are Function Pointers Used?"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"Function pointers are used in various scenarios, including:"}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-4",children:[" ",(0,$e.jsx)("span",{className:"font-semibold",children:"Callback Functions:"})," ",'Function pointers are often used as "callback" functions. A callback function is a function that is passed as an argument to another function and is called by that function to perform a specific task. Callback functions provide a way to customize or extend the behavior of a function without modifying its code.']}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-4",children:[" ",(0,$e.jsx)("span",{className:"font-semibold",children:"Function Selection:"})," ","Function pointers can be used to select a specific function to execute at runtime based on certain conditions or user choices. This allows for dynamic behavior and flexibility in program execution."]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("h4",{className:"mt-6 text-md font-bold underline w-fit",children:"How to Use Function Pointers?"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-2",children:"To use function pointers, we need to follow these steps:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"Declare the function pointer variable, specifying the return type and parameter types of the function it will point to."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"Assign the address of a function to the function pointer variable."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"Use the function pointer to call the function."}),(0,$e.jsx)("p",{className:"text-justify pt-4 px-4",children:"Here's a simple example in C++ to demonstrate the usage of function pointers as callback functions:"}),(0,$e.jsx)(Gt,{children:'\n    #include <iostream>\n\n    // Function that takes a callback function as an argument\n    void performOperation(int a, int b, int (*operation)(int, int)) {\n        int result = operation(a, b);\n        std::cout << "Result: " << result << std::endl;\n    }\n    \n    // Callback function 1: Addition\n    int add(int a, int b) {\n        return a + b;\n    }\n    \n    // Callback function 2: Subtraction\n    int subtract(int a, int b) {\n        return a - b;\n    }\n    \n    int main() {\n        int x = 5, y = 3;\n    \n        // Function pointers\n        int (*operationPtr)(int, int);\n    \n        // Assigning the address of the add() function to the function pointer\n        operationPtr = add;\n        performOperation(x, y, operationPtr);\n    \n        // Assigning the address of the subtract() function to the function pointer\n        operationPtr = subtract;\n        performOperation(x, y, operationPtr);\n    \n        return 0;\n  }\n  \n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-4",children:["In this example, we have a function called"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"performOperation()"})," ","that takes two integers and a function pointer as arguments. It performs an operation using the callback function pointed to by the function pointer."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-4",children:["We also have two callback functions:"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"add() and subtract()"})," ","These functions have the same signature as the function pointer, taking two integers as arguments and returning an integer."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4 px-4",children:["Inside the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main()"})," function, we declare a function pointer"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"operationPtr"})," ","that can point to functions with the signature",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(int, int) -< int."}),"We assign the address of the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"add()"})," function to operationPtr and call ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"performOperation()"})," to perform an addition operation. Then, we assign the address of the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"subtract()"})," function to operationPtr and call ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"performOperation()"})," again to perform a subtraction operation."]})]})]})]})})},tn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Function Error Handling:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Exception handling within functions"}),(0,$e.jsx)("li",{className:"pt-4",children:" Try-catch blocks"})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Function error handling, using try-catch blocks and exception handling, is a mechanism in programming that allows us to handle and manage errors or exceptional situations that may occur during the execution of a function. Let's explain exception handling, why it is used, how it works, and provide an easy example for better understanding."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"What is Exception Handling?"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Exception handling is a way to deal with errors or exceptional situations that can occur during the execution of a program. It provides a structured approach to handle these situations by using try-catch blocks. When an error or exception occurs within a try block, it can be caught and handled in the corresponding catch block."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Why is Exception Handling Used?"}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Exception handling is used for several reasons:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4 font-bold",children:"Error Management:"}),(0,$e.jsx)("p",{children:"It allows us to identify and handle errors or exceptional situations in a controlled and organized manner. This helps prevent unexpected program termination and enables graceful error recovery."}),(0,$e.jsx)("li",{className:"pt-4 font-bold",children:"Separation of Concerns:"}),(0,$e.jsx)("p",{children:"Exception handling separates the normal flow of code from error handling code. It makes the code more readable and maintains a clean structure by separating error-handling logic from the main logic of the program."}),(0,$e.jsx)("li",{className:"pt-4 font-bold",children:"Propagation:"}),(0,$e.jsx)("p",{children:"Exceptions can be propagated up the call stack, allowing higher-level functions to handle or further propagate the exception. This allows for centralized error handling at an appropriate level in the program."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"How to Use Exception Handling?"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To use exception handling, we follow these steps:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{children:"Place the code that may raise an exception inside a try block."}),(0,$e.jsx)("li",{children:'If an exception occurs, it is "thrown" using the throw keyword.'}),(0,$e.jsx)("li",{children:"Catch the thrown exception in a catch block, which specifies the type of exception to catch."}),(0,$e.jsx)("li",{children:"Handle the exception in the catch block."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a simple example in C++ to demonstrate the usage of exception handling:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n// Function to divide two numbers\ndouble divide(int dividend, int divisor) {\n    if (divisor == 0) {\n        throw "Division by zero error";\n    }\n    return static_cast<double>(dividend) / divisor;\n}\n\nint main() {\n    int a = 10, b = 0;\n\n    try {\n        // Call the divide function inside a try block\n        double result = divide(a, b);\n        std::cout << "Result: " << result << std::endl;\n    } catch (const char* error) {\n        // Catch the exception and handle the error\n        std::cout << "Error: " << error << std::endl;\n    }\n\n    return 0;\n}\n\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In this example, we have a function called divide() that takes two integers as arguments and returns the result of dividing the first number by the second number. Inside the function, we check if the divisor is zero. If it is, we throw an exception with the error message "Division by zero error" using the throw keyword.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we call the divide() function inside a try block. If the division operation encounters a division by zero error, it throws an exception. The catch block immediately following the try block catches the exception and handles the error. In this case, it prints the error message to the console."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By using exception handling, we can gracefully handle errors and exceptional situations that may occur during the execution of a function. It allows us to provide meaningful error messages, perform specific error handling tasks, and prevent the program from crashing unexpectedly. Exception handling promotes robustness and maintainability in our code."})]})})})},nn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Function Libraries:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Using functions from libraries"}),(0,$e.jsx)("li",{className:"pt-4",children:" Creating and using user-defined libraries"})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Function libraries are collections of pre-written functions that can be used in programming to perform specific tasks. Libraries provide a way to reuse code, promote modular programming, and simplify the development process. Let's explain how to use functions from libraries and how to create and use user-defined libraries with an easy example."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Using Functions from Libraries:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"When using functions from libraries, we typically follow these steps:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 text-justify",children:[(0,$e.jsx)("li",{className:"text-justify pt-4",children:"Include the library's header file(s) at the beginning of our program to gain access to the function declarations."}),(0,$e.jsx)("li",{children:"Call the functions from the library as needed in our code."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a simple example in C++ to demonstrate using functions from the math library:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To use exception handling, we follow these steps:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{children:"Place the code that may raise an exception inside a try block."}),(0,$e.jsx)("li",{children:'If an exception occurs, it is "thrown" using the throw keyword.'}),(0,$e.jsx)("li",{children:"Catch the thrown exception in a catch block, which specifies the type of exception to catch."}),(0,$e.jsx)("li",{children:"Handle the exception in the catch block."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a simple example in C++ to demonstrate the usage of exception handling:"}),(0,$e.jsx)(Gt,{children:'\n  int main() {\n    double x = 2.0;\n\n    // Call the sqrt() function from the math library to calculate the square root\n    double result = sqrt(x);\n\n    std::cout << "The square root of " << x << " is: " << result << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we include the [cmath] header file, which provides access to various mathematical functions, including the sqrt() function. We call the sqrt() function and pass the value x to calculate the square root. The result is then printed to the console."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By including the appropriate library header files, we can access and use functions from those libraries in our programs. Libraries are valuable resources as they provide a wide range of ready-to-use functions for specific tasks, saving us from writing the code from scratch."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Creating and Using User-Defined Libraries:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'We can also create our own libraries by organizing related functions into a separate file, commonly referred to as a "header file" or "module." Let\'s look at an example to understand how to create and use a user-defined library.'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Example:"}),(0,$e.jsx)("p",{children:"Suppose we want to create a library that provides functions for basic arithmetic operations. Here's how we can do it:"}),(0,$e.jsx)("p",{children:"Create a new header file, let's say arithmetic.h, and define the functions we want to include in the library. For this example, let's define add() and subtract() functions."}),(0,$e.jsx)(Gt,{children:"\n  // arithmetic.h\n\n#ifndef ARITHMETIC_H\n#define ARITHMETIC_H\n\nint add(int a, int b);\nint subtract(int a, int b);\n\n#endif\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Implement the functions in a separate source file, say arithmetic.cpp. "}),(0,$e.jsx)(Gt,{children:'\n  // arithmetic.cpp\n\n#include "arithmetic.h"\n\nint add(int a, int b) {\n    return a + b;\n}\n\nint subtract(int a, int b) {\n    return a - b;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3. In our main program, include the arithmetic.h header file and call the functions from the library"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include "arithmetic.h"\n  \n  int main() {\n      int x = 5, y = 3;\n  \n      // Call the functions from the user-defined arithmetic library\n      int sum = add(x, y);\n      int difference = subtract(x, y);\n  \n      std::cout << "Sum: " << sum << std::endl;\n      std::cout << "Difference: " << difference << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we create the arithmetic.h header file, which contains function declarations for add() and subtract(). The corresponding function definitions are implemented in the arithmetic.cpp file."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main program, we include the arithmetic.h header file and call the functions add() and subtract() from the user-defined library. We pass the values x and y to these functions and store the results in variables. Finally, we print the results to the console."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By creating and using user-defined libraries, we can organize our code, promote code reuse, and make our programs more modular. Libraries encapsulate related functions, making the code more manageable, maintainable, and reusable."})]})})})},an=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Multidimensional Arrays"}),(0,$e.jsx)("ul",{className:"list-disc px-10"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Multidimensional arrays are arrays that store elements in multiple dimensions or dimensions within dimensions. They allow us to represent data in a tabular or matrix-like structure. Let's explain multidimensional arrays, why they are used, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Why are Multidimensional Arrays Used? Multidimensional arrays are used to represent structured data that has multiple dimensions or dimensions within dimensions. They provide a way to organize and manipulate data in a tabular format. For example, a spreadsheet or a chessboard can be represented using a multidimensional array."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Understanding Multidimensional Arrays with a Real-Life Example: Imagine you have a chessboard, which is an 8x8 grid of squares. You can think of this grid as a two-dimensional array. Each square can be identified by its row and column coordinates. The multidimensional array provides an organized way to store and access the information of each square on the chessboard."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Demonstrating Multidimensional Arrays in C++: Let's consider a simple C++ example to demonstrate multidimensional arrays:"}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n\n  int main() {\n      // Creating a 2D array representing a 3x3 grid\n      int grid[3][3] = {\n          {1, 2, 3},\n          {4, 5, 6},\n          {7, 8, 9}\n      };\n  \n      // Accessing and printing the elements of the grid\n      std::cout << "Grid elements:" << std::endl;\n      for (int i = 0; i < 3; ++i) {\n          for (int j = 0; j < 3; ++j) {\n              std::cout << "Element at position (" << i << ", " << j << "): " << grid[i][j] << std::endl;\n          }\n      }\n  \n      return 0;\n  }\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we create a 2D array called grid representing a 3x3 grid. The array is initialized with the values 1 to 9, arranged in a tabular format."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To access individual elements of the grid, we use two sets of square brackets [][]. The first set corresponds to the row index, and the second set corresponds to the column index. In the nested for loop, we iterate over each row and column index to access and print the elements of the grid."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will display the elements of the grid along with their positions:"}),(0,$e.jsx)(Gt,{children:"\n    Grid elements:\n    Element at position (0, 0): 1\n    Element at position (0, 1): 2\n    Element at position (0, 2): 3\n    Element at position (1, 0): 4\n    Element at position (1, 1): 5\n    Element at position (1, 2): 6\n    Element at position (2, 0): 7\n    Element at position (2, 1): 8\n    Element at position (2, 2): 9\n    "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this real-life example, we can think of the grid array as a representation of a chessboard or any other tabular structure. Each element in the array represents a specific position on the grid, and we can access and manipulate individual elements by specifying their row and column indices."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Multidimensional arrays provide a way to store and organize data in a structured manner, especially when dealing with tabular or matrix-like data. They are widely used in various applications, such as games, image processing, and scientific computations, to represent and process multidimensional data."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Array Size and Length"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array size and length refer to the number of elements present in an array. The size represents the total capacity or the maximum number of elements an array can hold, while the length indicates the actual number of elements currently stored in the array. Let's explain array size and length, why they are important, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Why are Array Size and Length Important? Array size and length are important because they provide information about the capacity and the actual usage of an array. They help in managing and accessing the elements of an array correctly and prevent any unintended access beyond the valid range of indices."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Understanding Array Size and Length with a Real-Life Example: Imagine you have a tray that can hold a maximum of 10 cookies. The tray size represents the total capacity, while the length represents the number of cookies currently present in the tray. The tray size tells you how many cookies you can store in it, while the length tells you how many cookies are actually in the tray at a given time."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Demonstrating Array Size and Length in C++: Let's consider a simple C++ example to demonstrate array size and length."}),(0,$e.jsx)(Gt,{children:'\n    #include <iostream>\n\n    int main() {\n      int numbers[5] = {1, 2, 3, 4, 5};\n  \n      // Getting the size of the array\n      int size = sizeof(numbers) / sizeof(numbers[0]);\n  \n      // Printing the size and length of the array\n      std::cout << "Array size: " << size << std::endl;\n      std::cout << "Array length: " << size << std::endl;\n  \n      return 0;\n    }\n    \n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we have an array called numbers that stores five integer values."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To determine the size of the array, we use the sizeof operator, which gives the total number of bytes occupied by the array. We divide this size by the size of a single element (sizeof(numbers[0]) to get the number of elements in the array. This calculation gives us the size of the array."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The size and length of the array will be the same because all five elements are initialized in the array. We print both the size and length of the array to the console."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will display the size and length of the array, which is 5 in this case:"}),(0,$e.jsx)(Gt,{children:"\n    Array size: 5\n    Array length: 5\n  \n    "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this real-life example, we can think of the numbers array as a tray that can hold a maximum of five integers. The size represents the maximum capacity of the tray, and the length represents the number of integers currently present in the tray."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array size and length are important because they help us understand the capacity and the actual usage of an array. By knowing the size and length, we can ensure that we access only the valid elements within the array and avoid any unintended access beyond its boundaries."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Array Traversal"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array traversal refers to the process of visiting or accessing each element in an array, one by one, in order to perform some operation or retrieve information. It involves iterating over the array and processing each element. Let's explain array traversal, why it is important, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Why is Array Traversal Important? Array traversal is important because it allows us to perform operations on each element of an array. It enables us to examine or modify the data stored in the array, calculate aggregate values, search for specific elements, or perform any other tasks that involve processing each element."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Understanding Array Traversal with a Real-Life Example: Imagine you have a box containing 10 different toys. You want to inspect each toy and count how many of them are cars. To achieve this, you will pick up each toy from the box, examine it, and keep track of the count. This process of inspecting and counting each toy is similar to array traversal."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Demonstrating Array Traversal in C++: Let's consider a simple C++ example to demonstrate array traversal:"}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n\n  int main() {\n      // Array of toy cars\n      std::string toys[5] = {"car", "ball", "car", "puzzle", "car"};\n  \n      // Counting the number of cars in the array\n      int carCount = 0;\n  \n      for (int i = 0; i < 5; ++i) {\n          if (toys[i] == "car") {\n              carCount++;\n          }\n      }\n  \n      // Printing the count of cars\n      std::cout << "Number of cars: " << carCount << std::endl;\n  \n      return 0;\n  }\n  \n  \n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we have an array called toys that stores the names of different toys. We want to count the number of toy cars present in the array."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We start by initializing a variable carCount to 0, which will keep track of the number of cars found."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Next, we use a for loop to iterate over each element of the array. The loop starts from 0 and goes up to 4 (the size of the array minus one) because arrays in most programming languages are zero-indexed."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'Within the loop, we compare each element with the string "car". If the current element is equal to "car", we increment the carCount variable.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"After the loop, we print the count of cars to the console."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will display the number of cars found in the array, which is 3 in this case:"}),(0,$e.jsx)(Gt,{children:"\n    Number of cars: 3\n    "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this real-life example, we can imagine the toys array as a box of toys, and the array traversal process is similar to inspecting and counting the toys in the box. By iterating over the array elements one by one, we examine each toy and count the number of cars found"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array traversal allows us to process each element of an array individually, enabling us to perform operations, calculations, or searches on the array data. It is an essential technique in programming for working with arrays effectively."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Array Manipulation"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array manipulation refers to the process of modifying the elements of an array, such as changing their values, rearranging their order, or adding/removing elements. It involves performing various operations on the array to achieve a desired outcome. Let's explain array manipulation, why it is important, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Why is Array Manipulation Important? Array manipulation is important because it allows us to modify and transform the data stored in an array according to our requirements. It enables us to update values, reorder elements,"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"insert or remove items, or perform any other operations that involve changing the array's content."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"insert or remove items, or perform any other operations that involve changing the array's content."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Understanding Array Manipulation with a Real-Life Example: Imagine you have a basket of fruits, and you want to sort them in alphabetical order. To achieve this, you would rearrange the fruits based on their names, placing them in the desired order. This process of rearranging the fruits is similar to array manipulation."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Demonstrating Array Manipulation in C++: Let's consider a simple C++ example to demonstrate array manipulation:"}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n    #include <algorithm>\n\n    int main() {\n    // Array of fruits\n    std::string fruits[5] = {"banana", "apple", "orange", "grape", "kiwi"};\n\n    // Sorting the array in alphabetical order\n    std::sort(fruits, fruits + 5);\n\n    // Printing the sorted array\n    std::cout << "Sorted fruits:" << std::endl;\n    for (int i = 0; i < 5; ++i) {\n        std::cout << fruits[i] << std::endl;\n    }\n\n    return 0;\n  }\n\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we have an array called fruits that stores the names of different fruits. We want to sort the array in alphabetical order."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To achieve this, we use the std::sort function from the C++ Standard Library. This function takes the starting and ending iterators of the array and rearranges the elements in ascending order."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"After sorting the array, we use a for loop to iterate over each element and print them in the sorted order."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will display the sorted fruits:"}),(0,$e.jsx)(Gt,{children:"Sorted fruits:\n      apple\n      banana\n      grape\n      kiwi\n      orange\n\n      "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this real-life example, we can imagine the fruits array as a basket of fruits, and the array manipulation process is similar to rearranging the fruits in alphabetical order. By applying the sorting operation on the array, we change the order of the fruits to achieve the desired outcome."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array manipulation allows us to modify the content of an array according to our needs. It gives us the flexibility to update values, reorder elements, insert or remove items, or perform any other operations required to transform the array. It is a fundamental concept in programming and enables us to work with arrays effectively."})]})})})},sn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Passing Arrays to Functions"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Passing arrays to functions involves passing the array as a parameter to a function so that the function can work with the array's elements. It allows us to perform operations on arrays within functions and manipulate the data stored in them. Let's explain how to pass arrays to functions, why it is useful, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Why are Arrays Used?"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Why is Passing Arrays to Functions Useful?"})," Passing arrays to functions allows us to encapsulate specific operations or logic into separate functions. It promotes code modularity, reusability, and readability. By passing arrays to functions, we can apply the same operations to different arrays without duplicating code."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Understanding Passing Arrays to Functions with a Real-Life Example:"})," Imagine you have a group of friends, and you want to calculate the average age of the group. To do this, you can write a function that accepts an array of ages as input, calculates the average, and returns the result. This way, you can reuse the same function to calculate the average age of different groups of friends."]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-3",children:"Demonstrating Passing Arrays to Functions in C++:"}),(0,$e.jsx)("p",{children:"Let's consider a simple C++ example to demonstrate passing arrays to functions:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n  // Function to calculate the average age\n  double calculateAverageAge(int ages[], int size) {\n      int sum = 0;\n  \n      for (int i = 0; i < size; ++i) {\n          sum += ages[i];\n      }\n  \n      return static_cast<double>(sum) / size;\n  }\n  \n  int main() {\n      int group1[] = {20, 25, 22, 23, 28};\n      int group2[] = {18, 19, 20, 22, 21, 24, 23};\n  \n      // Calling the function for group1\n      double avg1 = calculateAverageAge(group1, 5);\n      std::cout << "Average age of group1: " << avg1 << std::endl;\n      // Calling the function for group2\n      double avg2 = calculateAverageAge(group2, 7);\n      std::cout << "Average age of group2: " << avg2 << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, we have a function called calculateAverageAge that accepts an array of ages and its size as parameters. It calculates the average age of the group and returns the result."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In the main function, we have two arrays group1 and group2 representing different groups of friends and their ages."}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("p",{children:"We call the calculateAverageAge function twice, once for group1 and once for group2, passing the array and its size as arguments. The function calculates the average age based on the provided array and returns the result."}),(0,$e.jsx)("br",{}),"   ",(0,$e.jsx)("p",{children:"We store the average ages in variables avg1 and avg2 and print them to the console."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output will display the average ages of the groups:"}),(0,$e.jsx)(Gt,{children:"\nAverage age of group1: 23.6\nAverage age of group2: 21.5714\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this real-life example, we can think of the calculateAverageAge function as a calculator that calculates the average age of a group of friends. By passing different arrays of ages to this function, we can calculate the average age for different groups without duplicating code."}),(0,$e.jsx)("br",{}),"    ",(0,$e.jsx)("p",{children:"Passing arrays to functions allows us to encapsulate specific operations on arrays into separate functions, promoting code modularity and reusability. It helps us work with arrays more efficiently and makes our code easier to understand and maintain."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Returning Arrays from Functions"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Returning arrays from functions involves returning an array as the result of a function. It allows us to generate or transform arrays within functions and use the resulting array in other parts of our code. Let's explain how to return arrays from functions, why it is useful, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Why is Returning Arrays from Functions Useful?"})," Returning arrays from functions allows us to encapsulate complex array generation or transformation logic into separate functions. It enables us to generate arrays dynamically, based on input parameters or calculations, and use the resulting arrays in other parts of our code."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Understanding Returning Arrays from Functions with a Real-Life Example:"}),"Imagine you have a store that sells different types of candies, and you want to generate an array of candies based on a specific criterion. To do this, you can write a function that takes the desired criterion as input, generates an array of candies meeting that criterion, and returns the result. This way, you can use the returned array to display the available candies to customers."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's consider a simple C++ example to demonstrate returning arrays from functions: "}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n// Function to generate an array of even numbers\n    int* generateEvenNumbers(int size) {\n    int* evenNumbers = new int[size];\n\n    for (int i = 0; i < size; ++i) {\n        evenNumbers[i] = 2 * (i + 1);\n    }\n\n    return evenNumbers;\n}\n\nint main() {\n    int size = 5;\n\n    // Calling the function to generate an array of even numbers\n    int* evenArray = generateEvenNumbers(size);\n\n    // Printing the generated array\n    std::cout << "Even numbers:" << std::endl;\n    for (int i = 0; i < size; ++i) {\n        std::cout << evenArray[i] << " ";\n    }\n    std::cout << std::endl;\n\n    // Remember to delete the dynamically allocated array\n    delete[] evenArray;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("p",{children:"In this example, we have a function called generateEvenNumbers that takes the desired size of the array as input. It dynamically allocates an array of integers using the new keyword and fills it with even numbers."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In the main function, we call the generateEvenNumbers function to generate an array of even numbers. We pass the desired size as an argument."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"We store the returned array in a pointer called evenArray and then iterate over the array to print its elements.After using the array, it's important to deallocate the memory by using the delete[] operator to avoid memory leaks."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output will display the generated array of even numbers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n  Even numbers:\n  2 4 6 8 10\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this real-life example, we can think of the generateEvenNumbers function as a candy factory that generates an array of even numbers. By calling this function with a specific size, we can dynamically generate an array of even numbers and use it to display available candies to customers."}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("p",{children:"Returning arrays from functions allows us to generate or transform arrays within functions and use the resulting arrays in other parts of our code. It provides flexibility, modularity, and reusability by encapsulating array-related operations in separate functions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array Sorting"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array sorting refers to the process of rearranging the elements of an array in a specific order, such as ascending or descending. It allows us to organize the data in the array so that it can be easily searched, accessed, or displayed. Let's explain array sorting, why it is useful in real life, provide a simple example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Why Array Sorting"})," Array sorting is useful in real life because it helps us organize and arrange data in a meaningful way. It allows us to find specific elements quickly, identify patterns or trends, and present the data in a more structured manner. Sorting is commonly used in various applications, such as organizing lists, ranking items, or displaying data in a user-friendly manner."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Understanding Array Sorting with a Real-Life Example:"})," Understanding Array Sorting with a Real-Life Example: Imagine you have a deck of cards that are randomly arranged. If you want to play a card game, it would be difficult to find specific cards or follow the game rules with the cards in a random order. By sorting the cards, you can group them by suit and rank, making it easier to find the cards you need during the game"]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Let's consider a simple C++ example to demonstrate array sorting:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <algorithm>\n\nint main() {\n    int numbers[] = {5, 2, 9, 1, 3};\n\n    // Sorting the array in ascending order\n    std::sort(numbers, numbers + 5);\n\n    // Printing the sorted array\n    std::cout << "Sorted numbers:" << std::endl;\n    for (int i = 0; i < 5; ++i) {\n        std::cout << numbers[i] << " ";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, we have an array called numbers that contains a random order of integers."}),(0,$e.jsx)("p",{children:"To sort the array, we use the std::sort function from the C++ Standard Library. This function takes the starting and ending iterators of the array and rearranges the elements in ascending order."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"After sorting the array, we use a for loop to iterate over each element and print them in the sorted order.The output will display the sorted numbers:"}),(0,$e.jsx)(Gt,{children:"\nSorted numbers:\n1 2 3 5 9\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this real-life example, we can think of the array as a deck of cards, and sorting the array is similar to arranging the cards in a specific order. By sorting the array, we make it easier to find and use specific elements, just like arranging the deck of cards helps in playing card games more efficiently."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Searching in Arrays"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" Imagine you have a box of different colored marbles, and you want to find a specific marble in the box. The marbles are arranged in a line, and each marble has a different color. Let's write a C++ code to simulate this scenario:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n\nint main() {\n    // Array of marbles\n    std::string marbles[] = {"red", "blue", "green", "yellow", "purple"};\n\n    // Number of marbles in the array\n    int numMarbles = sizeof(marbles) / sizeof(marbles[0]);\n\n    // Marble to search for\n    std::string targetMarble = "green";\n\n    // Variable to keep track of the found marble index\n    int foundIndex = -1;\n\n    // Searching for the marble\n    for (int i = 0; i < numMarbles; i++) {\n        if (marbles[i] == targetMarble) {\n            foundIndex = i;\n            break;  // Exit the loop once the marble is found\n        }\n    }\n\n    // Check if the marble was found or not\n    if (foundIndex != -1) {\n        std::cout << "The marble "" << targetMarble << "" was found at index " << foundIndex << std::endl;\n    } else {\n        std::cout << "The marble "" << targetMarble << "" was not found in the box." << std::endl;\n    }\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, the marbles array represents the box of marbles, where each element of the array corresponds to a different colored marble. We use the sizeof operator to determine the number of marbles in the array by dividing the total size of the array by the size of a single marble."}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("p",{children:"The targetMarble variable represents the marble we want to find in the box. In this case, we are searching for the green marble."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"We initialize the foundIndex variable to -1, indicating that the marble has not been found yet. Then, we loop through each marble in the array and compare it with the target marble using the equality operator ==. If a match is found, we update the foundIndex variable with the index of the found marble and exit the loop using the break statement."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Finally, we check the value of foundIndex to determine whether the marble was found or not. If the foundIndex is not equal to -1, we display a message indicating the index where the marble was found. Otherwise, we display a message indicating that the marble was not found in the box."})]})})})},rn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Dynamic Array "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"A dynamic array is an array whose size can be determined at runtime. In other words, it allows us to create an array whose length can change during the execution of a program. This is useful when we don't know the exact size of the array beforehand or when we need to resize the array dynamically."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates how to use dynamic arrays in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\nint main() {\n    // Ask the user for the size of the array\n    int size;\n    std::cout << "Enter the size of the array: ";\n    std::cin >> size;\n\n    // Create a dynamic array\n    int* dynamicArray = new int[size];\n\n    // Assign values to the array\n    for (int i = 0; i < size; i++) {\n        dynamicArray[i] = i * 2;\n    }\n\n    // Print the array elements\n    std::cout << "Array elements: ";\n    for (int i = 0; i < size; i++) {\n        std::cout << dynamicArray[i] << " ";\n    }\n    std::cout << std::endl;\n\n    // Release the dynamically allocated memory\n    delete[] dynamicArray;\n\n    return 0;\n}\n '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, we start by asking the user for the size of the array they want to create. The user enters a value, and we store it in the size variable."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Then, we create a dynamic array using the new operator. The new operator allocates memory for the array at runtime, based on the size specified by the user. The type of the dynamic array is int*, which means it's an array of integers."}),(0,$e.jsx)("br",{}),"  ",(0,$e.jsx)("p",{children:"Next, we use a loop to assign values to each element of the dynamic array. In this case, we assign values that are multiples of 2. For example, if the user enters a size of 5, the dynamic array will contain the elements: [0, 2, 4, 6, 8]."}),(0,$e.jsx)("p",{children:"After assigning values to the dynamic array, we loop through the elements again to print them out. Finally, it's important to release the memory allocated by the dynamic array using the delete[] operator. This ensures that the memory is freed up and can be used for other purposes."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"This example introduces the concept of dynamic arrays, where the size is determined at runtime. It demonstrates how to create, assign values to, and access the elements of a dynamic array. Remember to always release the memory using delete[] to avoid memory leaks."})]})})})},on=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array Pointer"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"An array of pointers is an array in which each element is a pointer to another data type. This concept allows us to create an array that can hold multiple pointers, and each pointer can point to a different data object. Let's explain this concept in detail using a simple example in C++."}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\nint main() {\n    // Creating an array of pointers to integers\n    int* array[3];\n\n    // Creating three integer variables\n    int a = 1;\n    int b = 2;\n    int c = 3;\n\n    // Assigning the addresses of the integer variables to the array of pointers\n    array[0] = &a;\n    array[1] = &b;\n    array[2] = &c;\n\n    // Accessing and printing the values using the array of pointers\n    for (int i = 0; i < 3; i++) {\n        std::cout << "Value at index " << i << ": " << *array[i] << std::endl;\n    }\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, we create an array of pointers to integers using the syntax int* array[3]. This means we are creating an array named array that can hold three pointers to integers."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Next, we create three integer variables named a, b, and c. These variables store integer values."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"We then assign the addresses of these integer variables to the elements of the array of pointers using the assignment operator = and the address-of operator &. This allows each element of the array to point to a different integer variable."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Finally, we use a loop to access and print the values using the array of pointers. We use the dereference operator * to retrieve the value stored at the memory location pointed to by each pointer."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\nValue at index 0: 1\nValue at index 1: 2\nValue at index 2: 3\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"This example demonstrates how an array of pointers can be used to store and access different variables. Each element of the array is a pointer that points to a specific data object, in this case, an integer. By dereferencing the pointers, we can retrieve the values stored in the respective variables."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Strings as character array in C++"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, strings can be treated as character arrays. This means that you can access individual characters of a string using array notation and perform operations on them, just like you would with an array of characters. Let's explain this concept with a simple example:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n\nint main() {\n    // Creating a string\n    std::string myString = "Hello";\n\n    // Accessing individual characters using array notation\n    for (int i = 0; i < myString.length(); i++) {\n        std::cout << "Character at index " << i << ": " << myString[i] << std::endl;\n    }\n\n    // Modifying a character in the string\n    myString[0] = \'J\';\n    std::cout << "Modified string: " << myString << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:'In this example, we first create a string named `myString` with the value "Hello".'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"We can access individual characters of the string using array notation, where `myString[i]` represents the character at index `i`. In the `for` loop, we iterate over each character of the string and print it along with its index."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output of the first loop will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Finally, we use a loop to access and print the values using the array of pointers. We use the dereference operator * to retrieve the value stored at the memory location pointed to by each pointer."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\nCharacter at index 0: H\nCharacter at index 1: e\nCharacter at index 2: l\nCharacter at index 3: l\nCharacter at index 4: o\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"This demonstrates that we can treat the string `myString` as an array of characters and access individual characters using array notation."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"We can also modify a character in the string by assigning a new value to `myString[i]`. In the example, we change the first character from 'H' to 'J' by assigning `'J'` to `myString[0]`. After the modification, we print the updated string."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output of the second `cout` statement will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\nModified string: Jello\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"This example illustrates how strings in C++ can be treated as character arrays, allowing us to access and modify individual characters using array notation."})]})})})},ln=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array Libraries in C++"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In C++, there are several libraries that provide useful functionality for working with arrays. These libraries offer various operations such as sorting, searching, and manipulating array elements. Let's explore some commonly used array libraries in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Aligorithm:"}),(0,$e.jsx)("p",{children:"This library provides a collection of functions for performing operations on arrays. Some commonly used functions include:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::sort():"}),(0,$e.jsx)("p",{children:" Sorts the elements of an array in ascending order."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::binary_search"}),(0,$e.jsx)("p",{children:"Checks if a given value exists in a sorted array using binary search."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::find():"}),(0,$e.jsx)("p",{children:" Searches for a specific value in an array and returns an iterator pointing to its first occurrence."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::max_element(:)"}),(0,$e.jsx)("p",{children:"Finds the maximum element in an array."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::min_element():"}),(0,$e.jsx)("p",{children:"Finds the minimum element in an array."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. numeric:"}),(0,$e.jsx)("p",{children:"This library provides functions for numeric operations on arrays. Some commonly used functions include:"}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::accumulate(): "}),(0,$e.jsx)("p",{children:"Calculates the sum of all elements in an array."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::inner_product():"}),(0,$e.jsx)("p",{children:" Computes the dot product of two arrays."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::partial_sum():"})," ",(0,$e.jsx)("p",{children:"Calculates the partial sum of elements in an array."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. cstring:"})," ",(0,$e.jsx)("p",{children:"This library provides functions for working with C-style character arrays (null-terminated strings). Some commonly used functions include:"}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::strlen():"}),(0,$e.jsx)("p",{children:" Calculates the length of a string."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::strcpy():"})," ",(0,$e.jsx)("p",{children:"Copies one string to another."}),(0,$e.jsx)("span",{className:"font-semibold",children:"std::strcmp():"}),(0,$e.jsx)("p",{children:"Compares two strings lexicographically."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Array: "})," ",(0,$e.jsx)("p",{children:"This library provides a container class named std::array that represents a fixed-size array with various utility functions. It offers operations such as bounds checking, size determination, and iterators."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Vector:"})," ",(0,$e.jsx)("p",{children:"Although not strictly an array library, the 'vector' library provides a dynamic array-like container class named std::vector. It offers dynamic resizing, easy element insertion/deletion, and a wide range of member functions for array-like operations."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"These are just a few examples of array libraries in C++. Depending on your specific requirements, you may find other libraries or functions that suit your needs. Remember to include the appropriate header files (#include) to access the functionalities provided by these libraries."})]})})})},cn=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsx)("div",{className:"p-4 text-md text-sm",children:(0,$e.jsxs)("section",{children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md bg-blue-400 w-full",children:"1. Introduction to Strings:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"What are strings?"}),(0,$e.jsx)("li",{className:"pt-4",children:"Differences between C-style strings and C++ strings."}),(0,$e.jsx)("li",{className:"pt-4",children:"Null-terminated strings vs. C++ std::string."})]})]})}),(0,$e.jsxs)("div",{className:"p-4 text-md text-sm",children:[(0,$e.jsx)("p",{className:"text-justify pt-2 text-lg font-bold",children:"What are strings?"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Strings are sequences of characters that represent text in programming languages. They are used to store and manipulate textual data such as words, sentences, or even entire documents. Strings are an essential data type in many programming languages, including C and C++."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"pt-2 text-lg font-bold",children:"Differences between C-style strings and C++ strings:"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("ol",{className:"list-number px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4 font-bold",children:"1. C-style strings:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"C-style strings are arrays of characters terminated by a null character ('\\0') to indicate the end of the string."}),(0,$e.jsx)("li",{className:"pt-4",children:"They are represented using character arrays in C."}),(0,$e.jsx)("li",{className:"pt-4",children:"C-style strings require manual memory management, and their length is determined by the presence of the null character."}),(0,$e.jsx)("li",{className:"pt-4",children:"C-style strings provide basic functionality through library functions like strlen(), strcpy(), strcat(), etc."}),(0,$e.jsx)("li",{className:"pt-4",children:'Example: char name[] = "John";'})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("li",{className:"text-justify pt-4 font-bold",children:"2. C++ strings (std::string):"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"C++ strings are a part of the Standard Library and provide a more convenient and safer way to handle strings."}),(0,$e.jsx)("li",{className:"pt-4",children:"They are represented by the std::string class in C++."}),(0,$e.jsx)("li",{className:"pt-4",children:"C++ strings automatically manage memory and adjust their size dynamically as needed."}),(0,$e.jsx)("li",{className:"pt-4",children:"C++ strings provide a rich set of member functions to manipulate and access strings, making string operations more convenient."}),(0,$e.jsx)("li",{className:"pt-4",children:'Example: std::string name = "John";'})]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"pt-2 text-lg font-bold",children:"Null-terminated strings vs. C++ std::string:"}),(0,$e.jsxs)("ol",{className:"list-number px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"text-justify pt-4 font-bold",children:"1. Null-terminated strings:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Null-terminated strings are a convention used in C to represent strings."}),(0,$e.jsx)("li",{className:"pt-4",children:"They require a null character ('\\0') at the end to mark the string's termination."}),(0,$e.jsx)("li",{className:"pt-4",children:"Manipulating null-terminated strings can be error-prone and requires careful handling to avoid buffer overflows or memory access issues."}),(0,$e.jsx)("li",{className:"pt-4",children:"Null-terminated strings have limited functionality and rely on library functions for most string operations."})]}),(0,$e.jsx)("li",{className:"pt-2 font-bold",children:"2. C++ std::string:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"C++ std::string is a class that encapsulates strings and provides a higher level of abstraction."}),(0,$e.jsx)("li",{className:"pt-4",children:"std::string automatically manages the memory and adjusts its size dynamically."}),(0,$e.jsx)("li",{className:"pt-4",children:"It provides a wide range of member functions for efficient string manipulation, concatenation, comparison, searching, and more."}),(0,$e.jsx)("li",{className:"pt-4",children:"std::string ensures safer and easier string handling with less risk of errors or vulnerabilities."}),(0,$e.jsx)("li",{className:"pt-4",children:"It supports operator overloading, allowing convenient string concatenation using the '+' operator."}),(0,$e.jsx)("li",{className:"pt-4",children:"C++ strings can be easily converted to null-terminated strings when needed using the c_str() member function."})]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In summary, C-style strings require manual memory management and are terminated by a null character, while C++ std::string is a class that provides automatic memory management, dynamic resizing, and a rich set of member functions for string manipulation. C++ strings offer more convenience, safety, and functionality compared to traditional null-terminated strings."})]})]})},dn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"String Operations:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Length calculation using length() or size() function:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The length() and size() functions can be used interchangeably to determine the length of a string, i.e., the number of characters it contains."}),(0,$e.jsx)("p",{children:"Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string myString = "Hello";\n    int length = myString.length();\n    std::cout << "Length of the string: " << length << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The output will be: "Length of the string: 5"'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In this example, the length() function is used to calculate the length of the string myString."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Accessing individual characters using indexing:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In C++, you can access individual characters of a string using indexing, similar to an array."}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string myString = "Hello";\n    char firstChar = myString[0];\n    std::cout << "First character: " << firstChar << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The output will be: "First character: H"'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In this example, the character at index 0 of the string myString is accessed using the indexing operator []."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"String concatenation using the + operator or append() function:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To concatenate (join) two strings together, you can use the + operator or the append() function."}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string str1 = "Hello";\n    std::string str2 = " World";\n    std::string result = str1 + str2;\n    std::cout << "Concatenated string: " << result << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The output will be: "Concatenated string: Hello World"'}),(0,$e.jsx)("p",{children:"In this example, the + operator is used to concatenate str1 and str2 into the result string."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"String comparison using relational operators or compare() function: "}),(0,$e.jsx)("p",{children:"You can compare strings using relational operators or the compare() function. "}),(0,$e.jsx)("p",{children:" Here is an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string str1 = "apple";\n    std::string str2 = "banana";\n    int result = str1.compare(str2);\n    if (result == 0) {\n        std::cout << "Strings are equal" << std::endl;\n    } else if (result < 0) {\n        std::cout << "str1 is less than str2" << std::endl;\n    } else {\n        std::cout << "str1 is greater than str2" << std::endl;\n    }\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The output will be: "str1 is less than str2"'}),(0,$e.jsx)("p",{children:" In this example, the compare() function is used to compare str1 and str2. The function returns a value less than 0 if str1 is lexicographically smaller than str2, 0 if they are equal, and a value greater than 0 if str1 is lexicographically greater than str2."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"These examples demonstrate some common operations on strings in C++."})]})})})},un=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"String Manipulations:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Extracting substrings using substr() function:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The substr() function allows you to extract a substring from a given string. It takes two parameters: the starting index and the length of the substring."}),(0,$e.jsx)("p",{children:"Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <string>\n  \n  int main() {\n      std::string myString = "Hello, World!";\n      std::string subString = myString.substr(7, 5);\n      std::cout << "Substring: " << subString << std::endl;\n      return 0;\n  }  \n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The output will be: "Substring: World"'}),(0,$e.jsx)("p",{children:"In this example, the substr() function is used to extract a substring starting from index 7 with a length of 5 characters."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Replacing characters or substrings using replace() function:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The replace() function allows you to replace characters or substrings within a string. It takes three parameters: the starting index, the length of the portion to be replaced, and the replacement string"}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string myString = "Hello, World!";\n    myString.replace(7, 5, "Universe");\n    std::cout << "Modified string: " << myString << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The output will be: "Modified string: Hello, Universe!".'}),(0,$e.jsx)("p",{children:'In this example, the replace() function is used to replace the substring "World" starting from index 7 with the string "Universe".'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Converting case with tolower() and toupper() functions:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The tolower() and toupper() functions allow you to convert the case of characters within a string."}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n#include <cctype> // Include the cctype library for tolower() and toupper()\n\nint main() {\n    std::string myString = "Hello, World!";\n    for (char& c : myString) {\n        c = std::tolower(c); // Convert each character to lowercase\n    }\n    std::cout << "Lowercase string: " << myString << std::endl;\n\n    for (char& c : myString) {\n        c = std::toupper(c); // Convert each character to uppercase\n    }\n    std::cout << "Uppercase string: " << myString << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The output will be:",(0,$e.jsx)("br",{}),'"Lowercase string: hello, world!" ',(0,$e.jsx)("br",{}),'"Uppercase string: HELLO, WORLD!"']}),(0,$e.jsx)("p",{children:"In this example, the tolower() function is used to convert each character of the string to lowercase, and the toupper() function is used to convert each character to uppercase."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Removing leading/trailing whitespaces using erase() and find_first_not_of() functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"To remove leading and trailing whitespaces from a string, you can use the erase() function along with the find_first_not_of() function. "}),(0,$e.jsx)("p",{children:" Here is an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string myString = "   Hello, World!   ";\n    myString.erase(0, myString.find_first_not_of(" "));\n    myString.erase(myString.find_last_not_of(" ") + 1);\n    std::cout << "Trimmed string: " << myString << std::endl\n  '})]})})})},pn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"String Conversion:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Converting strings to numeric types using stoi(), stol(), stof(), etc. :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"C++ provides several functions to convert strings to numeric types. Here are a few commonly used functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:" stoi:"}),(0,$e.jsx)("p",{children:" Converts a string to an integer (int)."}),(0,$e.jsx)("span",{className:"font-semibold",children:" stol:"}),(0,$e.jsx)("p",{children:" Converts a string to a long integer (long)."}),(0,$e.jsx)("span",{className:"font-semibold",children:" stof:"}),(0,$e.jsx)("p",{children:" Converts a string to a floating-point number (float)."}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    std::string str1 = "123";\n    std::string str2 = "3.14";\n\n    int intValue = std::stoi(str1);\n    long longValue = std::stol(str1);\n    float floatValue = std::stof(str2);\n\n    std::cout << "Integer value: " << intValue << std::endl;\n    std::cout << "Long value: " << longValue << std::endl;\n    std::cout << "Float value: " << floatValue << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The output will be:",(0,$e.jsx)("br",{}),'"Integer value: 123"',(0,$e.jsx)("br",{}),'"Long value: 123"',(0,$e.jsx)("br",{}),'"Float value: 3.14"']}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, the stoi(), stol(), and stof() functions are used to convert the strings str1 and str2 to different numeric types."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Converting numeric types to strings using to_string() function:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The to_string() function converts numeric types to strings."}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\nint main() {\n    int intValue = 123;\n    float floatValue = 3.14;\n\n    std::string str1 = std::to_string(intValue);\n    std::string str2 = std::to_string(floatValue);\n\n    std::cout << "Integer string: " << str1 << std::endl;\n    std::cout << "Float string: " << str2 << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The output will be: ",(0,$e.jsx)("br",{}),'"Integer string: 123"',(0,$e.jsx)("br",{}),'"Float string: 3.140000"']}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, the to_string() function is used to convert the variables intValue and floatValue to strings."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Converting strings to uppercase or lowercase using algorithms and loops:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To convert a string to uppercase or lowercase, you can use algorithms like std::transform() or loops."}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n#include <algorithm>\n\nint main() {\n    std::string myString = "Hello, World!";\n\n    // Convert to uppercase using std::transform()\n    std::transform(myString.begin(), myString.end(), myString.begin(), ::toupper);\n    std::cout << "Uppercase string: " << myString << std::endl;\n\n    // Convert to lowercase using a loop\n    for (char& c : myString) {\n        c = std::tolower(c);\n    }\n    std::cout << "Lowercase string: " << myString << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The output will be:",(0,$e.jsx)("br",{}),'"Uppercase string: HELLO, WORLD!" ',(0,$e.jsx)("br",{}),'"Lowercase string: hello, world!"']}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, std::transform() is used to convert the string to uppercase, and a loop is used to convert the string to lowercase."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"These examples demonstrate various string conversion operations in C++. Remember to include the necessary header files (#include) to access the functions used in these examples."})]})})})},mn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"String Parsing and Tokenization:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Splitting strings into tokens using getline() or istringstream with delimiters:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"One way to split a string into tokens is by using the getline() function or istringstream along with delimiters. "}),(0,$e.jsx)("p",{children:"Here's an example using getline():"}),(0,$e.jsx)(Gt,{children:"\n  #include <iostream>\n  #include <string>\n  #include <vector>\n  #include <sstream>\n  \n  int main() {\n      std::string myString = \"Hello,World,How,Are,You\";\n      std::vector<std::string> tokens;\n      std::stringstream ss(myString);\n      std::string token;\n  \n      while (getline(ss, token, ',')) {\n          tokens.push_back(token);\n      }\n  \n      // Printing the tokens\n      for (const auto& t : tokens) {\n          std::cout << t << std::endl;\n      }\n  \n      return 0;\n  }\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\n  Hello\n  World\n  How\n  Are\n  You \n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, the string myString is split into tokens using the getline() function with the delimiter ,. Each token is stored in a vector called tokens."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Extracting specific tokens using stringstream and getline():"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"If you want to extract specific tokens from a string, you can use stringstream and getline() together."}),(0,$e.jsx)("p",{children:" Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <string>\n  #include <sstream>\n  \n  int main() {\n      std::string myString = "Hello World How Are You";\n      std::stringstream ss(myString);\n      std::string token;\n  \n      getline(ss, token, \' \'); // Extract the first token\n      std::cout << "First token: " << token << std::endl;\n  \n      getline(ss, token, \' \'); // Extract the second token\n      std::cout << "Second token: " << token << std::endl;\n  \n      return 0;\n  }  \n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:" The output will be:"}),(0,$e.jsx)(Gt,{children:'\n"First token: Hello"\n"Second token: World"\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, the stringstream object ss is created from the string myString. getline() is used multiple times to extract specific tokens based on the delimiter (space in this case)."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"These examples demonstrate string parsing and tokenization in C++. You can customize the delimiters based on your requirements and use the extracted tokens as needed."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Regular Expressions with Strings:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Introduction to regular expressions:"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Regular expressions provide a powerful way to search, match, and manipulate text based on patterns. They consist of a sequence of characters that define a search pattern, which can be used to match against strings.",(0,$e.jsx)("br",{}),"In C++, you can work with regular expressions using the [regex] library, which provides classes and functions to handle regular expressions.",(0,$e.jsx)("br",{}),"Here's an example that demonstrates the usage of regular expressions for pattern matching and validation:"]}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <regex>\n#include <string>\n\nint main() {\n    std::string myString = "Hello, World!";\n    std::regex pattern("Hello");\n\n    // Pattern matching using regex_match()\n    if (std::regex_match(myString, pattern)) {\n        std::cout << "Pattern matched!" << std::endl;\n    } else {\n        std::cout << "Pattern not matched." << std::endl;\n    }\n\n    // Pattern validation using regex_search()\n    if (std::regex_search(myString, pattern)) {\n        std::cout << "Pattern found!" << std::endl;\n    } else {\n        std::cout << "Pattern not found." << std::endl;\n    }\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:" The output will be:"}),(0,$e.jsx)(Gt,{children:'\n"Pattern matched!"\n"Pattern found!"\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In this example, the string myString is matched against the pattern "Hello" using std::regex_match(). Since the string starts with "Hello," the pattern is matched. Similarly, std::regex_search() is used to check if the pattern is found within the string.'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Regular expressions support a wide range of patterns and operations, such as:"}),(0,$e.jsx)(Gt,{children:"\nCharacter classes: [abc], [0-9], [^a-z], etc.\nQuantifiers: *, +, ?, {n}, {n,m}\nAnchors: ^ (start of string), $ (end of string)\nAlternation: |\nGrouping: (...)\nEscape sequences: /d (digit), /w (word character), /s (whitespace), etc.\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"You can use regular expressions to perform various tasks, including pattern matching, validation, search and replace, and extracting specific information from strings."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"It's important to note that regular expressions can be complex, and mastering them requires practice and understanding of the syntax and patterns. The [regex] library in C++ provides additional functions and classes to perform advanced operations with regular expressions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("br",{})]})})})},hn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Advanced String Topics:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Working with Unicode characters and Unicode-aware string operations:"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{children:["Unicode is a standard that represents characters from different writing systems and languages. In C++, you can work with Unicode characters using the wchar_t data type and the [cwchar] library. The wstring class can be used to handle wide strings that support Unicode characters."," "]}),(0,$e.jsx)("p",{children:"Here's an example that demonstrates basic Unicode-aware string operations:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n#include <cwchar>\n\nint main() {\n    std::wstring unicodeString = L"\u3053\u3093\u306b\u3061\u306f"; // Japanese greeting "Konnichiwa"\n    std::wcout << unicodeString << std::endl;\n\n    // Length of the string\n    std::wcout << "Length: " << unicodeString.length() << std::endl;\n\n    // Accessing individual characters\n    wchar_t firstChar = unicodeString[0];\n    std::wcout << "First character: " << firstChar << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n"\u3053\u3093\u306b\u3061\u306f"\n"Length: 5"\n"First character: \u3053"\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, the wstring type is used to store a wide string with Unicode characters. The length() function returns the number of characters in the string, and individual characters can be accessed using indexing."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Note that working with Unicode characters and handling different encodings can be complex. For advanced Unicode support and more comprehensive functionality, external libraries like ICU (International Components for Unicode) can be used."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"String hashing and checksums:"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["String hashing involves converting a string into a fixed-size hash value. Hash functions are used to generate unique hash codes for strings, which are commonly used for indexing and data retrieval. C++ provides hash functions in the [functional] library, such as std::hash.",(0,$e.jsx)("br",{}),"Here's an example that demonstrates string hashing using std::hash:"]}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <functional>\n#include <string>\n\nint main() {\n    std::string myString = "Hello, World!";\n    std::hash<std::string> hasher;\n    size_t hashValue = hasher(myString);\n\n    std::cout << "Hash value: " << hashValue << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be a hash value based on the input string."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, the std::hash function is used to generate a hash value for the string myString. The hasher object is called with myString as an argument to compute the hash value."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Checksums, on the other hand, are used to verify data integrity and detect errors in strings. Common checksum algorithms include CRC32 and MD5. To calculate checksums, you can use external libraries like OpenSSL or Boost."}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"String compression and encoding techniques:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"String compression involves reducing the size of a string to save storage space or transmit it efficiently. Common compression algorithms include gzip, zlib, and LZ77. In C++, you can use external libraries like zlib or Boost to compress and decompress strings."}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["String encoding refers to representing a string using a specific character encoding scheme, such as ASCII, UTF-8, or UTF-16. C++ supports various encoding conversions through the [codecvt] library and the std::wstring_convert class.",(0,$e.jsx)("br",{}),"Here's an example that demonstrates string encoding conversion:"]}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <codecvt>\n#include <locale>\n#include <string>\n\nint main() {\n    std::wstring_convert<std::codecvt_utf8<wchar_t>> converter;\n    std::wstring wideString = L"\u3053\u3093\u306b\u3061\u306f"; // Japanese greeting "Konnichiwa"\n    std::string utf8String = converter.to_bytes(wideString);\n\n    std::cout << "UTF-8 encoded string: " << utf8String << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n"UTF-8 encoded string: \u3053\u3093\u306b\u3061\u306f"\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, the std::wstring_convert class is used to convert a wide string (wideString) to a UTF-8 encoded string (utf8String) using the to_bytes() function."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Note that string compression and encoding techniques can have different trade-offs in terms of speed, space efficiency, and compatibility. Choosing the right algorithm and library depends on your specific requirements."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"These are some advanced topics related to strings in C++. They provide additional functionality and techniques for handling Unicode characters, performing hash operations, and working with string compression and encoding."})]})})})},fn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Introduction to Structures:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"What are structures?"}),(0,$e.jsx)("li",{className:"pt-4",children:"Structure declaration and definition."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structures, also known as structs, are user-defined data types in C++ that allow you to group together related variables of different data types into a single unit. Structures provide a way to represent and manipulate complex data structures by creating a custom data type that contains multiple fields or members."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"Structure Declaration:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"To declare a structure, you need to define its structure and specify its members. The general syntax for declaring a structure is as follows:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n  struct StructureName {\n    dataType member1;\n    dataType member2;\n    // ...\n\n\n};\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here, StructureName is the name you choose for the structure, and dataType represents the data type of each member variable. You can declare as many members as needed, each separated by a semicolon."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"Structure Definition:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"After declaring a structure, you can define variables of that structure type. The structure definition specifies the values of its members. Here's an example:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n  struct Person {\n    std::string name;\n    int age;\n    char gender;\n};\n\nint main() {\n    Person p1;  // Structure variable declaration\n    p1.name = \"John\";  // Accessing structure members and assigning values\n    p1.age = 25;\n    p1.gender = 'M';\n\n    return 0;\n}\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, a structure named Person is declared with three members: name, age, and gender. Inside the main() function, a structure variable p1 of type Person is declared. The structure members are accessed using the dot (.) operator and assigned values."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Structures provide a way to create custom data types that can store and organize related information. They are useful for representing real-world entities or complex data structures. By grouping variables together within a structure, you can access and manipulate them as a single unit, simplifying your code and enhancing its organization."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"Structure Members:"}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("br",{}),(0,$e.jsxs)("span",{className:"font-semibold",children:["Accessing structure members:",(0,$e.jsx)("br",{}),"Initializing structure members:"]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Accessing structure members involves accessing and manipulating the individual variables within a structure. In C++, you can use the dot (.) operator to access and assign values to structure members. Let's explain accessing structure members in a way that a kid can understand."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's consider an example of a structure representing a student:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <string>\n\nstruct Student {\n    std::string name;\n    int age;\n    char gender;\n};\n\nint main() {\n    Student s;  // Declare a structure variable of type Student\n\n    // Assign values to structure members\n    s.name = "Alice";\n    s.age = 10;\n    s.gender = \'F\';\n\n    // Access and display structure members\n    std::cout << "Name: " << s.name << std::endl;\n    std::cout << "Age: " << s.age << std::endl;\n    std::cout << "Gender: " << s.gender << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we have a structure named Student with three members: name, age, and gender. We declare a structure variable s of type Student."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To access the structure members, we use the dot (.) operator followed by the member name. For example, s.name represents the name member of the s structure. Similarly, we can access the age and gender members."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'To assign values to structure members, we simply use the assignment operator (=). For instance, s.name = "Alice" assigns the value "Alice" to the name member of the s structure.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'To display the structure members, we use the std::cout object and the insertion operator. We concatenate the structure member with a text label, such as "Name:", and use std::endl to insert a newline.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By accessing and manipulating structure members, we can store and retrieve different types of data for each structure instance. Structures provide a way to organize related information, making it easier to work with complex data structures in a structured and organized manner."}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Nested Structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Creating structures within structures."}),(0,$e.jsx)("li",{className:"pt-4",children:"Accessing nested structure members."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Nested structures refer to the concept of creating structures within structures. This allows you to organize and represent more complex data structures by combining multiple levels of data hierarchy. You can access the members of nested structures using the dot (.) operator. Let's explain nested structures and how to access their members in a way that a kid can understand."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's consider an example of nested structures representing a school:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <string>\n\nstruct Student {\n    std::string name;\n    int age;\n};\n\nstruct School {\n    std::string name;\n    Student student;\n};\n\nint main() {\n    School school;\n    school.name = "ABC School";\n    school.student.name = "Alice";\n    school.student.age = 10;\n\n    std::cout << "School: " << school.name << std::endl;\n    std::cout << "Student Name: " << school.student.name << std::endl;\n    std::cout << "Student Age: " << school.student.age << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we have two structures: Student and School. The Student structure represents individual students with members name and age. The School structure represents a school and includes a member student of type Student."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To create nested structures, we define one structure within another. In this case, the School structure contains a member student of type Student. This means that each School structure has its own Student structure associated with it."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To access the members of nested structures, we use the dot (.) operator multiple times. For example, school.student.name represents the name member of the student member of the school structure. Similarly, we can access the age member using school.student.age."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'To assign values to the nested structure members, we simply chain the dot (.) operator to access each member. For instance, school.student.name = "Alice" assigns the value "Alice" to the name member of the student member of the school structure.'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To display the nested structure members, we use std::cout and the insertion operator , similar to accessing members of a single structure."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By using nested structures, we can represent more complex relationships and hierarchies of data. This allows us to organize related information in a hierarchical manner, making it easier to work with multi-level data structures."})]})})})},gn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array of Structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:" Creating arrays of structures & Accessing array elements:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Arrays of structures allow you to store multiple instances of a structure type in a contiguous block of memory. Each element of the array represents one instance of the structure. You can access and manipulate individual elements of the array using array indexing."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the creation and accessing of arrays of structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <string>\n\n// Define a structure\nstruct Person {\n    std::string name;\n    int age;\n};\n\nint main() {\n    // Create an array of structures\n    const int arraySize = 3;\n    Person people[arraySize];\n\n    // Assign values to the structure elements\n    people[0].name = "Alice";\n    people[0].age = 25;\n\n    people[1].name = "Bob";\n    people[1].age = 30;\n\n    people[2].name = "Charlie";\n    people[2].age = 35;\n\n    // Access and print the structure elements\n    for (int i = 0; i < arraySize; i++) {\n        std::cout << "Person " << i + 1 << ": " << std::endl;\n        std::cout << "Name: " << people[i].name << std::endl;\n        std::cout << "Age: " << people[i].age << std::endl;\n        std::cout << std::endl;\n    }\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\n  Copy code\nPerson 1:\nName: Alice\nAge: 25\n\nPerson 2:\nName: Bob\nAge: 30\n\nPerson 3:\nName: Charlie\nAge: 35\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Person that consists of a name (string) and age (integer). We then create an array of Person structures called people with a size of 3."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We assign values to the name and age elements of each structure using array indexing. We then access and print the elements using a loop, iterating over each element of the array."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By using arrays of structures, you can store and manipulate multiple instances of the same structure type in a convenient and organized manner."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Feel free to modify the example and experiment with different structures and array sizes to suit your needs."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Structures and Functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:" Passing structures to functions & Returning structures from functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"Passing structures to functions:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"When passing a structure to a function, you can pass it by value or by reference. Passing by value creates a copy of the structure, while passing by reference allows the function to directly modify the original structure."}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"Here's an example that demonstrates passing structures to functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <string>\n\n// Define a structure\nstruct Person {\n    std::string name;\n    int age;\n};\n\n// Function that takes a structure by value\nvoid printPersonByValue(Person person) {\n    std::cout << "Name: " << person.name << std::endl;\n    std::cout << "Age: " << person.age << std::endl;\n}\n\n// Function that takes a structure by reference\nvoid incrementAge(Person& person) {\n    person.age++;\n}\n\n\nint main() {\n    // Create a structure\n    Person person;\n    person.name = "Alice";\n    person.age = 25;\n\n    // Pass the structure to functions\n    printPersonByValue(person);\n    incrementAge(person);\n\n    // Print the modified structure\n    std::cout << "Modified Age: " << person.age << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\nName: Alice\nAge: 25\nModified Age: 26\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"In this example, we define a structure Person with name and age fields. We create a person instance and initialize its values."}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"We then pass the person structure to the printPersonByValue() function by value, which creates a copy of the structure and prints its values. After that, we pass the person structure to the incrementAge() function by reference, allowing the function to modify the original structure."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"Returning structures from functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"Functions can also return structures as their return value. The structure can be returned by value or by reference, similar to passing structures to functions."}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"Here's an example that demonstrates returning structures from functions:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\n// Define a structure\nstruct Person {\n    std::string name;\n    int age;\n};\n\n// Function that returns a structure by value\nPerson createPerson() {\n    Person person;\n    person.name = "Bob";\n    person.age = 30;\n    return person;\n}\n\n// Function that returns a structure by reference\nPerson& getPersonByReference(Person& person) {\n    return person;\n}\n\nint main() {\n    // Call the function that returns a structure by value\n    Person returnedPerson = createPerson();\n    std::cout << "Name: " << returnedPerson.name << std::endl;\n    std::cout << "Age: " << returnedPerson.age << std::endl;\n\n    // Call the function that returns a structure by reference\n    Person person;\n    person.name = "Charlie";\n    person.age = 35;\n    Person& returnedPersonRef = getPersonByReference(person);\n    std::cout << "Name (Reference): " << returnedPersonRef.name << std::endl;\n    std::cout << "Age (Reference): " << returnedPersonRef.age << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\nName: Bob\nAge: 30\nName (Reference): Charlie\nAge (Reference): 35\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"In this example, we define a structure Person with name and age fields. We have two functions: createPerson() that returns a Person structure by value and getPersonByReference() that returns a Person structure by reference."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"We call the createPerson() function and store the returned structure in returnedPerson, which we then print its values."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"We also create a person instance, initialise its values, and pass it to the getPersonByReference() function. The function returns a reference to the original person structure, which we store in returnedPersonRef and print its values."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"By passing structures to functions and returning structures from functions, you can work with structured data in a modular and reusable manner."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 ",children:"Feel free to modify the example and experiment with different structures and function behaviours to further explore the possibilities."})]})})})})},xn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Structure and Pointers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:" Structure pointers."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structure pointers allow you to create a pointer variable that can store the address of a structure. By using structure pointers, you can access and modify the structure's members indirectly."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates structure pointers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <string>\n\n// Define a structure\nstruct Person {\n    std::string name;\n    int age;\n};\n\nint main() {\n    // Declare a structure pointer\n    Person* personPtr;\n\n    // Create a structure dynamically\n    personPtr = new Person;\n\n    // Access and modify the structure members using the pointer\n    personPtr->name = "Alice";\n    personPtr->age = 25;\n\n    // Print the structure members\n    std::cout << "Name: " << personPtr->name << std::endl;\n    std::cout << "Age: " << personPtr->age << std::endl;\n\n    // Deallocate the dynamic memory\n    delete personPtr;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\nName: Alice\nAge: 25\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Person with name and age fields. We declare a pointer variable personPtr of type Person*."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We allocate memory dynamically for a Person structure using the new keyword, and the address of the allocated memory is stored in personPtr. We then access and modify the structure members using the arrow operator (-&gt)."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Finally, we deallocate the dynamically allocated memory using the delete keyword to free up the memory."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Dynamic Memory Allocation:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Dynamic memory allocation allows you to allocate memory at runtime using the new operator. It is useful when you need to create structures or arrays dynamically and when the size is not known at compile time."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates dynamic memory allocation for an array of structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <string>\n  \n  // Define a structure\n  struct Person {\n      std::string name;\n      int age;\n  };\n  \n  int main() {\n      // Get the number of persons\n      int numPersons;\n      std::cout << "Enter the number of persons: ";\n      std::cin >> numPersons;\n  \n      // Allocate memory for an array of persons\n      Person* peopleArray = new Person[numPersons];\n  \n      // Input the details for each person\n      for (int i = 0; i < numPersons; i++) {\n          std::cout << "Enter name for person " << i + 1 << ": ";\n          std::cin >> peopleArray[i].name;\n  \n          std::cout << "Enter age for person " << i + 1 << ": ";\n          std::cin >> peopleArray[i].age;\n      }\n  \n      // Print the details of each person\n      for (int i = 0; i < numPersons; i++) {\n          std::cout << "Person " << i + 1 << ":" << std::endl;\n          std::cout << "Name: " << peopleArray[i].name << std::endl;\n          std::cout << "Age: " << peopleArray[i].age << std::endl;\n          std::cout << std::endl;\n      }\n  \n      // Deallocate the dynamically allocated memory\n      delete[] peopleArray;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Person with name and age fields. We prompt the user to enter the number of persons."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We allocate memory dynamically for an array of Person structures using the new keyword and the size provided by the user. The address of the allocated memory is stored in peopleArray."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We then use a loop to input the details (name and age) for each person in the array. After that, we print the details of each person using another loop."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Finally, we deallocate the dynamically allocated memory using the delete[] keyword to free up the memory."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Using structure pointers and dynamic memory allocation, you can work with structures dynamically and handle varying sizes of data at runtime."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Feel free to modify the examples and experiment with different scenarios to further understand structure pointers and dynamic memory allocation in C++."})]})})})})},_n=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Structure Manipulation:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:" Structure manipulation operations:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structure manipulation operations refer to performing various operations on structures, such as initializing, assigning, and copying structures"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates structure manipulation operations:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <string>\n  \n  // Define a structure\n  struct Person {\n      std::string name;\n      int age;\n  };\n  \n  int main() {\n      // Declare a structure variable\n      Person person1;\n  \n      // Initialize the structure members\n      person1.name = "Alice";\n      person1.age = 25;\n  \n      // Assign one structure to another\n      Person person2 = person1;\n  \n      // Copy the structure\n      Person person3;\n      person3 = person1;\n  \n      // Print the structure members\n      std::cout << "Person 1: " << person1.name << ", " << person1.age << std::endl;\n      std::cout << "Person 2: " << person2.name << ", " << person2.age << std::endl;\n      std::cout << "Person 3: " << person3.name << ", " << person3.age << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n  Person 1: Alice, 25\n  Person 2: Alice, 25\n  Person 3: Alice, 25\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Person with name and age fields. We declare three structure variables: person1, person2, and person3."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We initialize the members of person1 with specific values. Then, we assign the values of person1 to person2 using the assignment operator (=). We also copy the values of person1 to person3 using the assignment operator."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Structure Comparison:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structure comparison involves comparing structures to check their equality or order based on certain criteria. Comparison is typically performed by comparing individual members of the structures."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates structure comparison:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <string>\n  \n  // Define a structure\n  struct Person {\n      std::string name;\n      int age;\n  };\n  \n  bool areEqual(const Person& person1, const Person& person2) {\n      return (person1.name == person2.name && person1.age == person2.age);\n  }\n  \n  bool isOlder(const Person& person1, const Person& person2) {\n      return (person1.age > person2.age);\n  }\n  \n  int main() {\n      // Create two structure instances\n      Person person1;\n      person1.name = "Alice";\n      person1.age = 25;\n  \n      Person person2;\n      person2.name = "Bob";\n      person2.age = 30;\n  \n      // Compare structures for equality\n      if (areEqual(person1, person2)) {\n          std::cout << "Person 1 and Person 2 are equal." << std::endl;\n      } else {\n          std::cout << "Person 1 and Person 2 are not equal." << std::endl;\n      }\n  \n      // Compare structures based on age\n      if (isOlder(person1, person2)) {\n          std::cout << "Person 1 is older than Person 2." << std::endl;\n      } else {\n          std::cout << "Person 1 is not older than Person 2." << std::endl;\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\nPerson 1 and Person 2 are not equal.\nPerson 1 is not older than Person 2.\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Person with name and age fields. We create two instances of the structure, person1 and person2, with different values."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" We define two comparison functions: areEqual() and isOlder(). The areEqual() function compares the name and age of two structures for equality, and the isOlder() function compares the age of two structures to determine the older person."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We call these functions with the person1 and person2 structures and print the appropriate messages based on the comparison results."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structure manipulation operations and structure comparison allow you to work with structures effectively, modify their values, and compare them based on specific criteria."})]})})})})},bn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bitfields:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:" Bit Fields in structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitfields in structures allow you to efficiently use memory by specifying the number of bits each member of the structure should occupy. This enables you to pack multiple members within a single memory location, conserving memory space."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the usage of bitfields in structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n// Define a structure with bitfields\nstruct Flags {\n    unsigned int flag1 : 1;\n    unsigned int flag2 : 2;\n    unsigned int flag3 : 3;\n};\n\nint main() {\n    // Create an instance of the structure\n    Flags flags;\n\n    // Set values for the bitfields\n    flags.flag1 = 1;\n    flags.flag2 = 2;\n    flags.flag3 = 3;\n\n    // Print the values of the bitfields\n    std::cout << "Flag 1: " << flags.flag1 << std::endl;\n    std::cout << "Flag 2: " << flags.flag2 << std::endl;\n    std::cout << "Flag 3: " << flags.flag3 << std::endl;\n\n    // Print the size of the structure\n    std::cout << "Size of Flags structure: " << sizeof(flags) << " bytes" << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\nFlag 1: 1\nFlag 2: 2\nFlag 3: 3\nSize of Flags structure: 4 bytes\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Flags with three bitfields: flag1, flag2, and flag3. The number after the colon represents the number of bits each bitfield should occupy."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We create an instance of the structure and set values for the bitfields. The bitfields can store values within the specified number of bits."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We then print the values of the bitfields. Note that the values may be truncated if they exceed the specified number of bits."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Finally, we print the size of the structure using the sizeof() operator to demonstrate the memory savings achieved by using bitfields. In this case, the structure occupies 4 bytes (32 bits) because the bitfields are packed together."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitfields in structures provide efficient memory usage when you need to store multiple values with varying bit sizes. However, it's important to be cautious when working with bitfields, as the behavior may depend on the specific implementation and endianness of the system."})]})})})})},yn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Unions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Introduction to unions: "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"A union in C++ is a special data type that allows different variables to share the same memory location. In a union, all members occupy the same memory space, and changing the value of one member affects the values of other members. Unions are useful when you want to store different types of data in the same memory location."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the declaration and usage of a union:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n  // Define a union\n  union Data {\n      int intValue;\n      float floatValue;\n      char charValue;\n  };\n  \n  int main() {\n      // Create an instance of the union\n      Data data;\n  \n      // Assign values to the members\n      data.intValue = 42;\n      std::cout << "Integer value: " << data.intValue << std::endl;\n  \n      data.floatValue = 3.14;\n      std::cout << "Float value: " << data.floatValue << std::endl;\n  \n      data.charValue = \'A\';\n      std::cout << "Character value: " << data.charValue << std::endl;\n  \n      // Print the values of all members\n      std::cout << "Values in the union:" << std::endl;\n      std::cout << "Integer value: " << data.intValue << std::endl;\n      std::cout << "Float value: " << data.floatValue << std::endl;\n      std::cout << "Character value: " << data.charValue << std::endl;\n  \n      // Print the size of the union\n      std::cout << "Size of Data union: " << sizeof(data) << " bytes" << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n  Integer value: 42\n  Float value: 3.14\n  Character value: A\n  Values in the union:\n  Integer value: 65\n  Float value: 6.93889e-44\n  Character value: A\n  Size of Data union: 4 bytes\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The above example demonstrates how a union allows you to store different types of data in the same memory location, but only one member can be accessed at a time. It showcases assigning values to union members, accessing and printing those values, and determining the size of the union."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We create an instance of the union called data and assign values to its members. Since all members share the same memory space, changing the value of one member affects the values of other members."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We print the values of the members and observe that the integer value, float value, and character value are stored in the same memory location. Therefore, accessing one member after modifying another member may result in unexpected values."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Finally, we use the sizeof() operator to determine the size of the union, which will be equal to the size of its largest member."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Unions are useful when you want to store different types of data in the same memory location and access them based on the current context or requirement. However, it's important to handle unions with caution and ensure proper typecasting and data access to avoid unexpected behavior."})]})})})})},vn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Structure and File I/O:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Reading and writing structures to files: "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Reading and writing structures to files involves serializing and deserializing structure data to and from a file. This allows you to store structure data persistently and retrieve it later when needed."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates reading and writing structures to a file in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <ifstream>\n  #include <string>\n  \n  // Define a structure\n  struct Person {\n      std::string name;\n      int age;\n  };\n  \n  // Function to write structure data to a file\n  void writeStructureToFile(const std::string& filename, const Person& person) {\n      std::ofstream file(filename, std::ios::binary);\n      if (file.is_open()) {\n          file.write(reinterpret_cast<const char*>(&person), sizeof(person));\n          file.close();\n          std::cout << "Structure data written to the file." << std::endl;\n      } else {\n          std::cout << "Unable to open the file." << std::endl;\n      }\n  }\n  \n  // Function to read structure data from a file\n  void readStructureFromFile(const std::string& filename, Person& person) {\n      std::ifstream file(filename, std::ios::binary);\n      if (file.is_open()) {\n          file.read(reinterpret_cast<char*>(&person), sizeof(person));\n          file.close();\n          std::cout << "Structure data read from the file." << std::endl;\n      } else {\n          std::cout << "Unable to open the file." << std::endl;\n      }\n  }\n  \n  int main() {\n      // Create a structure instance\n      Person person;\n      person.name = "Alice";\n      person.age = 25;\n  \n      // Write structure data to a file\n      writeStructureToFile("person.dat", person);\n  \n      // Clear the structure data\n      person.name.clear();\n      person.age = 0;\n  \n      // Read structure data from the file\n      readStructureFromFile("person.dat", person);\n  \n      // Print the structure data\n      std::cout << "Name: " << person.name << std::endl;\n      std::cout << "Age: " << person.age << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Person with name and age fields. We create two functions, writeStructureToFile() and readStructureFromFile(), to handle writing and reading structure data to and from a file."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The writeStructureToFile() function takes a filename and a Person structure as input. It opens the file in binary mode, writes the structure data to the file using the write() function, and then closes the file."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The readStructureFromFile() function takes a filename and a reference to a Person structure as input. It opens the file in binary mode, reads the structure data from the file using the read() function, and then closes the file."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In the main() function, we create a Person structure instance, person, and initialize its values. We then call the writeStructureToFile() function to write the structure data to a file named "person.dat".'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'After that, we clear the structure data by emptying the name field and setting the age to zero. We call the readStructureFromFile() function to read the structure data from the file "person.dat" back into the person structure.'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Finally, we print the values of the structure members to verify that the data was successfully read from the file."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Note: When reading and writing structures to files, it's important to ensure that the structure is serialized and deserialized in a consistent manner, considering factors like endianness, padding, and data alignment."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Structures with templates: "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structures with templates allow you to create generic structures that can hold data of different types. This is useful when you want to create reusable data structures that can work with different types of data"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of a structure with a template:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n  // Define a structure with a template\n  template <typename T>\n  struct Pair {\n      T first;\n      T second;\n  };\n  \n  int main() {\n      // Create an instance of the structure with int type\n      Pair<int> intPair;\n      intPair.first = 10;\n      intPair.second = 20;\n  \n      // Create an instance of the structure with double type\n      Pair<double> doublePair;\n      doublePair.first = 3.14;\n      doublePair.second = 2.71;\n  \n      // Print the values of the intPair\n      std::cout << "Int Pair: " << intPair.first << ", " << intPair.second << std::endl;\n  \n      // Print the values of the doublePair\n      std::cout << "Double Pair: " << doublePair.first << ", " << doublePair.second << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a structure Pair with a template parameter T. The structure has two members of type T, first and second."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we create two instances of the structure: intPair and doublePair. We specify the template parameter as int for intPair and double for doublePair."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We assign values to the members of each structure and then print the values to verify that the structure can hold different types of data."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Structures with templates provide flexibility and reusability, allowing you to create generic data structures that can work with various data types. They are particularly useful when you want to write generic algorithms or containers."})]})})})})},Nn=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Introduction to Pointer:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"What are pointers?"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers in C++ are similar to pointers in C, allowing you to work with memory addresses directly. They provide a way to manipulate data indirectly by accessing and modifying the memory location where the data is stored."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Memory and addresses:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In computer memory, each byte has a unique address. Pointers are variables that store these memory addresses. By using pointers, you can perform operations on variables indirectly, rather than directly manipulating their values."}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointer declaration and initialization:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, you can declare a pointer using the asterisk (*) symbol. For example:"}),(0,$e.jsx)(Gt,{children:"\n  int* ptr;\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here, ptr is a pointer to an integer. It can store the memory address of an integer variable. The asterisk (*) indicates that ptr is a pointer."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To initialize a pointer, you can assign it the address of a variable using the ampersand (&) operator. The ampersand operator retrieves the address of a variable. For example:"}),(0,$e.jsx)(Gt,{children:"\nint num = 10;\nint* ptr = &num;\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this case, ptr is initialized with the address of the num variable. Now, ptr points to the memory location where num is stored."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"You can also assign nullptr to a pointer if you don't want it to point to any valid memory address initially. nullptr is a special constant introduced in C++11 that represents a null pointer value. For example:"}),(0,$e.jsx)(Gt,{children:"\nint* ptr = nullptr; \n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this case, ptr is a null pointer since it doesn't point to any valid memory location."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers in C++ provide great flexibility and power, allowing you to work with dynamic memory allocation, manipulate arrays, create data structures like linked lists, and interact with functions more efficiently. However, they require careful management to avoid memory leaks and other memory-related issues. It's important to handle pointers with care and always ensure they point to valid memory addresses before dereferencing them."})]})})}),(0,$e.jsx)("div",{})]})},En=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Pointer Operations:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Accessing the value and address of a variable using pointers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To access the value stored at a memory location pointed to by a pointer, you can use the dereference operator (*). For example:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\nint num = 10;\nint* ptr = &num;\n\ncout << "Value of num: " << *ptr << endl;  // Output: Value of num: 10\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this case, *ptr retrieves the value stored at the memory location pointed to by ptr, which is 10."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To access the memory address stored in a pointer, you can simply use the pointer variable itself. For example:"}),(0,$e.jsx)(Gt,{children:'\n  cout << "Address of num: " << ptr << endl;  // Output: Address of num: 0x7ffd3f89e8ac (example address)\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here, ptr is used directly, and it will print the memory address it holds."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Dereferencing pointers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Dereferencing a pointer means accessing the value stored at the memory location pointed to by the pointer. It is done using the dereference operator (*). For example:"}),(0,$e.jsx)(Gt,{children:'\n  int num = 10;\n  int* ptr = &num;\n  \n  *ptr = 20;\n  cout << "Value of num: " << num << endl;  // Output: Value of num: 20\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this case, *ptr dereferences the pointer and assigns the value 20 to the memory location pointed to by ptr, which modifies the value of num."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointer arithmetic:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers support arithmetic operations, such as increment, decrement, addition, and subtraction, which can be useful for traversing arrays or manipulating memory addresses."}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Increment and decrement:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"You can increment or decrement a pointer to navigate through memory addresses. For example:"}),(0,$e.jsx)(Gt,{children:'\n  int arr[] = {1, 2, 3, 4, 5};\nint* ptr = arr;\n\nptr++;  // Incrementing the pointer\n\ncout << "Value pointed by ptr: " << *ptr << endl;  // Output: Value pointed by ptr: 2\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here, ptr++ increments the pointer by the size of the pointed data type (in this case, int), moving it to the next memory location."}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Addition and subtraction:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" You can add or subtract an integer value to a pointer to adjust its position in memory. For example:"}),(0,$e.jsx)(Gt,{children:'\n  int arr[] = {1, 2, 3, 4, 5};\nint* ptr = arr;\n\nptr = ptr + 2;  // Adding 2 to the pointer\n\ncout << "Value pointed by ptr: " << *ptr << endl;  // Output: Value pointed by ptr: 3\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here, ptr + 2 adds 2 times the size of the pointed data type to the pointer, effectively moving it two positions ahead."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"It's important to note that pointer arithmetic should be used with caution to avoid accessing memory outside the bounds of allocated objects or arrays, which can lead to undefined behavior."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"These pointer operations provide powerful tools for working with memory addresses and manipulating data indirectly in C++. However, it's crucial to ensure proper usage to avoid memory-related issues and adhere to the rules of the language."})]})})}),(0,$e.jsx)("div",{})]})},Sn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Pointers and Arrays:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:" text-justify p-4",children:"Arrays and pointers have a close relationship in C++. In fact, arrays can be thought of as a type of pointer that points to the first element of the array. Understanding this relationship allows you to access array elements using pointers and perform pointer arithmetic on arrays."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Arrays and pointers relationship:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"When you declare an array in C++, it is implicitly converted to a pointer to its first element. For example:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n  int arr[] = {1, 2, 3, 4, 5};\n  int* ptr = arr;\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here, arr is an array of integers, and ptr is a pointer to an integer. The array name arr is automatically converted to a pointer to its first element, so ptr now points to the first element of the array."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Accessing Array Elements Using Pointers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Since arrays and pointers are closely related, you can use pointers to access array elements. By incrementing or decrementing the pointer, you can navigate through the array."}),(0,$e.jsx)(Gt,{children:'\nint arr[] = {1, 2, 3, 4, 5};\nint* ptr = arr;\n\ncout << "First element: " << *ptr << endl;  // Output: First element: 1\n\nptr++;  // Move to the next element\ncout << "Second element: " << *ptr << endl;  // Output: Second element: 2\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, *ptr is used to access the value of the element pointed to by ptr. By incrementing the pointer (ptr++), we move to the next element of the array."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointer Arithmetic with Arrays:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointer arithmetic can be used with arrays to traverse the elements or perform other operations. When you perform arithmetic operations on a pointer to an array, the pointer automatically moves to the next or previous element based on the size of the data type."}),(0,$e.jsx)(Gt,{children:'\n  int arr[] = {1, 2, 3, 4, 5};\nint* ptr = arr;\n\ncout << "First element: " << *ptr << endl;  // Output: First element: 1\n\nptr = ptr + 2;  // Move two elements ahead\ncout << "Third element: " << *ptr << endl;  // Output: Third element: 3\n\nptr = ptr - 1;  // Move one element back\ncout << "Second element: " << *ptr << endl;  // Output: Second element: 2\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, ptr + 2 moves the pointer two elements ahead, and ptr - 1 moves it one element back."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointer arithmetic can be particularly useful when iterating over arrays or when working with dynamic memory allocation."})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember to exercise caution with pointer arithmetic to avoid accessing elements outside the bounds of the array, as this can result in undefined behavior or unexpected results."})]})]})})},jn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"6. Pointers and Structures:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers can be used effectively with structures in C++ to access structure members, create pointers to structures, and perform dynamic memory allocation for structures. Let's explore these concepts:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers to Structures:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers can be used to create variables that store the memory address of a structure. By using pointers, you can efficiently manipulate and access structure data. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  struct Person {\n    string name;\n    int age;\n};\n\nint main() {\n    Person person;\n    person.name = "John Doe";\n    person.age = 25;\n\n    Person* ptr = &person;\n\n    cout << "Name: " << ptr->name << endl;  // Output: Name: John Doe\n    cout << "Age: " << ptr->age << endl;    // Output: Age: 25\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a structure Person is defined with name and age as its members. A variable person of type Person is created, and its members are accessed using the pointer ptr by using the arrow operator."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Accessing Structure Members Using Pointers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers to structures can be used to access structure members using the arrow operator. This allows you to modify or retrieve data from the structure indirectly through the pointer. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  struct Person {\n    string name;\n    int age;\n};\n\nint main() {\n    Person person;\n    Person* ptr = &person;\n\n    ptr->name = "John Doe";\n    ptr->age = 25;\n\n    cout << "Name: " << ptr->name << endl;  // Output: Name: John Doe\n    cout << "Age: " << ptr->age << endl;    // Output: Age: 25\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the structure Person is defined, and a pointer ptr of type Person* is created. The arrow operator(->) is used to access the structure members and assign values to them or retrieve them via the pointer."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Dynamic Memory Allocation for Structures:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers can also be used to dynamically allocate memory for structures. This allows you to create structures at runtime and manage memory efficiently. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  struct Person {\n    string name;\n    int age;\n};\n\nint main() {\n    Person* ptr = new Person;\n\n    ptr->name = "John Doe";\n    ptr->age = 25;\n\n    cout << "Name: " << ptr->name << endl;  // Output: Name: John Doe\n    cout << "Age: " << ptr->age << endl;    // Output: Age: 25\n\n    delete ptr;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, dynamic memory allocation is performed using the new operator to allocate memory for a Person structure. The pointer ptr is then used to access the structure members and manipulate the data. After using the dynamically allocated memory, it's important to deallocate it using the delete operator to free the memory."})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember to handle dynamic memory allocation carefully and deallocate the memory using delete to avoid memory leaks and undefined behavior."})]})]})})},Tn=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"7. Pointers to Pointers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers to pointers, also known as double pointers, are variables that store the memory address of another pointer. They introduce multiple levels of indirection and are useful in scenarios where you need to manipulate or modify pointers dynamically. Let's explore pointers to pointers and their usage:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers to Pointers (Double Pointers):"}),(0,$e.jsx)("p",{children:"Pointers to pointers are variables that store the memory address of another pointer. By using double indirection, you can indirectly access and modify the value of a pointer. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  int main() {\n    int num = 10;\n    int* ptr = &num;\n    int** ptrToPtr = &ptr;\n\n    cout << "Value of num: " << **ptrToPtr << endl;  // Output: Value of num: 10\n\n    return 0;\n}\n '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, ptrToPtr is a pointer to a pointer (int**). It stores the memory address of ptr, which itself stores the memory address of num. By dereferencing ptrToPtr twice (**ptrToPtr), we can access the value of num."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Multiple Levels of Indirection:"}),(0,$e.jsx)("p",{children:"Pointers to pointers introduce multiple levels of indirection. The number of asterisks (*) represents the level of indirection. For each level of indirection, you need an additional dereference to access the actual value. Here's an example with three levels of indirection:"}),(0,$e.jsx)(Gt,{children:'\n int main() {\n  int num = 10;\n  int* ptr = &num;\n  int** ptrToPtr = &ptr;\n  int*** ptrToPtrToPtr = &ptrToPtr;\n\n  cout << "Value of num: " << ***ptrToPtrToPtr << endl;  // Output: Value of num: 10\n\n  return 0;\n}\n '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, 'ptrToPtrToPtr' is a pointer to a pointer to a pointer (int***). It stores the memory address of \u2018ptrToPtr\u2019, which itself stores the memory address of ptr, which in turn stores the memory address of num. By dereferencing ptrToPtrToPtr three times (\u2018***ptrToPtrToPtr\u2019), we can access the value of num."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Usage and Applications of Pointers to Pointers:"}),(0,$e.jsx)("p",{children:"Pointers to pointers are commonly used in various scenarios, including:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Dynamic memory allocation:"}),(0,$e.jsx)("p",{children:"Pointers to pointers are useful for dynamically allocating multidimensional arrays or structures. By using double indirection, you can allocate memory dynamically and access the elements efficiently."}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Function parameter passing:"}),(0,$e.jsx)("p",{children:" Pointers to pointers can be passed to functions when you need to modify the original pointer inside the function. This allows you to update the pointer's value and reflect the changes in the calling code."}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Linked data structures:"}),(0,$e.jsx)("p",{children:" Pointers to pointers can be used in linked data structures like linked lists or binary trees. They facilitate efficient traversal and modification of the structure by updating pointers at different levels."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers to pointers provide increased flexibility and power when manipulating pointers dynamically. They are particularly useful in situations where you need to modify pointers themselves or dynamically allocate memory with multiple levels of indirection."}),(0,$e.jsx)("br",{})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember to handle pointers to pointers with care to avoid null or uninitialized pointer dereference, and ensure proper deallocation of dynamically allocated memory to prevent memory leaks."})]})]}),(0,$e.jsx)("div",{})]})},wn=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"8. Pointers and Strings:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers are commonly used with character arrays to handle strings in C++. Pointers allow for efficient string manipulation and dynamic memory allocation for strings. Let's explore these concepts:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers and Character Arrays:"}),(0,$e.jsx)("p",{children:"In C++, a string is often represented as an array of characters. Pointers can be used to manipulate and access the elements of a character array, allowing for string operations. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  int main() {\n    char str[] = "Hello";\n    char* ptr = str;\n\n    cout << "String: " << ptr << endl;  // Output: String: Hello\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In this code, a character array str is initialized with the string "Hello". The pointer ptr is then assigned the memory address of the first character of the array. By dereferencing ptr or using it in a context where a string is expected, you can access and manipulate the string.'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"String Manipulation Using Pointers:"}),(0,$e.jsx)("p",{children:"Pointers can be used to manipulate strings efficiently. By using pointer arithmetic and various string functions, you can perform common string operations. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <cstring>\n\n  int main() {\n      char str[] = "Hello";\n      char* ptr = str;\n  \n      // Change the first character\n      *ptr = \'J\';\n  \n      // Append a string\n      ptr += strlen(ptr);\n      strcpy(ptr, " World!");\n  \n      cout << "Modified string: " << str << endl;  // Output: Modified string: Jello World!\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the first character of the string is changed by dereferencing the pointer (*ptr = 'J'). Then, the pointer is moved to the end of the string using ptr += strlen(ptr). The strcpy function is used to append the \" World!\" string to the original string."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers enable efficient traversal and modification of string characters, making them useful in string manipulation operations."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Dynamic Memory Allocation for Strings:"}),(0,$e.jsx)("p",{children:"Pointers can also be used to dynamically allocate memory for strings when the string length is not known at compile time. Dynamic memory allocation allows you to allocate memory for strings of varying lengths. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  int main() {\n    char* str = new char[10];  // Allocate memory for a string of length 10\n\n    strcpy(str, "Dynamic");\n\n    cout << "Dynamic string: " << str << endl;  // Output: Dynamic string: Dynamic\n\n    delete[] str;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In this code, dynamic memory is allocated using the new operator to create a character array of length 10. The strcpy function is used to copy the string "Dynamic" into the allocated memory. After using the dynamically allocated memory, it\'s important to deallocate it using delete[] to prevent memory leaks.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Dynamic memory allocation for strings allows for flexibility in handling strings of varying lengths and avoids the limitations of fixed-size character arrays."})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Remember to handle dynamic memory allocation responsibly, ensuring proper deallocation to avoid memory leaks and undefined behavior."})]})]}),(0,$e.jsx)("div",{})]})},In=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"9. Pointers and Const :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers and const qualifiers can be used together to create different types of pointers that enforce constness. Let's explore the three types: pointers to constant data, constant pointers, and constant pointers to constant data."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers to Constant Data:"}),(0,$e.jsx)("p",{children:"A pointer to constant data is a pointer that points to data that is considered constant and cannot be modified through the pointer. This is achieved by using the const qualifier when declaring the pointer. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int main() {\n    int num = 10;\n    const int* ptr = &num;\n\n    // *ptr = 20;  // Error: Cannot modify the value through a pointer to constant data\n\n    cout << "Value: " << *ptr << endl;  // Output: Value: 10\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the ptr pointer is declared as a pointer to a constant integer (const int*). This means that the data pointed to by ptr (in this case, num) is considered constant, and any attempt to modify it through the pointer will result in a compilation error. However, you can still read the value of the data through the pointer."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Constant Pointers:"}),(0,$e.jsx)("p",{children:"A constant pointer is a pointer whose address cannot be changed after initialization. This is achieved by using the const qualifier before the pointer variable name. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int main() {\n    int num = 10;\n    int* const ptr = &num;\n\n    // ptr = nullptr;  // Error: Cannot reassign a constant pointer\n\n    cout << "Value: " << *ptr << endl;  // Output: Value: 10\n\n    return 0;\n} \n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the ptr pointer is declared as a constant pointer to an integer (int* const). This means that the pointer itself is considered constant, and its address cannot be changed once it is initialized. Any attempt to reassign a value to the pointer will result in a compilation error. However, you can still modify the data that ptr points."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Constant Pointers to Constant Data:"}),(0,$e.jsx)("p",{children:"A constant pointer to constant data is a combination of the previous two concepts. It is a pointer whose address cannot be changed, and it points to data that is considered constant and cannot be modified. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int main() {\n    int num = 10;\n    const int* const ptr = &num;\n\n    // *ptr = 20;    // Error: Cannot modify the value through a pointer to constant data\n    // ptr = nullptr;  // Error: Cannot reassign a constant pointer\n\n    cout << "Value: " << *ptr << endl;  // Output: Value: 10\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, ptr is declared as a constant pointer to constant integer (const int* const). This means that both the pointer and the data it points to are considered constant. The address of ptr cannot be changed, and any attempt to modify the data through the pointer will result in a compilation error."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Using const pointers helps enforce const correctness and prevents accidental modification of data or pointer values, contributing to code safety and maintainability."})]})})}),(0,$e.jsx)("div",{})]})},Cn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"10. Pointers and Object-Oriented Programming:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers play a crucial role in object-oriented programming (OOP) in C++. They allow for dynamic memory allocation and enable polymorphism through virtual functions. Let's explore how pointers are used with objects, dynamic memory allocation, and polymorphism."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers to Objects:"}),(0,$e.jsx)("p",{children:"Pointers can be used to create and manipulate objects dynamically. By using pointers, you can allocate memory for objects at runtime and access their members. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  class Shape {\n    public:\n        virtual void draw() {\n            cout << "Drawing a Shape." << endl;\n        }\n    };\n    \n    class Circle : public Shape {\n    public:\n        void draw() override {\n            cout << "Drawing a Circle." << endl;\n        }\n    };\n    \n    int main() {\n        Shape* shapePtr = new Circle();\n        shapePtr->draw();  // Output: Drawing a Circle.\n    \n        delete shapePtr;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a base class Shape is defined with a virtual function draw(). A derived class Circle is created, which overrides the draw() function. Using a pointer shapePtr of type Shape*, a Circle object is dynamically allocated and assigned to the pointer. By calling the draw() function through the pointer, the derived class implementation is invoked."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Dynamic Memory Allocation for Objects:"}),(0,$e.jsx)("p",{children:"Pointers are commonly used to dynamically allocate memory for objects when the object's lifetime or size needs to be determined at runtime. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n    class Person {\n      public:\n          string name;\n      \n          Person(const string& name) : name(name) {\n              cout << "Person " << name << " created." << endl;\n          }\n      \n          ~Person() {\n              cout << "Person " << name << " destroyed." << endl;\n          }\n      };\n      \n      int main() {\n          Person* personPtr = new Person("John");\n      \n          // Use the personPtr...\n      \n          delete personPtr;\n      \n          return 0;\n      }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a Person class is defined with a constructor and destructor. Using the new operator, memory is dynamically allocated for a Person object, and a pointer personPtr is assigned the memory address. After using the object, the delete operator is used to deallocate the memory and invoke the destructor."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Polymorphism and Virtual Functions with Pointers:"}),(0,$e.jsx)("p",{children:"Pointers to base classes are often used to achieve polymorphism in C++. Virtual functions enable dynamic dispatch, allowing the appropriate derived class function to be called based on the object type. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n    class Animal {\n      public:\n          virtual void sound() {\n              cout << "Animal sound." << endl;\n          }\n      };\n      \n      class Dog : public Animal {\n      public:\n          void sound() override {\n              cout << "Woof!" << endl;\n          }\n      };\n      \n      class Cat : public Animal {\n      public:\n          void sound() override {\n              cout << "Meow!" << endl;\n          }\n      };\n      \n      int main() {\n          Animal* animalPtr;\n      \n          Dog dog;\n          Cat cat;\n      \n          animalPtr = &dog;\n          animalPtr->sound();  // Output: Woof!\n      \n          animalPtr = &cat;\n          animalPtr->sound();  // Output: Meow!\n      \n          return 0;\n      }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a base class Animal is defined with a virtual function sound(). Derived classes Dog and Cat override the sound() function. By using a pointer animalPtr of type Animal*, different objects of derived classes are assigned to the pointer, and the sound() function is called. The appropriate derived class implementation is invoked based on the actual object type assigned to the pointer."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers in object-oriented programming facilitate dynamic object creation, polymorphism, and virtual function dispatch. They enable flexible memory allocation and the ability to work with objects of varying types through base class pointers. Proper memory management using new and delete is important to avoid memory leaks and undefined behavior."})]})})})})},On=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"11. Pointers and Exception Handling:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, pointers can be thrown and caught as exceptions, allowing you to handle exceptional conditions related to pointers in your code. Exception handling provides a mechanism to handle errors and abnormal situations gracefully. Here's how you can use exception handling with pointers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Throwing Pointers as Exceptions:"}),(0,$e.jsx)("p",{children:"You can throw a pointer as an exception by using the throw keyword followed by the pointer. It is common to throw pointers to objects derived from the std::exception class or its subclasses. Here's an example"}),(0,$e.jsx)(Gt,{children:'\n  #include <stdexcept>\n\n  void someFunction() {\n      int* ptr = nullptr;\n  \n      if (!ptr) {\n          throw std::invalid_argument("Invalid pointer!");  // Throw a pointer to an exception object\n      }\n  }\n  \n  int main() {\n      try {\n          someFunction();\n      }\n      catch (const std::exception* e) {\n          std::cout << "Exception caught: " << e->what() << std::endl;\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the someFunction() throws a pointer to a std::invalid_argument exception object when the ptr is nullptr. The exception is caught in the catch block, and the message is printed using the what() function of the exception object."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Catching Pointers as Exceptions:"}),(0,$e.jsx)("p",{children:"To catch a pointer thrown as an exception, you can use the catch block with a pointer type that matches the thrown pointer type. You can also catch a pointer to a base class to handle exceptions of derived classes. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <stdexcept>\n\n  class MyException : public std::exception {\n  public:\n      const char* what() const noexcept override {\n          return "Custom exception occurred!";\n      }\n  };\n  \n  int main() {\n      try {\n          throw new MyException();  // Throw a pointer to a custom exception object\n      }\n      catch (const MyException* e) {\n          std::cout << "Custom exception caught: " << e->what() << std::endl;\n          delete e;  // Don\'t forget to deallocate the exception object\n      }\n      catch (const std::exception* e) {\n          std::cout << "Exception caught: " << e->what() << std::endl;\n          delete e;  // Deallocate the exception object\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a custom exception class MyException is defined, which inherits from std::exception. A pointer to a MyException object is thrown, and it is caught in the first catch block that matches the pointer type. The message is printed using the what() function. If the first catch block is not executed, the second catch block catches a pointer to std::exception or its derived classes."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"When throwing pointers as exceptions, it's important to properly handle memory deallocation by deleting the thrown objects after they are caught and no longer needed. Also, consider using smart pointers or other resource management techniques to automate memory deallocation in exception handling scenarios."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By throwing and catching pointers as exceptions, you can handle exceptional conditions related to pointers and provide meaningful error messages or take appropriate actions in your code."})]})})}),(0,$e.jsx)("div",{})]})},Rn=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"12. Advanced Pointer Topics:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers and Function Pointers:"}),(0,$e.jsx)("p",{children:"In C++, pointers can also be used to point to functions. Function pointers allow you to store the address of a function and call it through the pointer. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n\nvoid foo() {\n    std::cout << "Hello, from foo!" << std::endl;\n}\n\nvoid bar() {\n    std::cout << "Hello, from bar!" << std::endl;\n}\n\nint main() {\n    void (*funcPtr)();  // Declare a function pointer\n\n    funcPtr = &foo;    // Assign the address of foo to the function pointer\n    funcPtr();         // Call the function through the pointer: Output: Hello, from foo!\n\n    funcPtr = &bar;    // Assign the address of bar to the function pointer\n    funcPtr();         // Call the function through the pointer: Output: Hello, from bar!\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a function pointer funcPtr is declared, which can point to functions taking no arguments and returning void. The function pointer is assigned the addresses of foo and bar, and the functions are called through the pointer."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers and Multidimensional Arrays:"}),(0,$e.jsx)("p",{children:"Pointers can be used to handle multidimensional arrays in C++. A multidimensional array is essentially an array of arrays. By using pointers, you can access and manipulate elements in a multidimensional array. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n\nint main() {\n    int arr[3][3] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} };\n    int* ptr = &arr[0][0];  // Pointer to the first element of the multidimensional array\n\n    for (int i = 0; i < 9; i++) {\n        std::cout << *ptr << " ";\n        ptr++;  // Move to the next element\n    }\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, a 3x3 multidimensional array arr is declared. A pointer ptr is initialized to the address of the first element of the array. By dereferencing the pointer and incrementing it, the elements of the multidimensional array are accessed and printed."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Pointers to Functions with Variable Arguments (Varargs):"}),(0,$e.jsx)("p",{children:"Pointers to functions with variable arguments allow you to create functions that can accept a varying number of arguments. This is typically achieved using the std::va_list type and the [cstdarg]header. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <cstdarg>\n  \n  int sum(int count, ...) {\n      int result = 0;\n      va_list args;\n      va_start(args, count);\n  \n      for (int i = 0; i < count; i++) {\n          int num = va_arg(args, int);\n          result += num;\n      }\n  \n      va_end(args);\n      return result;\n  }\n  \n  int main() {\n      int total = sum(4, 1, 2, 3, 4);\n      std::cout << "Sum: " << total << std::endl;  // Output: Sum: 10\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the sum function takes a variable number of arguments. It uses va_list, va_start, va_arg, and va_end macros from [cstdarg] to handle the variable arguments. The sum function calculates the sum of all the provided arguments."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"These advanced pointer topics allow you to utilize pointers in more complex scenarios, such as function pointers, multidimensional arrays, and functions with variable arguments. Understanding these concepts expands your ability to work with pointers and unlocks additional capabilities in C++."})]})})})})},An=function(){return(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Objects"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, an object is an instance of a class. It is a tangible entity that encapsulates data and behavior defined by its corresponding class. Objects are fundamental building blocks of object-oriented programming (OOP) and enable the creation of modular, reusable, and organized code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about objects in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Class:"}),(0,$e.jsx)("p",{children:"A class is a blueprint or template that defines the properties and behaviors (member variables and member functions) that objects of that class will possess. It serves as a blueprint for creating objects. Objects are created from classes."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Instantiation:"}),(0,$e.jsx)("p",{children:"The process of creating an object from a class is called instantiation. When an object is instantiated, memory is allocated to hold the object, and the constructor of the class is called to initialize the object's state."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Data Members:"}),(0,$e.jsx)("p",{children:" Objects have data members, which are variables defined within the class. These variables hold the state or characteristics of the object. Each object of a class has its own set of data members."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Member functions:"}),(0,$e.jsx)("p",{children:"  Objects also have member functions, also known as methods. Member functions are functions defined within the class and are responsible for performing operations or providing behavior associated with the object. They operate on the data members of the object. "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Access control:"}),(0,$e.jsx)("p",{children:" C++ provides access specifiers, such as public, private, and protected, to control the accessibility of class members. The private members can only be accessed within the class, while public members can be accessed from anywhere. Protected members are accessible within the class and derived classes."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"6. Object-oriented features:"}),(0,$e.jsx)("p",{children:" C++ supports various object-oriented features, such as inheritance, polymorphism, and encapsulation. These features allow for code reuse, modularity, and abstraction."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the creation of an object in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class Car {\n    private:\n        string brand;\n        int year;\n    \n    public:\n        // Constructor\n        Car(string b, int y) {\n            brand = b;\n            year = y;\n        }\n    \n        // Member function\n        void displayInfo() {\n            cout << "Brand: " << brand << ", Year: " << year << endl;\n        }\n    };\n    \n    int main() {\n        // Creating an object of the Car class\n        Car myCar("Tesla", 2022);\n    \n        // Accessing the member function\n        myCar.displayInfo();\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a Car class with private data members (brand and year) and a public member function (displayInfo). We create an object myCar of the Car class by calling its constructor with the appropriate arguments. We then access the member function displayInfo to display the car's information."})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Note that objects can interact with each other by invoking their member functions or accessing their data members, enabling communication and collaboration within the program."})]})]})},kn=function(){return(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Classes"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, a class is a fundamental building block of object-oriented programming (OOP). It is a user-defined data type that encapsulates data and functions (member variables and member functions) into a single entity. Classes provide a blueprint or template for creating objects, which are instances of the class."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about classes in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Declaration:"}),(0,$e.jsx)("p",{children:" A class is declared using the class keyword followed by the class name. The class declaration typically includes member variables and member functions, as well as access specifiers (public, private, protected) that define the visibility and accessibility of the class members."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Member Variables:"}),(0,$e.jsx)("p",{children:" Member variables (also known as data members or attributes) are variables declared within the class. They represent the state or characteristics of the objects created from the class. Each object of the class has its own set of member variables."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Member functions:"}),(0,$e.jsx)("p",{children:" Member functions (also known as methods or member methods) are functions defined within the class. They operate on the member variables of the class and provide behavior or functionality associated with the objects. Member functions can access the member variables and other member functions of the class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Object Creation:"}),(0,$e.jsx)("p",{children:" Objects are created from classes using the class name followed by parentheses. The process of creating an object from a class is called instantiation. Memory is allocated for the object, and the class constructor is called to initialize the object's state."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Encapsulation:"}),(0,$e.jsx)("p",{children:"Classes enable encapsulation, which is the bundling of data and functions together into a single unit. The member variables are typically declared as private or protected, restricting direct access from outside the class. Access to these variables is provided through public member functions, which enforce data integrity and encapsulation."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"6. Access specifiers:"}),(0,$e.jsx)("p",{children:"C++ provides access specifiers to control the accessibility of class members. The three access specifiers are:"}),(0,$e.jsx)("span",{className:"font-semibold",children:"public: "}),(0,$e.jsx)("p",{children:" Members declared as public are accessible from anywhere in the program."}),(0,$e.jsx)("span",{className:"font-semibold",children:"private:"}),(0,$e.jsx)("p",{children:"Members declared as private are only accessible within the class. They cannot be accessed directly from outside the class or by derived classes."}),(0,$e.jsx)("span",{className:"font-semibold",children:"protected:"}),(0,$e.jsx)("p",{children:" Members declared as protected are accessible within the class and by derived classes. They are not accessible outside the class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"7.Constructors and destructors:"}),(0,$e.jsx)("p",{children:"Classes may have special member functions called constructors and destructors. Constructors are called when objects are created and are used to initialize the object's state. Destructors are called when objects are destroyed and are used to clean up resources or perform necessary actions before the object is deallocated."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the declaration and usage of a class in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class Rectangle {\n    private:\n        double length;\n        double width;\n    \n    public:\n        // Constructor\n        Rectangle(double l, double w) {\n            length = l;\n            width = w;\n        }\n    \n        // Member function\n        double calculateArea() {\n            return length * width;\n        }\n    };\n    \n    int main() {\n        // Creating an object of the Rectangle class\n        Rectangle myRectangle(5.0, 3.0);\n    \n        // Accessing the member function\n        double area = myRectangle.calculateArea();\n    \n        cout << "Area: " << area << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a Rectangle class with private member variables (length and width) and a public member function (calculateArea). We create an object myRectangle of the Rectangle class by calling its constructor with the appropriate arguments. We then access the member function calculateArea to calculate the area of the rectangle."})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{children:"Note that classes allow for code reuse, modularity, and abstraction. They provide a way to organize data and behavior into logical units, making the code more structured and easier to maintain."})]})]})},Dn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"4. Member Functions"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, member functions (also known as methods or member methods) are functions that are declared and defined within a class. They operate on the data members of the class and provide behavior or functionality associated with the objects created from the class."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about member functions in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Declaration and Definition:"}),(0,$e.jsx)("p",{children:"Member functions are declared within the class declaration and defined outside the class using the scope resolution operator (::) to specify the class to which they belong. The declaration includes the return type, function name, and parameters (if any). The definition includes the function body, where the actual implementation of the function's behavior is written."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Access Specifiers:"}),(0,$e.jsx)("p",{children:" Member functions can be declared under different access specifiers: public, private, or protected. The access specifier determines the accessibility of the member function. Public member functions are accessible from anywhere in the program. Private member functions can only be accessed within the class itself. Protected member functions are accessible within the class and its derived classes."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Accessing Data Members:"}),(0,$e.jsx)("p",{children:"  Member functions have access to the data members (private, protected, or public) of the class. They can read and modify the values of the data members as required."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Object Context:"}),(0,$e.jsx)("p",{children:" Member functions are invoked using objects of the class. When a member function is called on an object, it operates on the specific instance of the object and can access its data members. Each object of the class has its own set of member variables, so member functions can provide behavior specific to each object."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Constructors and Destructors:"}),(0,$e.jsx)("p",{children:" Special member functions called constructors and destructors are used to create and destroy objects, respectively. Constructors are called when an object is created and are responsible for initializing the object's state. Destructors are called when an object goes out of scope or is explicitly deleted, and they perform necessary cleanup actions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"6. Overloading:"}),(0,$e.jsx)("p",{children:" Like regular functions, member functions can be overloaded. Overloading allows multiple member functions with the same name but different parameters to exist in the same class. This enables the flexibility to provide different versions of the function based on the types or number of arguments."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the usage of the member functions in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class Calculator {\n    private:\n        int result;\n    \n    public:\n        Calculator() {\n            result = 0;\n        }\n    \n        void add(int num) {\n            result += num;\n        }\n    \n        void subtract(int num) {\n            result -= num;\n        }\n    \n        int getResult() {\n            return result;\n        }\n    };\n    \n    int main() {\n        Calculator calc;\n    \n        calc.add(5);\n        calc.subtract(3);\n    \n        int finalResult = calc.getResult();\n        cout << "Final Result: " << finalResult << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a Calculator class with a private data member (result). The class provides three member functions: a default constructor that initializes the result to 0, an add function that adds a number to the result, a subtract function that subtracts a number from the result, and a getResult function that returns the current result. We create an object calc of the Calculator class and use the member functions to perform calculations and retrieve the final result."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Member functions are a fundamental part of classes in C++ and allow objects to exhibit behavior and provide useful functionality. They enable encapsulation, modularity, and code reusability by organizing related operations within the class and operating on the object's data members."})]})})})},Pn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Data Members"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, data members (also known as member variables or attributes) are variables declared within a class. They represent the state or characteristics of the objects created from the class. Each object of the class has its own set of data members."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about data members in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Declaration:"}),(0,$e.jsx)("p",{children:"Data members are declared within the body of the class, typically after the access specifiers (public, private, protected) and before the member functions. They are declared using the same syntax as regular variables, specifying the data type and an optional initialization value."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Accessibility:"}),(0,$e.jsx)("p",{children:"The accessibility of data members is controlled by access specifiers. By default, if no access specifier is specified, the data members are considered private. Private members can only be accessed within the class itself. Public members are accessible from anywhere in the program. Protected members are accessible within the class and its derived classes."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Encapsulation:"}),(0,$e.jsx)("p",{children:" Data members can be encapsulated within a class by declaring them as private or protected. Encapsulation helps in enforcing data integrity and prevents direct access to the internal representation of the class from outside. Access to the data members is provided through public member functions, also known as getters and setters."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Instance-specific:"}),(0,$e.jsx)("p",{children:" Each object of a class has its own copy of the data members. When an object is created, memory is allocated for its data members. This means that changes to the data members of one object do not affect the data members of other objects created from the same class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Initialization:"}),(0,$e.jsx)("p",{children:" Data members can be initialized using constructors. Constructors are special member functions that are called when an object is created. They can take arguments to initialize the data members with specific values. Initialization can also be done using initialization lists in the constructor definition."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the usage of data members in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class Person {\n    private:\n        string name;\n        int age;\n    \n    public:\n        // Constructor\n        Person(string n, int a) {\n            name = n;\n            age = a;\n        }\n    \n        // Getter functions\n        string getName() {\n            return name;\n        }\n    \n        int getAge() {\n            return age;\n        }\n    \n        // Setter functions\n        void setName(string n) {\n            name = n;\n        }\n    \n        void setAge(int a) {\n            age = a;\n        }\n    };\n    \n    int main() {\n        // Creating an object of the Person class\n        Person person("John Doe", 30);\n    \n        // Accessing data members using getter functions\n        cout << "Name: " << person.getName() << endl;\n        cout << "Age: " << person.getAge() << endl;\n    \n        // Modifying data members using setter functions\n        person.setName("Jane Smith");\n        person.setAge(35);\n    \n        // Accessing modified data members\n        cout << "Updated Name: " << person.getName() << endl;\n        cout << "Updated Age: " << person.getAge() << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a Person class with private data members (name and age). We provide public getter functions (getName and getAge) to access the values of the data members, and setter functions (setName and setAge) to modify the values. We create an object person of the Person class using the constructor, and then use the getter and setter functions to access and modify the data members."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Data members allow classes to maintain state and represent the characteristics of the objects they create. They are an essential part of the object-oriented programming paradigm, enabling the encapsulation and manipulation of data within objects."})]})})})},Mn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"5. Encapsulation:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Encapsulation is one of the fundamental principles of object-oriented programming (OOP) and is supported in C++. It is a concept that combines data and functions (methods) into a single unit called a class. Encapsulation allows the bundling of data and functions together, providing data hiding and abstraction."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about encapsulation in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Data Hiding:"}),(0,$e.jsx)("p",{children:"Encapsulation allows the hiding of the internal details and implementation of a class from the outside world. By default, the data members of a class are declared as private, meaning they can only be accessed and modified by the member functions of the class. This prevents direct access to the internal representation of the class and helps maintain data integrity."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Access Specifiers:"}),(0,$e.jsx)("p",{children:" C++ provides three access specifiers: public, private, and protected. These specifiers determine the visibility and accessibility of the class members. Private members are only accessible within the class itself. Public members are accessible from anywhere in the program. Protected members are accessible within the class and its derived classes."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Getter and Setter Functions:"}),(0,$e.jsx)("p",{children:" Encapsulation encourages the use of getter and setter functions to access and modify the private data members of a class. Getter functions (also known as accessor functions) provide read-only access to the data members, allowing their values to be retrieved. Setter functions (also known as mutator functions) provide a way to modify the values of the data members, often with additional checks or validations."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Abstraction:"}),(0,$e.jsx)("p",{children:"  Encapsulation facilitates abstraction by providing a simplified and logical interface to interact with the class. The internal implementation details are hidden, and only the essential functionalities are exposed through the public member functions. This allows users of the class to focus on the high-level behavior and not worry about the underlying implementation."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Data Integrity and Security:"}),(0,$e.jsx)("p",{children:"  Encapsulation helps maintain data integrity by controlling access to the data members through the member functions. The class can enforce constraints, validations, and business rules when modifying the data, ensuring that the data remains consistent and valid. Additionally, encapsulation provides a level of security by preventing unauthorized access to sensitive data."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"6. Code Organization and Modularity:"}),(0,$e.jsx)("p",{children:"  Encapsulation promotes code organization and modularity by grouping related data and functions into a single unit. This makes the code easier to understand, maintain, and extend. Changes to the internal implementation of the class do not affect the code using the class, as long as the public interface remains the same."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates encapsulation in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class BankAccount {\n    private:\n        string accountNumber;\n        double balance;\n    \n    public:\n        BankAccount(string accNum, double initialBalance) {\n            accountNumber = accNum;\n            balance = initialBalance;\n        }\n    \n        void deposit(double amount) {\n            balance += amount;\n        }\n    \n        void withdraw(double amount) {\n            if (balance >= amount) {\n                balance -= amount;\n            }\n        }\n    \n        double getBalance() {\n            return balance;\n        }\n    };\n    \n    int main() {\n        BankAccount myAccount("123456789", 1000.0);\n    \n        myAccount.deposit(500.0);\n        myAccount.withdraw(200.0);\n    \n        double currentBalance = myAccount.getBalance();\n        cout << "Current Balance: " << currentBalance << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a BankAccount class that encapsulates the account number and balance as private data members. Public member functions (deposit, withdraw, getBalance) provide controlled access to the private data members. The class ensures that the balance is not directly modified from outside the class, enforcing data integrity. The user interacts with the class through the public interface, performing actions such as depositing and withdrawing money."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Encapsulation promotes information hiding, improves code organization, and enhances code reusability. It allows for better control over access to data and behavior, leading to more robust and maintainable code."})]})})})},Ln=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"6. Access Specifiers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, access specifiers are keywords that control the visibility and accessibility of class members (data members and member functions) from different parts of the program. There are three access specifiers: public, private, and protected. These specifiers are used within a class to specify the accessibility of its members."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are the details of each access specifier in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Public Access Specifiers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Members declared as public are accessible from anywhere in the program, including outside the class."}),(0,$e.jsx)("p",{children:"Public members can be accessed by objects of the class, as well as by other functions and classes."}),(0,$e.jsx)("p",{children:"Public members are typically used to provide the interface or public API of the class, allowing users of the class to interact with its functionality."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Private Access Specifiers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Members declared as private are only accessible within the class itself."}),(0,$e.jsx)("p",{children:"Private members cannot be accessed directly from outside the class or by derived classes."}),(0,$e.jsx)("p",{children:"Private members are often used for internal implementation details and data that should not be directly modified or accessed by external code."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Protected Access Specifiers:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Members declared as protected have similar access restrictions as private members, but with an additional capability: they can be accessed by derived classes."}),(0,$e.jsx)("p",{children:"Protected members are accessible within the class itself and by derived classes that inherit from the base class."}),(0,$e.jsx)("p",{children:"Protected members are useful when you want to provide access to derived classes while still keeping them hidden from the outside world."}),(0,$e.jsx)("p",{children:"The access specifiers are specified within the class definition and apply to all subsequent members declared after the specifier until another specifier is encountered or the end of the class is reached. By default, if no access specifier is specified, the members are considered private."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the usage of access specifiers in C++:"}),(0,$e.jsx)(Gt,{children:"\n  class MyClass {\n    public:\n        int publicVar;      // Public member variable\n    \n        void publicMethod() {\n            // Public member function\n        }\n    \n    private:\n        int privateVar;     // Private member variable\n    \n        void privateMethod() {\n            // Private member function\n        }\n    \n    protected:\n        int protectedVar;   // Protected member variable\n    \n        void protectedMethod() {\n            // Protected member function\n        }\n    };\n    \n    int main() {\n        MyClass obj;\n    \n        obj.publicVar = 10;        // Public member accessed directly\n        obj.publicMethod();        // Public member function called\n    \n        // obj.privateVar = 20;    // Error: Private member cannot be accessed\n        // obj.privateMethod();    // Error: Private member function cannot be called\n    \n        // obj.protectedVar = 30;  // Error: Protected member cannot be accessed\n        // obj.protectedMethod();  // Error: Protected member function cannot be called\n    \n        return 0;\n    }\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a MyClass class with members declared under different access specifiers. The publicVar and publicMethod members are public, allowing them to be accessed and called directly. The privateVar and privateMethod members are private, so they cannot be accessed or called from outside the class. The protectedVar and protectedMethod members are protected, making them accessible only within the class and by derived classes."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Access specifiers provide control over the visibility and accessibility of class members, allowing for proper encapsulation and information hiding. They help enforce data integrity, prevent unauthorized access, and define the interface of the class."})]})})})},Fn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"7. Constructors:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, constructors are special member functions of a class that are called automatically when an object of the class is created. Constructors are responsible for initializing the object's data members and setting up its initial state. They have the same name as the class and do not have a return type (not even void)."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about constructors in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Initialization:"}),(0,$e.jsx)("p",{children:" Constructors initialize the data members of the class to specific values or perform any necessary setup operations."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Default Constructor:"}),(0,$e.jsx)("p",{children:" If a class does not have any constructor defined, the compiler automatically generates a default constructor. The default constructor has no parameters and performs no initialization. It is used when an object is created without explicitly providing constructor arguments."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Parameterized Constructor:"}),(0,$e.jsx)("p",{children:" A parameterized constructor is defined with one or more parameters. It allows you to specify values for the data members when creating an object. The parameters of the constructor are used to initialize the corresponding data members."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Multiple Constructors (Constructor Overloading):"}),(0,$e.jsx)("p",{children:"  C++ allows a class to have multiple constructors with different parameter lists. This is known as constructor overloading. It allows objects to be created with different initialization options."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Initialization Lists:"}),(0,$e.jsx)("p",{children:" Constructors can use initialization lists to initialize data members directly. Initialization lists appear after the constructor's parameter list and use a colon (:) to separate the parameters from the initialization expressions. Initialization lists can be more efficient than assigning values inside the constructor body."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"6. Copy Constructor:"}),(0,$e.jsx)("p",{children:" The copy constructor is a special constructor that creates a new object by copying the values of an existing object of the same class. It is called when an object is initialized with another object of the same class, passed by value, or returned by value from a function."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"7. Explicit Constructors"}),(0,$e.jsx)("p",{children:" By default, constructors can be used for implicit conversions, which means they can be invoked implicitly by the compiler. However, you can use the explicit keyword to declare a constructor as explicit, which prevents it from being used in implicit conversions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"8. Initialization Order"}),(0,$e.jsx)("p",{children:"  When a class has multiple data members, they are initialized in the order of their declaration in the class, regardless of their order in the initialization list. It is important to ensure proper initialization order to avoid potential issues."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"9. Destructors"}),(0,$e.jsx)("p",{children:"  Destructors are special member functions that are called automatically when an object goes out of scope or is explicitly deleted. They are responsible for releasing resources and performing necessary cleanup operations."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the usage of constructors in C++:"}),(0,$e.jsx)(Gt,{children:'\n    class Person {\n      private:\n          string name;\n          int age;\n      \n      public:\n          // Default Constructor\n          Person() {\n              name = "Unknown";\n              age = 0;\n          }\n      \n          // Parameterized Constructor\n          Person(string n, int a) {\n              name = n;\n              age = a;\n          }\n      \n          // Copy Constructor\n          Person(const Person& other) {\n              name = other.name;\n              age = other.age;\n          }\n      \n          void displayInfo() {\n              cout << "Name: " << name << endl;\n              cout << "Age: " << age << endl;\n          }\n      };\n      \n      int main() {\n          Person person1;  // Default constructor is called\n      \n          Person person2("John Doe", 30);  // Parameterized constructor is called\n      \n          Person person3 = person2;  // Copy constructor is called\n      \n          person1.displayInfo();\n          person2.displayInfo();\n          person3.displayInfo();\n      \n          return 0;\n      }\n    '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a Person class with three constructors: a default constructor, a parameterized constructor, and a copy constructor. The default constructor initializes the data members with default values. The parameterized constructor takes arguments to initialize the data members with specific values. The copy constructor copies the values from an existing Person object to create a new object."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we create three Person objects using different constructors. We then call the displayInfo() member function to print the information of each person."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Constructors provide a way to initialize objects of a class and ensure that the object is in a valid and usable state when created. They play a crucial role in object creation and initialization in C++."})]})})})},Un=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"8. Destructors:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, destructors are special member functions of a class that are called automatically when an object of the class goes out of scope or is explicitly deleted. Destructors are responsible for releasing resources and performing necessary cleanup operations before an object is destroyed."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about destructors in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Syntax:"}),(0,$e.jsx)("p",{children:" A destructor is defined using the same name as the class preceded by a tilde (~) symbol. It does not have any return type and does not take any parameters. There can only be one destructor for a class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Automatic Invocation:"}),(0,$e.jsx)("p",{children:" Destructors are automatically invoked when an object goes out of scope, such as when a local object in a function is about to be destroyed, or when an object defined in a block is no longer in scope. The destructor is also called when an object is explicitly deleted using the delete keyword."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Cleanup Operations:"}),(0,$e.jsx)("p",{children:" Destructors are used to perform cleanup operations before the object is destroyed. This can include releasing dynamically allocated memory, closing files, releasing system resources, or any other necessary cleanup tasks."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Inherited Destructors:"}),(0,$e.jsx)("p",{children:" If a class inherits from a base class, the derived class automatically inherits the base class's destructor. When an object of the derived class is destroyed, both the derived class's destructor and the base class's destructor are called, in the reverse order of construction."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Destructors:"}),(0,$e.jsx)("p",{children:" If a class is designed to be used as a base class, it is good practice to declare the destructor as virtual. This ensures that when an object of a derived class is destroyed through a pointer to the base class, the destructor of the derived class is called as well. This is important to avoid memory leaks and ensure proper cleanup of resources in polymorphic scenarios."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates the usage of destructors in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class Resource {\n    private:\n        int* data;\n    \n    public:\n        Resource() {\n            data = new int[100];  // Dynamically allocate memory\n            cout << "Resource acquired." << endl;\n        }\n    \n        ~Resource() {\n            delete[] data;  // Release dynamically allocated memory\n            cout << "Resource released." << endl;\n        }\n    };\n    \n    int main() {\n        {\n            Resource res;  // Object of Resource created\n    \n            // Use the resource...\n    \n        }  // Object goes out of scope, destructor is automatically called\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a Resource class that dynamically allocates memory in its constructor and releases it in its destructor. In the main() function, we create an object of the Resource class within a block. As the block ends, the object goes out of scope, and the destructor is automatically called, releasing the allocated memory."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Destructors are essential for proper resource management and cleanup in C++. They ensure that objects release resources and perform necessary cleanup operations before they are destroyed. It is important to implement destructors correctly, especially when dealing with dynamically allocated memory or other scarce resources, to prevent memory leaks and resource leaks."})]})})})},Bn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"9. Inheritance:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Inheritance is a fundamental concept in object-oriented programming (OOP) that allows a class to inherit properties and behaviors from another class. In C++, inheritance provides a way to create new classes (derived classes) based on existing classes (base classes). The derived classes inherit the members (data members and member functions) of the base class and can add new members or modify the inherited members as needed."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about inheritance in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Base Class and Derived Class:"}),(0,$e.jsx)("p",{children:"  Inheritance involves two types of classes - a base class (also known as a parent class or superclass) and a derived class (also known as a child class or subclass). The base class is the existing class from which properties and behaviors are inherited, and the derived class is the new class that inherits those properties and behaviors."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Syntax:"}),(0,$e.jsx)("p",{children:" In C++, inheritance is declared using the class keyword, followed by the derived class name and a colon (:), followed by the access specifier and the name of the base class. Multiple base classes can be specified by separating them with commas."}),(0,$e.jsx)(Gt,{children:"\n  class DerivedClassName : access-specifier BaseClassName\n{\n    // Derived class members\n};\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3.Types of Inheritance:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Public Inheritance:"}),(0,$e.jsx)("p",{children:'In public inheritance, public members of the base class become public members of the derived class, protected members become protected members, and private members are not directly accessible. It represents an "is-a" relationship, where the derived class is a specialized version of the base class.'}),(0,$e.jsx)("li",{className:"pt-4",children:"Protected Inheritance:"}),(0,$e.jsx)("p",{children:"In protected inheritance, public and protected members of the base class become protected members of the derived class. It restricts access to the base class members in the derived class and is less commonly used."}),(0,$e.jsx)("li",{className:"pt-4",children:"Private Inheritance:"}),(0,$e.jsx)("p",{children:"In private inheritance, public and protected members of the base class become private members of the derived class. It is the most restrictive form of inheritance and is typically used for implementation details or as a way to reuse code without exposing the base class interface."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Inherited Members:"}),(0,$e.jsx)("p",{children:" The derived class inherits the data members and member functions of the base class. This means the derived class can access and use these inherited members as if they were defined within the derived class itself. Inherited members can be overridden or extended in the derived class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Overriding Members:"}),(0,$e.jsx)("p",{children:" In the derived class, it is possible to override the base class's member functions by providing a new definition with the same name and signature. This allows the derived class to provide its own implementation of the function, which may be different from the base class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"6. Access Control"}),(0,$e.jsx)("p",{children:" The access specifiers (public, protected, private) in the base class determine the accessibility of the inherited members in the derived class. Public members of the base class remain public in the derived class, protected members become protected, and private members are not directly accessible."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"7. Constructor and Destructor Inheritance:"}),(0,$e.jsx)("p",{children:" Constructors and destructors are not inherited by derived classes. However, the derived class's constructor can call the base class's constructor explicitly to initialize the inherited members."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"8. Multiple Inheritance:"}),(0,$e.jsx)("p",{children:" C++ supports multiple inheritance, which means a derived class can inherit from multiple base classes. Multiple inheritance allows a class to combine the properties and behaviors of multiple classes. However, it requires careful handling to avoid ambiguity and conflicts between the inherited members."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates inheritance in C++:"}),(0,$e.jsx)(Gt,{children:'\n  class Shape {\n    protected:\n        int width;\n        int height;\n    \n    public:\n        void setDimensions(int w, int h) {\n            width = w;\n            height = h;\n        }\n    };\n    \n    class Rectangle : public Shape {\n    public:\n        int getArea() {\n            return width * height;\n        }\n    };\n    \n    int main() {\n        Rectangle rect;\n        rect.setDimensions(5, 3);\n        cout << "Area of the rectangle: " << rect.getArea() << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we have a Shape class as the base class with two data members width and height and a member function setDimensions(). The Rectangle class is derived from the Shape class using public inheritance. It inherits the width and height members from the base class and defines its own member function getArea() to calculate the area of the rectangle."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we create an object of the Rectangle class and set its dimensions using the setDimensions() function inherited from the Shape class. We then call the getArea() function to calculate and print the area of the rectangle."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Inheritance provides a powerful mechanism for code reuse, extensibility, and creating class hierarchies in C++. It allows you to define common properties and behaviors in a base class and specialize or modify them in derived classes."})]})})})},Gn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"10. Polymorphism:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Polymorphism is a key concept in object-oriented programming (OOP) that allows objects of different classes to be treated as objects of a common base class. Polymorphism enables code to be written that can work with objects of different types, providing flexibility and extensibility to the code."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, polymorphism is primarily achieved through two mechanisms:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Virtual Functions:"}),(0,$e.jsx)("p",{children:"  Virtual functions are member functions declared in the base class and overridden in the derived classes. They allow the derived class to provide its own implementation of the function. Virtual functions are declared using the virtual keyword in the base class and can be overridden in the derived classes using the same function signature."}),(0,$e.jsx)("p",{children:" When a virtual function is called through a base class pointer or reference pointing to an object of a derived class, the appropriate derived class's implementation is executed. This is known as dynamic or late binding. The actual function called is determined at runtime based on the type of the object being pointed to or referenced."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Function Overriding:"}),(0,$e.jsx)("p",{children:" Function overriding is the process of providing a different implementation of a virtual function in a derived class. The overriding function in the derived class must have the same function signature (name and parameters) as the virtual function in the base class. By overriding virtual functions, you can customize the behavior of the derived class while adhering to the base class's interface."}),(0,$e.jsx)("p",{children:" Polymorphism allows objects to be used in a generic and uniform way, regardless of their specific types. It provides the ability to write code that can operate on a collection of objects, treating them as objects of a common base class, without needing to know the specific derived class types. This enables code reuse, extensibility, and flexibility."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates polymorphism in C++ using virtual functions:"}),(0,$e.jsx)(Gt,{children:'\n  class Shape {\n    public:\n        virtual void draw() {\n            cout << "Drawing a shape." << endl;\n        }\n    };\n    \n    class Circle : public Shape {\n    public:\n        void draw() override {\n            cout << "Drawing a circle." << endl;\n        }\n    };\n    \n    class Square : public Shape {\n    public:\n        void draw() override {\n            cout << "Drawing a square." << endl;\n        }\n    };\n    \n    int main() {\n        Shape* shapePtr;\n        Circle circle;\n        Square square;\n    \n        shapePtr = &circle;\n        shapePtr->draw();  // Calls the draw() function of the Circle class\n    \n        shapePtr = &square;\n        shapePtr->draw();  // Calls the draw() function of the Square class\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In the example above, we have a Shape base class with a virtual function draw(). Two derived classes, Circle and Square, override the draw() function with their own implementations."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we declare a pointer shapePtr of type Shape*. We then create objects of Circle and Square and assign their addresses to the shapePtr. By calling the draw() function through the shapePtr , the appropriate overridden function is executed based on the actual type of the object being pointed to."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\nDrawing a circle.\nDrawing a square.\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Polymorphism allows us to treat objects of different derived classes uniformly through a common base class interface. It provides flexibility and enables code to be written that can work with different types of objects dynamically at runtime."})]})})})},Hn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"12. Operator Overloading:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Operator overloading in C++ allows you to redefine the behavior of operators when used with objects of user-defined classes. It provides a way to extend the functionality of operators to work with user-defined types in a meaningful and intuitive way."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"C++ supports overloading of many operators, including arithmetic operators, comparison operators, assignment operators, logical operators, and more."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'Operator overloading is achieved by defining special member functions or global functions called "operator functions" that specify the behavior of operators when used with objects of the class.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points to keep in mind when overloading operators in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Syntax:"}),(0,$e.jsx)("p",{children:" Operator functions have a specific syntax. For example, to overload the addition operator (+), you would define a function named operator+(). The operator keyword is followed by the operator symbol without spaces."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Member Functions vs Global Functions:"}),(0,$e.jsx)("p",{children:" Operator functions can be defined as member functions of the class or as global functions. Member functions are called using the object of the class on the left-hand side of the operator. Global functions are called with two arguments, the left-hand operand and the right-hand operand."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Number of Arguments:"}),(0,$e.jsx)("p",{children:"The number of arguments required by an operator function depends on the operator being overloaded. For binary operators (e.g., +, -, *), the operator function typically takes two arguments. For unary operators (e.g., ++, --), the operator function takes only one argument."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Return Type:"}),(0,$e.jsx)("p",{children:" The return type of an operator function depends on the operator being overloaded. For most operators, including arithmetic and comparison operators, the return type is typically the resulting value or a reference to the object. For assignment operators (=, +=, -=), the return type is typically a reference to the modified object."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Access Specifiers:"}),(0,$e.jsx)("p",{children:" Operator functions can be declared as public, private, or protected like other member functions. The choice of access specifier depends on the desired accessibility of the operator function."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates operator overloading for addition (+) and equality (==) operators:"}),(0,$e.jsx)(Gt,{children:'\n  class Point {\n    private:\n        int x;\n        int y;\n    \n    public:\n        Point(int a, int b) : x(a), y(b) {}\n    \n        // Overloading the addition operator\n        Point operator+(const Point& other) {\n            return Point(x + other.x, y + other.y);\n        }\n    \n        // Overloading the equality operator\n        bool operator==(const Point& other) {\n            return (x == other.x && y == other.y);\n        }\n    \n        void display() {\n            cout << "(" << x << ", " << y << ")" << endl;\n        }\n    };\n    \n    int main() {\n        Point p1(2, 3);\n        Point p2(4, 6);\n    \n        Point p3 = p1 + p2;  // Using the overloaded addition operator\n        p3.display();\n    \n        bool result = (p1 == p2);  // Using the overloaded equality operator\n        cout << "p1 and p2 are equal: " << (result ? "true" : "false") << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In the example above, we define a Point class to represent 2D points. We overload the addition operator (+) and equality operator (==) by defining the operator+() and operator==() member functions."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In the main() function, we create two Point objects, p1 and p2. We use the overloaded addition operator to add p1 and p2, storing the result in p3. We then display the coordinates of p3."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" Next, we use the overloaded equality operator to compare p1 and p2, storing the result in the result variable. We print whether p1 and p2 are equal based on the result."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\n(6, 9)\np1 and p2 are equal: false\n  "}),(0,$e.jsx)("p",{className:"text-justify pt--4",children:"Operator overloading in C++ allows you to write code that works with user-defined types in a natural and intuitive way, similar to how built-in types and objects are used. It enhances code readability, reusability, and expressiveness."})]})})})},zn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"11. Overloading:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Overloading in C++ refers to the ability to define multiple functions or operators with the same name but different parameters or argument types. This allows different variations of a function or operator to be used based on the type or number of arguments provided."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"There are two main types of overloading in C++:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Function Overloading:"}),(0,$e.jsx)("p",{children:" Function overloading involves defining multiple functions with the same name but different parameter lists. The compiler determines which function to call based on the number, order, and types of the arguments passed during the function call. The return type of the function is not considered for overloading."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" Here's an example of function overloading:"}),(0,$e.jsx)(Gt,{children:'\n  void print(int num) {\n    cout << "Printing an integer: " << num << endl;\n}\n\nvoid print(double num) {\n    cout << "Printing a double: " << num << endl;\n}\n\nint main() {\n    print(10);\n    print(3.14);\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we have two functions named print(). One takes an int argument, and the other takes a double argument. The appropriate function is called based on the type of the argument passed."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\n  Printing an integer: 10\n  Printing a double: 3.14\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Operator Overloading:"}),(0,$e.jsx)("p",{children:" Operator overloading allows you to redefine the behavior of operators when used with objects of a user-defined class. It allows you to extend the functionality of operators to work with user-defined types in a meaningful way."}),(0,$e.jsx)("p",{children:' Operator overloading is achieved by defining special member functions or global functions called "operator functions" that specify the behavior of operators when used with objects of the class.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of operator overloading:"}),(0,$e.jsx)(Gt,{children:'\n  class Complex {\n    private:\n        double real;\n        double imaginary;\n    \n    public:\n        Complex(double r, double i) : real(r), imaginary(i) {}\n    \n        Complex operator+(const Complex& other) {\n            return Complex(real + other.real, imaginary + other.imaginary);\n        }\n    \n        void display() {\n            cout << real << " + " << imaginary << "i" << endl;\n        }\n    };\n    \n    int main() {\n        Complex c1(2.5, 3.7);\n        Complex c2(1.8, 4.2);\n        Complex result = c1 + c2;\n    \n        result.display();\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In the example above, we define a Complex class to represent complex numbers. We overload the + operator by defining the operator+() member function. This allows us to add two Complex objects using the + operator."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we create two Complex objects, c1 and c2, and add them using the + operator. The result is stored in the result object, which is then displayed."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\n  4.3 + 7.9i\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Overloading provides a way to write more intuitive and expressive code by using the same function or operator name for different variations of behavior. It enhances code readability and allows you to work with different data types or objects in a consistent manner."})]})})})},Yn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"13. Static Members:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, static members are members of a class that are shared among all instances of the class. Unlike regular members, which have a separate copy for each object of the class, static members are associated with the class itself rather than individual objects."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"There are two types of static members in C++: static data members and static member functions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"1. Static Data Members:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Static data members are variables that are declared with the static keyword inside a class."}),(0,$e.jsx)("li",{className:"pt-4",children:"They are shared among all objects of the class."}),(0,$e.jsx)("li",{className:"pt-4",children:"Static data members must be defined outside the class declaration, typically in the source file (.cpp), using the class name and the scope resolution operator :: ."}),(0,$e.jsx)("li",{className:"pt-4",children:"Static data members can be accessed directly using the class name followed by the scope resolution operator ::"})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example to illustrate static data members:"}),(0,$e.jsx)(Gt,{children:'\n  class MyClass {\n    public:\n        static int count;\n        int id;\n    \n        MyClass() {\n            count++;\n            id = count;\n        }\n    };\n    \n    int MyClass::count = 0;\n    \n    int main() {\n        MyClass obj1;\n        MyClass obj2;\n        MyClass obj3;\n    \n        cout << "Object 1 ID: " << obj1.id << endl;\n        cout << "Object 2 ID: " << obj2.id << endl;\n        cout << "Object 3 ID: " << obj3.id << endl;\n        cout << "Total objects: " << MyClass::count << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we have a class MyClass with a static data member count and a regular data member id. The constructor of the class increments the count and assigns the current value to id for each object created."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The static data member count is defined outside the class using the class name MyClass::count = 0; ."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we create three objects of MyClass. Each object's id is assigned a unique value based on the count of objects created. We access the static data member count using the class name and display the IDs and the total number of objects."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\nObject 1 ID: 1\nObject 2 ID: 2\nObject 3 ID: 3\nTotal objects: 3\n\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"2. Static Member Functions:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Static member functions are functions declared with the static keyword inside a class."}),(0,$e.jsx)("li",{className:"pt-4",children:"They do not have access to the this pointer, which means they cannot access non-static data members or invoke non-static member functions directly."}),(0,$e.jsx)("li",{className:"pt-4",children:"Static member functions can be called using the class name followed by the scope resolution operator : ."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Here's an example to illustrate static member functions:"}),(0,$e.jsx)(Gt,{children:'\n  class MathUtils {\n    public:\n        static int add(int a, int b) {\n            return a + b;\n        }\n    };\n    \n    int main() {\n        int result = MathUtils::add(5, 3);\n        cout << "Result: " << result << endl;\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we have a class MathUtils with a static member function add()."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The add() function takes two integers as arguments and returns their sum."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"We call the static member function using the class name MathUtils::add() and store the result in the result variable."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\n  Result: 8\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Static members in C++ provide a way to have shared data or behavior across all objects of a class without the need for individual copies. They can be used to maintain common information or perform operations that are independent of any particular object of the class."})]})})})},qn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"14. Friend Functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, a friend function is a function that is granted access to the private and protected members of a class. It is declared inside the class but is not a member of the class itself. Friend functions can be either regular functions or other class methods."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key points about friend functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"1. Declaration:"}),(0,$e.jsx)("p",{children:" To declare a friend function, the friend keyword is used inside the class declaration, preceding the function prototype. This declaration provides access to the private and protected members of the class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"2. Scope:"}),(0,$e.jsx)("p",{children:"  Friend functions are not members of the class. They have access to the class's private and protected members but do not have an implicit \u2018this\u2019 pointer. They can't be called using an object of the class; instead, they are called like regular functions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"3. Access to Members:"}),(0,$e.jsx)("p",{children:" Friend functions can access private and protected members of the class, including private data members and private member functions."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"4. Definition:"}),(0,$e.jsx)("p",{children:" The friend function is defined outside the class declaration, typically in the source file (.cpp). However, the function is still declared as a friend inside the class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("span",{className:"font-semibold",children:"5. Namespace:"}),(0,$e.jsx)("p",{children:" Friend functions are not members of the class's namespace. They are defined outside the class's namespace but can be defined in the same namespace as the class."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example to illustrate the usage of a friend function:"}),(0,$e.jsx)(Gt,{children:'\n  class MyClass {\n    private:\n        int privateData;\n    \n    public:\n        MyClass(int data) : privateData(data) {}\n    \n        friend void friendFunction(const MyClass& obj);\n    };\n    \n    void friendFunction(const MyClass& obj) {\n        cout << "Friend function accessing private data: " << obj.privateData << endl;\n    }\n    \n    int main() {\n        MyClass obj(42);\n        friendFunction(obj);\n    \n        return 0;\n    }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we have a class MyClass with a private data member privateData. Inside the class, we declare the friendFunction() as a friend function using the friend keyword."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:" In the main() function, we create an object of MyClass named obj and pass it to the friendFunction(). The friend function can access the private data member privateData of the MyClass object obj."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output of the program will be:"}),(0,$e.jsx)(Gt,{children:"\n  Friend function accessing private data: 42\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Friend functions are useful in scenarios where a function needs to access private or protected members of a class without being a member of that class. However, they should be used judiciously, as they break encapsulation to some extent and can reduce the encapsulation benefits of object-oriented programming."})]})})})},Vn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"15. Templates:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, templates provide a way to write generic code that can work with different data types without having to rewrite the code for each specific type. Templates allow you to define classes and functions that are parameterized by one or more types."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Templates are powerful constructs in C++ that enable you to create reusable code components. There are two main types of templates in C++: function templates and class templates."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"1. Function Templates:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Function templates allow you to define a blueprint for a function that can operate on multiple data types."}),(0,$e.jsx)("li",{className:"pt-4",children:"The template parameters are specified using the template keyword, followed by a list of template parameters in angle brackets."}),(0,$e.jsx)("li",{className:"pt-4",children:"Within the function template, the template parameters can be used as placeholders for the types used in the function."}),(0,$e.jsx)("li",{className:"pt-4",children:"The function template is instantiated with a specific type when it is called, and the compiler generates the appropriate function code based on the provided type."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of a function template that swaps two values:"}),(0,$e.jsx)(Gt,{children:"\n  template <typename T>\nvoid swapValues(T& a, T& b) {\n    T temp = a;\n    a = b;\n    b = temp;\n}\n\nint main() {\n    int x = 10, y = 20;\n    swapValues(x, y);\n\n    double a = 3.14, b = 2.71;\n    swapValues(a, b);\n\n    return 0;\n}\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a function template swapValues() that takes two parameters of type T and swaps their values. The template parameter T serves as a placeholder for the actual type used when the function is called."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we demonstrate the usage of the swapValues() function template with both int and double types. The compiler generates separate code for each type based on the template instantiation."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"2. Class Templates:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Class templates allow you to define a generic class that can be instantiated with different types."}),(0,$e.jsx)("li",{className:"pt-4",children:"Similar to function templates, class templates are defined using the template keyword followed by a list of template parameters in angle brackets."}),(0,$e.jsx)("li",{className:"pt-4",children:"Within the class template, the template parameters can be used as placeholders for the types used in the class."}),(0,$e.jsx)("li",{className:"pt-4",children:"The class template is instantiated with a specific type when objects of the class are created, and the compiler generates the appropriate class code based on the provided type."})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Here's an example of a class that represents a generic stack:"}),(0,$e.jsx)(Gt,{children:'\n  template <typename T>\nclass Stack {\nprivate:\n    vector<T> elements;\n\npublic:\n    void push(const T& item) {\n        elements.push_back(item);\n    }\n\n    void pop() {\n        elements.pop_back();\n    }\n\n    T top() const {\n        return elements.back();\n    }\n\n    bool empty() const {\n        return elements.empty();\n    }\n};\n\nint main() {\n    Stack<int> intStack;\n    intStack.push(10);\n    intStack.push(20);\n    intStack.push(30);\n\n    Stack<string> stringStack;\n    stringStack.push("Hello");\n    stringStack.push("World");\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the example above, we define a class template Stack that represents a generic stack. The template parameter T is used as a placeholder for the element type of the stack."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main() function, we create two instances of the Stack class, one with int type and another with string type. The compiler generates separate code for each type based on the template instantiation."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Templates provide a powerful mechanism for code reuse and enable you to write generic algorithms and data structures that can work with different types. They are widely used in C++ to create flexible and efficient code components that can adapt to various data types."})]})})})},Wn=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Arrays are a way to store multiple values of the same type in a single variable. They provide a convenient and organized way to work with collections of data. Let's explain array declaration, why arrays are used, how they work, and provide an easy example for better understanding."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array Declaration"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array declaration is the process of creating an array variable in a programming language. It involves specifying the type of data the array will store and the size or number of elements it can hold."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Why are Arrays Used?"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Collection of Data:"})," Arrays allow us to store and organize multiple values of the same type in a single variable. For example, we can store a list of numbers, names, or any other data in an array."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Easy Access :"})," Arrays provide a way to access individual elements by their position or index within the array. This makes it easy to retrieve or manipulate specific data within the collection."]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"How do Arrays Work?"}),(0,$e.jsx)("p",{className:"text-justify pt-3",children:"Arrays work by allocating a contiguous block of memory to store the elements. Each element is assigned a unique index starting from 0, indicating its position within the array. The elements can be accessed using these indices"}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("p",{children:"Here's a simple example in C++ to demonstrate array declaration and usage:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\nint main() {\n    // Array declaration and initialization\n    int numbers[5] = {2, 4, 6, 8, 10};\n\n    // Accessing array elements\n    std::cout << "Element at index 0: " << numbers[0] << std::endl;\n    std::cout << "Element at index 2: " << numbers[2] << std::endl;\n    std::cout << "Element at index 4: " << numbers[4] << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array Initialization"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array initialization is the process of assigning initial values to the elements of an array when it is created. It allows us to provide the initial data for the array right from the start. Let's explain array initialization, why it is used, how it works, and provide a real-life example with easy-to-understand code."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Why is Array Initialization Used?"})," Array initialization is used to set the initial values of the elements in an array. It helps in defining the initial state of the array and provides a way to specify the data the array will hold. By initializing an array, we can avoid the need to manually assign values to each element after the array is created."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"How Does Array Initialization Work?"})," Array initialization can be done in several ways, depending on the programming language. Some common methods include:"]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Initializing with values explicitly: "}),(0,$e.jsx)(Gt,{children:"\n  int array1[5] = {1, 2, 3, 4, 5};\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Initializing with fewer values (remaining elements are zero-initialized): "}),(0,$e.jsx)(Gt,{children:"\n  int array2[5] = {1, 2};\n  // The remaining elements array2[2], array2[3], and array2[4] are initialized to 0.\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Initializing with zero-initialized values: "}),(0,$e.jsx)(Gt,{children:"\n  int array3[5] = {};  // All elements are initialized to 0.\n"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Initializing using a loop:"}),(0,$e.jsx)(Gt,{children:"\n  int array6[5];\nfor (int i = 0; i < 5; i++) {\n    array6[i] = i + 1;\n}\n  "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Please note that the array size must be known at compile-time in C++. If you need a dynamically-sized array, consider using std::vector from the Standard Library instead."}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Accessing Array Elements"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Accessing array elements means retrieving the values stored in specific positions or indices within an array. It allows us to work with individual elements of an array for further processing or manipulation. Let's explain how to access array elements, why it is important, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Why is Accessing Array Elements Important?"})," Accessing array elements is important because it allows us to retrieve and work with specific data stored in an array. It enables us to perform calculations, comparisons, or any other operations on individual elements, providing us with flexibility and control over the data."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"How to Access Array Elements in C++?"})," In C++, array elements can be accessed using square brackets [] along with the index value inside them. The index represents the position of the element in the array. Array indices start from 0 for the first element and go up to the size of the array minus one."]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Here's a real-life example in C++ to demonstrate accessing array elements:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\nint main() {\n    // Array of favorite fruits\n    std::string fruits[3] = {"apple", "banana", "orange"};\n\n    // Accessing individual array elements\n    std::cout << "My favorite fruits:" << std::endl;\n    std::cout << "1. " << fruits[0] << std::endl;\n    std::cout << "2. " << fruits[1] << std::endl;\n    std::cout << "3. " << fruits[2] << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:'In this example, we have an array called fruits that stores our favorite fruits. The array is initialized with three string values: "apple", "banana", and "orange".'}),(0,$e.jsx)("p",{children:"To access individual array elements, we use the square brackets [] after the array name, followed by the index of the element we want to access. In this case, we access elements with indices 0, 1, and 2."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"The code then prints the accessed elements to the console, displaying our favorite fruits:"}),(0,$e.jsx)(Gt,{children:"\nMy favorite fruits:\n1. apple\n2. banana\n3. orange\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this real-life example, we can imagine having a list of our favorite fruits stored in the fruits array. By accessing the array elements using their respective indices, we can display the fruits one by one, just like listing our favorite fruits."}),(0,$e.jsx)("p",{children:"Accessing array elements is essential when we want to work with individual values within an array. It allows us to retrieve specific data and perform operations or manipulations on them, providing us with control and flexibility over the data stored in the array."}),(0,$e.jsx)("br",{}),"  ",(0,$e.jsx)("h5",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Array Bounds"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Array bounds refer to the valid range of indices or positions that can be used to access elements in an array. It defines the lower and upper limits of the indices that can be used to retrieve data from an array. Let's explain array bounds, why they are important, provide a real-life example, and demonstrate it with easy-to-understand C++ code."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Why are Array Bounds Important?"})," Array bounds are important because they ensure that we access only the valid and allocated memory locations within an array. By adhering to the array bounds, we avoid accessing memory that does not belong to the array, which can lead to unpredictable behavior or runtime errors."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Understanding Array Bounds with a Real-Life Example:"})," Imagine you have a basket of 5 apples labeled from 1 to 5. Each apple represents an element in the array, and the label corresponds to the index. The valid range of indices for this array would be from 0 to 4, as arrays in most programming languages start indexing from 0.",(0,$e.jsx)("br",{}),"If you try to access an element outside this range, such as the apple labeled 6, which doesn't exist in the basket, you'll encounter an \"out of bounds\" error because you're trying to access memory beyond the allocated space."]})]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Let's consider a simple C++ example to demonstrate array bounds and their importance:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n\nint main() {\n    int numbers[5] = {1, 2, 3, 4, 5};\n\n    // Accessing elements within the valid bounds\n    std::cout << "Numbers within bounds:" << std::endl;\n    for (int i = 0; i < 5; ++i) {\n        std::cout << "Element at index " << i << ": " << numbers[i] << std::endl;\n    }\n\n    // Accessing an element outside the valid bounds\n    std::cout << "Accessing an element out of bounds:" << std::endl;\n    std::cout << "Element at index 6: " << numbers[6] << std::endl;\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"In this example, we have an array called numbers with a size of 5. The array is initialized with the values 1, 2, 3, 4, and 5."}),(0,$e.jsx)("p",{children:"First, we loop through the array elements within the valid bounds (indices 0 to 4) and print their values to the console. This demonstrates accessing elements within the valid bounds and printing their values"}),(0,$e.jsx)("p",{children:"However, after that, we try to access an element outside the valid bounds by using the index 6, which is beyond the allocated memory for the array. This will result in undefined behavior and may cause a runtime error or crash."}),(0,$e.jsx)("br",{})," ",(0,$e.jsx)("p",{children:"When running the code, you will see the output for the valid array elements but encounter an error when trying to access an element out of bounds."}),(0,$e.jsx)(Gt,{children:"\n  Numbers within bounds:\n  Element at index 0: 1\n  Element at index 1: 2\n  Element at index 2: 3\n  Element at index 3: 4\n  Element at index 4: 5\n  Accessing an element out of bounds:\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"This example highlights the importance of staying within the array bounds to ensure safe and predictable program execution."}),(0,$e.jsx)("p",{children:"By understanding and respecting the array bounds, we can avoid accessing memory beyond the allocated space, prevent unexpected behavior, and write reliable and error-free code."})]})})})};function Qn(e){return Ot({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"path",attr:{fill:"none",d:"M0 0h24v24H0V0z"}},{tag:"path",attr:{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}}]})(e)}var $n=[{id:1,path:"/cpluspage/cpp-intro",name:"Intro to C++"},{id:2,path:"/cpluspage/vs-code-guide",name:"Vs-code Installation Guide"},{id:3,path:"/cpluspage/cpp-basic-struc",name:"C++ Basic Structure"},{id:4,path:"/cpluspage/var-comments-in-cpp",name:"Variables & Comment in C++"},{id:5,path:"/cpluspage/cpp-var-scope-data",name:"Variables Scope & Data"},{id:6,path:"/cpluspage/basic-input-output",name:"Basic Input/Output"},{id:7,path:"/cpluspage/header-files-ops",name:"Header and Files"},{id:8,path:"/cpluspage/cpp-variables-type",name:"C++ Reference Variables"},{id:9,path:"/cpluspage/cpp-constants-manipulators",name:"Constants and Manipulators"},{id:10,path:"/cpluspage/cpp-controls-if-statement",name:"C++ Controls, IF Else"},{id:11,path:"/cpluspage/cpp-for-while-do-loop",name:"C++ For While, Do While Loop"},{id:12,path:"/cpluspage/cpp-break-cont-statement",name:"C++ Break & Continue Statement"},{id:13,path:"/cpluspage/cpp-functions",name:"C++ Functions"},{id:14,path:"/cpluspage/cpp-funtions-params",name:"Function Parameters and Arguments"},{id:15,path:"/cpluspage/cpp-return-values",name:"Return Values"},{id:16,path:"/cpluspage/cpp-function-scope-lifetime",name:"Function Scope and Lifetime"},{id:17,path:"/cpluspage/cpp-inline-functions",name:"Inline Functions"},{id:18,path:"/cpluspage/cpp-error-handling",name:"Function Error Handling"},{id:19,path:"/cpluspage/cpp-function-libraries",name:"Function Libraries"},{id:20,path:"/cpluspage/cpp-array",name:"C++ Array"},{id:21,path:"/cpluspage/cpp-multidimension-array",name:"Multidimensional Arrays"},{id:22,path:"/cpluspage/cpp-passing-arrays",name:"Passing Arrays to Functions"},{id:23,path:"/cpluspage/cpp-dynamic-arrays",name:"Dynamic Array"},{id:24,path:"/cpluspage/cpp-array-of-pointers",name:"Array of Pointers"},{id:25,path:"/cpluspage/cpp-array-libraries",name:"Array Libraries in c++"},{id:26,path:"/cpluspage/cpp-strings-intro",name:"Introduction to Strings"},{id:27,path:"/cpluspage/cpp-string-operations",name:"String Operations"},{id:28,path:"/cpluspage/cpp-string-manipulation",name:"String Manipulation"},{id:29,path:"/cpluspage/cpp-string-conversion",name:"String Conversion"},{id:30,path:"/cpluspage/cpp-string-parsing",name:"String Parsing and Tokenization"},{id:31,path:"/cpluspage/cpp-format-whitespaces",name:"String Formatting and Manipulating Whitespaces"},{id:32,path:"/cpluspage/cpp-advance-strings",name:"Advanced String Topics"},{id:32,path:"/cpluspage/cpp-intro-structures",name:"Introduction to Structures"},{id:33,path:"/cpluspage/cpp-array-structures",name:"Array of Structures"},{id:34,path:"/cpluspage/cpp-structures-and-pointers",name:"Structure and Pointers"},{id:35,path:"/cpluspage/cpp-structure-manipulation",name:"Structure Manipulation"},{id:36,path:"/cpluspage/cpp-bitfields",name:"Bitfields"},{id:37,path:"/cpluspage/cpp-unions",name:"Unions"},{id:38,path:"/cpluspage/cpp-structure-file-io",name:"Structure and File I/O"},{id:39,path:"/cpluspage/cpp-intro-to-pointers",name:"Introduction to Pointers"},{id:40,path:"/cpluspage/cpp-pointers-operations",name:"Pointer Operations"},{id:41,path:"/cpluspage/cpp-pointers-and-array",name:"Pointers and Arrays"},{id:42,path:"/cpluspage/cpp-dynamic-memory-allocation",name:"Dynamic Memory Allocation"},{id:43,path:"/cpluspage/cpp-pointers-and-functions",name:"Pointers and Functions"},{id:44,path:"/cpluspage/cpp-pointers-and-structures",name:"Pointers and Structures"},{id:45,path:"/cpluspage/cpp-pointers-to-pointers",name:"Pointers to Pointers"},{id:46,path:"/cpluspage/cpp-pointers-to-strings",name:"Pointers and Strings"},{id:46,path:"/cpluspage/cpp-pointers-and-const",name:"Pointers and Const"},{id:47,path:"/cpluspage/cpp-pointers-and-oop",name:"Pointers and OOP"},{id:48,path:"/cpluspage/cpp-pointers-and-except",name:"Pointers and Exception Handling"},{id:49,path:"/cpluspage/cpp-pointers-advanced",name:"Advanced Pointer Topics"},{id:49,path:"/cpluspage/cpp-objects",name:"Objects"},{id:50,path:"/cpluspage/cpp-classes",name:"Classes"},{id:51,path:"/cpluspage/cpp-data-members",name:"Data Members"},{id:52,path:"/cpluspage/cpp-member-functions",name:"Member Functions"},{id:53,path:"/cpluspage/cpp-encapsulation",name:"Encapsulation"},{id:54,path:"/cpluspage/cpp-access-specifiers",name:"Access Specifiers"},{id:55,path:"/cpluspage/cpp-constructors",name:"Constructors"},{id:56,path:"/cpluspage/cpp-destructors",name:"Destructors"},{id:57,path:"/cpluspage/cpp-inheritance",name:"Inheritance"},{id:58,path:"/cpluspage/cpp-polymorphism",name:"Polymorphism"},{id:59,path:"/cpluspage/cpp-overloading",name:"Overloading"},{id:60,path:"/cpluspage/cpp-operator-overloading",name:"Operator Overloading"},{id:61,path:"/cpluspage/cpp-static-members",name:"Static Members"},{id:62,path:"/cpluspage/cpp-friend-functions",name:"Friend Functions"},{id:62,path:"/cpluspage/cpp-templates",name:"Templates"}];function Kn(e){return Ot({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"path",attr:{d:"M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z"}}]})(e)}var Xn=function(){var e=[{id:1,name:"PYTHON",path:"/python/intro"},{id:2,name:"C++",path:"/cpluspage/cpp-intro"},{id:3,name:"ALGORITHM",path:"/algorithm/sorting-intro"},{id:4,name:"IoT",path:"/IoT/IoT-Intro-Definition"},{id:5,name:"NumPy",path:"/NumPy/NumPy-Introduction"},{id:6,name:"Pandas",path:"/Pandas/Pandas-Introduction"}];return(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"flex hidden md:block md:flex text-white text-sm md:text-base md:ml-4 ",children:e.map((function(e,t){return(0,$e.jsx)("div",{className:"",children:(0,$e.jsx)(Ve,{to:e.path,className:"px-3 py-1 rounded-md",children:e.name})},t)}))}),(0,$e.jsx)("section",{className:"flex text-white text-sm md:text-base ml-4 md:hidden",children:e.slice(0,2).map((function(e,t){return(0,$e.jsx)("div",{className:"",children:(0,$e.jsx)(Ve,{to:e.path,className:"px-3 py-1 rounded-md",children:e.name})},t)}))})]})},Zn=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1],r=E((0,t.useState)(!1),2),o=r[0],l=r[1];return window.addEventListener("scroll",(function(){window.scrollY>=50?l(!0):l(!1)})),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{className:"h-12 top-0 sticky w-full z-10 bg-blue-600 text-white dark:bg-blue-900 flex items-center",children:[(0,$e.jsx)(Kn,{className:"text-4xl ml-4 md:hidden",onClick:function(){return i(!s)}}),(0,$e.jsx)(Xn,{})]}),(0,$e.jsxs)("div",{className:"flex h-fit",children:[(0,$e.jsxs)("section",{className:o?"bg-white dark:bg-slate-800 text-color-mode fixed top-12 h-[92%] mb-10 hidden md:block overflow-y-auto":"bg-white dark:bg-slate-800 text-color-mode fixed top-32 h-[81%] mb-10 hidden md:block overflow-y-auto",children:[(0,$e.jsx)("h4",{className:"py-4 text-xl px-2",children:"C++ Tutorial"}),$n.map((function(e,t){return(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 hover:text-white hover:bg-blue-500",activeclassName:"active",children:(0,$e.jsx)("div",{className:"",children:e.name})},t)}))]}),(0,$e.jsx)("section",{className:"mx-4 md:ml-[17rem] lg:ml-[18rem] w-inherit  md:w-3/5 my-10 rounded-xl text-color-mode bg-lightModeElement/20 dark:bg-darkModeElement",children:n}),(0,$e.jsx)("section",{className:"hidden lg:block text-red-600 mt-14",children:(0,$e.jsx)("h1",{className:"",children:"Place Ads Here"})})]}),(0,$e.jsx)("div",{children:s&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-full top-32 left-0 bg-slate-400 overflow-y-scroll",children:$n.map((function(e,t){return(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return i(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})})})]})},Jn=function(){return(0,$e.jsx)("div",{className:"",children:(0,$e.jsx)(Zn,{children:(0,$e.jsx)(Ae,{})})})},ea=function(){var e=E((0,t.useState)("light"),2),n=e[0],a=e[1];(0,t.useEffect)((function(){null===localStorage.getItem("theme")&&localStorage.setItem("theme","light")}),[]),(0,t.useEffect)((function(){var e=document.querySelector("html");"dark"===localStorage.getItem("theme")?(e.classList.add("dark"),a("dark")):(e.classList.remove("dark"),a("light"))}),[n]);return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsxs)("button",{onClick:function(){"light"===localStorage.getItem("theme")?(a("dark"),localStorage.setItem("theme","dark")):(a("light"),localStorage.setItem("theme","light"))},children:[" ","light"===n?(0,$e.jsx)(Pt,{className:"text-gray-900"}):(0,$e.jsx)(Mt,{className:"text-yellow-300"})]})})};function ta(e){return Ot({tag:"svg",attr:{fill:"currentColor",viewBox:"0 0 16 16"},child:[{tag:"path",attr:{d:"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"}}]})(e)}function na(e){return Ot({tag:"svg",attr:{viewBox:"0 0 1024 1024"},child:[{tag:"path",attr:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 0 1-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"}}]})(e)}var aa=n.p+"static/media/phyed.a31e9f29b701a844cfb5.png",sa=[{id:1,path:"/python/intro",name:"Intro to Python"},{id:2,path:"/python/getting-started",name:"Getting Started"},{id:3,path:"/python/syntax",name:"Python Syntax"},{id:4,path:"/python/comments",name:"Python Comments"},{id:5,path:"/python/variables",name:"Python Variables",subRoutes:[{path:"/python/variables",name:"Python Variables"},{path:"/python/variables-assign-values",name:"Python Assign Multiple Values"},{path:"/python/variables-output-variables",name:"Python Output Variables"},{path:"/python/variables-global",name:"Python Global Variables"}]},{id:6,path:"/python/data-types",name:"Python Python Data Types"},{id:7,path:"/python/numbers",name:"Python Numbers"},{id:8,path:"/python/casting",name:"Python Casting"},{id:9,path:"/python/strings",name:"Python Strings"},{id:10,path:"/python/booleans",name:"Python Booleans"},{id:11,path:"/python/operators",name:"Python Operators"},{id:12,path:"/python/lists",name:"Python Lists",subRoutes:[{path:"/python/variables/variables",name:"Python Access List Items"},{path:"/python/variables/assign-values",name:"Python Change List Items"},{path:"/python/variables/output-variables",name:"Python Add List Items"},{path:"/python/variables/output-variables",name:"Python Remove List Items"},{path:"/python/variables/variables",name:"Python Loop Lists"},{path:"/python/variables/assign-values",name:"Python List Comprehension"},{path:"/python/variables/output-variables",name:"Python Sort Lists"},{path:"/python/variables/output-variables",name:"Python Copy & Join Lists"},{path:"/python/variables/output-variables",name:"List Methods"}]},{id:13,path:"/python/tuples",name:"Python Tuples"},{id:14,path:"/python/sets",name:"Python Sets"},{id:15,path:"/python/dictionaries",name:"Python Dictionaries"},{id:16,path:"/python/if-else",name:"Python If...Else"},{id:17,path:"/python/while-loops",name:"Python While Loops"},{id:18,path:"/python/for-loops",name:"Python For Loop"},{id:19,path:"/python/function",name:"Python Function"},{id:20,path:"/python/recursion",name:"Recursion"},{id:21,path:"/python/lambda ",name:"Python Lambda"},{id:22,path:"/python/arrays",name:"Python Arrays"},{id:23,path:"/python/classes-objects",name:"Python Classes & Objects"},{id:24,path:"/python/python-math",name:"Python Math"},{id:25,path:"/python/python-datetime",name:"Python Datetime"},{id:26,path:"/python/pip-package",name:"Python PIP & Package"},{id:27,path:"/python/try-except",name:"Python Try Except"},{id:28,path:"/python/user-input",name:"Python User Input"},{id:29,path:"/python/string-formatting",name:"Python String Formatting"},{id:30,path:"/python/modules",name:"Python Modules"},{id:31,path:"/python/scope",name:"Python Scope"},{id:32,path:"/python/iterators",name:"Python Iterators"},{id:33,path:"/python/file-handling",name:"Python File Handling"}];var ia=function(){var e=E((0,t.useState)(!1),2),n=e[0],a=e[1],s=E((0,t.useState)(!1),2),i=s[0],r=s[1],o=(0,t.useRef)();return(0,t.useEffect)((function(){document.addEventListener("mousedown",(function(e){o.current.contains(e.target)||a(!1)}))})),(0,$e.jsxs)("div",{ref:o,children:[(0,$e.jsxs)("section",{className:"flex justify-between text-color-mode p-4 bg-blue-400 dark:bg-slate-800 shadow-xl",children:[(0,$e.jsxs)("div",{className:"flex items-center",children:[(0,$e.jsx)("a",{href:"/learn/",children:(0,$e.jsx)("img",{src:aa,alt:"phyedLogo",className:"h-10 w-auto"})}),(0,$e.jsx)("a",{href:"/home/",style:{color:"white",fontWeight:"bold"},className:"ml-5",children:"Dashboard"}),(0,$e.jsxs)("h4",{className:"ml-4 flex items-center cursor-pointer md:hidden",onClick:function(){return a(!0)},children:["Courses ",(0,$e.jsx)(ta,{className:"ml-1.5 mt-1.5"})]})]}),(0,$e.jsx)(ea,{})]}),i&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-[550px] top-32 left-0 bg-slate-400 overflow-y-scroll",children:sa.map((function(e,t){return(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return r(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})}),n&&(0,$e.jsxs)("section",{className:"bg-blue-400 dark:bg-slate-800 text-white absolute z-20 top-20 left-1.5 h-auto w-auto p-4 m-2 rounded-lg",children:[(0,$e.jsxs)("div",{className:"flex justify-between",children:[(0,$e.jsx)("h3",{className:"text-2xl",children:"Tutorials"}),(0,$e.jsxs)("p",{className:"text-3xl text-white cursor-pointer hover:text-red-500",onClick:function(){return a(!1)},children:[(0,$e.jsx)(na,{})," "]})]}),(0,$e.jsx)("div",{className:"pt-8 grid grid-cols-3",children:[{id:1,name:"PYTHON",path:"/python/intro"},{id:2,name:"C++",path:"/cpluspage/cpp-intro"},{id:3,name:"ALGORITHM",path:"/algorithm/sorting-intro"},{id:4,name:"IoT",path:"/IoT/IoT-Intro-Definition"},{id:5,name:"NumPy",path:"/NumPy/NumPy-Introduction"},{id:6,name:"Pandas",path:"/Pandas/Pandas-Introduction"}].map((function(e){return(0,$e.jsx)(qe,{to:e.path,onClick:function(){return a(!1)},className:"font-semibold mb-4 hover:color-red-400 hover:rounded-md",children:e.name},e.id)}))})]})]})},ra=function(e){var n=e.item,a=e.setOpen,s=E((0,t.useState)(!1),2),i=s[0],r=s[1];return(0,$e.jsxs)("div",{children:[(0,$e.jsx)("p",{className:"pl-2 font-bold cursor-pointer w-64 items-center my-2 py-1.5 text-color-mode",onClick:function(){r(!i)},children:n.name}),i&&(0,$e.jsx)("div",{children:n.subRoutes.map((function(e){return(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-6  hover:text-blue-400 hover:bg-white",onClick:function(){return a(!1)},activeclassName:"active",children:e.name},e.name)}))})]})},oa=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1],r=E((0,t.useState)(!1),2),o=r[0],l=r[1];return window.addEventListener("scroll",(function(){window.scrollY>=50?l(!0):l(!1)})),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{className:"h-12 top-0 sticky w-full z-10 bg-blue-600 text-white dark:bg-blue-900 flex items-center",children:[(0,$e.jsx)(Kn,{className:"text-2xl ml-2 md:hidden",onClick:function(){return i(!s)}}),(0,$e.jsx)(Xn,{})]}),(0,$e.jsxs)("div",{className:"flex h-full",children:[(0,$e.jsxs)("section",{className:o?"bg-white dark:bg-slate-800 text-color-mode fixed top-12 h-[92%] mb-10 hidden md:block overflow-y-auto":"bg-white dark:bg-slate-800 text-color-mode fixed top-32 h-[80%] mb-10 hidden md:block overflow-y-auto",children:[(0,$e.jsx)("h4",{className:"py-2 text-xl px-2",children:"Python Tutorial"}),sa.map((function(e,t){return e.subRoutes?(0,$e.jsx)(ra,{item:e,setOpen:i},e.name):(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 text-base items-center my-2 py-1.5 pl-2  hover:text-blue-400 hover:bg-white",activeclassName:"active",children:(0,$e.jsx)("div",{className:"",children:e.name})},t)}))]}),(0,$e.jsx)("section",{className:"mx-4 md:ml-[17rem] lg:ml-[18rem] w-inherit md:w-3/5 my-10 rounded-xl text-color-mode bg-lightModeElement/20 dark:bg-darkModeElement",children:n}),(0,$e.jsx)("section",{className:"hidden lg:block text-red-600 mt-14",children:(0,$e.jsx)("h1",{className:"",children:"Place Ads Here"})})]}),(0,$e.jsx)("div",{children:s&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-[600px] top-32 left-0 bg-slate-400 overflow-y-scroll",children:sa.map((function(e,t){return e.subRoutes?(0,$e.jsx)(ra,{item:e,setOpen:i},e.name):(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return i(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})})})]})},la=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)(oa,{children:(0,$e.jsx)(Ae,{})})})},ca=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:" Creation of Python:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Python was created by Guido van Rossum in the late 1980s. Guido wanted to make a programming language that was easy to read and write. He named it Python after the British comedy group Monty Python, as he was a fan of their shows."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:" Python's Philosophy:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Python was designed with a philosophy of simplicity, readability, and a focus on code maintainability. It emphasises clean and straightforward syntax, making it easy to understand and write code quickly."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:" Versatility of Python:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python is a versatile language used for various purposes, including:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Web Development: Python can be used to create websites and web applications using frameworks like Django and Flask."}),(0,$e.jsx)("li",{className:"pt-2",children:"Data Analysis and Machine Learning: Python has powerful libraries such as NumPy, Pandas, and scikit-learn, which are widely used for data analysis, scientific computing, and machine learning."}),(0,$e.jsx)("li",{className:"pt-2",children:"Automation and Scripting: Python is commonly used for automating repetitive tasks, such as file management, system administration, and network automation."}),(0,$e.jsx)("li",{className:"pt-4",children:"Game Development: Python can be used to create games with libraries like Pygame."}),(0,$e.jsx)("li",{className:"pt-2",children:"Robotics: Python is used in robotics for programming and controlling robots."}),(0,$e.jsx)("li",{className:"pt-2",children:"Internet of Things (IoT): Python is utilised in IoT projects for connecting and controlling devices."})]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python Examples:"}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Web Development Example:"})}),(0,$e.jsx)(Gt,{children:"\n  from flask import Flask\n  app = Flask(__name__)\n  \n  @app.route('/')\n  def hello_world():\n      return 'Hello, World!'\n  \n  if __name__ == '__main__':\n      app.run()  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'This code creates a simple web application using the Flask framework. When you access the website\'s homepage, it displays "Hello, World!".'}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Data Analysis Example:"})}),(0,$e.jsx)(Gt,{children:"\n  import pandas as pd\n\n  # Create a DataFrame\n  data = {'Name': ['Alice', 'Bob', 'Charlie'],\n          'Age': [25, 30, 35],\n          'City': ['New York', 'London', 'Paris']}\n  df = pd.DataFrame(data)\n\n  # Display the DataFrame\n  print(df)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This code uses the Pandas library to create and display a DataFrame, which is a tabular data structure. It represents information about people's names, ages, and cities."}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Game Development Example:"})}),(0,$e.jsx)(Gt,{children:"\nimport pygame\npygame.init()\n\n# Create a game window\nscreen = pygame.display.set_mode((800, 600))\n\n# Game loop\n\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n    screen.fill((255, 255, 255))\n    pygame.display.update()\n\npygame.quit()\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This code utilises the Pygame library to create a game window and a basic game loop that keeps the window open until the user closes it."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These examples demonstrate how Python can be used for different purposes, and they showcase the simplicity and readability of the language. Python's flexibility and extensive libraries make it suitable for a wide range of projects, from web development to data analysis and game development."})]})})})},da=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Install Python:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Visit the official Python website at python.org."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Download the latest version of Python that matches your operating system."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Run the installer and follow the instructions to install Python on your machine."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Set up a development environment:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can use any text editor or Integrated Development Environment (IDE) to write Python code. Some popular options include Visual Studio Code, PyCharm, and Atom.Install the chosen editor or IDE and configure it for Python development."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"3.Writing your first Python program:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Open your text editor or IDE and create a new file with a .py extension (e.g., "hello.py"). In the file, type the following code:'}),(0,$e.jsx)(Gt,{children:'\n    print("Hello, World!")\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Save the file."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"4.Running your Python program:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Open a terminal or command prompt."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Navigate to the directory where you saved your Python file."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Type the following command to run the program:"}),(0,$e.jsx)(Gt,{children:"\n    python hello.py\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'The output "Hello, World!" should appear on the screen.'}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"5.Variables and data types:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Python uses dynamic typing, which means you don't need to explicitly declare the variable type."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n      # Variable assignment\n    message = "Hello, Python!"\n\n    # Printing the variable\n    print(message) \n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"6.Control flow and loops:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Python provides various control flow statements like if-else, for, and while loops. Example of an if-else statement:"}),(0,$e.jsx)(Gt,{children:'\n    # Conditional statement\n    age = 20\n\n    if age >= 18:\n        print("You are an adult.")\n    else:\n        print("You are not an adult.")\n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"7.Functions:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Functions allow you to group a set of statements into a reusable block of code."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Example of defining and calling a function:"}),(0,$e.jsx)(Gt,{children:'\n    # Function definition\n    def greet(name):\n        print("Hello, " + name + "!")\n\n    # Function call\n    greet("Alice")\n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"8.Lists and loops:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Lists are used to store multiple items in a single variable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Example of a loop and list manipulation:"}),(0,$e.jsx)(Gt,{children:"\n    # List creation\n  numbers = [1, 2, 3, 4, 5]\n\n  # Looping through the list\n  for num in numbers:\n      print(num)\n\n  # Modifying the list\n  numbers.append(6)\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are just the basics to get you started with Python. As you progress, you can explore more advanced topics such as file handling, object-oriented programming, and working with external libraries."})]})})})},ua=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Variables and Data Types:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables are used to store values that can be accessed and manipulated later."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python is dynamically typed, so you don't need to specify the variable type explicitly."}),(0,$e.jsx)(Gt,{children:'\n        # Variable assignment\n        name = "John"\n        age = 25\n        height = 1.75\n        is_student = True\n        '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2.Print Statement:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The print() function is used to display output on the screen."}),(0,$e.jsx)(Gt,{children:'\n        name = "John"\n        print("Hello, " + name + "!")  # Output: Hello, John!\n          '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3.Basic Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python supports various operators, including arithmetic, assignment, comparison, logical, and more."}),(0,$e.jsx)(Gt,{children:"\n        # Arithmetic Operators\n        x = 10 + 5  # Addition\n        y = 10 - 5  # Subtraction\n        z = 10 * 5  # Multiplication\n        w = 10 / 5  # Division\n        "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"4.Control Flow Statements:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Control flow statements are used to control the flow of execution based on conditions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The most common control flow statements are if-else and loops (for and while)."}),(0,$e.jsx)(Gt,{children:'\n        # If-else statement\n        age = 18\n        \n        if age >= 18:\n            print("You are an adult.")\n        else:\n            print("You are not an adult.")\n        \n        # For loop\n        fruits = ["apple", "banana", "cherry"]\n\n        for fruit in fruits:\n            print(fruit)\n\n        # While loop\n        count = 0\n\n        while count < 5:\n            print("Count: ", count)\n           count += 1\n        '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"5.Functions:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Functions are reusable blocks of code that perform specific tasks."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" They can take input parameters and return values."}),(0,$e.jsx)(Gt,{children:'\n          # Function definition\n          def greet(name):\n              print("Hello, " + name + "!")\n          \n          # Function call\n          greet("Alice")\n          '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"6.Lists:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Lists are used to store multiple items in a single variable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" They are mutable and can contain elements of different data types."}),(0,$e.jsx)(Gt,{children:"\n          # List creation\n          numbers = [1, 2, 3, 4, 5]\n          \n          # Accessing list elements\n          print(numbers[0])  # Output: 1\n          \n          # Modifying list elements\n          numbers[2] = 6\n          \n          # List operations\n          numbers.append(7)  # Add an element to the end of the list\n          numbers.remove(4)  # Remove a specific element from the list\n          "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" These examples cover the basic syntax of Python. As you continue learning, you'll encounter more advanced concepts and syntax elements, such as dictionaries, classes, exceptions, and file handling. Python's official documentation is an excellent resource to explore these topics in depth."})]})})})},pa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Comments in Python are used to add explanatory notes within the code. They are ignored by the interpreter and serve as documentation for developers. There are two types of comments: single-line comments and multi-line comments."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Single-line comments:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Single-line comments start with the hash symbol (#)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" They are used to add comments on a single line."}),(0,$e.jsx)(Gt,{children:"\n   # This is a single-line comment\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Single-line comments can also be used to disable a line of code temporarily."}),(0,$e.jsx)(Gt,{children:'\n   # print("This line of code is commented out.")\n   '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2.Multi-line comments:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Multi-line comments are enclosed within triple quotes (''' or \"\"\")."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" They are used to add comments spanning multiple lines."}),(0,$e.jsx)(Gt,{children:"\n     '''\n     This is a multi-line comment.\n     It can span multiple lines.\n     '''\n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Multi-line comments are often used as docstrings, which provide documentation for functions, classes, or modules."}),(0,$e.jsx)(Gt,{children:'\n     def my_function():\n     """\n     This is a docstring that explains what the function does.\n     It can span multiple lines and provides helpful information to users.\n     """\n     # Function code goes here\n     pass\n     '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Comments are essential for code readability and maintainability. They help you and other developers understand the purpose and functionality of the code, making it easier to debug and modify."})]})})})},ma=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python Variables"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables in Python are used to store values that can be accessed and manipulated later. They provide a way to label and refer to data in your code. Here's what you need to know about variables:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Variable Naming:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Variable names can contain letters (a-z, A-Z), digits (0-9), and underscores (_)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" They must start with a letter or an underscore."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:' Variable names are case-sensitive (e.g., "age" and "Age" are different variables).'}),(0,$e.jsx)(Gt,{children:'\n    # Valid variable names\n    name = "John"\n    age = 25\n    _my_var = "Hello"\n  '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2.Variable Assignment:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables are assigned values using the assignment operator (=)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python is dynamically typed, so you don't need to specify the variable type explicitly."}),(0,$e.jsx)(Gt,{children:'\n    # Variable assignment\n    name = "John"\n    age = 25\n'}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3.Data Types:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables can hold different data types, such as strings, integers, floats, booleans, and more."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python automatically assigns the appropriate data type based on the assigned value."}),(0,$e.jsx)(Gt,{children:'\n    python\n    Copy code\n    # String\n    name = "John"\n    # Integer\n    age = 25\n\n    # Float\n    height = 1.75\n\n    # Boolean\n    is_student = True\n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"4.Variable Reassignment:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables can be reassigned with new values using the assignment operator (=)."}),(0,$e.jsx)(Gt,{children:"\n    x = 5  # x is assigned the value 5\n    x = x + 1  # x is reassigned the value x + 1 (6)\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"5.Variable Scope:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables have a scope, which defines their accessibility within the code."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables defined inside a function have local scope and are only accessible within that function."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Variables defined outside any function have global scope and can be accessed throughout the program."}),(0,$e.jsx)(Gt,{children:"\n    # Global variable\n    global_var = 10\n\n    def my_function():\n        # Local variable\n        local_var = 5\n        print(local_var)  # Output: 5\n        print(global_var)  # Output: 10\n\n    my_function()\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Variables are fundamental building blocks in Python and allow you to store and manipulate data effectively. Choose meaningful and descriptive variable names to improve code readability and maintainability."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python Assign Multiple Values"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, you can assign multiple values to multiple variables simultaneously using a single line of code. This is known as multiple assignment or unpacking. Here's what you need to know:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 1.Unpacking into Multiple Variables:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can assign multiple values to multiple variables by separating them with commas."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The number of variables on the left side of the assignment operator (=) must match the number of values on the right side."}),(0,$e.jsx)(Gt,{children:"\n      # Multiple assignment\n      x, y, z = 1, 2, 3\n      "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The values on the right side are assigned to the corresponding variables on the left side."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 2.Unpacking from an Iterable:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can also unpack values from an iterable (e.g., a list, tuple, or string) into multiple variables."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The number of variables must match the number of elements in the iterable."}),(0,$e.jsx)(Gt,{children:'\n    # Unpacking from a list\n    numbers = [1, 2, 3]\n    x, y, z = numbers\n    \n    # Unpacking from a tuple\n    coordinates = (4, 5, 6)\n    a, b, c = coordinates\n    \n    # Unpacking from a string\n    name = "Alice"\n    first, second, third, fourth, fifth = name \n        '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3.Ignoring Unwanted Values:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" If you're interested in only a few values from an iterable, you can use an underscore (_) to ignore the unwanted values."}),(0,$e.jsx)(Gt,{children:"\n    numbers = [1, 2, 3, 4, 5]\n    x, y, _, _, z = numbers\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In the example above, the third and fourth values from the list are ignored."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Multiple assignment provides a concise and efficient way to assign multiple values to multiple variables in Python. It is commonly used when working with functions that return multiple values or when unpacking elements from data structures. Ensure that the number of variables matches the number of values to avoid errors."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Output Variables"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, you can output the values of variables to the console or other output streams for display or further processing. Here are a few ways to output variables:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Print Statement:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The most common way to output variables is by using the print() function."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can pass one or more variables as arguments to print() to display their values."}),(0,$e.jsx)(Gt,{children:'\n    # Outputting variables using print()\n    name = "John"\n    age = 25\n    height = 1.75\n\n    print(name)   # Output: John\n    print(age)    # Output: 25\n    print(height) # Output: 1.75\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can also concatenate variables with strings using the + operator inside the print() function to create more meaningful output."}),(0,$e.jsx)(Gt,{children:'\n    # Outputting variables with additional text using print()\n    name = "John"\n    age = 25\n\n    print("Name:", name)  # Output: Name: John\n    print("Age:", age)    # Output: Age: 25\n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2.f-strings (Formatted Strings):"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Another way to output variables in a more readable and concise manner is by using f-strings."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" F-strings allow you to embed variables directly within a string, preceded by the f prefix. The variables are enclosed in curly braces ","."]}),(0,$e.jsx)(Gt,{children:'\n    # Outputting variables using f-strings\n    name = "John"\n    age = 25\n\n    print(f"Name: {name}")  # Output: Name: John\n    print(f"Age: {age}")    # Output: Age: 25\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Inside the curly braces, you can also perform operations or format the variables."}),(0,$e.jsx)(Gt,{children:'\n    # Outputting variables with operations using f-strings\n    x = 10\n    y = 5\n\n    print(f"The sum of {x} and {y} is {x + y}")  # Output: The sum of 10 and 5 is 15\n   '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3.Other Output Methods:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Apart from the print() function, you can also write variables to files, databases, or any other output stream depending on your specific requirements."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" These methods allow you to output variables to the console or other output streams, making it easier to view and analyze the values during program execution. Choose the appropriate method based on your needs, considering factors such as readability, formatting, and further processing requirements."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Global Variables"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, a global variable is a variable that is defined outside of any function or class. Global variables have global scope, meaning they can be accessed and modified from anywhere within the program. Here's what you need to know about global variables:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Declaring Global Variables:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To declare a global variable, you simply assign a value to a variable outside of any function or class."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Global variables are usually declared at the top of the program or module, making them accessible throughout the codebase."}),(0,$e.jsx)(Gt,{children:'\n    # Declaring global variables\n    global_var = 10\n    another_global_var = "Hello, world!"\n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Accessing global variables:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Global variables can be accessed and used from anywhere within the program, including inside functions, classes, and modules."}),(0,$e.jsx)(Gt,{children:"\n    # Accessing global variables\n    global_var = 10\n\n    def my_function():\n        print(global_var)  # Output: 10\n\n    my_function()\n    "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Modifying global variables"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Global variables can be modified from anywhere within the program, including inside functions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" However, you need to use the global keyword before the variable name within the function to indicate that you want to modify the global variable, rather than creating a new local variable."}),(0,$e.jsx)(Gt,{children:"\n      # Modifying global variables\n      global_var = 10\n\n      def my_function():\n          global global_var\n          global_var = 20\n\n      print(global_var)  # Output: 10\n      my_function()\n      print(global_var)  # Output: 20\n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Without using the global keyword, a new local variable with the same name is created within the function, which does not affect the value of the global variable."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"4.Global Variables in Different Modules:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Global variables defined in one module can be accessed from another module by importing the module."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" However, you need to use the module name as a prefix to access the global variable."}),(0,$e.jsx)(Gt,{children:"\n      # global_var_module.py\n      global_var = 10\n\n      # main.py\n      import global_var_module\n\n      print(global_var_module.global_var)  # Output: 10\n      "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Global variables are useful when you need to share data between different parts of your program."})]})})})},ha=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python Data Types:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, data types define the nature of data stored in variables. Python has several built-in data types that allow you to represent and manipulate different kinds of data. Here are some commonly used data types:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 1.Numeric Data Types:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Integer (int):"})," Represents whole numbers without decimals."]}),(0,$e.jsx)(Gt,{children:"\n    # Integer data type\n    age = 25\n      "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Float (float):"})," Represents numbers with decimal points."]}),(0,$e.jsx)(Gt,{children:"\n    # Float data type\n     height = 1.75\n        "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Complex (complex):"})," Represents numbers with a real and imaginary part"]}),(0,$e.jsx)(Gt,{children:"\n    # Complex data type\n    z = 2 + j\n        "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 2.String Data Type:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"String (str):"})," Represents a sequence of characters, enclosed in single quotes ('') or double quotes (\" \")."]}),(0,$e.jsx)(Gt,{children:'\n    # String data type\n    name = "John"\n         '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 3.Boolean Data Type:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Boolean (bool):"})," Represents either True or False."]}),(0,$e.jsx)(Gt,{children:"\n    # Boolean data type\n    is_student = True   \n          "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 4.Sequence Data Types:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"List: "})," Represents an ordered collection of items. Items can be of different data types and are enclosed in square brackets ([])."]}),(0,$e.jsx)(Gt,{children:"\n    # List data type\n    numbers = [1, 2, 3, 4, 5]\n            "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Tuple:"})," Similar to lists but are immutable, meaning their elements cannot be modified after creation. Elements are enclosed in parentheses (())."]}),(0,$e.jsx)(Gt,{children:"\n    # Tuple data type\n    coordinates = (4, 5)\n            "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Range:"})," Represents a sequence of numbers. It is commonly used in loops and is defined using the range() function."]}),(0,$e.jsx)(Gt,{children:"\n    # Range data type\n    my_range = range(1, 5)\n          "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 5.Mapping Data Type:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Dictionary (dict):"})," Represents a collection of key-value pairs. Keys are unique and used to access corresponding values. Dictionaries are enclosed in curly braces (",") and consist of key-value pairs separated by colons (:)."]}),(0,$e.jsx)(Gt,{children:'\n    # Dictionary data type\n    person = {"name": "John", "age": 25}\n    '}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 6. Set Data Type"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Set:"})," Represents an unordered collection of unique elements. Sets are enclosed in curly braces (",") or can be created using the set() function."]}),(0,$e.jsx)(Gt,{children:'\n    python# Set data type\n    fruits = {"apple", "banana", "cherry"}\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" These are some of the commonly used data types in Python. Understanding and utilizing these data types will enable you to store and manipulate different kinds of data effectively in your programs."})]})})})},fa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python numbers:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, numbers are a fundamental data type used to represent numeric values. There are three main types of numbers in Python:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.Integer (int):"})," Integers represent whole numbers without decimal points. They can be positive or negative."]}),(0,$e.jsx)(Gt,{children:"\n   # Integer number\n   age = 22  \n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.Float (float):"})," Floats represent numbers with decimal points. They are used to represent real numbers."]}),(0,$e.jsx)(Gt,{children:"\n   # Floating-point number\n   height = 6.85\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.Complex (complex):"})," Complex numbers are used to represent numbers with both real and imaginary parts. They are written in the form a + bj, where a is the real part and b is the imaginary part."]}),(0,$e.jsx)(Gt,{children:"\n   # Complex number\n   z = 9 + 7j\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python provides various operations and functions that can be performed on numbers. Here are some examples:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Arithmetic Operations:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Addition (+), Subtraction (-), Multiplication (*), Division (/), and Exponentiation (**)."})]}),(0,$e.jsx)(Gt,{children:"\n    x = 10\n    y = 5\n\n    addition = x + y    # Output: 15\n    subtraction = x - y # Output: 5\n    multiplication = x * y    # Output: 50\n    division = x / y    # Output: 2.0\n    exponentiation = x ** y   # Output: 100000\n    "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2.Type Conversion:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can convert a number from one type to another using the corresponding built-in functions: int(), float(), and complex()."}),(0,$e.jsx)(Gt,{children:"\n  x = 10\n  y = 3.5\n  z = 2 + 3j\n  \n  # Converting to integer\n  int_x = int(x)      # Output: 10\n  \n  # Converting to float\n  float_y = float(y) # Output: 3.5\n  \n  # Converting to complex\n  complex_x = complex(x)   # Output: (10+0j)\n  "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3.Math Functions:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python provides several built-in math functions that can be used to perform common mathematical operations on numbers. These functions are available in the math module and need to be imported before use."}),(0,$e.jsx)(Gt,{children:"\n  import math\n\n  x = 4\n  y = -2.5\n  \n  square_root = math.sqrt(x)    # Output: 2.0\n  absolute_value = abs(y)       # Output: 2.5\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" These examples demonstrate the basic usage of numbers in Python and some common operations and functions associated with them. Numbers are essential for performing mathematical calculations and are widely used in various applications and algorithms."})]})})})},ga=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Dictionaries"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In Python, a dictionary is a mutable and unordered collection of key-value pairs, enclosed in curly braces `","`. It provides a way to store and retrieve data based on unique keys. Each key-value pair in a dictionary is separated by a colon `:`. The keys within a dictionary must be unique, while the values can be of any data type, such as numbers, strings, lists, or even other dictionaries."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Here's an example of a dictionary that represents personal information:"}),(0,$e.jsx)(Gt,{children:'\n   person = {\n    "name": "John Doe",\n    "age": 30,\n    "city": "New York",\n    "occupation": "Engineer"\n  }\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:' In this example, `person` is a dictionary with four key-value pairs. The keys are `"name"`, `"age"`, `"city"`, and `"occupation"`, and their corresponding values are `"John Doe"`, `30`, `"New York"`, and `"Engineer"`, respectively'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can access the values in a dictionary by referring to their respective keys. For example:"}),(0,$e.jsx)(Gt,{children:'\n print(person["name"])  # Output: John Doe\nprint(person["age"])   # Output: 30\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also modify the values associated with keys:"}),(0,$e.jsx)(Gt,{children:'\n person["age"] = 31\nprint(person["age"])   # Output: 31\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you try to access a key that doesn't exist in the dictionary, a `KeyError` will be raised. However, you can avoid this by using the `get()` method, which allows you to provide a default value if the key is not found:"}),(0,$e.jsx)(Gt,{children:'\n print(person.get("address", "Unknown"))  # Output: Unknown\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To add new key-value pairs to a dictionary, you can simply assign a value to a new key:"}),(0,$e.jsx)(Gt,{children:"\nperson[\"address\"] = \"123 Main St\"\nprint(person)  # Output: {'name': 'John Doe', 'age': 31, 'city': 'New York', 'occupation': 'Engineer', 'address': '123 Main St'}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also use the `del` keyword to remove a key-value pair:"}),(0,$e.jsx)(Gt,{children:"\n del person[\"occupation\"]\nprint(person)  # Output: {'name': 'John Doe', 'age': 31, 'city': 'New York', 'address': '123 Main St'}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Dictionaries are often used to represent real-life scenarios. For instance, consider a student database where you want to store information about students:"}),(0,$e.jsx)(Gt,{children:'\n student = {\n  "name": "Alice",\n  "age": 18,\n  "grade": "12th",\n  "subjects": ["Math", "Science", "English"],\n  "address": {\n      "street": "123 Elm St",\n      "city": "New York",\n      "zip": "10001"\n  }\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `student` dictionary contains various details about a student, such as their name, age, grade, subjects, and address. The `subjects` key holds a list of the student's subjects, and the `address` key contains another nested dictionary with details about their address."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Dictionaries provide a flexible and powerful way to organize and access data in Python, making them suitable for a wide range of applications."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Access Dictionary Items"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can access dictionary items by referring to their respective keys. Dictionaries use keys to store and retrieve associated values. To access a value in a dictionary, you can use square brackets `[]` and provide the key inside them."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Let's consider an example where we have a dictionary representing a contact list:"}),(0,$e.jsx)(Gt,{children:'\n contacts = {\n  "John Doe": "john@example.com",\n  "Jane Smith": "jane@example.com",\n  "Mike Johnson": "mike@example.com"\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the dictionary `contacts` contains three key-value pairs, where the keys are names and the values are email addresses."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To access a specific value in the dictionary, you can use the key within square brackets:"}),(0,$e.jsx)(Gt,{children:'\n print(contacts["John Doe"])  # Output: john@example.com\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also store the value in a variable for later use:"}),(0,$e.jsx)(Gt,{children:' \nemail = contacts["Jane Smith"]\nprint(email)  # Output: jane@example.com\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you try to access a key that doesn't exist in the dictionary, a `KeyError` will be raised. However, you can use the `get()` method to provide a default value if the key is not found:"}),(0,$e.jsx)(Gt,{children:'\nemail = contacts.get("Mike Smith", "No email found")\nprint(email)  # Output: No email found\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In addition to accessing individual values, you can retrieve all the keys or values present in a dictionary. To get a list of all keys, you can use the `keys()` method:"}),(0,$e.jsx)(Gt,{children:"\nkeys = contacts.keys()\nprint(keys)  # Output: dict_keys(['John Doe', 'Jane Smith', 'Mike Johnson'])\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To get a list of all values, you can use the `values()` method:"}),(0,$e.jsx)(Gt,{children:"\nvalues = contacts.values()\nprint(values)  # Output: dict_values(['john@example.com', 'jane@example.com', 'mike@example.com'])\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also iterate over the keys or values of a dictionary using a `for` loop:"}),(0,$e.jsx)(Gt,{children:"\nfor key in contacts:\nprint(key)  # Output: John Doe, Jane Smith, Mike Johnson\n\nfor value in contacts.values():\nprint(value)  # Output: john@example.com, jane@example.com, mike@example.com\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you want to access both keys and values together, you can use the `items()` method, which returns a list of key-value tuples:"}),(0,$e.jsx)(Gt,{children:'\nfor key, value in contacts.items():\nprint(key, ":", value)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This will output:"}),(0,$e.jsx)(Gt,{children:"#output -\nJohn Doe : john@example.com\nJane Smith : jane@example.com\nMike Johnson : mike@example.com\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Accessing dictionary items allows you to retrieve and work with specific data stored within the dictionary, providing flexibility and control over your program's logic."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Change Dictionary Items:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, dictionaries are mutable, which means you can modify their contents after they are created. You can change dictionary items by accessing them using their keys and assigning a new value."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Let's consider an example where we have a dictionary representing a person's information:"}),(0,$e.jsx)(Gt,{children:'\nperson = {\n  "name": "John Doe",\n  "age": 30,\n  "city": "New York",\n  "occupation": "Engineer"\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `person` dictionary contains various key-value pairs representing a person's name, age, city, and occupation."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To change a specific value in the dictionary, you can access it using the key and assign a new value:"}),(0,$e.jsx)(Gt,{children:"\nperson[\"age\"] = 31\nprint(person)  # Output: {'name': 'John Doe', 'age': 31, 'city': 'New York', 'occupation': 'Engineer'}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In the above code, we assessed the value associated with the key `"age"` and updated it to `31`. Now the `age` key in the dictionary `person` has the updated value.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also change multiple items simultaneously by assigning new values to their respective keys:"}),(0,$e.jsx)(Gt,{children:"\nperson[\"city\"] = \"San Francisco\"\nperson[\"occupation\"] = \"Software Developer\"\nprint(person)  # Output: {'name': 'John Doe', 'age': 31, 'city': 'San Francisco', 'occupation': 'Software Developer'}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, we changed the values associated with the `"city"` and `"occupation"` keys.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If the key you are trying to change doesn't exist in the dictionary, Python will automatically create a new key-value pair with the assigned value:"}),(0,$e.jsx)(Gt,{children:"\nperson[\"address\"] = \"123 Main St\"\nprint(person)  # Output: {'name': 'John Doe', 'age': 31, 'city': 'San Francisco', 'occupation': 'Software Developer', 'address': '123 Main St'}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, the key `"address"` was not present in the original `person` dictionary, but by assigning a value to it, a new key-value pair was added.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Changing dictionary items allows you to update specific values based on their keys. This flexibility can be beneficial when you need to modify or update data stored in a dictionary, just like updating personal information for a person."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Add Dictionary Items:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, dictionaries are mutable, which means you can add new items to them even after they are created. To add an item to a dictionary, you can assign a new value to a new or existing key."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Let's consider an example where we have a dictionary representing a student's information:"}),(0,$e.jsx)(Gt,{children:'\n student = {\n  "name": "Alice",\n  "age": 18,\n  "grade": "12th",\n  "subjects": ["Math", "Science", "English"]\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `student` dictionary contains various key-value pairs representing a student's name, age, grade, and subjects."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To add a new item to the dictionary, you can assign a value to a new key:"}),(0,$e.jsx)(Gt,{children:'\nstudent["address"] = "123 Elm St"\nprint(student)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "name": "Alice",\n  "age": 18,\n  "grade": "12th",\n  "subjects": ["Math", "Science", "English"],\n  "address": "123 Elm St"\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, we added a new key-value pair, `"address": "123 Elm St"`, to the `student` dictionary. Now the dictionary contains the student\'s address as well.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If the key you are adding already exists in the dictionary, assigning a new value to that key will update the existing value:"}),(0,$e.jsx)(Gt,{children:'\nstudent["grade"] = "11th"\nprint(student)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "name": "Alice",\n  "age": 18,\n  "grade": "11th",\n  "subjects": ["Math", "Science", "English"],\n  "address": "123 Elm St"\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, we changed the value associated with the `"grade"` key from `"12th"` to `"11th"`.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also add multiple items simultaneously by assigning values to their respective keys:"}),(0,$e.jsx)(Gt,{children:'\nstudent["phone"] = "123-456-7890"\nstudent["email"] = "alice@example.com"\nprint(student)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "name": "Alice",\n  "age": 18,\n  "grade": "11th",\n  "subjects": ["Math", "Science", "English"],\n  "address": "123 Elm St",\n  "phone": "123-456-7890",\n  "email": "alice@example.com"\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, we added two new key-value pairs, `"phone": "123-456-7890"` and `"email": "alice@example.com"`, to the `student` dictionary.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Adding dictionary items allows you to expand the information stored in a dictionary by introducing new keys and values. This flexibility can be useful when you need to include additional data or attributes for a specific entity, just like adding new contact details for a student."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Remove Dictionary Items:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, dictionaries are mutable, which means you can modify their contents after they are created. To remove items from a dictionary, you can use the `del` keyword or the `pop()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider an example where we have a dictionary representing a shopping cart:"}),(0,$e.jsx)(Gt,{children:'\ncart = {\n  "item1": 10,\n   "item2": 5,\n  "item3": 3\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `cart` dictionary contains key-value pairs representing items and their quantities."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To remove a specific item from the dictionary, you can use the `del` keyword followed by the key:"}),(0,$e.jsx)(Gt,{children:'\ndel cart["item2"]\nprint(cart)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "item1": 10,\n  "item3": 3\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, we removed the item with the key `"item2"` from the `cart` dictionary.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Alternatively, you can use the `pop()` method to remove an item from the dictionary and retrieve its value at the same time:"}),(0,$e.jsx)(Gt,{children:'\nremoved_quantity = cart.pop("item3")\nprint(cart)\nprint(removed_quantity)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "item1": 10\n}\n3\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, we used `pop("item3")` to remove the item with the key `"item3"`. The method returns the value associated with the key, which we stored in the `removed_quantity` variable. As a result, the `cart` dictionary no longer contains the item with the key `"item3"`.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you try to remove a key that doesn't exist in the dictionary, a `KeyError` will be raised. However, you can provide a default value to `pop()` to avoid the error:"}),(0,$e.jsx)(Gt,{children:'\nremoved_quantity = cart.pop("item4", 0)\nprint(cart)\nprint(removed_quantity)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "item1": 10\n}\n0\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, since the key `"item4"` doesn\'t exist in the dictionary, the default value `0` is returned, and the `cart` dictionary remains unchanged.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also remove items from a dictionary using a loop or other control structures based on certain conditions. For example, to remove all items with quantities less than or equal to 5:"}),(0,$e.jsx)(Gt,{children:"\nitems_to_remove = []\nfor item, quantity in cart.items():\n    if quantity <= 5:\n        items_to_remove.append(item)\n\nfor item in items_to_remove:\n    del cart[item]\n\nprint(cart)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n{\n  "item1": 10\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we iterated over the dictionary using `cart.items()` to access both the keys and values. If an item's quantity is less than or equal to 5, we appended its key to the `items_to_remove` list. Finally, we removed all the items stored in the `items_to_remove` list from the `cart` dictionary."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Removing dictionary items allows you to selectively eliminate specific data from a dictionary based on your requirements. This flexibility can be beneficial when you need to update or filter out information, just like removing items from a shopping cart based on certain conditions."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Loop Dictionaries:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can use various techniques to loop over the items in a dictionary. These techniques allow you to access and process the keys and values stored in the dictionary."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider an example where we have a dictionary representing a student's grades:"}),(0,$e.jsx)(Gt,{children:'\ngrades = {\n  "Math": 90,\n  "Science": 85,\n  "English": 92,\n  "History": 88\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `grades` dictionary contains key-value pairs representing different subjects and their corresponding grades."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To loop over the dictionary's keys, you can use a `for` loop:"}),(0,$e.jsx)(Gt,{children:"\nfor subject in grades:\nprint(subject)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\nMath\nScience\nEnglish\nHistory\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this case, the loop iterates over the keys in the `grades` dictionary, and at each iteration, the `subject` variable contains the current key."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To loop over the dictionary's values, you can use the `values()` method:"}),(0,$e.jsx)(Gt,{children:"\nfor grade in grades.values():\n    print(grade)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\n90\n85\n92\n88\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the loop iterates over the values in the `grades` dictionary, and at each iteration, the `grade` variable contains the current value."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To loop over both the keys and values of a dictionary simultaneously, you can use the `items()` method, which returns a list of key-value tuples:"}),(0,$e.jsx)(Gt,{children:'\nfor subject, grade in grades.items():\nprint(subject, "-", grade)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\nMath - 90\nScience - 85\nEnglish - 92\nHistory - 88\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this case, the loop iterates over the key-value pairs in the `grades` dictionary, and at each iteration, the `subject` variable contains the current key, and the `grade` variable contains the current value."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also perform various operations within the loop, such as conditional checks or calculations, based on the keys or values. For example, let's calculate the average grade:"}),(0,$e.jsx)(Gt,{children:'\ntotal_grade = 0\ncount = 0\n\nfor grade in grades.values():\n    total_grade += grade\n    count += 1\n\naverage_grade = total_grade / count\nprint("Average grade:", average_grade)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we use a loop to iterate over the values in the `grades` dictionary, accumulating the total grade and counting the number of grades. Then, we calculate the average grade by dividing the total grade by the count."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Looping over dictionaries allows you to iterate through the data stored in a dictionary and perform operations on its keys and values. This flexibility can be useful when you need to process or analyze information, just like calculating and analyzing a student's grades."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Copy Dictionaries:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, there are multiple ways to create a copy of a dictionary. It's important to understand that when you assign a dictionary to a new variable, you are creating a reference to the original dictionary, not a separate copy. Therefore, any modifications made to one dictionary will affect the other. To create an independent copy of a dictionary, you can use the `copy()` method or the dictionary constructor `dict()`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider an example where we have a dictionary representing a person's information:"}),(0,$e.jsx)(Gt,{children:'\nperson = {\n  "name": "John Doe",\n  "age": 30,\n  "city": "New York",\n  "occupation": "Engineer"\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `person` dictionary contains various key-value pairs representing a person's name, age, city, and occupation."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To create a copy of the dictionary, you can use the `copy()` method:"}),(0,$e.jsx)(Gt,{children:"\nperson_copy = person.copy()\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this case, the `person_copy` dictionary is an independent copy of the `person` dictionary. Any modifications made to one dictionary will not affect the other."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also create a copy of a dictionary using the dictionary constructor `dict()`:"}),(0,$e.jsx)(Gt,{children:"\nperson_copy = dict(person)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This method achieves the same result, where `person_copy` is a separate dictionary with the same key-value pairs as `person`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's demonstrate the difference between a shallow copy and a deep copy with a real-life example. Consider a dictionary representing a shopping cart with nested dictionaries:"}),(0,$e.jsx)(Gt,{children:'\ncart = {\n  "item1": {\n      "name": "Shirt",\n      "price": 20\n  },\n  "item2": {\n      "name": "Jeans",\n      "price": 30\n  }\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's create a shallow copy of the `cart` dictionary:"}),(0,$e.jsx)(Gt,{children:"\ncart_copy_shallow = cart.copy()\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Both `cart` and `cart_copy_shallow` refer to the same objects, including the nested dictionaries. Therefore, modifying the nested dictionaries in one dictionary will affect the other:"}),(0,$e.jsx)(Gt,{children:"\ncart_copy_shallow[\"item1\"][\"price\"] = 25\nprint(cart)  # Output: {'item1': {'name': 'Shirt', 'price': 25}, 'item2': {'name': 'Jeans', 'price': 30}}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, modifying the price of "item1" in `cart_copy_shallow` also changes the price in the original `cart` dictionary.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To create a deep copy that is independent of the original dictionary and its nested objects, you can use the `copy.deepcopy()` function from the `copy` module:"}),(0,$e.jsx)(Gt,{children:"\nimport copy\n\ncart_copy_deep = copy.deepcopy(cart)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"With a deep copy, modifying the nested dictionaries in one dictionary will not affect the other:"}),(0,$e.jsx)(Gt,{children:"\ncart_copy_deep[\"item2\"][\"price\"] = 35\nprint(cart)  # Output: {'item1': {'name': 'Shirt', 'price': 25}, 'item2': {'name': 'Jeans', 'price': 30}}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, modifying the price of "item2" in `cart_copy_deep` does not change the price in the original `cart` dictionary.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Creating copies of dictionaries allows you to work with independent versions of the data, ensuring that modifications to one dictionary do not affect the other. This flexibility can be useful when you need to manipulate or modify data without altering the original dictionary, just like creating copies of important documents for different purposes."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Nested Dictionaries:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, a nested dictionary is a dictionary that contains other dictionaries as values. This allows you to organize and represent hierarchical or structured data."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider an example where we have a nested dictionary representing a bookstore:"}),(0,$e.jsx)(Gt,{children:'\nbookstore = {\n  "fiction": {\n      "novel": ["Harry Potter", "To Kill a Mockingbird"],\n      "science fiction": ["Dune", "1984"]\n  },\n  "non-fiction": {\n      "biography": ["The Diary of a Young Girl", "Steve Jobs"],\n      "history": ["Sapiens", "The Guns of August"]\n  }\n}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, the `bookstore` dictionary is organized into two main categories: "fiction" and "non-fiction". Each category is represented by a nested dictionary containing subcategories as keys and lists of books as values.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'To access the values in a nested dictionary, you can use multiple indexing. For example, to access the novel "To Kill a Mockingbird", you would use:'}),(0,$e.jsx)(Gt,{children:'\nbook = bookstore["fiction"]["novel"][1]\nprint(book)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\nTo Kill a Mockingbird\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, `bookstore["fiction"]` returns the nested dictionary representing the "fiction" category. Then, `["novel"][1]` accesses the list of novels and retrieves the second item in the list.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also loop over the keys and values of a nested dictionary using nested loops. For example, let's print all the books in the `bookstore` dictionary:"}),(0,$e.jsx)(Gt,{children:'\nfor category, subcategories in bookstore.items():\n    print(category + ":")\n    for subcategory, books in subcategories.items():\n        print("- " + subcategory + ":")\n        for book in books:\n            print("  - " + book)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"\nfiction:\n- novel:\n  - Harry Potter\n  - To Kill a Mockingbird\n- science fiction:\n  - Dune\n  - 1984\nnon-fiction:\n- biography:\n  - The Diary of a Young Girl\n  - Steve Jobs\n- history:\n  - Sapiens\n  - The Guns of August\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, the outer loop iterates over the main categories ("fiction" and "non-fiction"), the second loop iterates over the subcategories within each category, and the innermost loop iterates over the books within each subcategory.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Nested dictionaries allow you to represent complex and structured data where relationships and hierarchies exist. They can be used to model various real-life scenarios, such as organizing data in a hierarchical manner, like a bookstore with different categories and subcategories of books."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Dictionary Methods:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. `clear()`:"})," This method removes all key-value pairs from a dictionary, making it empty."]}),(0,$e.jsx)(Gt,{children:'\nmy_dict = {"name": "John", "age": 30, "city": "New York"}\nmy_dict.clear()\nprint(my_dict)  # Output: {}\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the `clear()` method is used to remove all the key-value pairs from the `my_dict` dictionary, resulting in an empty dictionary."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2. `get(key, default)`:"}),"  This method returns the value associated with a given key. If the key is not found in the dictionary, it returns the specified default value (or `None` if not provided)."]}),(0,$e.jsx)(Gt,{children:'\nmy_dict = {"name": "John", "age": 30, "city": "New York"}\nage = my_dict.get("age")\nprofession = my_dict.get("profession", "Unknown")\nprint(age)  # Output: 30\nprint(profession)  # Output: Unknown\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:' In this example, `get("age")` retrieves the value associated with the key `"age"` from the `my_dict` dictionary. The `get("profession", "Unknown")` returns the value associated with the key `"profession"`, which is not found in the dictionary, so it returns the default value `"Unknown"`.'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3. `keys()`:"})," This method returns a view object containing all the keys in the dictionary."]}),(0,$e.jsx)(Gt,{children:'\nmy_dict = {"name": "John", "age": 30, "city": "New York"}\nkeys = my_dict.keys()\nprint(keys)  # Output: dict_keys([\'name\', \'age\', \'city\'])\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"   In this example, `keys()` returns a view object containing all the keys in the `my_dict` dictionary."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"4. `values()`:"}),"  This method returns a view object containing all the values in the dictionary."]}),(0,$e.jsx)(Gt,{children:'\nmy_dict = {"name": "John", "age": 30, "city": "New York"}\nvalues = my_dict.values()\nprint(values)  # Output: dict_values([\'John\', 30, \'New York\'])\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, `values()` returns a view object containing all the values in the `my_dict` dictionary."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"5. `items()`:"}),"This method returns a view object containing all the key-value pairs in the dictionary as tuples."]}),(0,$e.jsx)(Gt,{children:"\nmy_dict = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\nitems = my_dict.items()\nprint(items)  # Output: dict_items([('name', 'John'), ('age', 30), ('city', 'New York')])\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, `items()` returns a view object containing all the key-value pairs in the `my_dict` dictionary as tuples."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are just a few examples of commonly used dictionary methods in Python. There are more methods available that allow you to perform operations such as adding or updating elements, removing items, and merging dictionaries. Understanding and utilizing these methods effectively can help you manipulate and extract information from dictionaries in your Python programs."})]})})})},xa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Casting"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, casting refers to the process of converting one data type into another. Python provides built-in functions that allow you to perform type casting. Here are the commonly used casting functions:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.int():"})," Converts a value into an integer."]}),(0,$e.jsx)(Gt,{children:'\n  # Casting to integer\n  x = 10.5\n  y = "25"\n  \n  int_x = int(x)   # Output: 10\n  int_y = int(y)   # Output: 25\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. float():"})," Converts a value into a floating-point number."]}),(0,$e.jsx)(Gt,{children:'\n  # Casting to float\n  x = 10\n  y = "3.5"\n  \n  float_x = float(x)   # Output: 10.0\n  float_y = float(y)   # Output: 3.5\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.str():"})," Converts a value into a string."]}),(0,$e.jsx)(Gt,{children:'\n  # Casting to string\n  x = 10\n  y = 3.5\n\n  str_x = str(x)   # Output: "10"\n  str_y = str(y)   # Output: "3.5"\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4.bool():"})," Converts a value into a boolean."]}),(0,$e.jsx)(Gt,{children:'\n  # Casting to boolean\n  x = 10\n  y = 0\n  z = "Hello"\n  bool_x = bool(x)   # Output: True\n  bool_y = bool(y)   # Output: False\n  bool_z = bool(z)   # Output: True\n\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" It's important to note that not all types can be cast to each other. For example, casting a string that doesn't represent a valid number to an integer or float will result in an error. Similarly, casting a string to a boolean will always yield True unless the string is empty or \"False\"."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Casting is useful when you need to change the data type of a variable to perform specific operations or to ensure compatibility with other parts of your code. However, be cautious when casting, as data loss or unexpected results can occur if the conversion is not appropriate for the given data."})]})})})},_a=function(){var e="\n   # join() method\n  words = ['Hello', 'World']\n  joined = \" \".join(words)\n  print(joined)\n  # Output: Hello World\n  \n  ";return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Strings are versatile and extensively used in various applications. Understanding string operations and methods allows you to manipulate and work with textual data effectively in your Python programs."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Slicing Strings"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, string slicing allows you to extract a portion of a string by specifying a range of indices. The syntax for string slicing is string[start:end:step], where start is the starting index, end is the ending index (exclusive), and step is the optional step size. Here are the key points about string slicing:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.Basic String Slicing:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To slice a string, specify the starting and ending indices within square brackets ([])."}),(0,$e.jsx)(Gt,{children:'\n   # Basic string slicing\n  message = "Hello, World!"\n  \n  # Extracting a substring\n  substring = message[7:12]   # Output: "World"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.Omitted Indices:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you omit the start index, Python assumes it as 0 (the beginning of the string)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you omit the end index, Python assumes it as the length of the string (the end of the string)."}),(0,$e.jsx)(Gt,{children:'\n   # Omitted indices\n  message = "Hello, World!"\n  \n  # Omitting the start index\n  substring1 = message[:5]    # Output: "Hello"\n  \n  # Omitting the end index\n  substring2 = message[7:]    # Output: "World!"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.Negative Indices:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can use negative indices to slice a string from the end."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"-1 represents the last character of the string, -2 represents the second-to-last character, and so on."}),(0,$e.jsx)(Gt,{children:'\n   # Negative indices\n  message = "Hello, World!"\n  \n  substring = message[-6:-1]   # Output: "World"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4.Step Size:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The step parameter allows you to specify the number of characters to skip between each character in the slice."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"A positive step value extracts characters from left to right, while a negative step value extracts characters from right to left."}),(0,$e.jsx)(Gt,{children:'\n   # Step size\n  message = "Hello, World!"\n  \n  # Extracting every second character\n  substring1 = message[::2]    # Output: "Hlo ol!"\n  \n  # Reversing the string\n  substring2 = message[::-1]   # Output: "!dlroW ,olleH"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"5.Slicing with Variables:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can use variables to specify the start, end, and step indices for slicing."}),(0,$e.jsx)(Gt,{children:'\n   # Slicing with variables\n  message = "Hello, World!"\n  \n  start_index = 7\n  end_index = 12\n  substring = message[start_index:end_index]   # Output: "World"\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Slicing allows you to extract substrings from a larger string, which is useful for manipulating and processing specific parts of the text."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Modify Strings:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, strings are immutable, which means you cannot change individual characters in a string directly. However, you can perform various operations to create new modified strings. Here are some ways to modify strings:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.Concatenation:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can concatenate (join) two or more strings together using the + operator."}),(0,$e.jsx)(Gt,{children:' \n  # Concatenation\n  str1 = "Hello"\n  str2 = "World"\n  \n  concatenated = str1 + " " + str2   # Output: "Hello World"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.String Methods:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Python provides several built-in string methods that allow you to modify strings. Here are some commonly used methods:"}),(0,$e.jsx)(Gt,{children:'\n   # String methods\n  message = "Hello, World!"\n  \n  # Changing case\n  uppercase = message.upper()        # Output: "HELLO, WORLD!"\n  lowercase = message.lower()        # Output: "hello, world!"\n  \n  # Removing leading and trailing whitespace\n  trimmed = message.strip()          # Output: "Hello, World!"\n  \n  # Replacing substrings\n  replaced = message.replace("Hello", "Hi")   # Output: "Hi, World!"\n  \n  # Splitting into a list\n  words = message.split(",")         # Output: ["Hello", " World!"]\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.String Formatting:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"String formatting allows you to insert values into a string dynamically. You can use the % operator, the format() method, or f-strings (formatted string literals) to achieve this."}),(0,$e.jsx)(Gt,{children:' \n  # String formatting\n  name = "Alice"\n  age = 25\n  \n  # Using the % operator\n  formatted1 = "My name is %s and I am %d years old." % (name, age)\n  \n  # Using the format() method\n  formatted2 = "My name is {} and I am {} years old.".format(name, age)\n  \n  # Using f-strings\n  formatted3 = f"My name is {name} and I am {age} years old."\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4.Slicing and Reassignment:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Although you cannot modify individual characters, you can slice a string and assign the modified slice to a new variable."}),(0,$e.jsx)(Gt,{children:'\n   # Slicing and reassignment\n  message = "Hello, World!"\n  \n  # Slicing to modify a portion of the string\n  modified = message[:5] + " Python!"   # Output: "Hello Python!"\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to note that when modifying strings, the original string remains unchanged, and the modifications result in new string objects. Therefore, you need to assign the modified string to a new variable to store the changes."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By utilizing concatenation, string methods, formatting, and slicing techniques, you can effectively modify and manipulate strings in Python to suit your specific requirements."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python String Concatenation"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, string concatenation refers to the process of combining two or more strings to create a single string. There are several ways to perform string concatenation:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.Using the + Operator:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can use the + operator to concatenate strings together. When the + operator is used between two strings, it joins them into a single string."}),(0,$e.jsx)(Gt,{children:'\n   # Using the + operator\n  str1 = "Hello"\n  str2 = "World"\n  \n  concatenated = str1 + " " + str2   # Output: "Hello World"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.Using the += Operator:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The += operator is a shorthand operator that combines the concatenation and assignment operations. It appends the second string to the end of the first string and assigns the result back to the first string variable."}),(0,$e.jsx)(Gt,{children:' \n  # Using the += operator\n  str1 = "Hello"\n  str2 = "World"\n  \n  str1 += " " + str2   # Output: "Hello World"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.Using the join() Method:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The join() method is a powerful way to concatenate multiple strings stored in a list or iterable. It takes an iterable as an argument and joins its elements into a single string using the specified string as a separator."}),(0,$e.jsx)(Gt,{children:'\n   # Using the join() method\n  words = ["Hello", "World"]\n  \n  concatenated = " ".join(words)   # Output: "Hello World"\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4.Using f-strings (formatted string literals):"})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["f-strings allow you to insert variables directly into a string using curly braces ",". When an f-string is prefixed with an f, Python evaluates the expressions inside the curly braces and replaces them with their values."]}),(0,$e.jsx)(Gt,{children:'\n   # Using f-strings\n  str1 = "Hello"\n  str2 = "World"\n  \n  concatenated = f"{str1} {str2}"   # Output: "Hello World"\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"String concatenation is a fundamental operation when working with text data. It allows you to combine strings in various ways, such as joining words, creating sentences, or constructing more complex data structures. By understanding and utilizing the different methods of string concatenation in Python, you can effectively manipulate and create meaningful strings in your programs."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Format - Strings"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" String formatting in Python allows you to insert values into a string dynamically. It helps create more readable and flexible output by combining text and variables. There are multiple approaches for string formatting:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.Using the % Operator (Old Style):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The % operator allows you to format strings using placeholders %s for strings, %d for integers, %f for floating-point numbers, and other format specifiers. You provide the values to be inserted into the placeholders after the % operator."}),(0,$e.jsx)(Gt,{children:'\n   # Using the % operator (Old Style)\n  name = "Alice"\n  age = 25\n  \n  formatted = "My name is %s and I am %d years old." % (name, age)\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.Using the format() Method:"})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["The format() method provides a more versatile way of string formatting. You can use curly braces "," as placeholders, and pass the values to be inserted into the placeholders as arguments to the format() method."]}),(0,$e.jsx)(Gt,{children:'\n   # Using the format() method\n  name = "Alice"\n  age = 25\n  \n  formatted = "My name is {} and I am {} years old.".format(name, age)\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.Using f-Strings (Formatted String Literals):"})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["f-Strings provide a concise and intuitive way of string formatting introduced in Python 3.6+. You can include expressions inside curly braces "," within an f-string, and Python evaluates the expressions and replaces them with their values."]}),(0,$e.jsx)(Gt,{children:'\n   # Using f-Strings\n  name = "Alice"\n  age = 25\n  \n  formatted = f"My name is {name} and I am {age} years old."\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"String formatting allows you to combine static text and dynamic values in a readable and flexible manner. It's important to choose the appropriate formatting method based on your Python version and personal preference."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Escape Characters:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, escape characters are special characters that are used to represent certain non-printable or special characters within a string. They are preceded by a backslash (\\). Here are some commonly used escape characters:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.Newline (\\n):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The newline escape character is used to insert a line break in a string."}),(0,$e.jsx)(Gt,{children:'\n   # Newline escape character\n  message = "Hello,\nWorld!"\n  print(message)\n  # Output:\n  # Hello,\n  # World!\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.Tab (\\t):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The tab escape character is used to insert a horizontal tab in a string."}),(0,$e.jsx)(Gt,{children:'\n   # Tab escape character\n  message = "Name:\tJohn"\n  print(message)\n  # Output: Name:    John\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.Backslash (\\\\):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The backslash escape character is used to include a literal backslash in a string."}),(0,$e.jsx)(Gt,{children:' \n  # Backslash escape character\n  path = "C:\\Users\\John\\Documents"\n  print(path)\n  # Output: C:UsersJohnDocuments\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4.Single Quote (\\') and Double Quote (\\\"):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The single quote escape character is used to include a single quote within a single-quoted string."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The double quote escape character is used to include a double quote within a double-quoted string."}),(0,$e.jsx)(Gt,{children:"\n   # Single quote and double quote escape characters\n  message1 = 'He said, 'Hello!''\n  message2 = \"She said, \"Hi!\"\"\n  print(message1)\n  print(message2)\n  # Output:\n  # He said, 'Hello!'\n  # She said, \"Hi!\"\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"5.Unicode Character Escape (\\u and \\U):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The Unicode character escape allows you to include Unicode characters in a string by specifying their hexadecimal value."}),(0,$e.jsx)(Gt,{children:'\n   # Unicode character escape\n  message = "\u03a3"   # Greek capital letter Sigma\n  print(message)\n  # Output: \u03a3\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"6.Raw String (r):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The raw string prefix r is used to create a raw string that treats backslashes as literal characters, ignoring escape characters."}),(0,$e.jsx)(Gt,{children:'\n   # Raw string\n  message = r"Path:UsersJohnDocuments"\n  print(message)\n  # Output: Path:UsersJohnDocuments\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Escape characters are useful when you need to include special characters or control the formatting of strings. By understanding and utilizing escape characters in Python, you can create strings that contain a wide range of characters and formatting options."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python String Methods"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Python provides a rich set of built-in string methods that allow you to manipulate and perform various operations on strings. Here are some commonly used string methods:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.upper():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The upper() method returns a new string with all characters converted to uppercase."}),(0,$e.jsx)(Gt,{children:'\n   # upper() method\n  message = "Hello, World!"\n  uppercase = message.upper()\n  print(uppercase)\n  # Output: HELLO, WORLD!\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.lower():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The lower() method returns a new string with all characters converted to lowercase."}),(0,$e.jsx)(Gt,{children:'\n   # lower() method\n  message = "Hello, World!"\n  lowercase = message.lower()\n  print(lowercase)\n  # Output: hello, world!\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3.strip():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The strip() method returns a new string with leading and trailing whitespace characters removed."}),(0,$e.jsx)(Gt,{children:' \n   # strip() method\n  message = "   Hello, World!   "\n  trimmed = message.strip()\n  print(trimmed)\n  # Output: Hello, World!\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4.replace():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The replace() method returns a new string with all occurrences of a specified substring replaced with another substring."}),(0,$e.jsx)(Gt,{children:' \n   # replace() method\n  message = "Hello, World!"\n  replaced = message.replace("Hello", "Hi")\n  print(replaced)\n  # Output: Hi, World!\n  \n   '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"5.split():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The split() method splits a string into a list of substrings based on a specified delimiter. By default, the delimiter is a space."}),(0,$e.jsx)(Gt,{children:" \n   # split() method\n  message = \"Hello, World!\"\n  words = message.split(\",\")\n  print(words)\n  # Output: ['Hello', ' World!']\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"6.join():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The join() method joins the elements of an iterable (such as a list) into a single string, using the specified string as a separator."}),(0,$e.jsx)(Gt,{children:e}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"6.join():"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The join() method joins the elements of an iterable (such as a list) into a single string, using the specified string as a separator."}),(0,$e.jsx)(Gt,{children:e}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are just a few examples of the many string methods available in Python. Each method serves a specific purpose and allows you to manipulate strings in various ways."})]})})})},ba=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python Booleans:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Booleans in Python are a data type that represents two possible values: True and False. They are primarily used for logical operations and control flow in programming. Here's a comprehensive explanation of booleans in Python with examples:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 1. Boolean Values:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In Python, the boolean values are denoted as True and False. It's important to note that the first letter of each value is capitalized."}),(0,$e.jsx)(Gt,{children:"\n  x = True\n   y = False\n   print(x)  # Output: True\n   print(y)  # Output: False\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 2. Boolean Operations:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Python provides several logical operators for performing operations with boolean values."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Logical AND (`and`):"})," Returns True if both operands are True; otherwise, it returns False"]}),(0,$e.jsx)(Gt,{children:"\n   a = True\n   b = False\n   print(a and b)  # Output: False\n\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Logical OR (`or`):"})," Returns True if at least one of the operands is True; otherwise, it returns False."]}),(0,$e.jsx)(Gt,{children:"\n   a = True\n   b = False\n   print(a or b)  # Output: True\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Logical NOT (`not`):"})," Returns the opposite boolean value of the operand."]}),(0,$e.jsx)(Gt,{children:"\n   a = True\n   print(not a)  # Output: False\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 3. Comparison Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Comparison operators in Python compare two values and return a boolean value based on the comparison."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Equality (`==`):"})," Returns True if the operands are equal; otherwise, it returns False."]}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   b = 10\n   print(a == b)  # Output: False\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Inequality (`!=`):"})," Returns True if the operands are not equal; otherwise, it returns False."]}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   b = 10\n   print(a != b)  # Output: True\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Greater than (`>`), Less than (`<`), Greater than or equal to (`>=`), Less than or equal to (`<=`): "})," Returns True if the operands are not equal; otherwise, it returns False."]}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   b = 10\n   print(a > b)   # Output: False\n   print(a < b)   # Output: True\n   print(a >= b)  # Output: False\n   print(a <= b)  # Output: True\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" 4. Boolean Expressions:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  Boolean expressions combine boolean values, variables, and operators to produce a boolean result."}),(0,$e.jsx)(Gt,{children:"\n    a = True\n    b = False\n    c = True\n \n    result = (a and b) or (b and c)\n    print(result)  # Output: False\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are the fundamental aspects of booleans in Python. They play a vital role in conditional statements, loops, and other control flow structures in Python programming."})]})})})},ya=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, operators are symbols or special characters that perform operations on one or more operands. They are used to manipulate values and variables. Here's a comprehensive explanation of operators in Python with examples:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Arithmetic Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Arithmetic operators are used to perform mathematical operations."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"a)Addition (`+`): Adds two operands"})]}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   b = 3\n   result = a + b\n   print(result)  # Output: 8\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"b)Subtraction (`-`): Subtracts the second operand from the first."})]}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   b = 3\n   result = a - b\n   print(result)  # Output: 2\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"c)Multiplication (`*`): Multiplies two operands."})]}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   b = 3\n   result = a * b\n   print(result)  # Output: 15\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"d)Division (`/`): Divides the first operand by the second. Returns a float result."})]}),(0,$e.jsx)(Gt,{children:"\n   a = 10\n   b = 3\n   result = a / b\n   print(result)  # Output: 3.3333333333333335\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"e)Floor Division (`//`): Divides the first operand by the second and returns the integer result (floor value)."})]}),(0,$e.jsx)(Gt,{children:"\n   a = 10\n   b = 3\n   result = a // b\n   print(result)  # Output: 3\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"f)Modulus (`%`): Returns the remainder when the first operand is divided by the second."})]}),(0,$e.jsx)(Gt,{children:"\n   a = 10\n   b = 3\n   result = a % b\n   print(result)  # Output: 1\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"g)Exponentiation (`**`): Raises the first operand to the power of the second"})]}),(0,$e.jsx)(Gt,{children:"\n   a = 2\n   b = 3\n   result = a ** b\n   print(result)  # Output: 8\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Assignment Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Assignment operators are used to assign values to variables."}),(0,$e.jsx)(Gt,{children:"\n   a = 5  # Assigns the value 5 to variable 'a'\n   b = 10  # Assigns the value 10 to variable 'b'\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Python also provides compound assignment operators such as `+=`, `-=`, `*=`, `/=`, `//=`, `%=` that combine an arithmetic operation with assignment."}),(0,$e.jsx)(Gt,{children:"\n   a = 5\n   a += 3  # Equivalent to a = a + 3\n   print(a)  # Output: 8\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Comparison Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Comparison operators are used to compare values and return boolean results."})}),(0,$e.jsx)(Gt,{children:" \n   a = 5\n   b = 10\n\n   print(a == b)  # Output: False\n   print(a != b)  # Output: True\n   print(a > b)  # Output: False\n   print(a < b)  # Output: True\n   print(a >= b)  # Output: False\n   print(a <= b)  # Output: True\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"4. Logical Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Logical operators are used to combine boolean values and perform logical operations."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"a)Logical AND (`and`): Returns True if both operands are True."})]}),(0,$e.jsx)(Gt,{children:"\n   a = True\n   b = False\n   print(a and b)  # Output: False\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"b)Logical OR (`or`): Returns True if at least one of the operands is True."})]}),(0,$e.jsx)(Gt,{children:"\n   a = True\n   b = False\n   print(a or b)  # Output: True\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"c)Logical NOT (`not`): Returns the opposite boolean value of the operand."})]}),(0,$e.jsx)(Gt,{children:"\n   a = True\n   print(not a)  # Output: False\n    "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"5. Membership Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Membership operators are used to test if a value is a member of a sequence (such as a string, list, or tuple)."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"a)`in` operator: Returns True if the value is found in the sequence."})]}),(0,$e.jsx)(Gt,{children:"\n   python   name = \"John\"\n   print('o' in name)  # Output: True\n   "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"b)`not in` operator: Returns True if the value is not found in the sequence."})]}),(0,$e.jsx)(Gt,{children:"\n   name = \"John\"\n   print('x' not in name)  # Output: True\n   "}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"6. Identity Operators:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Identity operators are used to compare the memory addresses of two objects."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"a)`is` operator: Returns True if both operands refer to the same object."})]}),(0,$e.jsx)(Gt,{children:"\n   a = [1, 2, 3]\n   b = a\n   print(a is b)  # Output: True\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"b)`is not` operator: Returns True if both operands refer to different objects."})}),(0,$e.jsx)(Gt,{children:"\n   a = [1, 2, 3]\n   b = [1, 2, 3]\n   print(a is not b)  # Output: True\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are the main categories of operators in Python, each serving a different purpose. Understanding and effectively using operators is crucial for performing various computations and manipulations in Python programming"})]})})})},va=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Access List Items:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, you can access individual items in a list using their index values. The index of the first item in a list is 0, the second item has an index of 1, and so on. Here's an explanation of how to access list items in Python, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Accessing a Single Item:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To access a single item in a list, you can use the index enclosed in square brackets ([]). Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'cherry']\n    print(fruits[0])  # Output: 'apple'\n    print(fruits[1])  # Output: 'banana'\n    print(fruits[2])  # Output: 'cherry'\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Negative Indexing:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Python also allows negative indexing, where -1 refers to the last item in the list, -2 refers to the second last item, and so on. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'cherry']\n    print(fruits[-1])  # Output: 'cherry'\n    print(fruits[-2])  # Output: 'banana'\n    print(fruits[-3])  # Output: 'apple'\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Accessing Multiple Items (Slicing):"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can access a range of items from a list using slicing. The syntax for slicing is `list[start:end]`, where `start` is the index of the first item to include, and `end` is the index of the item just after the last item to include. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(numbers[1:5])   # Output: [2, 3, 4, 5]\n    print(numbers[:4])    # Output: [1, 2, 3, 4]\n    print(numbers[5:])    # Output: [6, 7, 8, 9]\n    print(numbers[2:7:2]) # Output: [3, 5, 7]\n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the last example, `2:7:2` means start at index 2, end at index 7 (exclusive), and take every second element"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. Modifying List Items:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can assign new values to list items by accessing them using their indexes. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'cherry']\n    fruits[1] = 'orange'\n    print(fruits)  # Output: ['apple', 'orange', 'cherry']\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"5. Checking List Length:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can find the length of a list using the `len()` function. It returns the total number of items in the list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'cherry']\n    print(len(fruits))  # Output: 3\n        "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the common ways to access list items in Python. Remember, lists are mutable, which means you can modify them by accessing and assigning values to specific indexes."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Change List Items"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To change the value of a single item in a list, you can use the index and assign a new value to it. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'cherry']\n    fruits[1] = 'orange'\n    print(fruits)  # Output: ['apple', 'orange', 'cherry']\n        "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the second item in the list (`fruits[1]`) is changed from `'banana'` to `'orange'`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Modifying a Single Item:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To change the value of a single item in a list, you can use the index and assign a new value to it. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'cherry']\n    fruits[1] = 'orange'\n    print(fruits)  # Output: ['apple', 'orange', 'cherry']\n    \n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the second item in the list (`fruits[1]`) is changed from `'banana'` to `'orange'`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Modifying Multiple Items (Slicing):"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can modify a range of items in a list using slicing. The syntax for slicing is `list[start:end]`, where `start` is the index of the first item to include, and `end` is the index of the item just after the last item to include. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n     numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    numbers[1:4] = [10, 11, 12]\n    print(numbers)  # Output: [1, 10, 11, 12, 5, 6, 7, 8, 9]\n    \n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the second, third, and fourth items in the list (`numbers[1:4]`) are replaced with the new values `[10, 11, 12]`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Changing List Length:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can change the length of a list by assigning a new list or sequence of items to a slice. This allows you to add or remove items from the list. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n     fruits = ['apple', 'banana', 'cherry']\n     fruits[1:] = ['orange', 'kiwi', 'mango']\n     print(fruits)  # Output: ['apple', 'orange', 'kiwi', 'mango']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, starting from the second item (`fruits[1:]`), the list is replaced with a new list `['orange', 'kiwi', 'mango']`. As a result, the list is modified with new items, and the length is changed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. Changing List Items In-Place:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Another way to modify list items is by using in-place operations like `append()`, `extend()`, or `insert()`. These methods directly modify the original list. Here are some examples:"}),(0,$e.jsx)(Gt,{children:" \n     numbers = [1, 2, 3]\n     numbers.append(4)\n     print(numbers)  # Output: [1, 2, 3, 4]\n     \n     fruits = ['apple', 'banana', 'cherry']\n     fruits.extend(['orange', 'kiwi'])\n     print(fruits)  # Output: ['apple', 'banana', 'cherry', 'orange', 'kiwi']\n     \n     numbers = [1, 2, 3]\n     numbers.insert(1, 10)\n     print(numbers)  # Output: [1, 10, 2, 3]\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the above examples, `append()` adds a single item at the end of the list, `extend()` adds multiple items to the end of the list, and `insert()` inserts an item at a specific index."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are the various ways to change list items in Python. Remember, lists are mutable, which means you can modify them directly by accessing and assigning new values to specific indexes or using in-place operations"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Add List Items"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, there are several ways to add items to a list. Here's an explanation of how to add list items, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Append Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `append()` method is used to add a single item at the end of a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.append('orange')\n     print(fruits)  # Output: ['apple', 'banana', 'cherry', 'orange']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the string `'orange'` is appended to the end of the `fruits` list using the `append()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Extend Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `extend()` method is used to add multiple items to the end of a list. It takes an iterable as an argument (e.g., another list). Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.extend(['orange', 'kiwi'])\n     print(fruits)  # Output: ['apple', 'banana', 'cherry', 'orange', 'kiwi']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the list `['orange', 'kiwi']` is appended to the end of the `fruits` list using the `extend()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Insert Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `insert()` method is used to insert an item at a specific index in a list. It takes two arguments: the index where you want to insert the item and the item itself. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n     fruits = ['apple', 'banana', 'cherry']\n     fruits.insert(1, 'orange')\n     print(fruits)  # Output: ['apple', 'orange', 'banana', 'cherry']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the string `'orange'` is inserted at index 1 in the `fruits` list using the `insert()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. Concatenation Operator:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also use the concatenation operator (`+`) to combine two lists. This creates a new list without modifying the original lists. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     new_fruits = fruits + ['orange', 'kiwi']\n     print(new_fruits)  # Output: ['apple', 'banana', 'cherry', 'orange', 'kiwi']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the original `fruits` list is combined with the list `['orange', 'kiwi']` using the `+` operator, creating a new list `new_fruits`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the common ways to add items to a list in Python. Depending on your specific requirements, you can choose the appropriate method to add items to your list."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Remove List Items"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, there are multiple ways to remove items from a list. Here's an explanation of how to remove list items, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Remove Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `remove()` method is used to remove the first occurrence of a specific item from a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry', 'banana']\n     fruits.remove('banana')\n     print(fruits)  # Output: ['apple', 'cherry', 'banana']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the first occurrence of the string `'banana'` is removed from the `fruits` list using the `remove()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Pop Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `pop()` method is used to remove an item from a list based on its index. It returns the removed item. If no index is specified, the last item is removed. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     removed_item = fruits.pop(1)\n     print(fruits)         # Output: ['apple', 'cherry']\n     print(removed_item)   # Output: 'banana'\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the item at index 1 ('banana') is removed from the `fruits` list using the `pop()` method and assigned to the variable `removed_item`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Del Statement:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `del` statement is a general-purpose way to remove items from a list using their indexes. It can also be used to delete a slice of items or the entire list. Here are some examples:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     del fruits[1]\n     print(fruits)  # Output: ['apple', 'cherry']\n     \n     numbers = [1, 2, 3, 4, 5]\n     del numbers[2:4]\n     print(numbers)  # Output: [1, 2, 5]\n     \n     vegetables = ['carrot', 'potato', 'broccoli']\n     del vegetables   # deletes the entire list\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the first example, the item at index 1 ('banana') is removed from the `fruits` list using the `del` statement. In the second example, a slice of items with indexes 2 and 3 is removed from the `numbers` list. Finally, the `del` statement without an index removes the entire `vegetables` list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. Clear Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `clear()` method is used to remove all items from a list, making it empty. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.clear()\n     print(fruits)  # Output: []\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `clear()` method is used to remove all items from the `fruits` list, resulting in an empty list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the common ways to remove items from a list in Python. Depending on your specific requirements, you can choose the appropriate method to remove items from your list."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Loop Lists:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can use loops to iterate over the items in a list. There are multiple ways to loop through a list. Here's an explanation of how to loop through lists using different approaches, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. For Loop:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `for` loop is commonly used to iterate over each item in a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     for fruit in fruits:\n         print(fruit)\n     \n     #Output:\n     \n     apple\n     banana\n     cherry\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `for` loop iterates over each item in the `fruits` list, and the variable `fruit` takes the value of each item in each iteration. The `print()` statement inside the loop prints each fruit on a new line."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Using the Range and Length:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also use the `range()` function in conjunction with the `len()` function to loop through a list using index values. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     for i in range(len(fruits)):\n         print(fruits[i])\n\n     #Output:\n     apple\n     banana\n     cherry\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `range(len(fruits))` generates a sequence of index values corresponding to the list items. The `for` loop iterates over these index values, and `fruits[i]` accesses each item in the `fruits` list using the index."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Enumerate Function:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `enumerate()` function allows you to iterate over both the index and value of each item in a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     for index, fruit in enumerate(fruits):\n         print(index, fruit)\n     \n     #Output:\n     \n     0 apple\n     1 banana\n     2 cherry\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `enumerate(fruits)` function returns an iterator that generates pairs of index and value for each item in the `fruits` list. The `for` loop unpacks these pairs into the `index` and `fruit` variables, respectively."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. List Comprehension:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"List comprehension provides a concise way to loop through a list and perform operations on each item to create a new list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     upper_fruits = [fruit.upper() for fruit in fruits]\n     print(upper_fruits)  # Output: ['APPLE', 'BANANA', 'CHERRY']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the list comprehension `[fruit.upper() for fruit in fruits]`   creates a new list by converting each item in the `fruits` list to uppercase using the `upper()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the common ways to loop through lists in Python. Depending on your specific requirements, you can choose the appropriate approach to iterate over and work with list items."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - List Comprehension"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" List comprehension is a concise and powerful way to create new lists by performing operations on existing lists. It provides a compact syntax to generate a new list based on the items of an existing list. Here's an explanation of list comprehension in Python, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Basic Syntax:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The basic syntax for list comprehension is as follows:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"new_list = [expression for item in iterable if condition]"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"where:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- `expression` is the operation or transformation to be performed on each item."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- `item` is the variable that represents each item in the iterable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- `iterable` is the sequence or collection of items to iterate over."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- `condition` (optional) is an optional filter that determines whether an item should be included in the new list or not."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 1 - Squaring Numbers:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's say we have a list of numbers and we want to create a new list that contains the squares of each number. We can use list comprehension to achieve this:"}),(0,$e.jsx)(Gt,{children:" \n     numbers = [1, 2, 3, 4, 5]\n     squared_numbers = [x ** 2 for x in numbers]\n     print(squared_numbers)  # Output: [1, 4, 9, 16, 25] \n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the expression `x ** 2` calculates the square of each number `x` in the `numbers` list. The resulting squares are then collected into the `squared_numbers` list using list comprehension."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 2 - Filtering Even Numbers:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider a scenario where we have a list of numbers, and we want to create a new list that only contains the even numbers. We can use list comprehension with a condition to achieve this:"}),(0,$e.jsx)(Gt,{children:"\n      numbers = [1, 2, 3, 4, 5]\n     even_numbers = [x for x in numbers if x % 2 == 0]\n     print(even_numbers)  # Output: [2, 4]\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the condition `x % 2 == 0` checks if each number `x` in the `numbers` list is divisible by 2 (i.e., even). Only the even numbers satisfying the condition are included in the `even_numbers` list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 3 - String Manipulation:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"List comprehension can also be used with strings. Let's say we have a list of names, and we want to create a new list that contains the uppercase versions of each name:"}),(0,$e.jsx)(Gt,{children:"\n      names = ['alice', 'bob', 'charlie']\n     upper_names = [name.upper() for name in names]\n     print(upper_names)  # Output: ['ALICE', 'BOB', 'CHARLIE']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the expression `name.upper()` converts each name `name` in the `names` list to uppercase using the `upper()` method. The resulting uppercase names are then collected into the `upper_names` list using list comprehension."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"List comprehension provides a concise and expressive way to create new lists by applying operations or conditions on existing lists. It helps in writing compact and readable code for transforming and filtering data."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Sort Lists"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can sort lists using various methods and functions. Here's an explanation of how to sort lists, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Sorted Function:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `sorted()` function is used to sort a list in ascending order. It returns a new sorted list, leaving the original list unchanged. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      numbers = [5, 2, 8, 1, 3]\n     sorted_numbers = sorted(numbers)\n     print(sorted_numbers)  # Output: [1, 2, 3, 5, 8]\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `sorted()` function sorts the `numbers` list in ascending order, and the sorted list is stored in the `sorted_numbers` variable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Sort Method:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `sort()` method is used to sort a list in-place, i.e., it modifies the original list directly. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.sort()\n     print(fruits)  # Output: ['apple', 'banana', 'cherry']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `sort()` method sorts the `fruits` list in lexicographical order (alphabetical order), modifying the original list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Note: The `sort()` method does not return a new list; it sorts the list in place."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Custom Sorting Order:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Both the `sorted()` function and the `sort()` method allow you to specify a custom sorting order using the `key` parameter. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     sorted_fruits = sorted(fruits, key=len)\n     print(sorted_fruits)  # Output: ['apple', 'cherry', 'banana']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `sorted()` function sorts the `fruits` list based on the length of each fruit name, resulting in a new list `sorted_fruits`. The `key=len` parameter tells the function to use the length of each item as the basis for sorting."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. Reverse Sorting:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Both the `sorted()` function and the `sort()` method have a `reverse` parameter that allows you to sort the list in descending order. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      numbers = [5, 2, 8, 1, 3]\n     sorted_numbers = sorted(numbers, reverse=True)\n     print(sorted_numbers)  # Output: [8, 5, 3, 2, 1]\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `sorted()` function sorts the `numbers` list in descending order by setting the `reverse=True` parameter."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the common ways to sort lists in Python. Depending on your specific requirements, you can choose the appropriate method or function to sort your lists."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Copy & Join Lists"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can copy and join lists using different methods and functions. Here's an explanation of how to copy and join lists, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Copying Lists:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `sorted()` function is used to sort a list in ascending order. It returns a new sorted list, leaving the original list unchanged. Here's an example:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"- Using the Slice Operator:"})}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits_copy = fruits[:]\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `fruits_copy` list is created by using the slice operator `[:]` on the `fruits` list. It creates a new list with the same elements as the original list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"- Using the `copy()` Method:"})}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits_copy = fruits.copy()\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `copy()` method is used to create a copy of the `fruits` list. It returns a new list with the same elements as the original list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"- Using the `list()` Function:"})}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits_copy = list(fruits)\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `list()` function is used to create a new list `fruits_copy` based on the elements of the `fruits` list. It produces a copy of the original list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Note: It's important to use one of these methods to create a copy of a list. Assigning a list to a new variable without using a copy method (e.g., `fruits_copy = fruits`) creates a reference to the same list, so modifications to one list will affect the other."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Joining Lists:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To combine or join multiple lists into a single list, there are a few methods available:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"- Using the `+` Operator:"})}),(0,$e.jsx)(Gt,{children:"\n      list1 = [1, 2, 3]\n     list2 = [4, 5, 6]\n     combined_list = list1 + list2\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `+` operator is used to concatenate `list1` and `list2`, resulting in a new list `combined_list` that contains all the elements from both lists."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"- Using the `extend()` Method"})}),(0,$e.jsx)(Gt,{children:"\n      list1 = [1, 2, 3]\n     list2 = [4, 5, 6]\n     list1.extend(list2)\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `extend()` method is used to append all the elements from `list2` to `list1`. The modification is done in-place, and `list1` is updated to include the elements from `list2`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"- Using List Concatenation:"})}),(0,$e.jsx)(Gt,{children:"\n      list1 = [1, 2, 3]\n     list2 = [4, 5, 6]\n     combined_list = [*list1, *list2]\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the lists `list1` and `list2` are unpacked using the `*` operator  and then combined into a new list `combined_list`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the common methods and techniques to copy and join lists in Python. Depending on your specific requirements, you can choose the appropriate approach to work with lists."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - List Methods"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, lists are objects that have built-in methods for performing various operations. Here's an explanation of some commonly used list methods, along with examples:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. append():"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `append()` method is used to add an element to the end of a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.append('durian')\n     print(fruits)  # Output: ['apple', 'banana', 'cherry', 'durian']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `append('durian')` call adds the element `'durian'` to the end of the `fruits` list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. insert():"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `insert()` method is used to insert an element at a specific position in a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.insert(1, 'orange')\n     print(fruits)  # Output: ['apple', 'orange', 'banana', 'cherry']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `insert(1, 'orange')` call inserts the element `'orange'` at index 1 in the `fruits` list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. remove():"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `remove()` method is used to remove the first occurrence of a specified element from a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     fruits.remove('banana')\n     print(fruits)  # Output: ['apple', 'cherry']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `remove('banana')` call removes the first occurrence of the element `'banana'` from the `fruits` list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. pop():"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `pop()` method is used to remove and return an element at a specified index in a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n      fruits = ['apple', 'banana', 'cherry']\n     removed_fruit = fruits.pop(1)\n     print(removed_fruit)  # Output: 'banana'\n     print(fruits)  # Output: ['apple', 'cherry']\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `pop(1)` call removes the element at index 1 ('banana') from the `fruits` list and returns it."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"5. index():"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `index()` method is used to find the index of the first occurrence of a specified element in a list. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n     fruits = ['apple', 'banana', 'cherry']\n     index = fruits.index('banana')\n     print(index)  # Output: 1\n     \n     "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `index('banana')` call returns the index of the first occurrence of the element `'banana'` in the `fruits` list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are just a few examples of the many methods available for lists in Python. Other useful list methods include `sort()`, `reverse()`, `count()`, and more. You can explore the Python documentation for a comprehensive list of list methods and their functionalities."})]})})})},Na=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Tuples"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, a tuple is an immutable sequence data type that is similar to a list. However, unlike lists, tuples cannot be modified once created. Here's an explanation of tuples in Python, along with examples:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Creating Tuples:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuples are created by enclosing comma-separated values in parentheses `()`. Here are a few examples:"}),(0,$e.jsx)(Gt,{children:"\n   empty_tuple = ()\n  single_item_tuple = (42,)\n  multiple_items_tuple = (1, 2, 3)\n  mixed_data_types_tuple = ('apple', 42, True)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the above examples, we create different tuples: an empty tuple, a tuple with a single item, a tuple with multiple items, and a tuple containing mixed data types."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Accessing Tuple Elements:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can access individual elements of a tuple using indexing, similar to lists. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n   fruits = ('apple', 'banana', 'cherry')\n  print(fruits[0])  # Output: 'apple'\n  print(fruits[2])  # Output: 'cherry'\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we access the first and third elements of the `fruits` tuple using indexing."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Tuple Packing and Unpacking:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuple packing is the process of creating a tuple by assigning multiple values separated by commas. Tuple unpacking is the process of assigning individual elements of a tuple to separate variables. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n   point = 2, 3\n  x, y = point\n  print(x, y)  # Output: 2 3\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we create a tuple `point` by packing two values (`2` and `3`). Then, we unpack the tuple into separate variables `x` and `y`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4. Tuple Methods and Operations:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuples support a few methods and operations, such as `len()`, `count()`, and `index()`. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n  fruits = ('apple', 'banana', 'cherry', 'apple')\n  print(len(fruits))           # Output: 4\n  print(fruits.count('apple')) # Output: 2\n  print(fruits.index('banana')) # Output: 1\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we use the `len()` function to get the length of the `fruits` tuple, the `count()` method to count the occurrences of a specific element, and the `index()` method to find the index of an element."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"5. Immutable Nature:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuples are immutable, meaning you cannot modify their elements once created. Attempting to modify a tuple will result in an error. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n  fruits = ('apple', 'banana', 'cherry')\n  fruits[0] = 'orange'  # Raises an error: TypeError: 'tuple' object does not support item assignment\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we try to modify the first element of the `fruits` tuple, which raises a `TypeError` because tuples are immutable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuples are useful when you want to create a collection of items that should not be modified. They are commonly used in scenarios where you need an immutable sequence of values, such as returning multiple values from a function or as keys in dictionaries."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Access Tuple Items"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can access individual items in a tuple using indexing and slicing. Here's an explanation of how to access tuple items, along with examples:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Indexing:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can access individual items in a tuple by specifying their index position, starting from 0 for the first item. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n  fruits = ('apple', 'banana', 'cherry')\n  print(fruits[0])  # Output: 'apple'\n  print(fruits[2])  # Output: 'cherry'\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we access the first item of the `fruits` tuple using index 0, and the third item using index 2."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.Negative Indexing"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also use negative indexing to access items from the end of the tuple. `-1` refers to the last item, `-2` refers to the second-to-last item, and so on. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n  fruits = ('apple', 'banana', 'cherry')\n  print(fruits[-1])  # Output: 'cherry'\n  print(fruits[-2])  # Output: 'banana'\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we access the last item of the `fruits` tuple using negative index `-1`, and the second-to-last item using negative index `-2`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Slicing:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can extract a subset of items from a tuple using slicing, which allows you to specify a range of indices. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n   fruits = ('apple', 'banana', 'cherry', 'durian', 'elderberry')\n  print(fruits[1:4])  # Output: ('banana', 'cherry', 'durian')\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we use slicing with the range `1:4` to extract items from index 1 up to, but not including, index 4. The resulting tuple includes the items `'banana'`, `'cherry'`, and `'durian'`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4. Tuple Unpacking:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can assign individual tuple items to separate variables using tuple unpacking. Here's an example:"}),(0,$e.jsx)(Gt,{children:" \n  point = (2, 3)\n  x, y = point\n  print(x, y)  # Output: 2 3\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we assign the first item of the `point` tuple to the variable `x` and the second item to the variable `y`. This allows us to access and work with the individual values conveniently."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the ways to access items in a tuple in Python. Remember that tuples are immutable, so you cannot modify their items once created. They are useful when you have a collection of values that should not be changed."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Update Tuples"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, tuples are immutable sequences, meaning that once they are created, their elements cannot be modified. However, it is possible to update tuples indirectly by creating new tuples based on existing ones. In this response, I'll explain various methods for updating tuples with proper format and examples."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Method 1: Concatenation"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuples can be updated by concatenating them with other tuples. This operation creates a new tuple with the elements from both tuples."}),(0,$e.jsx)(Gt,{children:" \n  tuple1 = (1, 2, 3)\n  tuple2 = (4, 5, 6)\n  updated_tuple = tuple1 + tuple2\n  print(updated_tuple)  # Output: (1, 2, 3, 4, 5, 6)\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Method 2: Slicing and Replacing"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This method involves slicing the original tuple and combining it with a new tuple that contains the updated elements. It creates a new tuple with the desired modifications."}),(0,$e.jsx)(Gt,{children:"\n   tuple1 = (1, 2, 3)\n  new_element = 4\n  index_to_replace = 1\n  updated_tuple = tuple1[:index_to_replace] + (new_element,) + tuple1[index_to_replace+1:]\n  print(updated_tuple)  # Output: (1, 4, 3)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Note that (new_element,) is used to create a single-element tuple. The comma after new_element is necessary to distinguish it from a regular parentheses grouping."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Method 3: Converting to a List"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuples can be converted to lists, modified, and then converted back to tuples. This approach is useful when multiple modifications are needed."}),(0,$e.jsx)(Gt,{children:"\n   tuple1 = (1, 2, 3)\n  list1 = list(tuple1)\n  list1[1] = 4\n  updated_tuple = tuple(list1)\n  print(updated_tuple)  # Output: (1, 4, 3)\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Method 4: Using the collections.namedtuple Function"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The collections.namedtuple function allows creating named tuples with named fields. These named tuples can be updated by creating new instances with modified field values."}),(0,$e.jsx)(Gt,{children:" \n  from collections import namedtuple\n\n  Person = namedtuple('Person', ['name', 'age'])\n  person1 = Person('Alice', 30)\n  updated_person = person1._replace(age=31)\n  print(updated_person)  # Output: Person(name='Alice', age=31)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, _replace creates a new named tuple with the specified field value replaced while keeping the other fields unchanged."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Unpack Tuples"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, tuple unpacking allows you to assign the elements of a tuple to individual variables. This can be done in a single line of code, making it a convenient way to extract and work with the values stored in a tuple. In this response, I'll explain tuple unpacking in proper format and provide examples to illustrate its usage."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Tuple Unpacking Syntax:"})]}),(0,$e.jsx)(Gt,{children:" \n  variable1, variable2, ... = tuple_name\n  Example 1: Basic Tuple Unpacking\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 1: Basic Tuple Unpacking"})}),(0,$e.jsx)(Gt,{children:" \n  tuple1 = (1, 2, 3)\n  a, b, c = tuple1\nprint(a)  # Output: 1\nprint(b)  # Output: 2\nprint(c)  # Output: 3\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the elements of tuple1 are assigned to the variables a, b, and c respectively."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 2: Unpacking with a Different Number of Variables"})}),(0,$e.jsx)(Gt,{children:" \n  tuple2 = (4, 5, 6)\n  x, y = tuple2\n  print(x)  # Output: 4\n  print(y)  # Output: 5\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, even though tuple2 has three elements, we are only unpacking the first two. Python allows unpacking a tuple into a different number of variables as long as the number of variables matches the number of elements being unpacked."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 3: Ignoring Certain Elements"})}),(0,$e.jsx)(Gt,{children:" \n  tuple3 = (7, 8, 9)\n  m, _, n = tuple3\n  print(m)  # Output: 7\n  print(n)  # Output: 9\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we use the underscore _ as a placeholder to ignore the second element of tuple3. This is useful when you only need specific elements from a tuple and want to discard the rest."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example 4: Unpacking Nested Tuples"})}),(0,$e.jsx)(Gt,{children:" \n  nested_tuple = (1, (2, 3), 4)\n  p, (q, r), s = nested_tuple\n  print(p)  # Output: 1\n  print(q)  # Output: 2\n  print(r)  # Output: 3\n  print(s)  # Output: 4\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a nested tuple where the second element is itself a tuple. By using nested parentheses in the variable assignment, we can unpack the elements at multiple levels."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Tuple unpacking is a powerful feature in Python that simplifies working with the elements of a tuple by assigning them to individual variables. It is especially useful when you know the structure and size of the tuple in advance."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Loop Tuples & Join Tuples"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can loop through tuples using various looping constructs like for loops, and you can also join tuples to create new tuples. In this response, I'll explain how to loop through tuples and join tuples with proper format and examples."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Looping Through Tuples:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can iterate over the elements of a tuple using a for loop. The loop will execute once for each element in the tuple."}),(0,$e.jsx)(Gt,{children:"\n   tuple1 = (1, 2, 3)\n  for element in tuple1:\n      print(element)\n  \n #Output:\n  1\n  2\n  3\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, each element of tuple1 is printed on a separate line."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Joining Tuples:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can join or concatenate two or more tuples to create a new tuple that contains the elements from all the tuples."}),(0,$e.jsx)(Gt,{children:" \n  tuple2 = (4, 5)\n  tuple3 = (6, 7, 8)\n  joined_tuple = tuple2 + tuple3\n  print(joined_tuple)\n  \n  \n  #Output:\n  (4, 5, 6, 7, 8)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, tuple2 and tuple3 are joined together using the + operator to create a new tuple called joined_tuple."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Additionally, you can use the += operator to append elements of one tuple to another in-place, modifying the original tuple."}),(0,$e.jsx)(Gt,{children:"\n   tuple4 = (1, 2)\n  tuple5 = (3, 4)\n  tuple4 += tuple5\n  print(tuple4)\n  \n  \n  #Output:\n  (1, 2, 3, 4)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the elements of tuple5 are appended to tuple4 using the += operator, modifying tuple4 in place."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also use the extend method to join a tuple with elements of another iterable, such as a list."}),(0,$e.jsx)(Gt,{children:" \n  tuple6 = (1, 2)\n  list1 = [3, 4]\n  tuple6 = tuple6 + tuple(list1)\n  print(tuple6)\n  \n  \n  #Output:\n    (1, 2, 3, 4)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the elements of list1 are converted to a tuple using tuple(list1), and then joined with tuple6 using the + operator to create the tuple6 tuple."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Looping through tuples and joining tuples are fundamental operations in Python for working with tuple data structures. They allow you to iterate over tuple elements and manipulate tuples to create new ones with combined or modified content."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Tuple Methods"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, tuples are immutable sequences, which means they cannot be modified once created. Therefore, tuples have a limited number of methods compared to other data structures like lists. In this response, I'll explain the available tuple methods, their functionalities, and provide examples."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Tuple Methods:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1.count(value):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Returns the number of occurrences of a specific value in a tuple."}),(0,$e.jsx)(Gt,{children:" \n\n  tuple1 = (1, 2, 2, 3, 4, 2)\n  count = tuple1.count(2)\n  print(count)  # Output: 3\n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the count() method is used to count the number of occurrences of the value 2 in tuple1."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2.index(value[, start[, end]]):"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Returns the index of the first occurrence of a value in a tuple."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Optional start and end parameters can be provided to specify the search range."}),(0,$e.jsx)(Gt,{children:" \n tuple2 = (1, 2, 3, 4, 3, 2, 1)\n index = tuple2.index(3)\n print(index)  # Output: 2\n \n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the index() method is used to find the index of the first occurrence of the value 3 in tuple2."}),(0,$e.jsx)(Gt,{children:" \n tuple3 = (1, 2, 3, 4, 3, 2, 1)\n index = tuple3.index(3, 3)\n print(index)  # Output: 4\n \n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the index() method is used with the optional start parameter to start the search from index 3."}),(0,$e.jsx)(Gt,{children:" \n tuple4 = (1, 2, 3, 4, 3, 2, 1)\n index = tuple4.index(3, 3, 6)\n print(index)  # Output: 4\n \n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the index() method is used with both the optional start and end parameters to search within the specified range."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Note: All the tuple methods mentioned above return the desired results without modifying the original tuple since tuples are immutable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are the main methods available for tuples in Python. Due to the immutable nature of tuples, there are no methods for adding or removing elements. However, the count and index methods provide useful functionalities for working with tuple data."})]})})})},Ea=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Sets:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, a set is an unordered collection of unique elements. Sets are useful for various operations like removing duplicates, membership testing, and performing mathematical set operations such as union, intersection, and difference. In this response, I'll explain sets in Python, their properties, and provide examples to illustrate their usage."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Creating Sets:"})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Sets can be created using curly braces `","` or the `set()` constructor."]}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3}\n  set2 = set([4, 5, 6])\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, `set1` is created using curly braces, and `set2` is created using the `set()` constructor and a list of elements."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Properties of Sets:"})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Uniqueness: Sets contain only unique elements. Duplicate values are automatically removed."})]}),(0,$e.jsx)(Gt,{children:"\n  set3 = {1, 2, 3, 2, 4}\nprint(set3)  # Output: {1, 2, 3, 4}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the duplicate value `2` is automatically removed, and the resulting set contains only unique elements."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Unordered: Sets are unordered, meaning the elements do not have a specific order."})]}),(0,$e.jsx)(Gt,{children:"\n  set4 = {3, 1, 2}\nprint(set4)  # Output: {1, 2, 3}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, even though the elements were defined in a different order, the set is printed in a sorted order."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Common Set Operations:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Adding Elements: Elements can be added to a set using the `add()` method."})]}),(0,$e.jsx)(Gt,{children:"\n  set5 = {1, 2, 3}\nset5.add(4)\nprint(set5)  # Output: {1, 2, 3, 4}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the element `4` is added to `set5` using the `add()` method."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Removing Elements: Elements can be removed from a set using the `remove()` method."})]}),(0,$e.jsx)(Gt,{children:"\n  set6 = {1, 2, 3, 4}\nset6.remove(2)\nprint(set6)  # Output: {1, 3, 4}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the element `2` is removed from `set6` using the `remove()` method."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Set Operations: Sets support various mathematical set operations like union, intersection, and difference."})]}),(0,$e.jsx)(Gt,{children:"\n  set7 = {1, 2, 3}\nset8 = {3, 4, 5}\n\nunion = set7.union(set8)\nprint(union)  # Output: {1, 2, 3, 4, 5}\n\nintersection = set7.intersection(set8)\nprint(intersection)  # Output: {3}\n\ndifference = set7.difference(set8)\nprint(difference)  # Output: {1, 2}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, `union` contains all the unique elements from both `set7` and `set8`, `intersection` contains the elements common to both sets, and `difference` contains the elements present in `set7` but not in `set8`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Sets in Python provide a powerful way to work with collections of unique elements and perform set operations efficiently. They are particularly useful when dealing with tasks like removing duplicates or finding common elements across multiple collections."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Access Set Items"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, sets are unordered collections of unique elements. Since sets are unordered, you cannot access items by their index as you would with lists or tuples. Instead, you can use various methods to access and iterate over the items in a set. In this response, I'll explain how to access set items in Python with proper format and examples."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Accessing Set Items:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Iteration using a `for` loop:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can iterate over the items in a set using a `for` loop. The loop will iterate over each item in an arbitrary order since sets are unordered."}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3}\n  for item in set1:\n      print(item)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  1\n  2\n  3\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `for` loop iterates over each item in `set1` and prints it."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Membership testing using the `in` keyword:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can check if an item is present in a set using the `in` keyword. It returns a boolean value indicating whether the item is a member of the set or not."}),(0,$e.jsx)(Gt,{children:"\n  set2 = {4, 5, 6}\n  print(4 in set2)  # Output: True\n  print(7 in set2)  # Output: False\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `in` keyword is used to check if `4` and `7` are present in `set2`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Converting a set to a list or tuple for indexing:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If you need to access items by index, you can convert the set to a list or tuple. However, keep in mind that sets are unordered, so the indexing will be arbitrary."}),(0,$e.jsx)(Gt,{children:"\n  set3 = {1, 2, 3}\n  list1 = list(set3)\n  print(list1[0])  # Output: 1\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, `set3` is converted to a list using the `list()` function, and then the first item in the list (`1`) is accessed using indexing."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to note that sets are primarily designed for membership testing and set operations rather than item access by index. If you need to access items by index, you may want to consider using a different data structure like a list or tuple."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Add set items:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, sets are mutable, unordered collections of unique elements. This means you can add items to a set after it is created. In this response, I'll explain how to add items to a set in Python, providing examples to illustrate the process."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Adding Items to a Set:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can add items to a set using the `add()` method or the `update()` method."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Using the `add()` method:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `add()` method is used to add a single element to a set."}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3}\n  set1.add(4)\n  print(set1)  # Output: {1, 2, 3, 4}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `add()` method is used to add the element `4` to `set1`. The resulting set contains the added element."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Using the `update()` method:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `update()` method is used to add multiple elements to a set. It takes an iterable as an argument, such as a list or another set."}),(0,$e.jsx)(Gt,{children:"\n  set2 = {1, 2, 3}\n  set2.update([4, 5, 6])\n  print(set2)  # Output: {1, 2, 3, 4, 5, 6}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `update()` method is used with a list `[4, 5, 6]` to add multiple elements to `set2`. The resulting set contains all the added elements."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Note: When using the `add()` or `update()` methods, duplicate elements are automatically ignored since sets only contain unique elements."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Using the union of sets:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can also add items to a set by performing the union operation with another set using the `|` operator."}),(0,$e.jsx)(Gt,{children:"\n  set3 = {1, 2, 3}\n  set4 = {4, 5, 6}\n  set3 = set3 | set4\n  print(set3)  # Output: {1, 2, 3, 4, 5, 6}\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `|` operator is used to perform the union operation between `set3` and `set4`, and the result is assigned back to `set3`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Adding items to a set allows you to expand and modify the set's contents. Whether you want to add a single item or multiple items, the `add()` and `update()` methods are available for your needs."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Remove Set Items:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, sets are mutable collections of unique elements. This means you can remove items from a set after it is created. In this response, I'll explain how to remove items from a set in Python and provide examples to illustrate the process."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Removing Items from a Set:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can remove items from a set using various methods such as `remove()`, `discard()`, and `pop()`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Using the `remove()` method:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `remove()` method is used to remove a specific element from a set. If the element does not exist in the set, it raises a `KeyError`."}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3, 4}\n  set1.remove(3)\n  print(set1)  # Output: {1, 2, 4}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the `remove()` method is used to remove the element `3` from `set1`. The resulting set no longer contains the removed element."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Using the `discard()` method:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `discard()` method is used to remove a specific element from a set. If the element does not exist in the set, it does not raise an error."}),(0,$e.jsx)(Gt,{children:"\n  set2 = {1, 2, 3, 4}\n  set2.discard(3)\n  print(set2)  # Output: {1, 2, 4}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `discard()` method is used to remove the element `3` from `set2`. If the element is not present, no error is raised, and the set remains unchanged."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Using the `pop()` method:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `pop()` method removes and returns an arbitrary element from the set. Since sets are unordered, the element to be removed is not deterministic."}),(0,$e.jsx)(Gt,{children:"\n  set3 = {1, 2, 3, 4}\n  removed_item = set3.pop()\n  print(removed_item)  # Output: Randomly selected element (e.g., 2)\n  print(set3)  # Output: Set without the removed element\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `pop()` method is used to remove an arbitrary element from `set3`, and the removed element is stored in `removed_item`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4. Clearing a set:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can completely empty a set by using the `clear()` method. After calling this method, the set will be empty."}),(0,$e.jsx)(Gt,{children:"\n  set4 = {1, 2, 3, 4}\n  set4.clear()\n  print(set4)  # Output: set()\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `clear()` method is used to remove all elements from `set4`, resulting in an empty set."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using these methods, you can selectively remove specific elements or completely clear a set in Python. Choose the appropriate method based on your requirements for modifying the set."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Loop Sets"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can iterate over sets using a `for` loop to access and process each element in the set. Since sets are unordered collections of unique elements, the order of iteration is arbitrary. In this response, I'll explain how to loop over sets in Python with proper format and examples."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"Looping Over Sets:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can use a `for` loop to iterate over the elements of a set."}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3}\n\n  for item in set1:\n    print(item)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  #output\n  1\n  2\n  3\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `for` loop iterates over each element in `set1`, and the loop variable `item` takes on each element's value. The elements are printed in an arbitrary order since sets are unordered."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can perform various operations within the `for` loop, such as checking conditions, performing calculations, or updating other data structures based on the elements of the set."}),(0,$e.jsx)(Gt,{children:'\n  set2 = {4, 5, 6}\n\n  for item in set2:\n    if item % 2 == 0:\n        print(f"{item} is even")\n    else:\n        print(f"{item} is odd")\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  4 is even\n  5 is odd\n  6 is even\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `for` loop iterates over each element in `set2`. For each element, the loop checks if it is even or odd and prints the corresponding message."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can combine looping over sets with other Python constructs, such as conditional statements or nested loops, to perform more complex operations on the set elements."}),(0,$e.jsx)(Gt,{children:'\n  set3 = {"apple", "banana", "cherry"}\n\n for item in set3:\n    if "a" in item:\n        for letter in item:\n            print(letter)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  a\n  p\n  p\n  l\n  e\n  a\n  a\n  n\n  a\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, the `for` loop iterates over each element in `set3`. For elements containing the letter "a", an inner `for` loop is used to iterate over each character and print it.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using a `for` loop, you can access and process each element in a set, allowing you to perform operations and manipulate the data according to your requirements. Remember that sets are unordered, so the iteration order may vary."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Join Sets:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, you can join sets together using various set operations to create a new set that contains elements from both sets. The common set operations for joining sets are union, intersection, and difference. In this response, I'll explain how to join sets in Python with proper format and examples."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Joining Sets:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Union:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The union operation combines two or more sets, removing any duplicates, and creates a new set that contains all unique elements from both sets."}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3}\n  set2 = {3, 4, 5}\n  \n  union_set = set1.union(set2)\n  print(union_set)  # Output: {1, 2, 3, 4, 5}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `union()` method is used to create a new set `union_set` that contains all unique elements from `set1` and `set2`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Intersection:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The intersection operation returns a new set that contains only the elements that are common to both sets."}),(0,$e.jsx)(Gt,{children:"\n  set3 = {1, 2, 3}\n   \tset4 = {3, 4, 5}\n   \n   \tintersection_set = set3.intersection(set4)\n   \tprint(intersection_set)  # Output: {3}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"   In this example, the `intersection()` method is used to create a new set `intersection_set` that contains only the common element `3` between `set3` and `set4`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Difference:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The difference operation returns a new set that contains the elements present in the first set but not in the second set."}),(0,$e.jsx)(Gt,{children:"\n  set5 = {1, 2, 3}\n  set6 = {3, 4, 5}\n  \n  difference_set = set5.difference(set6)\n  print(difference_set)  # Output: {1, 2}\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `difference()` method is used to create a new set `difference_set` that contains the elements `1` and `2` from `set5` that are not present in `set6`."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4. Symmetric Difference:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The symmetric difference operation returns a new set that contains the elements present in either of the sets but not in both."}),(0,$e.jsx)(Gt,{children:"\n  set7 = {1, 2, 3}\n  set8 = {3, 4, 5}\n  \n  symmetric_difference_set = set7.symmetric_difference(set8)\n  print(symmetric_difference_set)  # Output: {1, 2, 4, 5}\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `symmetric_difference()` method is used to create a new set `symmetric_difference_set` that contains the elements `1`, `2`, `4`, and `5` from both `set7` and `set8`, excluding the common element `3`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using these set operations, you can join sets together and perform set operations efficiently to create new sets with specific properties."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python - Set Methods"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, sets are mutable collections of unique elements. They provide various built-in methods for performing common set operations and manipulating sets. In this response, I'll explain some of the commonly used set methods in Python, providing proper format and examples."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Joining Sets:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. `add(element)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Adds an element to the set."}),(0,$e.jsx)(Gt,{children:"\n  set1 = {1, 2, 3}\n  set1.add(4)\n  print(set1)  # Output: {1, 2, 3, 4}\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. `remove(element)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Removes a specific element from the set. Raises a `KeyError` if the element does not exist."}),(0,$e.jsx)(Gt,{children:"\n  set2 = {1, 2, 3, 4}\n  set2.remove(3)\n  print(set2)  # Output: {1, 2, 4}\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. `discard(element)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Removes a specific element from the set. Does not raise an error if the element is not found."}),(0,$e.jsx)(Gt,{children:"\n  set3 = {1, 2, 3, 4}\n  set3.discard(3)\n  print(set3)  # Output: {1, 2, 4}\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4. `pop()`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Removes and returns an arbitrary element from the set. Since sets are unordered, the removed element is not deterministic."}),(0,$e.jsx)(Gt,{children:"\n  set4 = {1, 2, 3, 4}\n  removed_element = set4.pop()\n  print(removed_element)  # Output: Randomly selected element (e.g., 2)\n  print(set4)  # Output: Set without the removed element\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"5. `clear()`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  Removes all elements from the set, making it empty."}),(0,$e.jsx)(Gt,{children:"\n  set5 = {1, 2, 3, 4}\n  set5.clear()\n  print(set5)  # Output: set()\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"6. `union(set2, set3, ...)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Returns a new set that contains all unique elements from the set and other sets."}),(0,$e.jsx)(Gt,{children:"\n  set6 = {1, 2, 3}\n  set7 = {3, 4, 5}\n  \n  union_set = set6.union(set7)\n  print(union_set)  # Output: {1, 2, 3, 4, 5}\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"7. `intersection(set2, set3, ...)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Returns a new set that contains only the elements that are common to the set and other sets."}),(0,$e.jsx)(Gt,{children:" \n  set8 = {1, 2, 3}\n  set9 = {3, 4, 5}\n  \n  intersection_set = set8.intersection(set9)\n  print(intersection_set)  # Output: {3}\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:" 8. `difference(set2, set3, ...)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Returns a new set that contains the elements present in the set but not in other sets."}),(0,$e.jsx)(Gt,{children:"\n  set10 = {1, 2, 3}\n  set11 = {3, 4, 5}\n  \n  difference_set = set10.difference(set11)\n  print(difference_set)  # Output: {1, 2}\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"9. `symmetric_difference(set2)`:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Returns a new set that contains the elements present in either the set or the other set, but not in both."}),(0,$e.jsx)(Gt,{children:"\n  set12 = {1, 2, 3}\n  set13 = {3, 4, 5}\n  \n  symmetric_difference_set = set12.symmetric_difference(set13)\n  print(symmetric_difference_set)  # Output: {1, 2, 4, 5}\n"})]})})})},Sa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python If ... Else:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, the if...else statement allows you to execute different blocks of code based on a condition. It enables your program to make decisions and take different paths of execution"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The basic syntax of the if...else statement is as follows:"}),(0,$e.jsx)(Gt,{children:"\n  if condition:\n  # code to execute if the condition is True\n   else:\n  # code to execute if the condition is False\n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's how it works:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The condition is evaluated, and if it is True, the code block indented under the if statement is executed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- If the condition is False, the code block indented under the else statement is executed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider a real-life example to illustrate the if...else statement. Suppose you want to implement a program that checks if a person is eligible to vote based on their age."}),(0,$e.jsx)(Gt,{children:'\n   age = int(input("Enter your age: "))\n\n    if age >= 18:\n        print("You are eligible to vote!")\n    else:\n        print("You are not eligible to vote yet.")\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, the program prompts the user to enter their age. The `age` variable is then assigned the integer value obtained from the user input. The if...else statement checks if the `age` is greater than or equal to 18. If it is, the program prints "You are eligible to vote!". Otherwise, it prints "You are not eligible to vote yet."'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Based on the user's input, the program will take different paths and display the appropriate message accordingly. This demonstrates how the if...else statement allows your program to make decisions and execute different blocks of code based on specific conditions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'You can also extend the if...else statement using elif (short for "else if") to check for multiple conditions. This allows you to handle various scenarios based on different conditions.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example that extends the previous voting eligibility program to include a check for teenagers:"}),(0,$e.jsx)(Gt,{children:'\n  age = int(input("Enter your age: "))\n\n  if age >= 18:\n      print("You are eligible to vote!")\n  elif age >= 13:\n      print("You are a teenager.")\n  else:\n      print("You are not eligible to vote yet.")\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, the additional elif statement checks if the `age` is greater than or equal to 13, and if so, it prints "You are a teenager."'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The if...else statement provides a powerful way to incorporate decision-making logic into your Python programs. By evaluating conditions, you can guide the flow of your code and perform different actions based on specific situations, just like making decisions in real-life scenarios."})]})})})},ja=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python While Loops:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, a while loop allows you to repeatedly execute a block of code as long as a specified condition remains true. It's used when you want to repeat a set of instructions until a certain condition is no longer met."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The basic syntax of a while loop is as follows:"}),(0,$e.jsx)(Gt,{children:"\n\n    while condition:\n    # code to execute while the condition is True\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's how it works:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The condition is evaluated before each iteration of the loop. If the condition is true, the code block indented under the while statement is executed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- After executing the code block, the condition is checked again. If it is still true, the loop continues to iterate, executing the code block repeatedly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The loop continues until the condition becomes false. At that point, the program moves on to the next section of code after the while loop."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider a real-life example to illustrate the while loop. Suppose you want to implement a program that counts down from a given number to zero."}),(0,$e.jsx)(Gt,{children:'\n  count = 10\n\n    while count > 0:\n        print(count)\n        count -= 1\n\n    print("Blastoff!")\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this example, the `count` variable is initialized to 10. The while loop is set to execute as long as the `count` is greater than zero. Within the loop, the current value of `count` is printed, and then the `count` is decremented by 1. This process continues until the `count` reaches zero. After the loop, the program prints "Blastoff!"'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'When you run this program, it will display the numbers from 10 to 1 and then print "Blastoff!".'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The while loop allows you to repeat a block of code until a specific condition is no longer true. It is useful when you want to perform repetitive tasks or iterate over a sequence of items until a certain condition is met. Just like in real life, while loops enable you to keep performing an action until a desired outcome is achieved."})]})})})},Ta=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Recursion:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Recursion is a programming technique where a function calls itself to solve a smaller version of the same problem. It allows you to break down complex problems into simpler, more manageable subproblems. Recursive functions have two main components: a base case and a recursive case."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's how recursion works:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. The function checks if the current problem is a base case, which is the simplest form of the problem that can be directly solved without further recursion."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. If the current problem is a base case, the function returns the solution."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. If the current problem is not a base case, the function calls itself with a smaller version of the problem."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. The recursive function continues to call itself until it reaches a base case, solving each smaller problem along the way."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"5. The solutions to the smaller problems are combined to solve the original problem."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider a real-life example to illustrate recursion. One classic example is calculating the factorial of a number."}),(0,$e.jsx)(Gt,{children:'\n  def factorial(n):\n    # Base case: factorial of 0 or 1 is 1\n    if n == 0 or n == 1:\n        return 1\n    else:\n        # Recursive case: call the factorial function with a smaller problem\n        return n * factorial(n - 1)\n\n  result = factorial(5)\n  print("The factorial of 5 is:", result)\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `factorial` function calculates the factorial of a number `n`. The base case is when `n` is 0 or 1, where the function directly returns 1. For any other value of `n`, the function calls itself with the smaller problem of `(n - 1)` and multiplies it by `n`. This recursive process continues until the base case is reached."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"When you run this program, it will display the following output:"}),(0,$e.jsx)(Gt,{children:"\n  The factorial of 5 is: 120\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Recursion is useful when a problem can be broken down into smaller, identical subproblems. It allows for elegant and concise code by delegating repetitive tasks to recursive function calls. However, it's important to define base cases properly to avoid infinite recursion."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In real-life scenarios, recursion can be found in various applications, such as tree traversal, searching algorithms, mathematical calculations, and more. It provides an efficient and intuitive way to solve complex problems by reducing them into simpler subproblems and building up the solution step by step."})]})})})},wa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Lambda (what,why we use):"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, a lambda function (also known as an anonymous function) is a small, anonymous function that is defined without a name. It is created using the `lambda` keyword and can take any number of arguments but can only have a single expression."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The basic syntax of a lambda function is as follows:"}),(0,$e.jsx)(Gt,{children:"\n  lambda arguments: expression\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's how it works:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The `lambda` keyword is used to define the lambda function."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The `arguments` are the input parameters of the lambda function."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The `expression` is a single expression that is evaluated and returned as the result of the lambda function."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Lambda functions are typically used when you need a simple, one-line function and you don't want to define a separate named function using the `def` keyword."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's consider a real-life example to illustrate lambda functions. Suppose you have a list of numbers and you want to filter out the even numbers using a lambda function:"}),(0,$e.jsx)(Gt,{children:'\n  numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  even_numbers = list(filter(lambda x: x % 2 == 0, numbers))\n  print("Even numbers:", even_numbers)\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `filter` function is used along with a lambda function to filter out the even numbers from the `numbers` list. The lambda function `lambda x: x % 2 == 0` takes a single argument `x` and checks if it is divisible by 2 (i.e., even). The `filter` function applies the lambda function to each element of the `numbers` list, returning only the elements that satisfy the condition."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"When you run this program, it will display the following output:"}),(0,$e.jsx)(Gt,{children:"\n  Even numbers: [2, 4, 6, 8, 10]\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Lambda functions provide a concise way to define simple functions without the need for a formal function definition. They are often used in combination with higher-order functions like `map`, `filter`, and `reduce` to perform operations on sequences or collections."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Lambda functions are particularly useful in scenarios where you need to define short, throwaway functions or when you want to pass a function as an argument to another function. They can help in writing more compact code and improving code readability by keeping the focus on the logic at hand rather than defining separate named functions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"However, it's important to note that lambda functions have limitations and should not be used for complex logic or when you need to reuse the function multiple times within your code. In such cases, it's recommended to define a regular named function using the `def` keyword."})]})})})},Ia=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Access,length & looping of the array"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Certainly! I'll explain how to access, determine the length, and loop through an array in Python, along with a detailed explanation and a real-life example."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, arrays are typically represented using the built-in `list` data type. Here's how you can perform various operations on arrays:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Accessing Array Elements:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Array elements can be accessed using their indices, which start from 0 for the first element."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- You can use the index inside square brackets `[]` to access a specific element."}),(0,$e.jsx)(Gt,{children:"\n   numbers = [1, 2, 3, 4, 5]\n  print(numbers[0])   # Access the first element\n  print(numbers[2])   # Access the third element\n \n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the array `numbers` contains integers. By specifying the index inside square brackets, you can access individual elements. The output will be:"}),(0,$e.jsx)(Gt,{children:"   #output\n  1\n  3 "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Determining the Length of an Array:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - The length of an array represents the number of elements it contains."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - You can use the built-in `len()` function to determine the length of an array."}),(0,$e.jsx)(Gt,{children:"  \n    fruits = ['apple', 'banana', 'orange', 'mango']\n  length = len(fruits)\n  print(\"The length of the array is:\", length)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the array `fruits` contains strings representing different fruits. By passing the array to the `len()` function, you can obtain the length of the array. The output will be:"}),(0,$e.jsx)(Gt,{children:"   \n   The length of the array is: 4\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Looping Through an Array:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  - You can use various looping constructs, such as `for` loops or list comprehensions, to iterate through each element of an array."}),(0,$e.jsx)(Gt,{children:"     \n  numbers = [1, 2, 3, 4, 5]\n  for num in numbers:\n      print(num)\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"   In this example, the `for` loop iterates over each element `num` in the `numbers` array and prints it. The output will be"}),(0,$e.jsx)(Gt,{children:"\n  #output\n  1\n  2\n  3\n  4\n  5\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Example using a list comprehension:"}),(0,$e.jsx)(Gt,{children:"  \n  numbers = [1, 2, 3, 4, 5]\n  squares = [num**2 for num in numbers]\n  print(squares)\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, a list comprehension is used to create a new list `squares` where each element is the square of the corresponding element in the `numbers` array. The output will be:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Accessing array elements, determining the length, and looping through an array are fundamental operations that allow you to work with array data effectively. These operations are commonly used in various real-life scenarios, such as data analysis, manipulating collections of items, and processing input/output."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding and utilizing these array operations, you can access and manipulate array elements, obtain important information about the array, and perform computations or transformations on the array's elements."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Adding & removing array element:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, arrays are typically represented using the built-in `list` data type, which provides several methods to add and remove elements."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Adding Elements to an Array:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - You can add elements to the end of an array using the `append()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - You can insert elements at a specific position in the array using the `insert()` method."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Example using ",(0,$e.jsx)("b",{children:"`append()`:"})]}),(0,$e.jsx)(Gt,{children:"\n  fruits = ['apple', 'banana', 'orange']\n  fruits.append('mango')\n  print(fruits)\n\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `append()` method is used to add the string `'mango'` to the end of the `fruits` array. The output will be:"}),(0,$e.jsx)(Gt,{children:"#output\n     ['apple', 'banana', 'orange', 'mango']"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Example using ",(0,$e.jsx)("b",{children:"`insert()`:"})]}),(0,$e.jsx)(Gt,{children:"\n    numbers = [1, 2, 3, 4, 5]\n    numbers.insert(2, 6)\n    print(numbers)\n \n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `insert()` method is used to insert the number `6` at index `2` in the `numbers` array. The output will be:"}),(0,$e.jsx)(Gt,{children:" \n    #output\n    [1, 2, 6, 3, 4, 5]\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Removing Elements from an Array:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - You can remove an element from an array by its value using the `remove()` method."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - You can remove an element from an array by its index using the `pop()` method."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Example using ",(0,$e.jsx)("b",{children:"`remove()`:"})]}),(0,$e.jsx)(Gt,{children:"\n    fruits = ['apple', 'banana', 'orange', 'mango']\n    fruits.remove('banana')\n    print(fruits)\n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `remove()` method is used to remove the string `'banana'` from the `fruits` array. The output will be:"}),(0,$e.jsx)(Gt,{children:"\n    #output\n        ['apple', 'orange', 'mango']\n\n    "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Example using ",(0,$e.jsx)("b",{children:"`pop()`:"})]}),(0,$e.jsx)(Gt,{children:"\n    numbers = [1, 2, 3, 4, 5]\n    numbers.pop(2)\n    print(numbers)\n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the `pop()` method is used to remove the element at index `2` from the `numbers` array. The output will be:"}),(0,$e.jsx)(Gt,{children:"    \n  [1, 2, 4, 5]\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Adding and removing elements from an array allows you to modify the array dynamically based on your program's requirements. These operations are commonly used when working with collections of data or when updating data structures."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding and utilizing these array manipulation methods, you can add new elements to the array, insert elements at specific positions, remove elements by value or index, and effectively manage the contents of the array based on your needs."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Array Method:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, arrays are typically represented using the built-in `list` data type, which provides several methods to manipulate and work with arrays. Here are some commonly used array methods:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. `append()`:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The `append()` method adds an element to the end of the array."}),(0,$e.jsx)(Gt,{children:"\n  fruits = ['apple', 'banana', 'orange']\n  fruits.append('mango')\n  print(fruits)\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Output:"}),(0,$e.jsx)(Gt,{children:"\n      ['apple', 'banana', 'orange', 'mango']\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `append()` method is used to add the string `'mango'` to the end of the `fruits` array."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. `insert()`:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - The `insert()` method inserts an element at a specific index in the array."}),(0,$e.jsx)(Gt,{children:"\n  numbers = [1, 2, 3, 4, 5]\n  numbers.insert(2, 6)\n  print(numbers)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Output:"}),(0,$e.jsx)(Gt,{children:"\n   [1, 2, 6, 3, 4, 5]\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `insert()` method is used to insert the number `6` at index `2` in the `numbers` array."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. `remove()`:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  - The `remove()` method removes the first occurrence of a specified element from the array."}),(0,$e.jsx)(Gt,{children:"\n  fruits = ['apple', 'banana', 'orange', 'banana']\n  fruits.remove('banana')\n  print(fruits)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Output:"}),(0,$e.jsx)(Gt,{children:"\n     ['apple', 'orange', 'banana']"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the `remove()` method is used to remove the string `'banana'` from the `fruits` array. Only the first occurrence of `'banana'` is removed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"4. `pop()`:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"   - The `pop()` method removes and returns the element at a specified index in the array."}),(0,$e.jsx)(Gt,{children:'\n  numbers = [1, 2, 3, 4, 5]\n  removed_number = numbers.pop(2)\n  print("Removed number:", removed_number)\n  print(numbers)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Output:"}),(0,$e.jsx)(Gt,{children:" \n  Removed number: 3\n  [1, 2, 4, 5]\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the `pop()` method is used to remove the element at index `2` from the `numbers` array. The removed element is assigned to the variable `removed_number`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are just a few examples of commonly used array methods in Python. Other array methods include `index()`, `count()`, `sort()`, `reverse()`, and more. Each method provides a specific functionality to manipulate, search, or sort the array."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding and utilizing these array methods, you can effectively manipulate and work with arrays, perform operations like adding, inserting, removing, and retrieving elements, and modify the array based on your program's requirements."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Multidimensional array:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, a multidimensional array is an array that contains one or more arrays as its elements. It is also referred to as a nested array or an array of arrays. This allows you to create a structure that represents a grid or a matrix-like data structure."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To create a multidimensional array in Python, you can use nested lists, where each inner list represents a row or a sub-array. Here's an example:"}),(0,$e.jsx)(Gt,{children:"\n   matrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n   ]\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `matrix` is a multidimensional array that represents a 3x3 grid. Each inner list represents a row, and the elements within each inner list represent the individual values."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To access elements in a multidimensional array, you need to use multiple indices. The first index represents the row, and the second index represents the column. Here's an example of accessing elements in the `matrix`:"}),(0,$e.jsx)(Gt,{children:"\n   print(matrix[0][0])  # Accessing the element at row 0, column 0\n  print(matrix[1][2])  # Accessing the element at row 1, column 2\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Output:"}),(0,$e.jsx)(Gt,{children:"\n  #output\n  1\n  6\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the first print statement accesses the element at row 0 and column 0, which is `1`. The second print statement accesses the element at row 1 and column 2, which is `6`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"You can also perform various operations on multidimensional arrays, such as modifying elements, adding or removing rows/columns, and looping through the array using nested loops. Here's an example of modifying an element in the `matrix`:"}),(0,$e.jsx)(Gt,{children:"\n   matrix[1][1] = 0\n  print(matrix)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Output:"}),(0,$e.jsx)(Gt,{children:" \n  #output\n  [\n    [1, 2, 3],\n    [4, 0, 6],\n    [7, 8, 9]\n  ]\n\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the statement `matrix[1][1] = 0` modifies the element at row 1 and column 1, setting it to `0`. The resulting `matrix` reflects the updated value."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Multidimensional arrays are commonly used to represent grid-like structures in various real-life scenarios, such as representing images, matrices in linear algebra, game boards, or representing tabular data."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding and utilizing multidimensional arrays, you can work with structured data and perform operations that involve multiple dimensions, enabling you to handle complex data structures and solve a wide range of problems efficiently."})]})})})},Ca=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Arithmetic Operations:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" 1. Arithmetic operations are basic mathematical operations performed on numbers. The four main arithmetic operations are addition, subtraction, multiplication, and division."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Example: Imagine you went to a grocery store and bought three apples. Later, you decided to buy two more apples. The total number of apples you have now is the result of the addition operation: 3 + 2 = 5."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Variables:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" 2. Variables are symbols used to represent values in programming. In Python, you can assign values to variables using the assignment operator (=). These values can be numbers, strings, or other data types."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Example: Let's say you want to calculate the area of a rectangle. You can define variables for the length and width of the rectangle, like length = 5 and width = 3."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Then, you can calculate the area by multiplying the length and width: area = length * width."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Order of Operations (PEMDAS/BODMAS):"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Order of operations defines the sequence in which mathematical operations should be performed. The acronym PEMDAS (or BODMAS) helps remember the order: Parentheses (Brackets), Exponents (Orders/Rules), Multiplication and Division (from left to right), and Addition and Subtraction (from left to right)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Example: Let's say you have an expression: 3 + 4 * 2. According to the order of operations, you first perform the multiplication (4 * 2), which gives you 8. Then, you add 3 to 8, resulting in 11."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Functions from the math module:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. Python provides the math module, which offers various mathematical functions. You can import and use these functions to perform advanced mathematical calculations."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Example: Suppose you want to calculate the square root of a number. You can use the sqrt() function from the math module. For instance, if you want to find the square root of 16, you can write: math.sqrt(16) = 4."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Random Numbers:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"5. Python has a random module that allows you to generate random numbers. This module includes functions to generate random integers, floats, and other random values."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Example: Let's say you want to simulate rolling a dice. You can use the randint() function from the random module to generate a random number between 1 and 6. For instance: random.randint(1, 6) = 3."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" These examples illustrate how math concepts and operations can be applied in everyday situations. Understanding math is essential for various fields, including computer programming, finance, engineering, and more."})]})})})},Oa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'1. PIP, which stands for "Python Package Installer," is a package manager for Python. It allows you to easily install, manage, and uninstall packages (libraries) in Python.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Packages are pre-written collections of Python modules, which consist of functions, classes, and other resources that can be used to add specific functionality to your Python projects."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Think of packages as ready-made toolkits or libraries that contain useful code, similar to how you might use a toolbox containing various tools to accomplish different tasks."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. PIP is included with Python versions 3.4 and above. It provides a command-line interface for managing packages, making it convenient to install and maintain third-party libraries."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"5. To install a package using PIP, you can use the following command in the terminal or command prompt:"}),(0,$e.jsx)(Gt,{children:"\n  pip install package_name\n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["6. For example, let's say you want to install the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"requests"})," package, which allows you to send HTTP requests in Python. You can install it using the following command:"]}),(0,$e.jsx)(Gt,{children:"\n  pip install requests\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"7. PIP will automatically download the package from the Python Package Index (PyPI) and install it on your system."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["8. Once a package is installed, you can import it into your Python code and use its functionality. For example, after installing the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"requests"})," package, you can use it to make HTTP requests like this:"]}),(0,$e.jsx)(Gt,{children:'\n  import requests\n\n  response = requests.get("https://www.example.com")\n  print(response.status_code)  # Output: 200\n '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Certainly! Here's a detailed explanation of PIP (Python Package Installer) and packages in Python, along with a relatable life-related example:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'1. PIP, which stands for "Python Package Installer," is a package manager for Python. It allows you to easily install, manage, and uninstall packages (libraries) in Python.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Packages are pre-written collections of Python modules, which consist of functions, classes, and other resources that can be used to add specific functionality to your Python projects."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Think of packages as ready-made toolkits or libraries that contain useful code, similar to how you might use a toolbox containing various tools to accomplish different tasks."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. PIP is included with Python versions 3.4 and above. It provides a command-line interface for managing packages, making it convenient to install and maintain third-party libraries."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"5. To install a package using PIP, you can use the following command in the terminal or command prompt:"}),(0,$e.jsx)(Gt,{children:"\n  Copy code\n  pip install package_name\n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["6. For example, let's say you want to install the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"requests"})," package, which allows you to send HTTP requests in Python. You can install it using the following command:"]}),(0,$e.jsx)(Gt,{children:"\n  Copy code\n  pip install requests\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"7. PIP will automatically download the package from the Python Package Index (PyPI) and install it on your system."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["8. Once a package is installed, you can import it into your Python code and use its functionality. For example, after installing the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"requests"})," package, you can use it to make HTTP requests like this:"]}),(0,$e.jsx)(Gt,{children:'\n  python\n  Copy code\n  import requests response = requests.get("https://www.example.com") print(response.status_code) # Output: 200\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["9. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"requests"})," package is imported, and the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"get()"})," function from the package is used to send an HTTP GET request to a URL. The response status code is then printed."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"10. PIP also allows you to specify the version of a package to install, upgrade, or uninstall. For example:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["To install a specific version: ",(0,$e.jsx)("span",{className:"code-text  text-m",children:" pip install package_name==version"})]}),(0,$e.jsxs)("li",{className:"pt-2",children:["To upgrade a package:",(0,$e.jsx)("span",{className:"code-text  text-m",children:" pip install --upgrade package_name"})]}),(0,$e.jsxs)("li",{className:"pt-2",children:["To uninstall a package:",(0,$e.jsx)("span",{className:"code-text  text-m",children:" pip uninstall package_name"})]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"11. PIP also supports the use of requirements files, which allow you to specify a list of packages and their versions in a text file. This makes it easier to manage dependencies for your projects."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["12. You can create a requirements file by listing the package names and versions, each on a separate line, and save it as",(0,$e.jsx)("span",{className:"code-text  text-m",children:" requirements.txt"}),". Then, you can install all the packages listed in the file using the following command:"]}),(0,$e.jsx)(Gt,{children:"\n pip install -r requirements.txt\n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"13. This is useful when you need to set up the same environment on multiple machines or share your project with others, ensuring that they have the necessary packages installed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"14. IP and packages are essential for Python development as they allow you to leverage existing code and extend the functionality of your projects without reinventing the wheel. They provide a vast ecosystem of libraries and tools that can save you time and effort in your coding journey."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Remember to regularly update your packages using pip to ensure you have the latest features and bug fixes."})]})})})},Ra=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python create a class & object:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. Creating a Class:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To create a class in Python, you use the `class` keyword followed by the name of the class. The class can have attributes (variables) and methods (functions) defined within it."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example of a class called `Person`:"}),(0,$e.jsx)(Gt,{children:'\n  class Person:\n  def __init__(self, name, age):\n      self.name = name\n      self.age = age\n\n  def greet(self):\n      print(f"Hello, my name is {self.name}.")\n\n  def introduce(self):\n      print(f"I am {self.name} and I am {self.age} years old.")\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `Person` class has attributes `name` and `age`, and methods `greet()` and `introduce()`. The `__init__()` method is a special method called the constructor, used to initialize the attributes when creating objects."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. Creating an Object:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To create an object of a class, you call the class name as if it were a function, and assign the resulting object to a variable. You can then access the attributes and invoke the methods of the object."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example of creating an object of the `Person` class:"}),(0,$e.jsx)(Gt,{children:'\n  person1 = Person("Alice", 25)\n  person2 = Person("Bob", 30)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, `person1` and `person2` are objects created from the `Person` class. The constructor is called with the specified arguments to initialize the attributes `name` and `age` of each object."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"3. Accessing Object Attributes and Invoking Methods:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Once you have created an object, you can access its attributes using dot notation (`object.attribute`) and invoke its methods using dot notation (`object.method()`)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example of accessing attributes and invoking methods on the objects:"}),(0,$e.jsx)(Gt,{children:"\n  print(person1.name)       # Accessing attribute\n  person2.greet()           # Invoking method\n  person1.introduce()       # Invoking method\n\n  #Output:\n  Alice\n  Hello, my name is Bob.\n  I am Alice and I am 25 years old.\n\n "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we access the `name` attribute of `person1`, invoke the `greet()` method on `person2`, and invoke the `introduce()` method on `person1`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Creating classes and objects allows you to model real-life entities, encapsulate data and behavior, and organize your code in a structured manner. For example, you can create a `Car` class with attributes like `brand` and `color`, and methods like `start_engine()` and `stop_engine`, to represent cars and their actions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By utilizing classes and objects, you can create reusable and modular code, represent real-life scenarios, and interact with objects to perform specific actions or operations."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"The __init__() Function & The __str__() Function:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. The `__init__()` Function:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `__init__()` function is a special method in Python classes that is automatically called when an object is created from the class. It is used to initialize the attributes of the object. The `self` parameter refers to the object being created and allows you to access its attributes and methods."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Here's an example that demonstrates the use of the `__init__()` function:"}),(0,$e.jsx)(Gt,{children:'\n  class Person:\n  def __init__(self, name, age):\n      self.name = name\n      self.age = age\n\n  def greet(self):\n      print(f"Hello, my name is {self.name}.")\n\n  person1 = Person("Alice", 25)\n  person2 = Person("Bob", 30)\n\n  person1.greet()\n  person2.greet()\n\n\n  #Output:\n  Hello, my name is Alice.\n  Hello, my name is Bob.\n\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  In this example, the `__init__()` function is defined in the `Person` class. It takes the `name` and `age` parameters and initializes the `name` and `age` attributes of the object. When creating `person1` and `person2`, the `__init__()` function is automatically called with the specified arguments to initialize the attributes."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"2. The `__str__()` Function:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `__str__()` function is another special method in Python classes that returns a string representation of the object. It is commonly used to provide a human-readable string that represents the object's state or information."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example that demonstrates the use of the `__str__()` function:"}),(0,$e.jsx)(Gt,{children:'\n  class Person:\n  def __init__(self, name, age):\n      self.name = name\n      self.age = age\n\n  def __str__(self):\n      return f"Person: {self.name}, {self.age} years old."\n\n  person1 = Person("Alice", 25)\n  person2 = Person("Bob", 30)\n\n  print(person1)\n  print(person2)\n\n\n  #Output:\n  Person: Alice, 25 years old.\n  Person: Bob, 30 years old.\n\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `__str__()` function is defined in the `Person` class. It returns a formatted string representation of the object's `name` and `age` attributes. When the `print()` function is called on the objects, it automatically invokes the `__str__()` function to obtain the string representation."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The `__init__()` function allows you to initialize the attributes of an object when it is created, providing a way to set the initial state of the object. The `__str__()` function allows you to define a string representation of the object, making it easier to display or print information about the object."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By utilizing these special functions, you can create more meaningful and informative classes, enhance the functionality of your objects, and provide better interactions with the objects in your program."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"OBJECT METHOD:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python, object methods are functions defined within a class that are associated with objects of that class. These methods are used to perform actions or operations specific to the objects of the class. They have access to the object's attributes and can manipulate them as needed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example that demonstrates the use of object methods:"}),(0,$e.jsx)(Gt,{children:'class Circle:\n  def __init__(self, radius):\n      self.radius = radius\n\n  def calculate_area(self):\n      area = 3.14 * (self.radius ** 2)\n      return area\n\n  def calculate_circumference(self):\n      circumference = 2 * 3.14 * self.radius\n      return circumference\n\n  # Creating a Circle object\n  circle = Circle(5)\n\n  # Calling object methods\n  area = circle.calculate_area()\n  circumference = circle.calculate_circumference()\n\n  print("Area:", area)\n  print("Circumference:", circumference)\n\n\n  #Output:\n  Area: 78.5\n  Circumference: 31.400000000000002\n\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, we define a class called `Circle` with an `__init__()` method to initialize the `radius` attribute. The class has two object methods: `calculate_area()` and `calculate_circumference()`. "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The `calculate_area()` method calculates the area of the circle using the formula `pi * r^2`, where `r` is the radius. It accesses the `radius` attribute of the object using the `self` keyword."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The `calculate_circumference()` method calculates the circumference of the circle using the formula `2 * pi * r`. Again, it accesses the `radius` attribute of the object using `self`."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" We create a `Circle` object with a radius of 5 and then call the object methods `calculate_area()` and `calculate_circumference()` on the `circle` object. The calculated values are stored in variables `area` and `circumference`, respectively."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Object methods allow you to encapsulate functionality specific to the objects of a class. They promote code reusability, as you can create multiple objects and call the same methods on each of them to perform the desired actions or computations."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In real-life scenarios, object methods can be used to represent behaviors or operations related to specific entities. For example, a `BankAccount` class may have object methods like `deposit()`, `withdraw()`, and `check_balance()`, which perform banking operations on individual accounts."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" By utilizing object methods, you can define the behavior and actions of your objects, manipulate their attributes, and perform operations that are specific to the objects of your class."})]})})})},Aa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In Python, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try-except"})," block is used for handling exceptions or errors that may occur during the execution of a program. It allows you to write code that may raise an exception, and provides a mechanism to catch and handle those exceptions gracefully, without causing the program to crash."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" The general syntax of a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try-except"})," block is as follows:"]}),(0,$e.jsx)(Gt,{children:"\n      try:\n    # Code that may raise an exception\n    # ...\n    except ExceptionType1:\n    # Code to handle ExceptionType1\n    # ...\n    except ExceptionType2:\n    # Code to handle ExceptionType2\n    # ...\n    else:\n    # Code that executes if no exceptions were raised\n    # ...\n    finally:\n    # Code that always executes, regardless of exceptions\n    # ...\n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try "}),"block: This is where you place the code that might raise an exception. It is the main part of the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try-except"})," block."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["2. ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"except "})," block(s): After the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try "})," block, you can have one or more ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"except "})," blocks that specify the type of exception to catch. If an exception of the specified type is raised within the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try "})," block, the corresponding ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"except "})," block is executed."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["3. ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"else "})," block (optional): The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"else "})," block is executed only if no exceptions occur within the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try "})," block. It is generally used for code that should run when no exceptions are raised."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["4. ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"finally "})," block (optional): The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"finally "})," block always executes, regardless of whether an exception occurred or not. It is typically used for releasing resources or cleaning up operations."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["Now, let's consider a relatable real-life example to understand ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try-except"})," better."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are baking a cake, and you are following a recipe. The recipe has a step where you need to separate egg yolks from egg whites. However, there's a possibility that a piece of eggshell might accidentally fall into the mixture while separating the eggs. This could raise an exception during the baking process."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In Python code, it could be represented as follows:"}),(0,$e.jsx)(Gt,{children:"\n  try:\n  # Code for separating egg yolks from egg whites\n  # ...\n  except EggshellError:\n  # Code to handle the presence of eggshell\n  # ...\n  else:\n  # Code to continue with the baking process\n  # ...\n  finally:\n  # Code to clean up utensils and workspace\n  # ...\n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In the example above, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try "})," block contains the code for separating egg yolks from egg whites. If an ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"EggshellError"})," exception is raised (representing the presence of eggshell), the corresponding ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"except "})," block is executed to handle the situation (e.g., removing the eggshell). If no exception occurs, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"else "}),"block can continue with the baking process. Finally, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"finally "})," block is executed to clean up the utensils and workspace, regardless of any exceptions."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["By using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"try-except"})," blocks, you can anticipate and handle exceptional situations in your code, preventing unexpected crashes and allowing your program to gracefully handle errors, just like removing eggshells while baking a cake."]})]})})})},ka=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" File Handling"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, file handling refers to the process of working with files, including reading from files, writing to files, and modifying file contents. Python provides built-in functions and methods that allow you to interact with files in a convenient manner."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Opening and Closing Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["To work with a file, you need to open it first using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"})," function, which returns a file object."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"})," function takes two parameters: the file path and the mode in which the file should be opened (read, write, append, etc.)."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["Once you are done working with a file, it is important to close it using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"close()"})," method of the file object to free up system resources."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "r")  # Open file in read mode\n  # Perform operations on the file\n  file.close()  # Close the file\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"}),' function is used to open the file named "data.txt" in read mode. The file object is stored in the file variable. After performing operations on the file, the ',(0,$e.jsx)("span",{className:"code-text  text-m",children:"close()"})," method is called to close it."]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Reading from Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["Python provides several methods to read from files, including ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"}),", The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"readline()"}),", and The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:(0,$e.jsx)("span",{className:"code-text  text-m",children:"readlines()"})}),"."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"})," method reads the entire contents of a file as a single string."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"readline()"})," method reads one line at a time from a file."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[" The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:(0,$e.jsx)("span",{className:"code-text  text-m",children:"readlines()"})})," method reads all lines of a file and returns them as a list of strings."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "r")\n  content = file.read()\n  print(content)\n  file.close()\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"})," method is used to read the entire ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"contents"})," of the file as a string. The content variable stores the contents, which are then printed."]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Writing to Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:['To write to a file, you need to open it in write mode ("w") or append mode ("a") using the ',(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"})," function."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"})," method is used to write data to the file. It takes a string as an argument."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "w")\n  file.write("Hello, World!")\n  file.close()\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the file is opened in write mode, and the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"}),' method is used to write the string "Hello, World!" to the file.']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's consider a relatable real-life example to understand file handling better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are a teacher who needs to keep track of your students' grades. You can use file handling to store the grades in a text file."}),(0,$e.jsx)(Gt,{children:' \n    def save_grades(grades):\n        file = open("grades.txt", "w")\n    \n        for student, grade in grades.items():\n            file.write(f"{student}: {grade}")\n    \n        file.close()\n    \n    grades = {\n        "Alice": 90,\n        "Bob": 85,\n        "Charlie": 95,\n        "Diana": 80\n    }\n    \n    save_grades(grades)\n      '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"save_grades()"}),' function takes a dictionary of student grades as input. The function opens the "grades.txt" file in write mode, iterates over the dictionary items, and writes each student\'s name and grade to the file. The ',(0,$e.jsx)("span",{className:"code-text  text-m",children:" file.write()"})," method is used to write the data, and the file is closed using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"file.close()"}),"."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using file handling in Python, you can read and write data to files, store and retrieve information, and manage data persistence, just like keeping track of students' grades by storing them in a file."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python read files"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Reading files in Python involves opening a file and extracting its contents for further processing. Python provides various methods and techniques to read files efficiently."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Opening Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:["To read a file, you need to open it using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"})," function, which returns a file object."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"})," function takes two parameters: the file path and the mode in which the file should be opened (read, write, append, etc.)."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "r")  # Open file in read mode\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"}),' function is used to open the file named "data.txt" in read mode. The file object is stored in the file variable.']}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Reading Entire File Contents:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:["To read the entire contents of a file, you can use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"})," method of the file object."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"})," method reads the entire file as a single string."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "r")\n  content = file.read()\n  print(content)\n  file.close()\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"})," method is used to read the entire contents of the file as a string. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"content"})," variable stores the contents, which are then printed."]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Reading Line by Line:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:["If you want to read a file line by line, you can use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"readline()"})," method of the file object."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"readline()"})," method reads one line at a time from the file."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "r")\n  line = file.readline()\n  \n  while line != "":\n      print(line)\n      line = file.readline()\n  \n  file.close()'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"readlines()"})," method is used to read all lines of the file and store them in the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"lines"})," variable. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"for"})," loop is then used to iterate over the lines and print them."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's consider a relatable real-life example to understand reading files better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a diary file where you write your thoughts and reflections each day. You can use file reading techniques to read and analyze the contents of your diary."}),(0,$e.jsx)(Gt,{children:' \n  file = open("diary.txt", "r")\n  content = file.read()\n  \n  # Perform analysis on the diary content\n  word_count = len(content.split())\n  line_count = len(content.split(" "))\n  \n  print("Word Count:", word_count)\n  print("Line Count:", line_count)\n  \n  file.close()\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:['In this example, the "diary.txt" file is opened in read mode, and the ',(0,$e.jsx)("span",{className:"code-text  text-m",children:"read()"})," method is used to read the entire contents of the file. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"content"})," variable stores the diary content, which can be further analyzed. Here, we calculate the word count and line count by splitting the content based on whitespace and newline characters."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using file reading techniques in Python, you can extract and process data from files, analyze text, and gain insights, just like analyzing the contents of a personal diary."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python create/write files"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Creating and writing files in Python involves opening a file in write mode, writing data to it, and saving the changes. Python provides built-in functions and methods to perform these operations efficiently."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Opening Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:["To create a new file or open an existing file for writing, you need to use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"})," function with the appropriate mode parameter."]}),(0,$e.jsx)("li",{className:"pt-2",children:'The mode parameter for write mode is "w".'}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "w")  # Open file in write mode\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"open()"}),' function is used to open the file named "data.txt" in write mode. The file object is stored in the file variable.']}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Writing to Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:["To write data to a file, you can use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"})," method of the file object."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"})," method takes a string as an argument and writes it to the file."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "w")\n  file.write("Hello, World!")\n  file.close()\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"}),' method is used to write the string "Hello, World!" to the file. The changes are saved by closing the file using ',(0,$e.jsx)("span",{className:"code-text  text-m",children:"file.close()"}),"."]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"3. Appending to Files:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:'If you want to add new content to an existing file without overwriting the existing content, you can use the append mode ("a").'}),(0,$e.jsx)("li",{className:"pt-2",children:"The append mode allows you to append data to the end of the file."}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  file = open("data.txt", "a")\n  file.write("Appending new data!")\n  file.close()\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the file is opened in append mode, and the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"}),' method is used to append the string "Appending new data!" to the file.']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's consider a relatable real-life example to understand creating and writing files better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are a writer working on a novel. You can use file handling to create and write your novel to a file."}),(0,$e.jsx)(Gt,{children:' \n  def write_novel(content):\n      file = open("novel.txt", "w")\n      file.write(content)\n      file.close()\n  \n  novel_content = """\n  Chapter 1: The Beginning\n  Once upon a time, in a faraway land...\n  """\n  \n  write_novel(novel_content)\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"write_novel()"}),' function takes the content of the novel as input. The function opens the "novel.txt" file in write mode, writes the content using the ',(0,$e.jsx)("span",{className:"code-text  text-m",children:"write()"})," method, and then closes the file."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using file creation and writing techniques in Python, you can create new files, write data to them, and save your work, just like writing and saving a novel as a file."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python delete files"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Deleting files in Python involves removing a file from the file system. Python provides built-in functions and modules to perform file deletion operations."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Deleting Files using os.remove():"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.remove()"})," function is used to delete a file from the file system."]}),(0,$e.jsx)("li",{className:"pt-2",children:"It takes the file path as a parameter and deletes the file if it exists."}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:' \n  import os\n  \n  file_path = "data.txt"\n  os.remove(file_path)\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.remove()"}),' function is used to delete the file named "data.txt" from the file system.']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Checking File Existence before Deletion:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It is recommended to check if a file exists before attempting to delete it."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["You can use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.path.exists()"})," function to check if a file exists at a given path."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example"}),(0,$e.jsx)(Gt,{children:'\n   import os\n  file_path = "data.txt"\n  if os.path.exists(file_path):\n      os.remove(file_path)\n  else:\n      print("File does not exist.")\n      '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.path.exists()"})," function is used to check if the file exists before deleting it. If the file exists, it is deleted using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.remove()"}),". Otherwise, a message indicating that the file does not exist is printed."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's consider a relatable real-life example to understand file deletion better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a folder on your computer where you keep old documents and files that you no longer need. Periodically, you want to delete these files to free up storage space."}),(0,$e.jsx)(Gt,{children:'\n import os\n\ndef delete_old_files(folder_path):\n    files = os.listdir(folder_path)\n\n    for file in files:\n        file_path = os.path.join(folder_path, file)\n        if os.path.isfile(file_path):\n            os.remove(file_path)\n\n    print("Old files deleted.")\n\nfolder_path = "old_documents"\ndelete_old_files(folder_path)\n'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"delete_old_files()"})," function takes the path of the folder containing old documents as input. It uses the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.listdir()"})," function to get a list of files in the folder. For each file, it checks if it is a regular file using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.path.isfile()"}),". If it is a file, it deletes it using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"os.remove()"}),". Finally, a message indicating that the old files have been deleted is printed."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using file deletion techniques in Python, you can remove unwanted files from the file system, manage disk space, and organize your data, just like deleting old documents from a folder to declutter your physical or digital space."})]})})})},Da=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, scope refers to the region or context in which a variable or name can be accessed. It determines the visibility and lifetime of variables and defines the rules for variable name resolution. Python has different types of scopes, including global scope and local scope."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1.Global Scope:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"The global scope refers to the outermost scope of a program, where variables and names are accessible throughout the entire program."}),(0,$e.jsx)("li",{className:"pt-2",children:"Variables defined in the global scope can be accessed from any part of the program, including inside functions."}),(0,$e.jsx)("li",{className:"pt-2",children:"To define a variable in the global scope, it should be declared outside any function or class."}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:"  \n  global_variable = \"I'm a global variable\"\n  \n  def print_global():\n      print(global_variable)\n  \n  print_global()  # Output: I'm a global variable\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"global_variable"})," is defined in the global scope. It can be accessed from within the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"print_global()"})," function because it is within the scope."]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Local Scope:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Local scope refers to the innermost scope, such as within a function or class, where variables and names have limited visibility."}),(0,$e.jsx)("li",{className:"pt-2",children:"Variables defined within a local scope can only be accessed within that specific scope."}),(0,$e.jsx)("li",{className:"pt-2",children:"Local variables are created when a function is called and destroyed when the function execution is completed."}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:"  \n  def print_local():\n  local_variable = \"I'm a local variable\"\n  print(local_variable)\n\n  print_local()  # Output: I'm a local variable\n  print(local_variable)  # Raises NameError: name 'local_variable' is not defined\n\n"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"local_variable"})," is defined within the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"print_local()"})," function's local scope. It can be accessed and printed within the function, but trying to access it outside the function will raise a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"NameError"})," since it is not defined in the global scope. "]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Understanding scope is crucial to avoid naming conflicts and properly manage variables in your programs. It ensures that variables are accessible in the appropriate context and prevents unintended modifications."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Now, let's consider a relatable real-life example to understand scope better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Imagine you are organizing a conference with multiple sessions and speakers. Each session has its own scope, where the speakers' names and session details are defined. However, the conference program itself has a global scope, where you can access information about all sessions and speakers."}),(0,$e.jsx)(Gt,{children:'  \n  def session_details():\n      session_name = "Python Fundamentals"\n      speaker_name = "John Smith"\n  \n      def print_speaker_details():\n          print("Speaker:", speaker_name)\n  \n      print("Session:", session_name)\n      print_speaker_details()\n  \n  session_details()\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"session_details()"})," function represents the scope of a session. It defines local variables ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"session_name"})," and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"speaker_name"})," that store ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"session-specific"})," information. The nested function",(0,$e.jsx)("span",{className:"code-text  text-m",children:" print_speaker_details()"})," can access the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"speaker_name"})," variable within its local scope. The program's global scope can access the session name and call the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"session_details()"})," function to display the session and speaker details. "]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding scope in Python, you can control the visibility and lifetime of variables, prevent naming conflicts, and organize your code effectively, just like managing sessions and speakers in a conference with appropriate scopes for each. "})]})})})},Pa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-m",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In Python, user input refers to the ability to accept data or information from the user during the execution of a program. This allows users to interact with the program and provide input based on their requirements or preferences. Python provides a built-in function called ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"input() "})," that enables you to prompt the user for input and store their response."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"input() "})," function takes an optional string argument, which is the prompt displayed to the user. It waits for the user to enter input, and once the user presses the Enter key, the input is returned as a string. Here's an example of how to use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"input() "})," function:"]}),(0,$e.jsx)(Gt,{children:'\n  \n    name = input("Please enter your name: ")\n    print("Hello, " + name + "! Nice to meet you.")\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In the example above, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"input() "}),' function prompts the user with the message "Please enter your name: ". The user can then enter their name and press Enter. The input is stored in the variable ',(0,$e.jsx)("span",{className:"code-text  text-m",children:"name "}),", and the program proceeds to print a greeting message using the entered name."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["It's important to note that the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"input() "})," function always returns the user's input as a string, regardless of the type of input entered. If you need to convert the input to a different data type, such as an integer or float, you can use type conversion functions like ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"int() "})," or ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"float() "}),". Here's an example:"]}),(0,$e.jsx)(Gt,{children:'\n  \n    age = input("Please enter your age: ")\n    age = int(age)  # Convert the input to an integer\n    years_until_hundred = 100 - age\n    print("You have approximately", years_until_hundred, "years until you turn 100.")\n\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the user is asked to enter their age. The input is initially stored as a string. To perform calculations, the input is converted to an integer using the int() function. The program then calculates the approximate number of years until the user turns 100 and prints the result."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Now, let's consider a relatable real-life example to understand user input better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Imagine you are developing a simple survey program. The program prompts the user with a series of questions and collects their responses. Once all the questions are answered, the program generates a summary of the survey results."}),(0,$e.jsx)(Gt,{children:'\n  \n    print("Welcome to the survey!")\n    name = input("Please enter your name: ")\n    age = input("Please enter your age: ")\n    occupation = input("Please enter your occupation: ")\n\n    print("Thank you for participating in the survey, " + name + "!")\n    print("Here is a summary of your responses:")\n    print("Name: " + name)\n    print("Age: " + age)\n    print("Occupation: " + occupation)\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the program starts by welcoming the user to the survey. It then uses the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"input() "})," function to collect the user's name, age, and occupation. Finally, it displays a summary of the responses provided by the user."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By incorporating user input in your Python programs, you can create interactive experiences that involve users in the decision-making process, just like conducting a survey to gather valuable information."})]})})})},Ma=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, an iterator is an object that represents a stream of data, allowing you to iterate or loop over its elements. Iterators provide a way to access and process elements sequentially, without needing to load all the data into memory at once. This is particularly useful when dealing with large datasets or infinite sequences."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To work with iterators, Python provides two main components: iterable objects and iterator objects."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Iterable Objects:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["An iterable object is any object that can be looped over using the for loop or the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"iter()"})," function."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["It must implement the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__iter__()"})," method, which returns an iterator object."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Common examples of iterable objects in Python include lists, strings, tuples, dictionaries, and sets."}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:" \n  numbers = [1, 2, 3, 4, 5]  # List is an iterable object\n  \n  for num in numbers:\n      print(num)\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"numbers"})," list is an iterable object. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"for"})," loop iterates over each element in the list and prints it."]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Iterator Objects:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["An iterator object represents a stream of data and implements the",(0,$e.jsx)("span",{className:"code-text  text-m",children:" __iter__()"})," and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__next__()"})," methods."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__iter__()"})," method returns the iterator object itself."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__next__()"})," method retrieves the next element in the sequence. When there are no more elements, it raises a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"StopIteration"})," exception."]}),(0,$e.jsx)("li",{className:"pt-2",children:"Here's an example:"})]}),(0,$e.jsx)(Gt,{children:" \n  numbers = [1, 2, 3, 4, 5]\n  numbers_iterator = iter(numbers)  # Creating an iterator object\n  \n  print(next(numbers_iterator))  # Output: 1\n  print(next(numbers_iterator))  # Output: 2\n  print(next(numbers_iterator))  # Output: 3\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"iter()"})," function is used to create an iterator object ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"numbers_iterator"})," from the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"numbers"})," list. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"next()"})," function is then called to retrieve the next element from the iterator."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" By using iterators, you can efficiently process large datasets or work with sequences that are generated on the fly, without needing to load everything into memory at once."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Now, let's consider a relatable real-life example to understand iterators better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Imagine you are a cashier at a grocery store, and you need to scan and process items for each customer. You can represent the items as an iterator, allowing you to process them one by one."}),(0,$e.jsx)(Gt,{children:' class GroceryStore:\n  def __init__(self, items):\n      self.items = items\n\n  def __iter__(self):\n      self.index = 0\n      return self\n\n  def __next__(self):\n      if self.index < len(self.items):\n          item = self.items[self.index]\n          self.index += 1\n          return item\n      else:\n          raise StopIteration\n\n  store = GroceryStore(["Apple", "Banana", "Orange"])\n\n  for item in store:\n    print("Scanning:", item)\n\n'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"GroceryStore"})," class represents the iterator object. It implements the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__iter__()"})," and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__next__()"})," methods. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__iter__()"})," method initializes the index to keep track of the current item, and the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"__next__()"})," method retrieves the next item from the list. When there are no more items, it raises a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"StopIteration"})," exception. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"store"})," instance of the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"GroceryStore"})," class is then iterated using a for loop, simulating the scanning process for each item."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using iterators in Python, you can process data sequentially, handle large datasets efficiently, and work with dynamically generated sequences, just like scanning and processing items at a grocery store one by one."})]})})})},La=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In Python, string formatting is the process of creating well-formatted strings by embedding variables or values within a string. It allows you to dynamically insert values into a string, making your output more readable and customized. Python provides several ways to perform string formatting, including the older ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"% "})," operator and the more modern ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"str.format() "})," method. We'll focus on the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"str.format() "})," method, which is recommended for newer versions of Python."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"str.format() "})," method allows you to create placeholders within a string, which are then replaced by values provided in a separate ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"format() "})," call. The placeholders are represented by curly braces ",(0,$e.jsx)("span",{className:"code-text  text-m",children:" "})," within the string. Here's an example:"]}),(0,$e.jsx)(Gt,{children:'\n  name = "Alice"\n  age = 28\n  message = "My name is {} and I\'m {} years old.".format(name, age)\n  print(message)\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In the example above, the curly braces ",(0,$e.jsx)("span",{className:"code-text  text-m",children:" "})," act as placeholders within the string. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"format() "})," method is called on the string and passed the variables ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"name "}),"and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"age "}),'. The method replaces the placeholders with the corresponding values, resulting in the output: "My name is Alice and I\'m 28 years old."']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can also specify the order of the placeholders using numerical indices within the curly braces. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n    name = "Bob"\n  age = 32\n  message = "My name is {1} and I\'m {0} years old.".format(age, name)\n  print(message)\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the index ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"0 "})," corresponds to the value of ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"age "}),", and the index 1 corresponds to the value of ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"name "}),'. The output will be: "My name is Bob and I\'m 32 years old."']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Additionally, you can provide more formatting options within the curly braces to control the appearance of the inserted values. These options include specifying the width, precision, alignment, and more. Here's an example:"}),(0,$e.jsx)(Gt,{children:""}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In this example, ",(0,$e.jsx)("span",{className:"code-text  text-m",children:":.2f "}),' within the curly braces specifies that the inserted value should be a floating-point number with two decimal places. The output will be: "The price is $9.99."']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's consider a relatable real-life example to understand string formatting better."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are developing an online shopping application. You want to display a receipt for a customer's purchase, including the item name, quantity, and total price. String formatting can help you create a well-structured and informative receipt."}),(0,$e.jsx)(Gt,{children:""}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, the variables ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"item "}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"quantity "}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"price_per_unit "}),", and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"total_price "})," store the relevant information for the receipt. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"format() "})," method is used to insert these values into the receipt template. The resulting receipt is printed, displaying the item name, quantity, price per unit, and the total price, all formatted neatly."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By utilizing string formatting in your Python programs, you can dynamically insert variables or values into strings, allowing you to generate customized and well-structured output, just like creating a detailed receipt for an online shopping application."})]})})})},Fa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, a module is a file containing Python code that defines functions, classes, and variables that can be utilized in other Python programs. Modules provide a way to organize and reuse code, making it easier to manage large projects and promote code reusability."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Python modules can be created by simply writing Python code in a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:".py"})," file. Each file acts as a separate module, and you can import these modules into other Python scripts to access their functionality. Python also includes a vast standard library with a wide range of modules that provide useful tools and functionalities."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" To use a module in your Python program, you need to ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"import"})," it using the import statement. Here's a basic example:"]}),(0,$e.jsx)(Gt,{children:'  \n  \n    import math\n\n    radius = 5\n    area = math.pi * math.pow(radius, 2)\n    print("The area of a circle with radius", radius, "is", area)\n   '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"math"})," module is imported using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"import"})," statement. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"math"})," module provides various mathematical functions and constants. We use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"math.pi"})," constant and the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"math.pow()"})," function to calculate the area of a circle."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" You can also import specific functions or variables from a module using the from keyword. Here's an example:"}),(0,$e.jsx)(Gt,{children:' \n  from math import sqrt\n  \n  number = 16\n  square_root = sqrt(number)\n  print("The square root of", number, "is", square_root)\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In this example, we import only the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"sqrt()"})," function from the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"math"})," module. We can then directly use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"sqrt()"})," function without specifying the module name."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" Additionally, you can give an imported module or function an alias using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"as"})," keyword. This can be useful to shorten long module names or avoid naming conflicts. Here's an example:"]}),(0,$e.jsx)(Gt,{children:'  \n  import datetime as dt\n  \n  current_date = dt.date.today()\n  print("Today\'s date is", current_date)\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module is imported and given an alias ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"dt"}),". We can then use ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"dt.date.today()"})," to access the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"today()"})," function within the datetime module."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Now, let's consider a relatable real-life example to understand modules better."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["Imagine you are building a recipe management application. You want to include a feature that generates random meal suggestions. You can utilize the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"random"})," module from the Python standard library to achieve this."]}),(0,$e.jsx)(Gt,{children:'  \n  import random\n  \n  meals = ["Spaghetti Bolognese", "Chicken Curry", "Caesar Salad", "Beef Stir-Fry", "Margherita Pizza"]\n  random_meal = random.choice(meals)\n  print("Today\'s random meal suggestion is:", random_meal)\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" In this example, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"random"})," module is imported, allowing us to use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"choice()"})," function to randomly select a meal from the list of available meals. The selected meal is then printed as a random meal suggestion."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" By using modules in your Python programs, you can leverage existing code and functionality to enhance your applications, just like utilizing a recipe management application that incorporates the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"random"})," module to generate random meal suggestions."]})]})})})},Ua=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" 1. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module in Python provides classes for manipulating dates and times. It allows you to work with dates, times, time intervals, and perform various operations on them."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" 2. To use the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module, you need to import it at the beginning of your Python script or interactive session:"]}),(0,$e.jsx)(Gt,{children:"\n  import datetime\n    "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["3. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module includes several classes, such as ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"date"}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"time"}),", and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"timedelta"}),", each serving different purposes:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"}),": Represents a specific date and time, including year, month, day, hour, minute, second, and microsecond."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"date"}),": Represents a date without time information, including year, month, and day."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"time"}),": Represents a time without date information, including hour, minute, second, and microsecond."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"timedelta"}),": Represents a duration or difference between two dates or times. "]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. Let's consider a life-related example: calculating the number of days between two significant events, such as birthdays."}),(0,$e.jsx)(Gt,{children:' \n  \n  import datetime\n\n  # Define the birthdates\n  my_birthday = datetime.date(2000, 5, 15)\n  friend_birthday = datetime.date(2001, 8, 10)\n\n  # Calculate the number of days between the birthdays\n  days_difference = friend_birthday - my_birthday\n\n  # Print the result\n  print(f"There are {days_difference.days} days between our birthdays.")\n\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["5. In this example, we import the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module and create ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"date"})," objects for two birthdays, ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"my_birthday"})," and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"friend_birthday"}),", specifying the year, month, and day."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["6. We calculate the difference between the two dates using the - operator, which results in a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"timedelta"})," object representing the duration between the two dates."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["7. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"days"})," attribute of the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"timedelta"})," object gives the number of days in the duration. We access it using the dot notation: ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"days_difference.days"}),"."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"8. Finally, we print the number of days between the birthdays using a formatted string."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["9. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module provides various methods and attributes to work with dates and times, such as extracting specific components (year, month, day) from a date, formatting dates as strings, comparing dates, and performing arithmetic operations."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"10. Here's an example demonstrating some of these operations:"}),(0,$e.jsx)(Gt,{children:' \n  import datetime\n\n  # Get the current date and time\n  current_datetime = datetime.datetime.now()\n  print("Current date and time:", current_datetime)\n\n  # Get the current date\n  current_date = datetime.date.today()\n  print("Current date:", current_date)\n\n  # Format a date as a string\n  formatted_date = current_date.strftime("%d-%m-%Y")\n  print("Formatted date:", formatted_date)\n\n  # Extract components from a date\n  year = current_date.year\n  month = current_date.month\n  day = current_date.day\n  print("Year:", year)\n  print("Month:", month)\n  print("Day:", day)\n\n  # Compare dates\n  other_date = datetime.date(2022, 1, 1)\n  is_before = current_date < other_date\n  print("Is the current date before the other date?", is_before)\n\n  # Perform arithmetic operations on dates\n  future_date = current_date + datetime.timedelta(days=30)\n  print("Future date:", future_date)\n '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"11. In this example, we use various functions and methods from the datetime module:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime.datetime.now()"})," returns the current date and time."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime.date.today()"})," returns the current date."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"strftime()"})," is used to format a date as a string using a specified format."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"year"}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"month"}),", and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"day"})," attributes are used to extract specific components from a date."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"<"})," operator is used to compare dates."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("span",{className:"code-text  text-m",children:"timedelta"})," is used to perform arithmetic operations on dates, such as adding or subtracting days."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["12. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"datetime"})," module provides extensive functionality for working with dates and times in Python. It's useful in various applications, such as event scheduling, data analysis, and time-dependent calculations."]})]})})})},Ba=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("div",{className:"",children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:" Python For Loops:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"In Python, a for loop is used to iterate over a sequence (such as a list, tuple, string, or dictionary) or any iterable object. It allows you to repeatedly execute a block of code for each item in the sequence. The basic syntax of a for loop is as follows:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{}),(0,$e.jsx)("p",{children:"Here's how it works: -             The for loop iterates over each item in the sequence. - On each iteration, the current item is assigned to the variable specified after the `for` keyword (in this example, `item`). - The code block indented under the for statement is executed for each item in the sequence."}),(0,$e.jsx)(Gt,{children:"\n  for item in sequence:\n  # code to execute for each item\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{children:"Let's consider a real-life example to illustrate the for loop. Suppose you want to implement a program that greets each person in a list of names."}),(0,$e.jsx)(Gt,{children:'\n    names = ["Alice", "Bob", "Charlie", "Dave"]\n\n    for name in names:\n        print("Hello, " + name + "!")\n    \n    print("All greetings sent.")\n        \n  '}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In this example, the `names` list contains several names. The for loop iterates over each name in the list. On each iteration, the current name is assigned to the `name` variable. Within the loop, the program prints a greeting message for each name. After the loop, the program prints "All greetings sent."'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Note that working with Unicode characters and handling different encodings can be complex. For advanced Unicode support and more comprehensive functionality, external libraries like ICU (International Components for Unicode) can be used."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"When you run this program, it will display the following output"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:[(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:"\n    Hello, Alice!\n    Hello, Bob!\n    Hello, Charlie!\n    Hello, Dave!\n    All greetings sent.\n  "}),(0,$e.jsx)("br",{}),"The for loop allows you to iterate over a sequence of items and perform a specific action for each item. It is commonly used to iterate over lists, but it can also be used with other iterable objects like strings or dictionaries. For loops provide a convenient way to process each item in a sequence without explicitly managing indices or loop counters.",(0,$e.jsx)("br",{}),"Here's an example that demonstrates string hashing using std::hash:"]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In real-life scenarios, for loops can be used to iterate over collections of data, perform calculations on each element, process files, handle batches of items, and much more. They provide a powerful tool for automating repetitive tasks and efficiently working with sequences of data."})]})})})})},Ga=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python create & call function:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In Python, a function is a block of reusable code that performs a specific task. Functions provide modularity and allow you to break down your code into smaller, manageable units. They can accept input arguments, perform computations, and return results."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To create a function in Python, you use the `def` keyword followed by the function name, a set of parentheses for optional input arguments, and a colon. The code block for the function is indented under the function definition."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" The basic syntax for creating a function in Python is as follows:"}),(0,$e.jsx)(Gt,{children:"\n  def function_name(argument1, argument2, ...):\n  # code block\n  # perform computations\n  # return result (if necessary)\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Here's an example of a simple function that calculates the square of a number:"}),(0,$e.jsx)(Gt,{children:"\n  def square(num):\n  result = num ** 2\n  return result\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `square` function takes an argument `num`, computes its square by raising it to the power of 2, and returns the result."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" To call a function in Python, you simply write the function name followed by parentheses, passing the required arguments (if any). The function is executed, and the control returns to the calling code."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Here's how you can call the `square` function and use its returned value:"}),(0,$e.jsx)(Gt,{children:'\n   number = 5\n   square_result = square(number)\n   print("The square of", number, "is", square_result)\n   \n   '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `square` function is called with the argument `number` set to 5. The returned value is assigned to the variable `square_result`. Finally, the program prints the result using the `print` statement."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" When you run this program, it will display the following output:"}),(0,$e.jsx)(Gt,{children:"\n   The square of 5 is 25\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Functions provide a way to organize and reuse code, making it easier to manage complex programs. They allow you to encapsulate specific functionality, separate concerns, and improve code readability. In real-life scenarios, functions can be used to perform various tasks, such as processing data, performing calculations, interacting with databases, or implementing complex algorithms."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" By creating and calling functions, you can write more modular and maintainable code, promoting code reuse and making your programs more efficient and scalable."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:" Python Argument ( parameter , Number , arbitrary keyword)"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" There are different types of arguments in Python functions: positional arguments, keyword arguments, default arguments, variable-length arguments, and keyword-only arguments. I'll provide a detailed explanation and include real-life examples."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Positional Arguments:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  - Positional arguments are passed to a function based on their position or order."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - The number and order of arguments must match between the function definition and the function call."}),(0,$e.jsx)(Gt,{children:'\n   def greet(name, age):\n       print("Hello,", name)\n       print("You are", age, "years old")\n   greet("Alice", 25)\n\n   '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'   In this example, the `greet` function accepts two positional arguments: `name` and `age`. When calling the function, the arguments are passed in the same order: "Alice" for `name` and 25 for `age`.'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. Keyword Arguments:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Keyword arguments are passed to a function using the argument name."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- The order of the arguments doesn't matter as long as the argument names are provided."}),(0,$e.jsx)(Gt,{children:'\n   def greet(name, age):\n   print("Hello,", name)\n   print("You are", age, "years old")\n\n   greet(age=25, name="Bob")\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:' In this example, the `greet` function is called with keyword arguments: `age=25` and `name="Bob"`. The order of the arguments is different from the function definition, but the argument names match.'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"3. Default Arguments:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Default arguments have a predefined value in the function definition."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - If an argument is not provided when calling the function, the default value is used."}),(0,$e.jsx)(Gt,{children:'\n   def greet(name, age=30):\n       print("Hello,", name)\n       print("You are", age, "years old")\n\n   greet("Alice")\n   '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `greet` function has a default argument `age=30`. If the `age` argument is not provided when calling the function, it automatically takes the default value of 30."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"4. Variable-Length Arguments:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - Variable-length arguments allow a function to accept any number of arguments."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - These arguments are represented using the `*` operator before the parameter name."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"  - The function treats the variable-length arguments as a tuple."}),(0,$e.jsx)(Gt,{children:"\n   def add(*numbers):\n   result = 0\n   for num in numbers:\n       result += num\n   return result\n\n  sum = add(1, 2, 3, 4, 5)\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `add` function accepts any number of arguments using `*numbers`. The function iterates over the `numbers` tuple and calculates the sum of all the arguments provided."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"5. Keyword-Only Arguments:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"- Keyword-only arguments can only be passed using the argument name and not by position."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - These arguments are specified after a `*` in the function definition."}),(0,$e.jsx)(Gt,{children:' \n   def greet(*, name, age):\n       print("Hello,", name)\n       print("You are", age, "years old")\n\n   greet(name="Alice", age=25)\n'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `greet` function has keyword-only arguments `name` and `age`. These arguments must be passed using the argument names, as indicated by the `*` before the parameter list."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These different types of arguments provide flexibility in defining and calling functions in Python. By understanding and utilizing them effectively, you can create functions that can handle a variety of inputs and scenarios, making your code more versatile and adaptable to different use cases."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold rounded-md card-bg w-full",children:"Python Return values & pass function:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"1. Return Values:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - In Python, a function can return a value using the `return` statement."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - The returned value can be assigned to a variable or used directly in the calling code."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - Functions can have multiple return statements, but only one is executed during the function call."}),(0,$e.jsx)(Gt,{children:'\n   def add_numbers(num1, num2):\n   sum = num1 + num2\n   return sum\n\n  result = add_numbers(5, 3)\n  print("The sum is:", result)\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" In this example, the `add_numbers` function takes two arguments, `num1` and `num2`. It calculates their sum and returns it using the `return` statement. The returned value is assigned to the variable `result` and then printed."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[" ",(0,$e.jsx)("b",{children:"2. The `pass` Keyword:"})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - In Python, the `pass` keyword is used as a placeholder for a block of code with no action."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" - It is often used when you need to define a function or a loop that does nothing but needs to have valid syntax."}),(0,$e.jsx)(Gt,{children:"\n  def placeholder_function():\n  pass\n\n  def process_data(data):\n  for item in data:\n      # Process each item\n      pass\n   "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, the `placeholder_function` is defined with the `pass` statement, indicating that it does nothing. Similarly, in the `process_data` function, the `pass` statement is used inside the loop to indicate that the processing of each item is not implemented yet."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Return values allow functions to produce results that can be used further in the program. By returning values, functions can perform computations, manipulate data, or generate outputs. The calling code can then utilize these returned values for additional operations."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"On the other hand, the `pass` keyword provides a way to create function or loop placeholders without causing syntax errors. It can be used when you are working on a code structure and want to implement the logic later or when you need a code block to be syntactically correct but don't require any action to be taken."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These concepts are essential in building robust and flexible programs in Python. By understanding return values and using the `pass` keyword effectively, you can design functions that produce meaningful results and create placeholders for future implementations."})]})})})},Ha=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Formatting strings and Manipulating Whitespaces"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Formatting strings using printf()-style format specifiers:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, you can format strings using printf()-style format specifiers by using the std::sprintf() or std::snprintf() functions from the [cstdio] header. These functions allow you to construct a formatted string by specifying placeholders and providing corresponding values."}),(0,$e.jsx)("p",{children:"Here's an example:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n#include <iostream> \n#include <cstdio>\n\nint main() {\n    int intValue = 123;\n    float floatValue = 3.14;\n\n    std::printf("Integer: %d, Float: %.2f\n", intValue, floatValue);\n\n    return 0;\n}\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n"Integer: 123, Float: 3.14"\n'}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Note that in modern C++, it is generally recommended to use the std::cout stream and its formatting capabilities instead of printf().",(0,$e.jsx)("br",{}),"Manipulating whitespaces with setw(), setfill(), etc.: The [iomanip] library in C++ provides several functions to manipulate whitespaces in formatted output. Here are a few commonly used functions:",(0,$e.jsx)("br",{}),"std::setw(): Sets the width of the next output field. std::setfill(): Sets the fill character for the next output field."]}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here is an example:"}),(0,$e.jsx)(Gt,{children:"\n#include <iostream>\n#include <iomanip>\n\nint main() {\n    int intValue = 123;\n    float floatValue = 3.14;\n\n    std::cout << \"Integer: \" << std::setw(5) << std::setfill('0') << intValue << std::endl;\n    std::cout << \"Float: \" << std::fixed << std::setprecision(2) << std::setw(8) << std::setfill('*') << floatValue << std::endl;\n\n    return 0;\n}\n"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:'\n"Integer: 00123"\n"Float: **3.14"\n'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, std::setw() is used to set the width of the output field, std::setfill() is used to set the fill character for the field, and std::setprecision() is used to set the precision (number of decimal places) for the floating-point value."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Note that the std::fixed manipulator is used to enforce fixed-point notation for the floating-point value."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"These examples demonstrate string formatting and manipulating whitespaces in C++. You can use these functions to customize the appearance and layout of your output based on your specific requirements."})]})})})},za=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsxs)("div",{children:[(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"4. Dynamic Memory Allocation:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Introduction to dynamic memory allocation:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Dynamic memory allocation allows you to allocate and deallocate memory during program execution, rather than at compile time. It gives you flexibility in managing memory based on runtime requirements. In C++, dynamic memory allocation is done using the new and delete operators."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Allocation and Deallocation of Memory Using new and delete:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The new operator is used to dynamically allocate memory for variables or objects. It returns a pointer to the allocated memory. Here's an example of allocating memory for a single integer:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)(Gt,{children:'\n  int* ptr = new int;\n  *ptr = 10;\n  \n  // Use the dynamically allocated memory\n  cout << "Value: " << *ptr << endl;\n  \n  // Deallocate the memory\n  delete ptr;\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code snippet, new int dynamically allocates memory for an integer and returns a pointer to the allocated memory. The value 10 is stored in the allocated memory using the dereference operator *ptr. After using the dynamically allocated memory, it is important to deallocate it using the delete operator to free the memory."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Allocating Memory for Single Variables:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"You can also dynamically allocate memory for other data types, such as floating-point numbers, structures, or objects. Here's an example of allocating memory for a double:"}),(0,$e.jsx)(Gt,{children:'\n  double* ptr = new double;\n  *ptr = 3.14;\n  \n  // Use the dynamically allocated memory\n  cout << "Value: " << *ptr << endl;\n  \n  // Deallocate the memory\n  delete ptr;\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Similarly, you can allocate memory for other data types by replacing int with the desired type in the new expression."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Allocating Memory for Arrays:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Dynamic memory allocation is useful for creating arrays whose size is determined at runtime. To allocate memory for an array, you can specify the array size within square brackets. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\nint size;\ncout << "Enter the size of the array: ";\ncin >> size;\n\nint* arr = new int[size];\n\n// Use the dynamically allocated array\nfor (int i = 0; i < size; i++) {\n    arr[i] = i + 1;\n    cout << arr[i] << " ";\n}\ncout << endl;\n\n// Deallocate the memory\ndelete[] arr;\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, new int[size] dynamically allocates memory for an integer array of the specified size. The array elements are accessed and used as usual. When deallocating the memory, the delete[] operator is used instead of delete to release the entire array."})]})}),(0,$e.jsxs)("div",{className:"p-4 mt-6 bg-blue-400 text-white rounded-lg text-base flex",children:[(0,$e.jsx)(Dt,{className:"text-4xl mr-4 bulb"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Dynamic memory allocation is powerful, but it requires careful management. It's important to deallocate the allocated memory using delete or delete[] when it is no longer needed to prevent memory leaks. Failing to deallocate dynamically allocated memory can result in memory exhaustion and unexpected behavior in your program."})]})]})})},Ya=function(){return(0,$e.jsxs)($e.Fragment,{children:[(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"5.Pointers and Functions:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers can be effectively used with functions to pass data by reference, return pointers from functions, and perform dynamic memory allocation within functions. Let's explore these concepts:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Passing Pointers to Functions (Pass-by-Reference):"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Pointers can be passed to functions to modify the value of variables or objects directly. By passing a pointer, you allow the function to access and modify the original data. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\nvoid increment(int* ptr) {\n(*ptr)++;\n}\n\nint main() {\n    int num = 10;\n    increment(&num);\n\n    cout << "Modified value: " << num << endl;  // Output: Modified value: 11\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the increment function takes a pointer to an integer (int* ptr) as a parameter. By dereferencing the pointer ((*ptr)++), the function increments the value stored in the memory location pointed to by ptr, directly modifying the num variable in the main function."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By passing pointers to functions, you can avoid making copies of large data structures and achieve more efficient memory usage."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Returning Pointers from Functions:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Functions can also return pointers, allowing you to dynamically allocate memory within a function and return the allocated memory to the calling code. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  int* createArray(int size) {\n    int* arr = new int[size];\n\n    for (int i = 0; i < size; i++) {\n        arr[i] = i + 1;\n    }\n\n    return arr;\n}\n\nint main() {\n    int* arr = createArray(5);\n\n    // Use the dynamically allocated array\n    for (int i = 0; i < 5; i++) {\n        cout << arr[i] << " ";\n    }\n    cout << endl;\n\n    delete[] arr;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, the createArray function dynamically allocates an integer array of the specified size and initializes its elements. The function returns the pointer to the dynamically allocated array (int*) back to the main function, which can then use and manipulate the array. Remember to deallocate the dynamically allocated memory (delete[] arr) when it is no longer needed."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Dynamic Memory Allocation with Functions:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Functions can perform dynamic memory allocation to create and return dynamically allocated data structures. This can be useful when the size or structure of the data is determined at runtime. Here's an example:"}),(0,$e.jsx)(Gt,{children:'\n  struct Person {\n    string name;\n    int age;\n};\n\nPerson* createPerson(const string& name, int age) {\n    Person* p = new Person;\n    p->name = name;\n    p->age = age;\n    return p;\n}\n\nint main() {\n    Person* person = createPerson("John Doe", 25);\n\n    cout << "Name: " << person->name << endl;  // Output: Name: John Doe\n    cout << "Age: " << person->age << endl;    // Output: Age: 25\n\n    delete person;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, the createPerson function dynamically allocates memory for a Person structure, initializes its members, and returns the pointer to the created Person object. The main function then uses the returned pointer to access and display the data. Finally, the dynamically allocated memory is deallocated using delete to avoid memory leaks."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Remember to handle dynamically allocated memory carefully, ensuring proper deallocation to prevent memory leaks and undefined behavior."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Using pointers with functions offers great flexibility in manipulating data and performing dynamic memory allocation within the context of function calls. However, it's important to handle memory management responsibly to avoid memory leaks and access invalid memory locations."})]})})}),(0,$e.jsx)("div",{})]})},qa=[{id:1,path:"/algorithm/sorting",name:"Sorting Algorithms ",subRoutes:[{path:"/algorithm/sorting-intro",name:"Sorting Intro"},{path:"/algorithm/sorting-bubble",name:"Bubble Sort"},{path:"/algorithm/sorting-selection",name:"Selection Sort"},{path:"/algorithm/sorting-insertion",name:"Insertion Sort"},{path:"/algorithm/sorting-merge",name:"Merge Sort"},{path:"/algorithm/sorting-quick",name:"Quick Sort"},{path:"/algorithm/sorting-radix",name:"Radix Sort"},{path:"/algorithm/sorting-heap",name:"Heap Sort"}]},{id:2,path:"/algorithm/searching",name:"Searching Algorithms",subRoutes:[{path:"/algorithm/searching-intro",name:"Searching Algorithm Intro"},{path:"/algorithm/searching-linear",name:"Linear Search"},{path:"/algorithm/searching-binary",name:"Binary Search"},{path:"/algorithm/searching-interpolation",name:"Interpolation Search"}]},{id:3,path:"/algorithm/graph",name:"Graph Algorithms",subRoutes:[{path:"/algorithm/graph-intro",name:"Graph algorithm Intro"},{path:"/algorithm/graph-breath",name:"Breadth First Search"},{path:"/algorithm/graph-depth",name:"Depth First Search"},{path:"/algorithm/graph-topological",name:"Topological searching"}]},{id:4,path:"/algorithm/dynamic",name:"Dynamic Programming",subRoutes:[{path:"/algorithm/dynamic-optimal-structure",name:"Optimal Substructure"},{path:"/algorithm/dynamic-memoization",name:"Memoization & Tabulation"},{path:"/algorithm/dynamic-topdown-recursive",name:"Top-Down Approach (Recursive Approach)"},{path:"/algorithm/dynamic-topdown-iterative",name:"Bottom-Up Approach (Iterative Approach)"},{path:"/algorithm/dynamic-longest-sebsequence",name:"Longest Common Subsequence (LCS)"},{path:"/algorithm/dynamic-knapsackproblems",name:"Knapsack Problems"},{path:"/algorithm/dynamic-coin-change",name:"Coin Change Problem"},{path:"/algorithm/dynamic-edit-distance",name:"Edit Distance "}]},{id:5,path:"/algorithm/greedy",name:"Greedy Algorithms",subRoutes:[{path:"/algorithm/greedy-choice-property",name:"Greedy Choice Property"},{path:"/algorithm/greedy-activity-selection",name:"Activity Selection Problem"},{path:"/algorithm/greedy-huffman-coding",name:"Huffman Coding"},{path:"/algorithm/greedy-job-sceduling",name:"Job Scheduling Problem"}]},{id:6,path:"/algorithm/divide-conquer",name:"Divide and Conquer Algorithms"},{id:7,path:"/algorithm/backtracking",name:"Backtracking Algorithms (1 questions)"},{id:8,path:"/algorithm/string",name:"String Algorithms"},{id:9,path:"/algorithm/techniques",name:"Algorithmic Techniques",subRoutes:[{path:"/algorithm/technques-two-pointers",name:"Two Pointers"},{path:"/algorithm/technques-sliding-window",name:"Sliding Window"}]},{id:10,path:"/algorithm/np-complete",name:"NP-completeness Algorithms"},{id:11,path:"/algorithm/approximation",name:" Approximation Algorithms"},{id:12,path:"/algorithm/computational-geo",name:"Computational Geometry Algorithms"},{id:13,path:"/algorithm/number-theory",name:"Number Theory",subRoutes:[{path:"/algorithm/number-thoery",name:"Number Theory"},{path:"/algorithm/number-eclidean-arithmetic",name:"Euclidean Algorithm & Modular Arithmetic"}]},{id:14,path:"/algorithm/hashing",name:"Hashing Algorithms"},{id:15,path:"/algorithm/recursion",name:"Recursion"},{id:16,path:"/algorithm/bit-manipulation",name:"Bit Manipulation",subRoutes:[{path:"/algorithm/bit-ops-shift",name:"Bitwise Operations,Shift,Mask,Counting"},{path:"/algorithm/bit-mans-integer",name:"Bitwise Manipulation of Integers"},{path:"/algorithm/bit-tricks-ops",name:"Bitwise Tricks , Optimization & Bitboards"}]},{id:17,path:"/algorithm/time-complexity",name:"Time complexity & Space complexity"}],Va=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1],r=E((0,t.useState)(!1),2),o=r[0],l=r[1];return window.addEventListener("scroll",(function(){window.scrollY>=50?l(!0):l(!1)})),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{className:"h-12 top-0 sticky w-full z-10 bg-blue-600 text-white dark:bg-blue-900 flex items-center",children:[(0,$e.jsx)(Kn,{className:"text-4xl ml-8 md:hidden",onClick:function(){return i(!s)}}),(0,$e.jsx)(Xn,{})]}),(0,$e.jsxs)("div",{className:"flex h-full",children:[(0,$e.jsxs)("section",{className:o?"bg-white dark:bg-slate-800 text-color-mode fixed top-12 h-[92%] mb-10 hidden md:block overflow-y-auto":"bg-white dark:bg-slate-800 text-color-mode fixed top-32 h-[80%] mb-10 hidden md:block overflow-y-auto",children:[(0,$e.jsx)("h4",{className:"py-2 text-xl px-2",children:"Algorithms Tutorial"}),qa.map((function(e,t){return e.subRoutes?(0,$e.jsx)(ra,{item:e,setOpen:i},e.name):(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2  hover:text-blue-400 hover:bg-white",activeclassName:"active",children:(0,$e.jsx)("div",{className:"",children:e.name})},t)}))]}),(0,$e.jsx)("section",{className:"mx-4 md:ml-[17rem] lg:ml-[18rem] w-inherit  md:w-3/5 my-10 rounded-xl text-color-mode bg-lightModeElement/20 dark:bg-darkModeElement",children:n}),(0,$e.jsx)("section",{className:"hidden lg:block text-red-600 mt-14",children:(0,$e.jsx)("h1",{className:"",children:"Place Ads Here"})})]}),(0,$e.jsx)("div",{children:s&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-full top-32 left-0 bg-slate-400 overflow-y-scroll",children:qa.map((function(e,t){return e.subRoutes?(0,$e.jsx)(ra,{item:e,setOpen:i},e.name):(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return i(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})})})]})},Wa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)(Va,{children:(0,$e.jsx)(Ae,{})})})},Qa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Sorting Introduction :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"What is a sorting algorithm?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" A sorting algorithm is like a set of instructions that help us arrange a group of things in a particular order. Think of it as organising a messy room or arranging things on your bookshelf."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Why do we use sorting algorithms?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Sorting algorithms are useful because they help us put things in order. Just like organising your toys makes it easier to find your favourite toy, sorting helps us find things quickly or present information in a neat and logical way."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Where do we use sorting algorithms?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"We use sorting algorithms in many everyday situations. For example, when you put your books in alphabetical order on a shelf, or when you organise your toys by size or colour. Computers also use sorting algorithms to sort data, like sorting names in a contact list or arranging numbers from smallest to largest."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"How does a sorting algorithm work?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Sorting algorithms work by comparing and rearranging the items until they are in the desired order. Let\'s look at a simple example called "Bubble Sort" to understand how it works:'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Imagine you have a row of toy cars, and they're all mixed up."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. To sort them, you start by comparing two cars at a time, starting from the left side."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. If a car on the left is bigger than the one on the right, you swap their positions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. You keep going through the row, comparing and swapping the cars until they're in the right order."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"5. After each pass through the row, the biggest car moves to the end."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"6. You repeat this process until all the cars are in the correct order, with the smallest car at the beginning."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, let's say you have the following toy cars: 5, 2, 8, and 3."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"First, compare 5 and 2. Since 5 is bigger, you swap them: 2, 5, 8, 3."}),(0,$e.jsx)("li",{className:"pt-2",children:"Next, compare 5 and 8. They're already in the right order, so you leave them as they are."}),(0,$e.jsx)("li",{className:"pt-2",children:"Then, compare 8 and 3. You swap them: 2, 5, 3, 8."}),(0,$e.jsx)("li",{className:"pt-2",children:"Now, repeat the process from the beginning until everything is in order."}),(0,$e.jsx)("li",{className:"pt-2",children:"Then, compare 8 and 3. You swap them: 2, 5, 3, 8."}),(0,$e.jsx)("li",{className:"pt-2",children:"Compare 2 and 5. They're already in the right order."}),(0,$e.jsx)("li",{className:"pt-2",children:"Compare 5 and 3. You swap them: 2, 3, 5, 8."}),(0,$e.jsx)("li",{className:"pt-2",children:"Compare 5 and 8. They're already in the right order."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, your toy cars are in order from smallest to largest: 2, 3, 5, 8."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'There are many other types of sorting algorithms, like "Selection Sort" and "Insertion Sort," each with their own way of comparing and rearranging items. Sorting algorithms make it easier to find things, organise data, and solve problems efficiently.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this explanation helps you understand sorting algorithms in a fun and simple way!"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"There are several types of sorting algorithms commonly used. Here are some of the main types:"})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. Bubble Sort:"})," It repeatedly compares adjacent elements and swaps them if they are in the wrong order until the entire list is sorted."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2. Selection Sort:"})," It repeatedly selects the smallest element from the unsorted part of the list and moves it to the sorted part."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3. Insertion Sort:"})," It builds the final sorted array one item at a time by inserting each element into its correct position within the sorted portion of the array."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"4. Merge Sort:"})," It follows the divide-and-conquer approach by dividing the unsorted list into smaller sublists, sorting them, and then merging them back together to obtain a sorted list."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"5. Quick Sort:"}),' It also uses the divide-and-conquer approach, selecting a "pivot" element and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot. The sub-arrays are then sorted recursively.']}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"6. Heap Sort:"})," It builds a binary heap from the input list and repeatedly extracts the largest element from the heap, placing it in the sorted part of the array."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"7. Radix Sort:"})," It sorts numbers digit by digit, starting from the least significant digit to the most significant digit, using counting sort or another stable sorting algorithm."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"8. Counting Sort:"})," It works well for sorting integers with a small and known range of values by counting the occurrences of each distinct element and using that information to determine their correct positions in the sorted output."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are some of the commonly used sorting algorithms, each with its own advantages, disadvantages, and best-case/worst-case performance characteristics."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The choice of sorting algorithm depends on factors such as the size of the input, the nature of the data, and the desired performance requirements."})]})})})},$a=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bubble Sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Bubble Sort is a simple sorting algorithm that helps us arrange a list of things in order. It works by repeatedly comparing adjacent elements and swapping them if they are in the wrong order, just like bubbles rising to the surface."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Why do we use Bubble Sort?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Bubble Sort is easy to understand and implement. It helps us learn about sorting algorithms. However, it's not very efficient for large lists, so we usually use other sorting algorithms for practical purposes."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Bubble Sort compares each pair of adjacent elements in the list and swaps them if they are in the wrong order. In the worst case, it needs to go through the list multiple times to ensure everything is sorted correctly. The time it takes to sort the list using Bubble Sort grows quadratically as the number of elements increases. For example, if we have 10 elements, Bubble Sort may need 100 comparisons (10^2). If we have 100 elements, it may need 10,000 comparisons (100^2)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'3. Bubble Sort is an "in-place" sorting algorithm, which means it doesn\'t require any extra memory proportional to the input size. It uses a constant amount of additional space, so we say its space complexity is O(1).'}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  \n  void bubbleSort(int arr[], int size) {\n      // Iterate through the list\n      for (int i = 0; i < size - 1; i++) {\n          // Compare adjacent elements\n          for (int j = 0; j < size - i - 1; j++) {\n              if (arr[j] > arr[j + 1]) {\n                  // Swap them if they are in the wrong order\n                  int temp = arr[j];\n                  arr[j] = arr[j + 1];\n                  arr[j + 1] = temp;\n              }\n          }\n      }\n  }\n  \n  int main() {\n      int numbers[] = {5, 2, 8, 3};\n      int size = sizeof(numbers) / sizeof(numbers[0]);\n  \n      // Print the list before sorting\n      std::cout << "Before sorting: ";\n      for (int i = 0; i < size; i++) {\n          std::cout << numbers[i] << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Bubble Sort\n      bubbleSort(numbers, size);\n  \n      // Print the list after sorting\n      std::cout << "After sorting: ";\n      for (int i = 0; i < size; i++) {\n          std::cout << numbers[i] << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have an array of numbers [5, 2, 8, 3]. After applying Bubble Sort, the array will be sorted in ascending order as [2, 3, 5, 8]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses two loops to go through the list. In each iteration, it compares adjacent elements and swaps them if they are in the wrong order. It repeats this process until the array is sorted correctly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this explanation and code example help you understand Bubble Sort in a simplified way!"})]})})})},Ka=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Insertion sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1: Arranging a Deck of Playing Cards"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Imagine you have a deck of playing cards that is all mixed up, and you want to sort them in ascending order based on their values using the Insertion Sort algorithm."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Why do we use Insertion Sort?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Insertion Sort helps us organize things in a specific order. In this case, we want to arrange the playing cards in numerical order. By using Insertion Sort, we can compare the cards and insert them into their correct positions until they are arranged correctly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'2. Insertion Sort works by comparing each card with the ones before it and placing it in its correct position. The time it takes to sort the cards using Insertion Sort depends on the number of cards and their initial order. In the worst-case scenario, where the cards are in reverse order, it would take roughly (n^2)/2 comparisons, where "n" is the number of cards.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Insertion Sort is an \"in-place\" sorting algorithm, which means it doesn't require any extra space to sort the cards. You can arrange the cards on the table without needing any additional containers. So, we say that Insertion Sort has a space complexity of O(1), which means it doesn't need any extra memory proportional to the number of cards."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example of Insertion Sort implemented in C++ using the playing card sorting scenario:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  \n  void insertionSort(int cards[], int size) {\n      // Iterate through the cards\n      for (int i = 1; i < size; i++) {\n          int currentCard = cards[i];\n          int j = i - 1;\n  \n          // Compare the current card with the ones before it\n          while (j >= 0 && cards[j] > currentCard) {\n              cards[j + 1] = cards[j];\n              j--;\n          }\n  \n          // Insert the current card into its correct position\n          cards[j + 1] = currentCard;\n      }\n  }\n  \n  int main() {\n      int cards[] = {7, 3, 9, 2, 5}; // Each number represents a playing card value\n      int size = sizeof(cards) / sizeof(cards[0]);\n  \n      // Print the cards before sorting\n      std::cout << "Cards before sorting: ";\n      for (int i = 0; i < size; i++) {\n          std::cout << cards[i] << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Insertion Sort to arrange the cards\n      insertionSort(cards, size);\n  \n      // Print the cards after sorting\n      std::cout << "Cards after sorting: ";\n      for (int i = 0; i < size; i++) {\n          std::cout << cards[i] << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have an array representing the values of five playing cards: [7, 3, 9, 2, 5]. After applying Insertion Sort, the array will be sorted in ascending order: [2, 3, 5, 7, 9]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses two loops to go through the cards. In each iteration, it compares the current card with the ones before it and shifts them to the right if necessary. It finds the correct position for the current card and inserts it there."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this example and explanation help in understanding Insertion Sort in a simplified way!"})]})})})},Xa=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Merge Sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have two piles of colored blocks, and you want to sort them by color using the Merge Sort algorithm."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Why do we use Merge Sort?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1.Merge Sort helps us organize things in a specific order. In this case, we want to arrange the colored blocks by color. By using Merge Sort, we can divide the blocks into smaller groups, sort them individually, and then merge them back together in the correct order."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Merge Sort works by repeatedly dividing the blocks into halves, sorting them, and then merging them back together. The time it takes to sort the blocks using Merge Sort depends on the number of blocks and the initial order. Merge Sort has a time complexity of O(n log n), which means it takes a reasonable amount of time even for a large number of blocks."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Merge Sort requires extra space to merge the sorted blocks back together. However, it can be implemented in two ways: using an additional array or using an in-place approach. The space complexity of Merge Sort using an additional array is O(n), which means it requires additional memory proportional to the number of blocks. The in-place implementation has a space complexity of O(1), which means it doesn't need any extra memory apart from the original blocks."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example of Merge Sort implemented in C++ using the colored block sorting scenario:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  \n  // Merge two sorted subarrays into one sorted array\n  void merge(std::vector<int>& blocks, int left, int mid, int right) {\n      int i = left;       // Index for the left subarray\n      int j = mid + 1;    // Index for the right subarray\n      std::vector<int> temp;   // Temporary array to store the merged elements\n  \n      // Compare and merge the elements from the two subarrays\n      while (i <= mid && j <= right) {\n          if (blocks[i] <= blocks[j]) {\n              temp.push_back(blocks[i]);\n              i++;\n          } else {\n              temp.push_back(blocks[j]);\n              j++;\n          }\n      }\n  \n      // Add any remaining elements from the left subarray\n      while (i <= mid) {\n          temp.push_back(blocks[i]);\n          i++;\n      }\n  \n      // Add any remaining elements from the right subarray\n      while (j <= right) {\n          temp.push_back(blocks[j]);\n          j++;\n      }\n  \n      // Copy the sorted elements back to the original array\n      int k = left;\n      for (int num : temp) {\n          blocks[k] = num;\n          k++;\n      }\n  }\n  \n  // Merge Sort function\n  void mergeSort(std::vector<int>& blocks, int left, int right) {\n      if (left < right) {\n          int mid = left + (right - left) / 2;\n  \n          // Recursively sort the two halves\n          mergeSort(blocks, left, mid);\n          mergeSort(blocks, mid + 1, right);\n  \n          // Merge the sorted halves\n          merge(blocks, left, mid, right);\n      }\n  }\n  \n  int main() {\n      std::vector<int> blocks = {4, 2, 7, 1, 5}; // Each number represents a colored block\n      int size = blocks.size();\n  \n      // Print the blocks before sorting\n      std::cout << "Blocks before sorting: ";\n      for (int num : blocks) {\n          std::cout << num << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Merge Sort to sort the blocks\n      mergeSort(blocks, 0, size - 1);\n  \n      // Print the blocks after sorting\n      std::cout << "Blocks after sorting: ";\n      for (int num : blocks) {\n          std::cout << num << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a vector representing the colors of five blocks: [4, 2, 7, 1, 5]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"After applying Merge Sort, the vector will be sorted in ascending order: [1, 2, 4, 5, 7]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses recursion to divide the blocks into smaller groups until each group contains a single block. Then, it merges the groups back together in a sorted manner. The merge function compares and combines the two sorted subarrays into one sorted array."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this example and explanation help in understanding Merge Sort in a simplified way!"})]})})})},Za=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Quick Sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a box full of different-sized balls, and you want to sort them by size using the Quick Sort algorithm."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Why do we use Quick Sort?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'1. Quick Sort helps us organize things in a specific order. In this case, we want to arrange the balls by size. By using Quick Sort, we can choose a "pivot" ball, compare it to other balls, and partition the balls into two groups based on their size. We repeat this process recursively until all the balls are sorted.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Quick Sort works by repeatedly partitioning the balls based on the chosen pivot. The time it takes to sort the balls using Quick Sort depends on the number of balls and their initial order. In the average case, Quick Sort has a time complexity of O(n log n), which means it is efficient for most scenarios. However, in the worst-case scenario where the balls are already sorted or in reverse order, Quick Sort's time complexity becomes O(n^2), which is less efficient."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Quick Sort typically uses a small amount of additional space for its recursive calls. However, it can be implemented in two ways: using an additional stack or using an in-place approach. The space complexity of Quick Sort using an additional stack is O(log n), which means it requires additional memory proportional to the number of recursive calls. The in-place implementation has a space complexity of O(1), which means it doesn't need any extra memory apart from the original balls."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example of Quick Sort implemented in C++ using the ball sorting scenario:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  \n  // Partition function to place the pivot ball in its correct position\n  int partition(std::vector<int>& balls, int low, int high) {\n      int pivot = balls[high];  // Choose the last ball as the pivot\n      int i = low - 1;          // Index of the smaller element\n  \n      // Compare each ball with the pivot and swap if necessary\n      for (int j = low; j < high; j++) {\n          if (balls[j] <= pivot) {\n              i++;\n              std::swap(balls[i], balls[j]);\n          }\n      }\n  \n      // Place the pivot ball in its correct position\n      std::swap(balls[i + 1], balls[high]);\n      return i + 1;\n  }\n  \n  // Quick Sort function\n  void quickSort(std::vector<int>& balls, int low, int high) {\n      if (low < high) {\n          // Find the pivot position and recursively sort the two partitions\n          int pivot = partition(balls, low, high);\n          quickSort(balls, low, pivot - 1);\n          quickSort(balls, pivot + 1, high);\n      }\n  }\n  \n  int main() {\n      std::vector<int> balls = {7, 2, 10, 5, 3}; // Each number represents a ball size\n      int size = balls.size();\n  \n      // Print the balls before sorting\n      std::cout << "Balls before sorting: ";\n      for (int num : balls) {\n          std::cout << num << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Quick Sort to sort the balls\n      quickSort(balls, 0, size - 1);\n  \n      // Print the balls after sorting\n      std::cout << "Balls after sorting: ";\n      for (int num : balls) {\n          std::cout << num << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a vector representing the sizes of five balls: [7, 2, 10, 5, 3].."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"After applying Quick Sort, the vector will be sorted in ascending order: [2, 3, 5, 7, 10]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses recursion to partition the balls based on the chosen pivot. It compares each ball with the pivot and swaps them if necessary. Finally, it recursively applies Quick Sort to the two partitions until all the balls are sorted."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this example and explanation help in understanding Quick Sort in a simplified way!"})]})})})},Ja=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Radix Sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Definition of Radix Sort:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Radix Sort is a sorting algorithm that works on the digits or characters of a number or string. It sorts the elements by examining each digit or character from the least significant to the most significant. By repeatedly grouping the elements based on each digit or character, Radix Sort can sort them into the correct order."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Life-related Easy Example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Let's say we have a group of students, and we want to sort them based on their ages using Radix Sort. Each student's age is represented by a number. Radix Sort would start by looking at the least significant digit (the units place) of each student's age and grouping them accordingly. Then, it would move on to the tens place, hundreds place, and so on until all the students are sorted by age."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. The time complexity of Radix Sort is typically considered to be O(d * (n + k)), where d is the number of digits or characters in the input, n is the number of elements to be sorted, and k is the range of possible values for each digit or character. In simple terms, Radix Sort has a linear time complexity, which means it can sort elements efficiently even for a large number of inputs."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. The space complexity of Radix Sort is O(n + k), where n is the number of elements to be sorted, and k is the range of possible values for each digit or character. The additional space required by Radix Sort is proportional to the number of elements and the range of values."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example of Radix Sort implemented in C++ using the student age sorting scenario:"}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n  #include <vector>\n  \n  // Find the maximum element in the vector\n  int findMax(std::vector<int>& arr) {\n      int max = arr[0];\n      for (int i = 1; i < arr.size(); i++) {\n          if (arr[i] > max) {\n              max = arr[i];\n          }\n      }\n      return max;\n  }\n  \n  // Counting Sort function to sort the vector based on a specific digit\n  void countingSort(std::vector<int>& arr, int exp) {\n      int n = arr.size();\n      std::vector<int> output(n);\n      std::vector<int> count(10, 0);\n  \n      // Count the occurrences of each digit\n      for (int i = 0; i < n; i++) {\n          int digit = (arr[i] / exp) % 10;\n          count[digit]++;\n      }\n  \n      // Calculate the cumulative count of each digit\n      for (int i = 1; i < 10; i++) {\n          count[i] += count[i - 1];\n      }\n  \n      // Build the sorted output array\n      for (int i = n - 1; i >= 0; i--) {\n          int digit = (arr[i] / exp) % 10;\n          output[count[digit] - 1] = arr[i];\n          count[digit]--;\n      }\n  \n      // Copy the sorted elements back to the original array\n      for (int i = 0; i < n; i++) {\n          arr[i] = output[i];\n      }\n  }\n  \n  // Radix Sort function\n  void radixSort(std::vector<int>& arr) {\n      int max = findMax(arr);\n  \n      // Perform counting sort for each digit, starting from the least significant digit\n      for (int exp = 1; max / exp > 0; exp *= 10) {\n          countingSort(arr, exp);\n      }\n  }\n  \n  int main() {\n      std::vector<int> ages = {26, 34, 19, 42, 31}; // Each number represents a student\'s age\n      int size = ages.size();\n  \n      // Print the ages before sorting\n      std::cout << "Ages before sorting: ";\n      for (int age : ages) {\n          std::cout << age << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Radix Sort to sort the ages\n      radixSort(ages);\n  \n      // Print the ages after sorting\n      std::cout << "Ages after sorting: ";\n      for (int age : ages) {\n          std::cout << age << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a vector representing the ages of five students: [26, 34, 19, 42, 31]. After applying Radix Sort, the vector will be sorted in ascending order: [19, 26, 31, 34, 42]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses Counting Sort as a subroutine to sort the elements based on each digit. It finds the maximum element in the vector to determine the number of digits. Then, it performs Counting Sort for each digit, starting from the least significant digit, until all the elements are sorted."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this example and explanation help in understanding Radix Sort in a simplified way!"})]})})})},es=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Heap Sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Definition of Heap Sort:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'1. Heap Sort is a sorting algorithm that uses a data structure called a "heap" to sort elements. A heap is a binary tree-like structure that satisfies the heap property, which means that the value of each parent node is either greater than or equal to (in a max heap) or less than or equal to (in a min heap) the values of its children. Heap Sort works by repeatedly removing the top element (root) of the heap, which is the largest (in a max heap) or smallest (in a min heap) element, and placing it at the end of the sorted array.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Let's say you have a pile of toys of different sizes, and you want to sort them from smallest to largest using Heap Sort. You would start by arranging the toys in a heap based on their sizes, ensuring that the larger toys are towards the top. Then, you would repeatedly remove the largest toy from the heap and place it at the end of the sorted array until all the toys are sorted."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. The time complexity of Heap Sort is O(n log n), where n is the number of elements to be sorted. Heap Sort has a relatively efficient time complexity, making it suitable for large datasets."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. The space complexity of Heap Sort is O(1), meaning it uses a constant amount of additional space. Heap Sort rearranges the elements in place, without requiring significant additional memory."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example of Heap Sort implemented in C++ using the toy sorting scenario:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  \n  // Heapify function to maintain the heap property\n  void heapify(std::vector<int>& arr, int n, int i) {\n      int largest = i;         // Initialize the largest element as the root\n      int left = 2 * i + 1;    // Index of the left child\n      int right = 2 * i + 2;   // Index of the right child\n  \n      // If the left child is larger than the root\n      if (left < n && arr[left] > arr[largest]) {\n          largest = left;\n      }\n  \n      // If the right child is larger than the largest so far\n      if (right < n && arr[right] > arr[largest]) {\n          largest = right;\n      }\n  \n      // If the largest element is not the root, swap them and recursively heapify the affected subtree\n      if (largest != i) {\n          std::swap(arr[i], arr[largest]);\n          heapify(arr, n, largest);\n      }\n  }\n  \n  // Heap Sort function\n  void heapSort(std::vector<int>& arr) {\n      int n = arr.size();\n  \n      // Build a max heap by rearranging the elements\n      for (int i = n / 2 - 1; i >= 0; i--) {\n          heapify(arr, n, i);\n      }\n  \n      // Extract elements from the heap one by one and place them at the end of the sorted array\n      for (int i = n - 1; i > 0; i--) {\n          std::swap(arr[0], arr[i]);    // Move the root (largest element) to the end\n          heapify(arr, i, 0);           // Heapify the reduced heap\n      }\n  }\n  \n  int main() {\n      std::vector<int> toys = {8, 4, 2, 6, 10}; // Each number represents a toy size\n      int size = toys.size();\n  \n      // Print the toy sizes before sorting\n      std::cout << "Toy sizes before sorting: ";\n      for (int size : toys) {\n          std::cout << size << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Heap Sort to sort the toy sizes\n      heapSort(toys);\n  \n      // Print the toy sizes after sorting\n      std::cout << "Toy sizes after sorting: ";\n      for (int size : toys) {\n          std::cout << size << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a vector representing the sizes of five toys: [8, 4, 2, 6, 10]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"After applying Heap Sort, the vector will be sorted in ascending order: [2, 4, 6, 8, 10]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses the heapify function to maintain the heap property and the heapSort function to perform the sorting. It builds a max heap by rearranging the elements, then repeatedly extracts the root (largest element) and places it at the end of the sorted array while maintaining the heap property."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this example and explanation help in understanding Heap Sort in a simplified way!"})]})})})},ts=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Searching Algorithm Introductuion :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Searching algorithms are used to find the presence and/or position of a specific element within a collection of data. There are several common searching algorithms, including linear search, binary search, and hash-based searching. Let's explore each of these algorithms and explain them in a way that a small child can understand without the help of other resources."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Linear Search:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1.Linear search is a simple searching algorithm that works by sequentially checking each element in a collection until the desired element is found or the end of the collection is reached. It starts from the beginning and compares each element with the target element until a match is found."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2.Let's say you have a bag of colorful marbles, and you want to find a green marble. With linear search, you would start by picking up the first marble from the bag and checking if it is green. If it is not, you would move on to the next marble and continue this process until you find a green marble or go through all the marbles in the bag."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Binary Search:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Binary search is a more efficient searching algorithm that works on sorted collections. It repeatedly divides the collection in half and narrows down the search range based on whether the target element is greater than or less than the middle element. By eliminating half of the remaining elements at each step, it quickly finds the target element, if present."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Imagine you have a stack of cards with numbers written on them in ascending order. You want to find a card with the number 7 using binary search. You would start by looking at the middle card. If the number on the card is greater than 7, you would discard the upper half of the stack. If the number is less than 7, you would discard the lower half. By repeating this process, you can narrow down the search range until you find the card with the number 7."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Hash-Based Searching:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Hash-based searching involves using a hash function to map the search key to an index in a data structure called a hash table. The hash table stores key-value pairs, and the hash function ensures efficient retrieval of the desired element by computing its index directly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Think of a phone book, where names are sorted alphabetically, and phone numbers are associated with each name. To find a friend's phone number, you would open the phone book near the expected location based on their name's starting letter. This step is similar to using a hash function. Once you're in the correct section, you can quickly locate your friend's name and find their corresponding phone number without going through every name in the phone book."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity and Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The time and space complexities of searching algorithms vary. Linear search has a time complexity of O(n), where n is the number of elements in the collection. Binary search has a time complexity of O(log n) and requires a sorted collection. "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Hash-based searching can have a time complexity of O(1) on average when using a well-implemented hash function, but it requires additional space for the hash table."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These searching algorithms offer different trade-offs in terms of efficiency and requirements. Depending on the situation and the nature of the data, one algorithm may be more suitable than others."})]})})})},ns=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Linear Search :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Linear search is a simple searching algorithm that works by sequentially checking each element in a collection until the desired element is found or the end of the collection is reached. It is typically used when the data is unsorted or when the collection is small."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's an explanation of linear search using a life-related example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are looking for a book in your bookshelf, but the books are not arranged in any specific order. You would start from the first book and check if it's the one you're looking for. If it's not, you would move to the next book and continue this process until you either find the book or reach the end of the bookshelf."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Let's see an example of linear search implemented in C++:"})}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  \n  // Linear search function\n  int linearSearch(const std::vector<int>& arr, int target) {\n      int size = arr.size();\n  \n      for (int i = 0; i < size; i++) {\n          if (arr[i] == target) {\n              return i;  // Return the index where the target is found\n          }\n      }\n  \n      return -1;  // Return -1 if the target is not found\n  }\n  \n  int main() {\n      std::vector<int> numbers = {5, 3, 8, 2, 9, 1};\n      int target = 8;\n  \n      // Perform linear search\n      int index = linearSearch(numbers, target);\n  \n      // Check the result\n      if (index != -1) {\n          std::cout << "The target element " << target << " is found at index " << index << std::endl;\n      } else {\n          std::cout << "The target element " << target << " is not found." << std::endl;\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a vector of numbers: [5, 3, 8, 2, 9, 1]. We want to find the index of the number 8 using linear search. The linearSearch function sequentially checks each number in the vector until it finds the target or reaches the end. If the target is found, it returns the index. If the target is not found, it returns -1."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, the target element 8 is found at index 2, so the output would be: "The target element 8 is found at index 2".'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Linear search has a time complexity of O(n), where n is the number of elements in the collection. This means that in the worst-case scenario, where the target element is at the end of the collection or not present at all, the algorithm will perform n comparisons."})]})})})},as=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Binary Search :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Binary search is a searching algorithm that efficiently finds the position of a target element in a sorted collection. It works by repeatedly dividing the search range in half until the target element is found or the range is empty. Binary search can only be applied to sorted collections."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Let's explain binary search using a life-related example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Imagine you have a set of index cards with names written on them in alphabetical order. You are looking for a specific name, let\'s say "John". You would start by picking the middle card and comparing it with the target name. If the name on the card is "John", you have found the target. If the name on the card comes before "John" alphabetically, you would discard the first half of the cards. If the name on the card comes after "John", you would discard the second half of the cards. By repeatedly dividing the remaining cards in half and comparing with the target, you can quickly narrow down the search range until you find the target name or determine that it doesn\'t exist.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's an example of binary search implemented in C++:"})}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  \n  // Binary search function\n  int binarySearch(const std::vector<int>& arr, int target) {\n      int left = 0;\n      int right = arr.size() - 1;\n  \n      while (left <= right) {\n          int mid = left + (right - left) / 2;\n  \n          if (arr[mid] == target) {\n              return mid;  // Return the index where the target is found\n          }\n  \n          if (arr[mid] < target) {\n              left = mid + 1;  // Continue searching in the right half\n          } else {\n              right = mid - 1;  // Continue searching in the left half\n          }\n      }\n  \n      return -1;  // Return -1 if the target is not found\n  }\n  \n  int main() {\n      std::vector<int> numbers = {1, 2, 3, 5, 8, 9};\n      int target = 8;\n  \n      // Perform binary search\n      int index = binarySearch(numbers, target);\n  \n      // Check the result\n      if (index != -1) {\n          std::cout << "The target element " << target << " is found at index " << index << std::endl;\n      } else {\n          std::cout << "The target element " << target << " is not found." << std::endl;\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a sorted vector of numbers: [1, 2, 3, 5, 8, 9]. We want to find the index of the number 8 using binary search. The binarySearch function divides the search range in half and compares the middle element with the target. If the target is found, it returns the index. If the target is less than the middle element, it continues searching in the left half. If the target is greater than the middle element, it continues searching in the right half. This process is repeated until the target is found or the range is empty."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, the target element 8 is found at index 4, so the output would be: "The target element 8 is found at index 4".'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Binary search has a time complexity of O(log n), where n is the number of elements in the collection. This means that in each comparison, the search range is divided by half, leading to a more efficient search compared to linear search."})]})})})},ss=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Interpolation Search :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Interpolation search is a searching algorithm that improves upon binary search, especially when the elements in the collection are uniformly distributed. It works by estimating the position of the target element based on the values of the first and last elements in the collection. It is also applicable to sorted collections."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Let's explain interpolation search using a life-related example:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a number line with evenly spaced marks, and you are looking for a specific number, let's say 50. Instead of always dividing the search range in half like in binary search, interpolation search estimates the position of 50 based on the values of the first and last marks on the number line. If the first mark is 0 and the last mark is 100, then 50 would be located at the halfway point. You would start by checking that estimated position. If the value at the estimated position is 50, you have found the target. If the value is greater than 50, you would adjust the estimate closer to the first mark. If the value is less than 50, you would adjust the estimate closer to the last mark. By repeatedly adjusting the estimate based on the comparison with the target, you can quickly narrow down the search range until you find the target or determine that it doesn't exist."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's an example of interpolation search implemented in C++:"})}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n  #include <vector>\n  \n  // Interpolation search function\n  int interpolationSearch(const std::vector<int>& arr, int target) {\n      int left = 0;\n      int right = arr.size() - 1;\n  \n      while (left <= right && target >= arr[left] && target <= arr[right]) {\n          if (left == right) {\n              if (arr[left] == target) {\n                  return left;  // Return the index where the target is found\n              }\n              return -1;  // Return -1 if the target is not found\n          }\n  \n          // Estimate the position using interpolation formula\n          int pos = left + ((target - arr[left]) * (right - left)) / (arr[right] - arr[left]);\n  \n          if (arr[pos] == target) {\n              return pos;  // Return the index where the target is found\n          }\n  \n          if (arr[pos] < target) {\n              left = pos + 1;  // Continue searching in the right portion\n          } else {\n              right = pos - 1;  // Continue searching in the left portion\n          }\n      }\n  \n      return -1;  // Return -1 if the target is not found\n  }\n  \n  int main() {\n      std::vector<int> numbers = {10, 20, 30, 40, 50, 60, 70, 80, 90};\n      int target = 50;\n  \n      // Perform interpolation search\n      int index = interpolationSearch(numbers, target);\n  \n      // Check the result\n      if (index != -1) {\n          std::cout << "The target element " << target << " is found at index " << index << std::endl;\n      } else {\n          std::cout << "The target element " << target << " is not found." << std::endl;\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have a sorted vector of numbers: [10, 20, 30, 40, 50, 60, 70, 80, 90]. We want to find the index of the number 50 using interpolation search. The interpolationSearch function estimates the position of 50 based on the values of the first and last elements in the vector. It adjusts the estimate by using the interpolation formula. If the target is found at the estimated position, it returns the index. If the target is less than the value at the estimated position, it continues searching in the left portion. If the target is greater than the value, it continues searching in the right portion. This process is repeated until the target is found or the range is empty."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this case, the target element 50 is found at index 4, so the output would be: "The target element 50 is found at index 4".'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" Interpolation search has an average time complexity of O(log log n) for uniformly distributed data, where n is the number of elements in the collection. It performs better than binary search when the data is uniformly distributed, but it can degrade to O(n) in worst-case scenarios with unevenly distributed data."})]})})})},is=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Graph Algorithm Introduction :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Graph algorithms are a set of techniques used to solve problems on graph structures. A graph is a collection of nodes, also known as vertices, that are connected by edges. Graphs are used to represent relationships, connections, or networks between different entities. Graph algorithms help analyze and manipulate these structures to find solutions to various problems."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's a brief introduction to some commonly used graph algorithms:"})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. Breadth-First Search (BFS):"}),"BFS explores a graph by visiting all the nodes at the same level before moving to the next level. It is often used to find the shortest path or to explore all reachable nodes from a starting node."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2. Depth-First Search (DFS):"}),"DFS explores a graph by going as deep as possible before backtracking. It is commonly used to detect cycles, explore connected components, or search for a path from a source node to a target node."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3. Dijkstra's Algorithm:"})," Dijkstra's algorithm is used to find the shortest path between a source node and all other nodes in a weighted graph. It works by iteratively selecting the node with the minimum distance and updating the distances of its adjacent nodes."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"4. Kruskal's Algorithm:"}),"Kruskal's algorithm is used to find the minimum spanning tree in a weighted graph. It starts with an empty set of edges and gradually adds the shortest edge that doesn't create a cycle until all nodes are connected."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"5. Prim's Algorithm:"}),"Prim's algorithm is another approach to find the minimum spanning tree. It starts with a single node and gradually grows the tree by selecting the shortest edge that connects a node in the tree to a node outside the tree."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"6. Bellman-Ford Algorithm:"}),"Bellman-Ford algorithm is used to find the shortest path between a source node and all other nodes in a graph, even if the graph contains negative-weight edges. It detects negative cycles and reports if there is no shortest path."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"7. Topological Sorting:"})," Topological sorting is used to order the nodes of a directed acyclic graph (DAG) in such a way that for every directed edge (u, v), node u comes before node v in the ordering. It is often used in task scheduling or dependency resolution."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" These are just a few examples of graph algorithms, and there are many more depending on the specific problem and requirements. Graph algorithms play a fundamental role in various areas such as network analysis, route planning, social network analysis, and more."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"One practical life example of a graph algorithm is finding the shortest path for navigation or route planning."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are planning a road trip and want to find the shortest route from your current location to a destination. You can represent the road network as a graph, where each intersection is a node and the roads connecting them are the edges. The weight of each edge can represent the distance or travel time between intersections."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By applying a graph algorithm like Dijkstra's algorithm, you can efficiently find the shortest path from your starting point to the destination. The algorithm takes into account the distances or travel times of each road segment and navigates through the graph to identify the path with the least total distance or time."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This type of algorithm is widely used in navigation systems, such as GPS devices or map applications on your phone. They help determine the most efficient route by considering factors like distance, traffic conditions, and road restrictions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using a graph algorithm for route planning, you can save time and effort during your road trip, ensuring that you take the most optimal path to reach your destination."})]})})})},rs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Breadth First Search :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Breadth-First Search (BFS) is a graph traversal algorithm that explores a graph by visiting all the nodes at the current level before moving to the next level. It starts at a given source node and systematically explores all its neighbors before proceeding to their neighbors. BFS is often used to find the shortest path between two nodes or to explore all reachable nodes from a starting point."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's a practical life example of BFS:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you are in a maze and want to find the shortest path from your current location to the exit. The maze can be represented as a grid where each cell represents a location, and some cells may be walls blocking your path. You can use BFS to navigate through the maze and find the shortest path to the exit."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Starting from your current location, BFS will explore all the neighboring cells first before moving on to the next level of cells. By exploring the cells level by level, BFS guarantees that the shortest path to the exit will be found once it reaches the exit cell."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's a simplified explanation of how BFS works:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Mark the starting cell as visited and enqueue it into a queue."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. While the queue is not empty:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Dequeue a cell from the queue."}),(0,$e.jsx)("li",{className:"pt-2",children:"Explore all its neighboring cells that are not walls and have not been visited."}),(0,$e.jsx)("li",{className:"pt-2",children:"Mark each visited cell as visited and enqueue it into the queue."}),(0,$e.jsx)("li",{className:"pt-2",children:"If the exit cell is found, the shortest path has been found."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. If the queue becomes empty and the exit cell has not been found, there is no path to the exit."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"BFS can be implemented using a queue data structure to keep track of the nodes to visit. Each cell in the maze can have properties like visited status, coordinates, and references to its neighbouring cells."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The time complexity of BFS is O(V + E), where V represents the number of vertices (nodes) in the graph, and E represents the number of edges (connections) between vertices. The space complexity is O(V) since it requires storage for the visited nodes and the queue."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example of Breadth-First Search (BFS) implemented in C++ using a queue:"}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n  #include <queue>\n  #include <vector>\n  \n  void bfs(const std::vector<std::vector<int>>& graph, int startNode) {\n      std::vector<bool> visited(graph.size(), false);\n      std::queue<int> queue;\n  \n      visited[startNode] = true;\n      queue.push(startNode);\n  \n      while (!queue.empty()) {\n          int currentNode = queue.front();\n          queue.pop();\n  \n          std::cout << currentNode << " ";\n  \n          for (int neighbor : graph[currentNode]) {\n              if (!visited[neighbor]) {\n                  visited[neighbor] = true;\n                  queue.push(neighbor);\n              }\n          }\n      }\n  }\n  \n  int main() {\n      std::vector<std::vector<int>> graph = {\n          {1, 2},\n          {0, 2, 3},\n          {0, 1, 3, 4},\n          {1, 2, 4},\n          {2, 3}\n      };\n  \n      int startNode = 0;\n  \n      bfs(graph, startNode);\n  \n      return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this code, we have a simplified version of the BFS algorithm. We use a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"std::vector"})," to store the graph as an adjacency list, where each element of the vector represents a node, and its values represent its neighbors. The BFS function takes the graph and a starting node as input."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["The BFS algorithm uses a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"std::queue"})," to store the nodes to visit. We initialize a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"visited"})," vector to keep track of visited nodes, where all elements are initially set to ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"false"}),". We mark the starting node as visited, enqueue it, and start the BFS traversal."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["Inside the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"while"})," loop, we dequeue a node from the queue, print its value, and mark it as visited. Then, we iterate over its neighbors and enqueue any unvisited neighbors."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["The code will perform BFS starting from the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"startNode"})," and print the visited nodes in the order they were visited."]})]})})})},os=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Depth First Search :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Depth-first search (DFS) is a graph traversal algorithm that explores vertices or nodes of a graph by following paths as deeply as possible before backtracking. It is called a "depth-first" search because it explores the depth of any given path in the graph before moving on to explore other paths.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"DFS can be used to traverse both directed and undirected graphs. The algorithm starts at a selected node and explores its neighbors recursively, following one path until it reaches a node with no unvisited neighbors. It then backtracks to the previous node and continues exploring any remaining unvisited neighbors until all nodes in the graph have been visited."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's a general outline of the depth-first search algorithm:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Create a stack (or use recursion) to keep track of the nodes to visit."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"2. Initialise an empty set to keep track of visited nodes."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Push the starting node onto the stack or pass it to the recursive function."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"4. While the stack is not empty:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Pop a node from the stack."}),(0,$e.jsx)("li",{className:"pt-2",children:"If the node has not been visited:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Mark it as visited."}),(0,$e.jsx)("li",{className:"pt-2",children:"Process the node (perform any desired operations)."}),(0,$e.jsx)("li",{className:"pt-4",children:"Push its unvisited neighbours onto the stack."})]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"5. Repeat steps 4 until the stack is empty."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"DFS can be implemented using either an iterative approach with a stack or a recursive approach with a function call stack. The recursive approach is often simpler to understand and implement."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"DFS is widely used in various applications, including finding paths, cycle detection, topological sorting, solving puzzles, and more. It is a fundamental algorithm in graph theory and forms the basis for more advanced algorithms like depth-limited search and iterative deepening depth-first search."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's an example implementation of the depth-first search algorithm in C++:"})}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n  #include <vector>\n  #include <stack>\n  #include <unordered_set>\n  \n  using namespace std;\n  \n  void dfs(vector<vector<int>>& graph, int start) {\n      unordered_set<int> visited;     // Set to keep track of visited nodes\n      stack<int> stk;                 // Stack to store nodes to visit\n      stk.push(start);\n  \n      while (!stk.empty()) {\n          int node = stk.top();       // Take the top node from the stack\n          stk.pop();\n  \n          if (visited.find(node) == visited.end()) {\n              visited.insert(node);   // Mark the node as visited\n              processNode(node);      // Process the node (e.g., print it)\n  \n              // Add unvisited neighbors of the current node to the stack\n              for (int neighbor : graph[node]) {\n                  if (visited.find(neighbor) == visited.end()) {\n                      stk.push(neighbor);\n                  }\n              }\n          }\n      }\n  }\n  \n  void processNode(int node) {\n      cout << "Visiting node: " << node << endl;\n  }\n  \n  int main() {\n      // Example usage\n      vector<vector<int>> graph = {\n          {1, 2},         // Node 0 has neighbors 1 and 2\n          {0, 3, 4},      // Node 1 has neighbors 0, 3, and 4\n          {0, 5},         // Node 2 has neighbors 0 and 5\n          {1},            // Node 3 has neighbor 1\n          {1},            // Node 4 has neighbor 1\n          {2}             // Node 5 has neighbor 2\n      };\n  \n      dfs(graph, 0);     // Start DFS from node 0\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Explanation:"})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"dfs"})," function takes two arguments: ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"graph"}),", which is a vector of vectors representing the adjacency list of the graph, and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"start"}),", which is the node from which the depth-first search begins."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["2. We use an unordered set called ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"visited"})," to keep track of the nodes that have been visited."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["3. We create a stack, ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"stk"}),", and push the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"start"})," node onto it."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["4. While the stack is not empty, we retrieve the top node from the stack using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"stk.top()"}),", pop it using ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"stk.pop()"}),", and store it in the variable node."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["5. If ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"node"})," has not been visited, we mark it as visited by inserting it into the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"visited"})," set and process it by calling the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"processNode"})," function."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["6. We iterate over the neighbours of ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"node"})," (retrieved from ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"graph[node]"}),"), and if a neighbour has not been visited, we push it onto the stack."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["7. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"processNode"})," function is responsible for processing each visited node. In this example, it simply prints the node."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["8. In the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"main"})," function, we define an example usage of the DFS algorithm. We create a graph represented by an adjacency list and call ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"dfs"})," to start the depth-first search from node 0."]})]})})})},ls=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Topological searching :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Topological sorting is an algorithm used to find a linear ordering of the vertices in a directed acyclic graph (DAG) such that for every directed edge (u, v), vertex u comes before vertex v in the ordering. In other words, it arranges the vertices in a way that preserves the order of dependencies between them."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Topological sorting has various applications, such as task scheduling, determining the order of compilation in build systems, and resolving dependencies in software packages."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Here's an implementation of the topological sorting algorithm using depth-first search (DFS) in C++:"})}),(0,$e.jsx)(Gt,{children:'#include <iostream>\n  #include <vector>\n  #include <stack>\n  #include <unordered_set>\n  \n  using namespace std;\n  \n  void dfs(vector<vector<int>>& graph, int node, vector<bool>& visited, stack<int>& stk) {\n      visited[node] = true;\n  \n      for (int neighbor : graph[node]) {\n          if (!visited[neighbor]) {\n              dfs(graph, neighbor, visited, stk);\n          }\n      }\n  \n      stk.push(node);\n  }\n  \n  vector<int> topologicalSort(vector<vector<int>>& graph, int numNodes) {\n      vector<int> sortedOrder;\n      vector<bool> visited(numNodes, false);\n      stack<int> stk;\n  \n      for (int i = 0; i < numNodes; i++) {\n          if (!visited[i]) {\n              dfs(graph, i, visited, stk);\n          }\n      }\n  \n      while (!stk.empty()) {\n          sortedOrder.push_back(stk.top());\n          stk.pop();\n      }\n  \n      return sortedOrder;\n  }\n  \n  int main() {\n      // Example usage\n      int numNodes = 6;\n      vector<vector<int>> graph = {\n          {1, 2},         // Node 0 has neighbors 1 and 2\n          {4},            // Node 1 has neighbor 4\n          {4, 5},         // Node 2 has neighbors 4 and 5\n          {3},            // Node 3 has neighbor 3\n          {},             // Node 4 has no neighbors\n          {3}             // Node 5 has neighbor 3\n      };\n  \n      vector<int> sortedOrder = topologicalSort(graph, numNodes);\n  \n      // Print the sorted order\n      cout << "Topological order: ";\n      for (int node : sortedOrder) {\n          cout << node << " ";\n      }\n      cout << endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Explanation:"})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["1. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"dfs"})," function performs a depth-first search starting from a given ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"node"})," in the graph. It recursively explores the neighbors of the current node and marks them as visited. The visited nodes are then pushed onto the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"stk"})," stack."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["2.The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"topologicalSort"})," function initializes a vector ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"sortedOrder"})," to store the sorted order of the nodes. It also creates a ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"visited"})," vector to keep track of visited nodes and a stack stk to store the nodes in the topological order."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["3. The function iterates over all nodes in the graph and calls ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"dfs"})," for each unvisited node, passing the graph, the current node, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"visited"})," vector, and the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"stk"})," stack."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["4. After the depth-first search is complete, the function extracts the nodes from the stack ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"stk"})," and appends them to the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"sortedOrder"})," vector, resulting in a reversed topological ordering."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["5. Finally, the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"sortedOrder"})," vector is returned as the topological order of the graph."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["6. In the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"main"})," function, an example usage is provided. The graph is represented by an adjacency list, and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"numNodes"})," is the total number of nodes in the graph. The ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"topologicalSort"})," function is called, and the resulting sorted order is printed."]})]})})})},cs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Optimal Substructure"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Optimal substructure is a property that certain problems exhibit, where an optimal solution to the overall problem can be constructed from optimal solutions to its subproblems. In other words, the problem can be broken down into smaller subproblems, and the optimal solution can be derived by combining the optimal solutions of those subproblems."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To understand optimal substructure better, let's explore it with a couple of easy problems:"}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"1.Fibonacci Numbers:"}),(0,$e.jsx)("p",{className:"text-justify pt-2",children:"The Fibonacci sequence is defined as follows: F(0) = 0, F(1) = 1, and F(n) = F(n-1) + F(n-2) for n > 1. The task is to find the nth Fibonacci number."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The nth Fibonacci number can be computed by summing the (n-1)th and (n-2)th Fibonacci numbers. So, the problem of finding the nth Fibonacci number can be divided into subproblems of finding the (n-1)th and (n-2)th Fibonacci numbers. The optimal solution to the overall problem can be obtained by combining the optimal solutions to these subproblems"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example code in Python that calculates the nth Fibonacci number using optimal substructure:"}),(0,$e.jsx)(Gt,{children:'\n  def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)\n\n  # Testing the Fibonacci function\n  n = 6\n  result = fibonacci(n)\n  print(f"The {n}th Fibonacci number is: {result}")\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  The 6th Fibonacci number is: 8\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"2. Factorial:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The factorial of a non-negative integer n, denoted as n!, is the product of all positive integers less than or equal to n. The factorial problem also exhibits optimal substructure, as the factorial of n can be computed by multiplying n with the factorial of (n-1)."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example code in Python that calculates the factorial of a number using optimal substructure:"}),(0,$e.jsx)(Gt,{children:'\n  def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n  # Testing the factorial function\n  n = 5\n  result = factorial(n)\n  print(f"The factorial of {n} is: {result}")\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  The factorial of 5 is: 120\n  "})]})})})},ds=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Memoization and Tabulation"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Memoization and tabulation are two common techniques used in dynamic programming to optimise the computation of solutions for problems that exhibit overlapping subproblems. Let's explore these techniques with an example problem, and I'll provide code examples in C++ for both approaches."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"font-bold",children:"Problem : Fibonacci Numbers"}),(0,$e.jsx)("p",{className:"p-4 pt-2",children:"We will use the Fibonacci sequence as an example to demonstrate memoization and tabulation."}),(0,$e.jsx)("p",{className:"p-4 pt-2 font-bold",children:"1. Memoization"}),(0,$e.jsx)("p",{className:"p-8 pt-0.5",children:"Memoization involves storing the results of expensive function calls and reusing them when the same inputs occur again. In the case of Fibonacci numbers, we can store the previously calculated Fibonacci values in an array to avoid redundant computations."}),(0,$e.jsx)("p",{className:"",children:"Here's an example code in C++ that calculates the nth Fibonacci number using memoization:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <vector>\n\nstd::vector<int> memo;\n\nint fibonacci(int n) {\n    if (n <= 1) {\n        return n;\n    }\n    if (memo[n] != -1) {\n        return memo[n];\n    }\n    memo[n] = fibonacci(n - 1) + fibonacci(n - 2);\n    return memo[n];\n}\n\nint main() {\n    int n = 6;\n    memo.resize(n + 1, -1);\n    int result = fibonacci(n);\n    std::cout << "The " << n << "th Fibonacci number is: " << result << std::endl;\n    return 0;\n}  \n  '}),(0,$e.jsx)("p",{className:"pt-2",children:"Output"}),(0,$e.jsx)(Gt,{children:"\n  The 6th Fibonacci number is: 8\n  "}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"pt-4",children:"In the code, we use the memo vector to store the computed Fibonacci numbers. Before computing the nth Fibonacci number, we check if it has already been computed and stored in memo. If so, we directly return the value. Otherwise, we calculate it recursively, store it in memo for future use, and return the computed value."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4 p-4",children:[(0,$e.jsx)("strong",{children:"Time Complexity:"})," The time complexity of memoization depends on the number of unique subproblems that need to be solved. If there are n unique subproblems, and each subproblem takes O(1) time to solve (assuming constant time for memoization table lookup), then the overall time complexity is O(n). However, if there are overlapping subproblems and each subproblem is solved only once, the time complexity can be significantly reduced to O(m), where m is the number of distinct subproblems."]}),(0,$e.jsxs)("li",{className:"p-4 pt-0.5",children:[(0,$e.jsx)("strong",{children:"Space Complexity:"}),"The space complexity of memoization is determined by the size of the memoization table or cache. If there are n subproblems to be memoized, the space complexity is typically O(n) to store the results of these subproblems. However, in some cases, the space complexity may be reduced to O(m), where m is the number of distinct subproblems, if the memoization table only stores the necessary subproblem results."]})]}),(0,$e.jsx)("p",{className:"p-4 pt-2 font-bold",children:"2. Tabulation"}),(0,$e.jsx)("p",{className:"p-8 pt-0.5",children:"Tabulation involves creating a table (usually an array) and filling it iteratively by solving the subproblems in a bottom-up manner. Each entry in the table represents the solution to a subproblem."}),(0,$e.jsx)("p",{children:"Here's an example code in C++ that calculates the nth Fibonacci number using tabulation:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <vector>\n\nint fibonacci(int n) {\n    std::vector<int> table(n + 1, 0);\n    table[0] = 0;\n    table[1] = 1;\n    for (int i = 2; i <= n; ++i) {\n        table[i] = table[i - 1] + table[i - 2];\n    }\n    return table[n];\n}\n\nint main() {\n    int n = 6;\n    int result = fibonacci(n);\n    std::cout << "The " << n << "th Fibonacci number is: " << result << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"pt-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  The 6th Fibonacci number is: 8\n  "}),(0,$e.jsx)("p",{className:"pt-4",children:"In this code, we create a table and fill it iteratively from the base cases (table[0] = 0 and table[1] = 1) up to the nth Fibonacci number. Each entry in the table represents the Fibonacci number for that index. By iterating and filling the table in a bottom-up manner, we avoid redundant computations and obtain the result efficiently."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4 p-4",children:[(0,$e.jsx)("strong",{children:"Time Complexity:"})," The time complexity of tabulation is determined by the number of subproblems that need to be solved and the time required to solve each subproblem. If there are n subproblems and each subproblem takes O(1) time, the overall time complexity is O(n). The tabulation approach usually involves iterating over the subproblems in a bottom-up manner, so the time complexity is typically linear with respect to the number of subproblems."]}),(0,$e.jsxs)("li",{className:"p-4 pt-0.5",children:[(0,$e.jsx)("strong",{children:"Space Complexity:"}),"The space complexity of tabulation is determined by the size of the table or array used to store the results of subproblems. If there are n subproblems to be solved, the space complexity is typically O(n) to store the results. Each entry in the table corresponds to a subproblem, so the space complexity is directly proportional to the number of subproblems."]})]}),(0,$e.jsx)("p",{className:"pt-4",children:"Both memoization and tabulation offer ways to optimise dynamic programming algorithms by avoiding redundant computations. Memoization is typically used in a top-down recursive approach, while tabulation is used in a bottom-up iterative approach. Both techniques lead to significant performance improvements for problems with overlapping subproblems."})]})})})},us=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bottom-Up Approach (Iterative Approach)"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The bottom-up approach, also known as the iterative approach, is a problem-solving technique where the solution is built iteratively from the simplest case to the desired solution. This approach avoids recursion and uses loops to calculate and store the solutions of subproblems."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"pt-4",children:"Here are a few examples of the bottom-up approach with code in C++, along with their time complexity and space complexity:"}),(0,$e.jsxs)("p",{className:"p-6 pt-5",children:[(0,$e.jsx)("strong",{children:"1.Fibonacci Series: "})," In this example, we calculate the Fibonacci series iteratively using the bottom-up approach."]}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\nusing namespace std;\n\nint fibonacci(int n) {\n    if (n <= 1)\n        return n;\n\n    int prev = 0;\n    int curr = 1;\n\n    for (int i = 2; i <= n; i++) {\n        int temp = curr;\n        curr = prev + curr;\n        prev = temp;\n    }\n\n    return curr;\n}\n\nint main() {\n    int n = 10;\n    int fib = fibonacci(n);\n    cout << "Fibonacci(" << n << ") = " << fib << endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"pt-1",children:"Time Complexity: O(n) Space Complexity: O(1)"}),(0,$e.jsxs)("p",{className:"pt-5 p-6",children:[(0,$e.jsx)("strong",{children:"2. Factorial:"})," In this example, we calculate the factorial of a number iteratively using the bottom-up approach."]}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\nusing namespace std;\n\nint factorial(int n) {\n    if (n == 0 || n == 1)\n        return 1;\n\n    int result = 1;\n    for (int i = 2; i <= n; i++)\n        result *= i;\n\n    return result;\n}\n\nint main() {\n    int n = 5;\n    int fact = factorial(n);\n    cout << "Factorial(" << n << ") = " << fact << endl;\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"pt-4",children:"Time Complexity: O(n) Space Complexity: O(1)"})]})})})},ps=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Longest Common Subsequence (LCS)"}),(0,$e.jsx)("p",{className:"pt-8",children:"The Longest Common Subsequence (LCS) problem is a classic computer science problem that involves finding the longest subsequence that is common to two or more sequences. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements."}),(0,$e.jsx)("p",{className:"pt-4",children:"Given two sequences, let's call them sequence X and sequence Y, the LCS problem asks for the length of the longest common subsequence of X and Y."}),(0,$e.jsx)("p",{className:"pt-4",children:'For example, consider the sequences X = "AGGTAB" and Y = "GXTXAYB". The LCS of X and Y is "GTAB" with a length of 4.'}),(0,$e.jsx)("p",{className:"pt-4",children:"To solve the LCS problem, we can use dynamic programming. The idea behind dynamic programming is to break down a complex problem into smaller overlapping subproblems and solve them individually, storing the results of the subproblems in a table for future use. The bottom-up approach of dynamic programming is commonly used for solving the LCS problem."}),(0,$e.jsx)("p",{className:"pt-4",children:"Here's a step-by-step explanation of how we can solve the LCS problem using dynamic programming:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Create a table or a 2D array with dimensions (m+1) x (n+1), where m and n are the lengths of sequences X and Y, respectively. Initialize all the cells of the table to 0"}),(0,$e.jsx)("li",{className:"pt-4",children:"Traverse the table row by row and column by column. Let's consider the current cell at position (i, j) in the table, where i represents the index in sequence X and j represents the index in sequence Y."}),(0,$e.jsxs)("li",{className:"pt-4",children:["If the characters at indices (i-1) and (j-1) in sequences X and Y are the same, it means we have found a new common element. In this case, we increment the value of the current cell by 1 and move diagonally to the cell at position (i-1, j-1).",(0,$e.jsx)("p",{children:"If the characters at indices (i-1) and (j-1) are different, we take the maximum value between the cell above (i.e., at position (i-1, j)) and the cell to the left (i.e., at position (i, j-1)). We store this maximum value in the current cell."})]}),(0,$e.jsx)("li",{className:"pt-4",children:"Repeat step 3 for all cells in the table."}),(0,$e.jsx)("li",{className:"pt-4",children:"Finally, the value in the bottom-right cell of the table represents the length of the LCS of sequences X and Y."}),(0,$e.jsx)("li",{className:"pt-4",children:"To reconstruct the LCS itself, start from the bottom-right cell and backtrack through the table. Whenever we encounter a diagonal move, it means the corresponding characters at that position are part of the LCS. Append these characters to a result string or array."})]}),(0,$e.jsx)("p",{className:"pt-4",children:"Here's an example implementation in C++ that solves the LCS problem"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <string>\nusing namespace std;\n\nint lcs(string X, string Y) {\n    int m = X.length();\n    int n = Y.length();\n    int dp[m + 1][n + 1];\n\n    // Step 1: Initialize table\n    for (int i = 0; i <= m; i++)\n        dp[i][0] = 0;\n    for (int j = 0; j <= n; j++)\n        dp[0][j] = 0;\n\n    // Step 2 and 3: Fill table\n    for (int i = 1; i <= m; i++) {\n        for (int j = 1; j <= n; j++) {\n            if (X[i - 1] == Y[j - 1])\n                dp[i][j] = dp[i - 1][j - 1] + 1;\n            else\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n        }\n    }\n\n    // Step 5: Length of LCS\n    return dp[m][n];\n}\n\nstring getLCS(string X, string Y) {\n    int m = X.length();\n    int n = Y.length();\n    int dp[m + 1][n + 1];\n\n    // Same initialization and table filling as above...\n\n    // Step 6: Reconstruct LCS\n    string lcs;\n    int i = m, j = n;\n    while (i > 0 && j > 0) {\n        if (X[i - 1] == Y[j - 1]) {\n            lcs = X[i - 1] + lcs;\n            i--;\n            j--;\n        } else if (dp[i - 1][j] > dp[i][j - 1]) {\n            i--;\n        } else {\n            j--;\n        }\n    }\n\n    return lcs;\n}\n\nint main() {\n    string X = "AGGTAB";\n    string Y = "GXTXAYB";\n    int length = lcs(X, Y);\n    string sequence = getLCS(X, Y);\n\n    cout << "Length of LCS: " << length << endl;\n    cout << "LCS: " << sequence << endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"pt-4",children:'In this example, we use the strings "AGGTAB" and "GXTXAYB" as inputs. The output will be:'}),(0,$e.jsx)(Gt,{children:"\n  Length of LCS: 4\n  LCS: GTAB\n  "}),(0,$e.jsx)("p",{className:"pt-4",children:"The time complexity of the above implementation is O(mn), where m and n are the lengths of sequences X and Y, respectively. The space complexity is also O(mn) because we use a 2D array to store the dynamic programming table."}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Advantage:"}),(0,$e.jsx)("p",{className:"pt-4",children:"The Longest Common Subsequence (LCS) has several advantages and use cases in various fields. Here are some key advantages of using LCS:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Text Comparison and Difference Analysis:"})," LCS can be used to compare two texts or documents to identify their similarities and differences. It helps in performing efficient textual analysis, identifying changes between different versions of documents, and highlighting the modified or added content."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Version Control Systems:"})," LCS is widely used in version control systems like Git, SVN, and Mercurial to track changes between different versions of files. It helps in determining the differences between file versions, merging changes from different branches, and resolving conflicts during code collaboration."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"DNA Sequence Analysis:"})," In bioinformatics, LCS is employed to analyze DNA sequences. It helps in identifying common genetic patterns and similarities between different organisms. LCS algorithms are crucial in DNA sequencing, genome comparison, and evolutionary studies."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Plagiarism Detection:"})," LCS algorithms play a vital role in plagiarism detection systems. By comparing a submitted document with a large database of existing documents, the system can identify similarities and potential instances of plagiarism."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Data Compression:"})," LCS is utilized in data compression algorithms like Lempel-Ziv-Welch (LZW) to find repeating patterns and create a dictionary for efficient compression. By replacing repeated sequences with shorter codes, the compression ratio can be improved."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Data Mining and Pattern Recognition:"})," LCS is a fundamental tool for data mining and pattern recognition tasks. It helps in discovering common patterns and similarities in large datasets, which can be used for clustering, classification, and anomaly detection."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Speech and Audio Processing:"})," In speech recognition and audio processing, LCS algorithms can be employed to compare and match phonemes or acoustic features. This aids in speech-to-text conversion, speaker identification, and audio content analysis."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("strong",{children:"Image Comparison:"})," LCS techniques can be applied to compare and analyze images by treating them as sequences of pixels. It helps in image recognition, object detection, and content-based image retrieval."]})]})]})})})},ms=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Knapsack Problems"}),(0,$e.jsx)("p",{className:"pt-8",children:"The Knapsack Problem is a well-known optimization problem in computer science and mathematics. It involves selecting a subset of items from a given set, each with its own value and weight, in such a way that the total weight of the selected items is below or equal to a given capacity while maximizing the total value of the selected items."}),(0,$e.jsx)("p",{className:"pt-4",children:"The problem derives its name from the idea of a knapsack or backpack, which has a limited capacity to hold items. The goal is to determine the most valuable combination of items that can be packed into the knapsack without exceeding its weight limit."}),(0,$e.jsx)("p",{className:"pt-4",children:"Formally, the Knapsack Problem can be defined as follows:"}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Given:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"A set of n items, each item represented by its value (v_i) and weight (w_i)."}),(0,$e.jsx)("li",{className:"pt-2",children:"A knapsack with a maximum weight capacity W."})]}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Objective:"}),(0,$e.jsx)("ul",{children:(0,$e.jsx)("li",{className:"pt-2",children:"Select a subset of items to maximize the total value (V) while ensuring that the total weight (W') of the selected items does not exceed the capacity W."})}),(0,$e.jsx)("p",{className:"pt-4",children:"The problem can be stated in two variations:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"0/1 Knapsack Problem:"}),"In this variation, each item can either be included in the knapsack (0/1 decision) or excluded from it. We cannot include fractions or partial quantities of items."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Fractional Knapsack Problem:"}),"In this variation, items can be included partially, allowing fractions or fractions of items to be packed into the knapsack. The objective is still to maximize the total value."]})]}),(0,$e.jsx)("p",{className:"pt-4",children:"To solve the Knapsack Problem, several algorithms and approaches can be used. Here are two commonly used techniques:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Dynamic Programming:"}),"Dynamic programming is a popular technique to solve the Knapsack Problem. It uses a bottom-up approach to build a table or matrix, often referred to as a dynamic programming table.The table has rows representing the items and columns representing the weight capacity. Each cell in the table stores the maximum value that can be achieved by considering a subset of the items up to a certain weight capacity.The dynamic programming algorithm fills the table row by row, considering all possible combinations of items and their weights. By iteratively calculating the maximum value for each cell based on the previous row's values, it eventually computes the maximum value achievable for the given weight capacity.The time complexity of the dynamic programming approach is O(nW), where n is the number of items and W is the weight capacity."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Greedy Algorithm (Fractional Knapsack Problem):"}),"In the fractional knapsack variation, a greedy algorithm can be used to solve the problem optimally. The algorithm follows a simple strategy: sort the items in decreasing order of their value-to-weight ratios and greedily select items until the knapsack capacity is exhausted.By selecting items with higher value-to-weight ratios first, the algorithm ensures that the overall value is maximised. If an item cannot fit entirely into the knapsack, fractional quantities are selected to utilise the remaining capacity.The greedy algorithm has a time complexity of O(n log n) due to the sorting step."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Both approaches have their advantages and limitations. The dynamic programming approach guarantees an optimal solution but requires more computational resources for large problem sizes. On the other hand, the greedy algorithm provides an optimal solution for the fractional knapsack problem but may not always yield the optimal solution for the 0/1 knapsack problem."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Knapsack Problem has numerous real-world applications, such as resource allocation, project selection, portfolio optimization, and resource-constrained scheduling. It is a fundamental problem in combinatorial optimization and has been extensively studied and analysed in various contexts."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an implementation of the 0/1 Knapsack Problem using dynamic programming in C++:"}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint knapsack(int W, vector<int>& wt, vector<int>& val, int n) {\n    vector<vector<int>> dp(n + 1, vector<int>(W + 1, 0));\n\n    for (int i = 0; i <= n; i++) {\n        for (int w = 0; w <= W; w++) {\n            if (i == 0 || w == 0)\n                dp[i][w] = 0;\n            else if (wt[i - 1] <= w)\n                dp[i][w] = max(val[i - 1] + dp[i - 1][w - wt[i - 1]], dp[i - 1][w]);\n            else\n                dp[i][w] = dp[i - 1][w];\n        }\n    }\n\n    return dp[n][W];\n}\n\nint main() {\n    vector<int> val = {60, 100, 120};\n    vector<int> wt = {10, 20, 30};\n    int W = 50;\n    int n = val.size();\n    int maxVal = knapsack(W, wt, val, n);\n    cout << "Maximum value: " << maxVal << endl;\n\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we have an input of three items with their respective values and weights stored in the ",(0,$e.jsx)("span",{className:"text-green-500",children:"val"})," and ",(0,$e.jsx)("span",{className:"text-green-500",children:"wt"})," vectors. The ",(0,$e.jsx)("span",{className:"text-green-500",children:"knapsack"})," capacity W is set to 50. The knapsack function uses dynamic programming to calculate and return the maximum value that can be achieved by selecting items for the given weight capacity. The main function calls ",(0,$e.jsx)("span",{className:"text-green-500",children:"knapsack"})," and prints the result."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Please note that this implementation assumes the inputs are valid, i.e., the sizes of the ",(0,$e.jsx)("span",{className:"text-green-500",children:"val"})," and ",(0,$e.jsx)("span",{className:"text-green-500",children:"wt"})," vectors are the same, and ",(0,$e.jsx)("span",{className:"text-green-500",children:"n"})," represents the number of items. Additionally, the time complexity of this implementation is O(nW), where ",(0,$e.jsx)("span",{className:"text-green-500",children:"n"})," is the number of items and ",(0,$e.jsx)("span",{className:"text-green-500",children:"w"})," is the weight capacity."]})]})})})},hs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Coin Change Problems"}),(0,$e.jsx)("p",{className:"pt-8",children:"The Coin Change Problem is another well-known problem in computer science and mathematics. It involves finding the minimum number of coins required to make a given amount of change, using a set of available coin denominations."}),(0,$e.jsx)("p",{className:"pt-4",children:"Formally, the Coin Change Problem can be defined as follows:"}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Given:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"A set of m coin denominations, represented by an array or vector of positive integers, [c1, c2, ..., cm]."}),(0,$e.jsx)("li",{className:"pt-2",children:"A target amount of change, represented by a positive integer, N."})]}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Objective:"}),(0,$e.jsx)("ul",{children:(0,$e.jsx)("li",{className:"pt-2",children:"Determine the minimum number of coins needed to make the amount N using the available denominations."})}),(0,$e.jsx)("p",{className:"pt-4",children:"The goal is to optimise the number of coins used while achieving the target amount of change. In some variations of the problem, it is also required to determine the specific combination of coins that yields the minimum number."}),(0,$e.jsx)("p",{className:"pt-4",children:"To solve the Coin Change Problem, several algorithms and approaches can be used. Here, we'll discuss two commonly used techniques:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Dynamic Programming:"}),"Dynamic programming is a widely used technique to solve the Coin Change Problem optimally. It uses a bottom-up approach to build a table or matrix, often referred to as a dynamic programming table.The table has rows representing the coin denominations and columns representing the target amounts from 0 to N. Each cell in the table stores the minimum number of coins required to make the corresponding amount using the available denominations.The dynamic programming algorithm fills the table row by row, considering all possible coin denominations and target amounts. By iteratively calculating the minimum number of coins for each cell based on the previous denominations' values, it eventually computes the minimum number of coins needed for the target amount."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Greedy Algorithm:"}),'In some cases, a greedy algorithm can be used to approximate the solution to the Coin Change Problem. The algorithm follows a simple strategy: iteratively select the largest denomination that is less than or equal to the remaining change until the target amount is achieved.While the greedy algorithm may not always produce the optimal solution, it can provide a feasible solution in certain scenarios. However, it may fail to find the optimal solution when the available coin denominations do not have the "greedy choice property."The time complexity of the greedy algorithm depends on the specific implementation and the sorting step (if needed) and can range from O(m log m) to O(m).']})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Coin Change Problem has various real-world applications, such as making change in currencies, vending machines, cashier systems, and optimization problems involving money transactions."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's consider an example implementation of the Coin Change Problem using dynamic programming in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  #include <climits>\n  using namespace std;\n  \n  int coinChange(vector<int>& coins, int amount) {\n      vector<int> dp(amount + 1, INT_MAX);\n      dp[0] = 0;\n  \n      for (int i = 1; i <= amount; i++) {\n          for (int j = 0; j < coins.size(); j++) {\n              if (coins[j] <= i && dp[i - coins[j]] != INT_MAX)\n                  dp[i] = min(dp[i], 1 + dp[i - coins[j]]);\n          }\n      }\n  \n      return (dp[amount] == INT_MAX) ? -1 : dp[amount];\n  }\n  \n  int main() {\n      vector<int> coins = {1, 2, 5};\n      int amount = 11;\n  \n      int minCoins = coinChange(coins, amount);\n      cout << "Minimum number of coins required: " << minCoins << endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we have an input of coin denominations stored in the ",(0,$e.jsx)("span",{className:"text-green-500",children:"coins"})," vector, and the target amount is set to 11. The ",(0,$e.jsx)("span",{className:"text-green-500",children:"coinChange"})," function uses dynamic programming to calculate and return the minimum number of coins required to make the target amount. The main function calls ",(0,$e.jsx)("span",{className:"text-green-500",children:"coinChange"})," and prints the result."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Please note that this implementation assumes the inputs are valid, i.e., the ",(0,$e.jsx)("span",{className:"text-green-500",children:"coins"})," vector is non-empty, and the target amount is positive. Additionally, if it is not possible to make the target amount using the available coins, the function returns -1. The time complexity of this implementation is O(mN), where ",(0,$e.jsx)("span",{className:"text-green-500",children:"m"})," is the number of coin denominations, and ",(0,$e.jsx)("span",{className:"text-green-500",children:"N"})," is the target amount."]})]})})})},fs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Edit Distance"}),(0,$e.jsx)("p",{className:"pt-8",children:"The Edit Distance, also known as the Levenshtein Distance, is a measure of the similarity between two strings. It quantifies the minimum number of operations required to transform one string into another using three fundamental operations: insertion, deletion, and substitution."}),(0,$e.jsx)("p",{className:"pt-4",children:"Formally, the Edit Distance between two strings, let's call them string A and string B, is defined as follows:"}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Given:"}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-2",children:"Two strings A and B, with lengths m and n, respectively."})}),(0,$e.jsx)("p",{className:"pt-4 font-bold",children:"Objective:"}),(0,$e.jsx)("ul",{children:(0,$e.jsx)("li",{className:"pt-2",children:"Determine the minimum number of operations (insertions, deletions, and substitutions) needed to transform string A into string B."})}),(0,$e.jsx)("p",{className:"pt-4",children:"The three basic operations allowed in edit distance are:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Insertion :"}),"Inserting a character into string A."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Deletion :"}),"Removing a character from string A."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Substitution :"}),"Replacing a character in string A with a different character."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The goal is to find the minimum number of these operations required to make the two strings equal. The operations can be applied to any position in the strings, and they can be performed multiple times."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To solve the Edit Distance problem, dynamic programming is often used. The dynamic programming approach employs a bottom-up strategy to construct a matrix or table, commonly known as a dynamic programming table."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The dynamic programming table has (m+1) rows and (n+1) columns, where m and n are the lengths of strings A and B, respectively. Each cell in the table, denoted as dp[i][j], represents the minimum number of operations needed to transform the substring A[0...i-1] into the substring B[0...j-1]."}),(0,$e.jsx)("p",{className:"pt-4",children:"The dynamic programming algorithm populates the table by considering different cases and updating the cells accordingly:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"If either string A or string B is empty, the minimum number of operations would be the length of the non-empty string. Thus, dp[i][0] = i and dp[0][j] = j."}),(0,$e.jsx)("li",{className:"pt-2",children:"If the characters at positions (i-1) and (j-1) are equal, no operation is required. The current cell dp[i][j] would have the same value as the previous cell, i.e., dp[i][j] = dp[i-1][j-1]."}),(0,$e.jsx)("li",{className:"pt-2",children:"If the characters at positions (i-1) and (j-1) are different, three possible operations can be applied: insertion, deletion, or substitution. The current cell dp[i][j] would be updated to the minimum of the following values:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"dp[i-1][j] + 1: Number of operations needed to transform substring A[0...i-2] into substring B[0...j-1] (deletion)."}),(0,$e.jsx)("li",{className:"pt-2",children:"dp[i][j-1] + 1: Number of operations needed to transform substring A[0...i-1] into substring B[0...j-2] (insertion)."}),(0,$e.jsx)("li",{className:"pt-2",children:"dp[i-1][j-1] + 1: Number of operations needed to transform substring A[0...i-2] into substring B[0...j-2] (substitution)."})]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By filling the dynamic programming table using the above rules, the bottom-right cell dp[m][n] will contain the minimum number of operations required to transform string A into string B."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Edit Distance algorithm has various applications, including spell checking, DNA sequence alignment, text similarity detection, and data cleaning."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example implementation of the Edit Distance algorithm using dynamic programming in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  using namespace std;\n  \n  int editDistance(string A, string B) {\n      int m = A.length();\n      int n = B.length();\n      vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));\n  \n      for (int i = 0; i <= m; i++)\n          dp[i][0] = i;\n  \n      for (int j = 0; j <= n; j++)\n          dp[0][j] = j;\n  \n      for (int i = 1; i <= m; i++) {\n          for (int j = 1; j <= n; j++) {\n              if (A[i - 1] == B[j - 1])\n                  dp[i][j] = dp[i - 1][j - 1];\n              else\n                  dp[i][j] = 1 + min(dp[i - 1][j - 1], min(dp[i][j - 1], dp[i - 1][j]));\n          }\n      }\n  \n      return dp[m][n];\n  }\n  \n  int main() {\n      string A = "kitten";\n      string B = "sitting";\n  \n      int minOperations = editDistance(A, B);\n      cout << "Minimum number of operations required: " << minOperations << endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:['In this example, we have two input strings, "kitten" and "sitting." The ',(0,$e.jsx)("span",{className:"text-green-500",children:"editDistance"})," function calculates and returns the minimum number of operations required to transform string A into string B using dynamic programming. The main function calls ",(0,$e.jsx)("span",{className:"text-green-500",children:"editDistance"})," and prints the result."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Please note that this implementation assumes valid input strings. The time complexity of this implementation is O(mn), where m and n are the lengths of the input strings A and B, respectively."})]})})})},gs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Greedy Choice property"}),(0,$e.jsx)("p",{className:"text-justify pt-8",children:"The Greedy Choice Property is a concept used in algorithm design to make locally optimal choices in the hope of finding a globally optimal solution. It is a fundamental principle in greedy algorithms, which aim to solve optimization problems by iteratively making the best choice at each step."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Greedy Choice Property states that a globally optimal solution can be reached by selecting a locally optimal choice at each step without reconsidering the previous choices made. In other words, a greedy algorithm makes the choice that appears to be the best at the current moment, hoping that it will lead to an optimal solution."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To apply the Greedy Choice Property, the following conditions must hold:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"text-justify pt-4",children:[(0,$e.jsx)("strong",{children:"Optimal Substructure: "}),"A problem exhibits optimal substructure if an optimal solution to the problem contains optimal solutions to its subproblems. In other words, a problem can be divided into smaller subproblems, and the optimal solution to the problem can be constructed from the optimal solutions of its subproblems."]}),(0,$e.jsxs)("li",{className:"text-justify pt-4",children:[(0,$e.jsx)("strong",{children:"Greedy Choice: "})," A greedy algorithm makes the choice that appears to be the best at each step, without considering the consequences or possibilities of future steps."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By using the Greedy Choice Property, a greedy algorithm constructs a solution step by step, iteratively making locally optimal choices. At each step, the algorithm selects the best available option based on some predefined criteria or heuristics, without considering the impact on future steps or the overall problem structure."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"It's important to note that while greedy algorithms provide efficient and straightforward solutions for certain problems, they are not always guaranteed to produce the globally optimal solution. The Greedy Choice Property does not hold for all problems, and careful consideration is required to ensure the correctness and optimality of the greedy approach."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"When designing a greedy algorithm, it is essential to analyze the problem, identify the criteria for making the greedy choice, and prove that the greedy choice leads to an optimal solution. Mathematical proofs and problem-specific insights are often used to establish the correctness and optimality of a greedy algorithm."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Some well-known problems that can be solved using greedy algorithms include:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"text-justify pt-4",children:[(0,$e.jsx)("strong",{children:"Fractional Knapsack Problem: "}),"Select items from a set with fractional quantities to maximize the total value while respecting a weight constraint."]}),(0,$e.jsxs)("li",{className:"text-justify pt-4",children:[(0,$e.jsx)("strong",{children:"Activity Selection Problem: "}),"Select a maximum-sized set of mutually compatible activities given their start and finish times."]}),(0,$e.jsxs)("li",{className:"text-justify pt-4",children:[(0,$e.jsx)("strong",{children:"Huffman Coding: "}),"Construct an optimal prefix-free binary code given the frequencies of different characters."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In summary, the Greedy Choice Property is a powerful concept used in algorithm design to make locally optimal choices in the hope of reaching a globally optimal solution. It allows for efficient and straightforward solutions to some optimization problems, but careful analysis and proof are necessary to ensure correctness and optimality."})]})})})},xs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Activity Selection Problem"}),(0,$e.jsx)("p",{className:"text-justify pt-8",children:"The Activity Selection Problem is a classic optimization problem in computer science that involves selecting a maximum-sized set of mutually compatible activities from a given set of activities. Each activity has a start time and an end time, and the goal is to find the largest possible set of non-overlapping activities."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Formally, given a set of n activities, each represented by a pair (start_time, end_time), where start_time denotes the start time of the activity and end_time denotes the end time, the objective is to select the maximum number of activities that do not overlap."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To solve the Activity Selection Problem, a popular algorithm called Greedy Algorithm is often used. The Greedy Algorithm follows a greedy choice strategy, making locally optimal choices at each step in the hope of finding a globally optimal solution."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a step-by-step explanation of the Greedy Algorithm for the Activity Selection Problem:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{})," First, sort the activities based on their end times in non-decreasing order. This step ensures that activities with earlier end times are considered first."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{})," Since the activities are sorted by end times, the first activity in the sorted list will have the earliest end time. Select this activity as the first activity in the maximum set."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{}),"Starting from the second activity in the sorted list, iterate through the remaining activities one by one."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{}),"For each activity, check if its start time is greater than or equal to the end time of the previously selected activity. If the condition is satisfied, consider the current activity as compatible with the previous activity."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{}),"If an activity is compatible, add it to the maximum set of activities."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{}),"Repeat steps 4 and 5 until all activities have been considered."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By the end of this process, the maximum set of non-overlapping activities will be selected."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Greedy Algorithm for the Activity Selection Problem works because the locally optimal choice of selecting the activity with the earliest end time at each step leads to a globally optimal solution. By selecting activities that finish early, we maximize the availability of time for the remaining activities."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The time complexity of the Greedy Algorithm for the Activity Selection Problem is O(n log n), where n is the number of activities. This complexity arises from the initial sorting of activities based on end times. The subsequent iteration through the sorted activities takes linear time."}),(0,$e.jsx)("p",{className:"text-justify pt-6",children:"Let's illustrate this algorithm with an example:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Suppose we have the following activities: Activity 1: (1, 4) Activity 2: (3, 5) Activity 3: (0, 6) Activity 4: (5, 7) Activity 5: (3, 9) Activity 6: (5, 9) Activity 7: (6, 10) Activity 8: (8, 11) Activity 9: (8, 12) Activity 10: (2, 14) Activity 11: (12, 16)"}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:[(0,$e.jsxs)("strong",{children:["Step 1: ",(0,$e.jsx)("br",{}),"Sort the activities based on their end times:"]})," Activity 3: (0, 6) Activity 1: (1, 4) Activity 10: (2, 14) Activity 2: (3, 5) Activity 5: (3, 9) Activity 4: (5, 7) Activity 6: (5, 9) Activity 7: (6, 10) Activity 11: (12, 16) Activity 9: (8, 12) Activity 8: (8, 11)"]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:[(0,$e.jsxs)("strong",{children:["Step 2: ",(0,$e.jsx)("br",{}),"Select the first activity:"]})," Activity 3: (0, 6) is the first activity."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:[(0,$e.jsxs)("strong",{children:["Step 3: ",(0,$e.jsx)("br",{}),"Iterate through the remaining activities:"]})," Activity 1: (1, 4) is compatible with Activity 3, so add it to the maximum set. Activity 10: (2, 14) is not compatible as its start time overlaps with Activity 1. Activity 2: (3, 5) is not compatible as its start time overlaps with Activity 1. Activity 5: (3, 9) is not compatible as its start time overlaps with Activity 1. Activity 4: (5, 7) is not compatible as its start time overlaps with Activity 1. Activity 6: (5, 9) is not compatible as its start time overlaps with Activity 1. Activity 7: (6, 10) is not compatible as its start time overlaps with Activity 1. Activity 11: (12, 16) is compatible with Activity 1, so add it to the maximum set. Activity 9: (8, 12) is not compatible as its start time overlaps with Activity 11. Activity 8: (8, 11) is compatible with Activity 11, so add it to the maximum set."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The maximum set of non-overlapping activities is: Activity 3, Activity 1, Activity 11, and Activity 8."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, the maximum set of non-overlapping activities is selected using the Greedy Algorithm."}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  #include <algorithm>\n\n// Structure to represent an activity\nstruct Activity {\n    int start_time;\n    int end_time;\n};\n\n// Function to compare activities based on end times\nbool compareActivities(const Activity& a1, const Activity& a2) {\n    return a1.end_time < a2.end_time;\n}\n\n// Function to find the maximum set of non-overlapping activities\nstd::vector<Activity> findMaxActivities(std::vector<Activity>& activities) {\n    // Sort activities based on end times\n    std::sort(activities.begin(), activities.end(), compareActivities);\n\n    std::vector<Activity> maxActivities;\n    maxActivities.push_back(activities[0]);  // Select the first activity\n\n    int n = activities.size();\n    int lastSelected = 0;\n\n    // Iterate through the remaining activities\n    for (int i = 1; i < n; i++) {\n        // Check if the current activity is compatible with the last selected activity\n        if (activities[i].start_time >= activities[lastSelected].end_time) {\n            maxActivities.push_back(activities[i]);  // Select the compatible activity\n            lastSelected = i;  // Update the last selected activity\n        }\n    }\n\n    return maxActivities;\n}\n\nint main() {\n    std::vector<Activity> activities = {\n        {1, 4},\n        {3, 5},\n        {0, 6},\n        {5, 7},\n        {3, 9},\n        {5, 9},\n        {6, 10},\n        {8, 11},\n        {8, 12},\n        {2, 14},\n        {12, 16}\n    };\n\n    std::vector<Activity> maxActivities = findMaxActivities(activities);\n\n    // Print the maximum set of non-overlapping activities\n    std::cout << "Maximum set of non-overlapping activities:\n";\n    for (const Activity& activity : maxActivities) {\n        std::cout << "Start Time: " << activity.start_time << ", End Time: " << activity.end_time << "\n";\n    }\n\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this code, we define a structure ",(0,$e.jsx)("span",{className:"text-green-500",children:"Activity"})," to represent an activity with start time and end time. The ",(0,$e.jsx)("span",{className:"text-green-500",children:"compareActivities"})," function is used to compare activities based on their end times for sorting."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"text-green-500",children:"findMaxActivities"})," function takes a vector of activities as input and implements the Greedy Algorithm to find the maximum set of non-overlapping activities. It sorts the activities based on their end times, selects the first activity, and iterates through the remaining activities to select compatible activities."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In the ",(0,$e.jsx)("span",{className:"text-green-500",children:"main"})," function, we create a vector of activities and call the ",(0,$e.jsx)("span",{className:"text-green-500",children:"findMaxActivities"})," function to find the maximum set of non-overlapping activities. Finally, we print the results."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"When you run this code, it will output the maximum set of non-overlapping activities based on the given input."})]})})})},_s=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Huffman Coding"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Huffman coding is a lossless data compression algorithm used to encode data more efficiently by assigning variable-length codes to characters. It was developed by David A. Huffman in the 1950s and is widely used in various applications, including file compression, image compression, and data transmission."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The basic idea behind Huffman coding is to assign shorter codes to frequently occurring characters or symbols and longer codes to less frequently occurring ones. This way, the more common symbols are represented with fewer bits, resulting in overall compression of the data."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a step-by-step explanation of how Huffman coding works:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Frequency Analysis: "})," The first step in Huffman coding is to perform a frequency analysis of the input data. The frequency analysis determines the frequency of occurrence of each symbol or character in the data. This information is used to build a frequency table."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Building the Huffman Tree: "})," Based on the frequency table, a Huffman tree is constructed. The Huffman tree is a binary tree where each leaf node represents a symbol and each internal node represents the combination of two symbols. The frequency of each symbol determines the weight of the corresponding node."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"Start by creating a leaf node for each symbol, with the frequency as the weight."}),(0,$e.jsx)("li",{className:"pt-2",children:"Combine the two nodes with the lowest frequency to create a new internal node. The frequency of the new node is the sum of the frequencies of its child nodes."}),(0,$e.jsx)("li",{className:"pt-2",children:"Repeat the previous step until all nodes are combined into a single tree."})]}),(0,$e.jsx)("li",{className:"pt-2",children:"At the end of this process, the Huffman tree is constructed, and the root of the tree represents the combined frequency of all symbols."}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Assigning Codes: "}),"Once the Huffman tree is built, each symbol is assigned a unique binary code by traversing the tree. The binary codes are assigned based on the path taken from the root to the corresponding leaf node."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"Start at the root of the Huffman tree."}),(0,$e.jsx)("li",{className:"pt-2",children:"Traverse left for a '0' and right for a '1' until reaching a leaf node."}),(0,$e.jsx)("li",{className:"pt-2",children:"Assign the binary code accumulated during the traversal to the corresponding symbol."}),(0,$e.jsx)("li",{className:"pt-2",children:"Repeat this process for all symbols in the Huffman tree."})]}),(0,$e.jsx)("li",{className:"pt-2",children:"The assigned codes are such that no code is a prefix of another code, ensuring that the codes are uniquely decodable."}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Encoding: "}),"With the Huffman codes assigned to each symbol, the original data can be encoded using the generated Huffman tree and codes. Each symbol is replaced with its corresponding Huffman code.",(0,$e.jsx)("br",{}),'For example, if the original data is "ABRACADABRA" and the corresponding Huffman codes are: A: 0 B: 10 C: 110 D: 111 R: 11 . The encoded data would be: "0101100100110100111011"']}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Decoding: "}),'To decode the encoded data, the Huffman tree is used. Starting from the root, each bit of the encoded data is read sequentially. When a leaf node is reached, the corresponding symbol is output, and the process continues until the entire encoded data is decoded.Using the previous example, if we have the encoded data "0101100100110100111011" and the Huffman tree, we can decode it as: "010" -> A "110" -> C "10" -> B "011" -> R "010" -> A .  The decoded data is "ABRACADABRA".']})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Huffman coding provides efficient compression because frequently occurring symbols are represented with shorter codes, reducing the overall size of the encoded data. However, it is important to note that the compression achieved by Huffman coding may vary depending on the frequency distribution of symbols in the input data."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Overall, Huffman coding is a widely used and effective compression technique that has made significant contributions to data compression and transmission."}),(0,$e.jsx)(Gt,{children:'\n#include <iostream>\n#include <queue>\n#include <unordered_map>\n\n// Structure to represent a node in the Huffman tree\nstruct HuffmanNode {\n    char data;\n    int frequency;\n    HuffmanNode* left;\n    HuffmanNode* right;\n\n    HuffmanNode(char data, int frequency) : data(data), frequency(frequency), left(nullptr), right(nullptr) {}\n};\n\n// Function to compare Huffman nodes based on frequency\nstruct CompareNodes {\n    bool operator()(HuffmanNode* a, HuffmanNode* b) {\n        return a->frequency > b->frequency;\n    }\n};\n\n// Function to build the Huffman tree\nHuffmanNode* buildHuffmanTree(std::unordered_map<char, int>& frequencyMap) {\n    std::priority_queue<HuffmanNode*, std::vector<HuffmanNode*>, CompareNodes> pq;\n\n    // Create a leaf node for each symbol and add it to the priority queue\n    for (auto& pair : frequencyMap) {\n        char symbol = pair.first;\n        int frequency = pair.second;\n        HuffmanNode* node = new HuffmanNode(symbol, frequency);\n        pq.push(node);\n    }\n\n    // Combine nodes until only one node is left in the priority queue\n    while (pq.size() > 1) {\n        HuffmanNode* left = pq.top();\n        pq.pop();\n\n        HuffmanNode* right = pq.top();\n        pq.pop();\n\n        // Create a new internal node with combined frequency\n        int combinedFrequency = left->frequency + right->frequency;\n        HuffmanNode* newNode = new HuffmanNode(\'\0\', combinedFrequency);\n        newNode->left = left;\n        newNode->right = right;\n\n        // Add the new node back to the priority queue\n        pq.push(newNode);\n    }\n\n    // Return the root of the Huffman tree\n    return pq.top();\n}\n\n// Function to generate Huffman codes for each symbol\nvoid generateHuffmanCodes(HuffmanNode* root, std::string currentCode, std::unordered_map<char, std::string>& huffmanCodes) {\n    if (root == nullptr) {\n        return;\n    }\n\n    // Leaf node: store the Huffman code\n    if (root->left == nullptr && root->right == nullptr) {\n        huffmanCodes[root->data] = currentCode;\n    }\n\n    // Recursively traverse left and right subtrees\n    generateHuffmanCodes(root->left, currentCode + "0", huffmanCodes);\n    generateHuffmanCodes(root->right, currentCode + "1", huffmanCodes);\n}\n\n// Function to encode the input text using Huffman codes\nstd::string encodeText(const std::string& text, std::unordered_map<char, std::string>& huffmanCodes) {\n    std::string encodedText;\n    for (char c : text) {\n        encodedText += huffmanCodes[c];\n    }\n    return encodedText;\n}\n\n// Function to decode the encoded text using the Huffman tree\nstd::string decodeText(const std::string& encodedText, HuffmanNode* root) {\n    std::string decodedText;\n    HuffmanNode* current = root;\n    for (char bit : encodedText) {\n        if (bit == \'0\') {\n            current = current->left;\n        } else {\n            current = current->right;\n        }\n\n        // Leaf node: append the symbol to the decoded text\n        if (current->left == nullptr && current->right == nullptr) {\n            decodedText += current->data;\n            current = root;\n        }\n    }\n    return decodedText;\n}\n\nint main() {\n    std::string text = "HELLO, HUFFMAN!";\n    \n    // Step 1: Perform frequency analysis\n    std::unordered_map<char, int> frequencyMap;\n    for (char c : text) {\n        frequencyMap[c]++;\n    }\n\n    // Step 2: Build the Huffman tree\n    HuffmanNode* root = buildHuffmanTree(frequencyMap);\n\n    // Step 3: Generate Huffman codes\n    std::unordered_map<char, std::string> huffmanCodes;\n    generateHuffmanCodes(root, "", huffmanCodes);\n\n    // Step 4: Encode the input text\n    std::string encodedText = encodeText(text, huffmanCodes);\n    std::cout << "Encoded text: " << encodedText << std::endl;\n\n    // Step 5: Decode the encoded text\n    std::string decodedText = decodeText(encodedText, root);\n    std::cout << "Decoded text: " << decodedText << std::endl;\n\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this code, we first define a structure ",(0,$e.jsx)("span",{className:"text-green-500",children:"HuffmanNode"})," to represent a node in the Huffman tree. We also define the ",(0,$e.jsx)("span",{className:"text-green-500",children:"CompareNodes"})," functor to compare Huffman nodes based on their frequencies for the priority queue."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"text-green-500",children:"buildHuffmanTree"})," function takes a frequency map as input and builds the Huffman tree using a priority queue. It combines nodes with the lowest frequencies until only one node is left, which becomes the root of the Huffman tree."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"text-green-500",children:"generateHuffmanCodes"})," function recursively traverses the Huffman tree to generate Huffman codes for each symbol. It stores the codes in the ",(0,$e.jsx)("span",{className:"text-green-500",children:"huffmanCodes"})," map."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"text-green-500",children:"encodeText"})," function encodes the input text using the generated Huffman codes."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"text-green-500",children:"decodeText"})," function decodes the encoded text using the Huffman tree. It traverses the tree based on the bits in the encoded text and appends the corresponding symbols to the decoded text."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In the ",(0,$e.jsx)("span",{className:"text-green-500",children:"main"})," function, we provide a sample input text, perform frequency analysis, build the Huffman tree, generate Huffman codes, encode the text, and decode the encoded text. Finally, we print the encoded and decoded texts."]})]})})})},bs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Job Scheduling Problem"}),(0,$e.jsx)("p",{className:"text-justify pt-8",children:"The Job Scheduling Problem, also known as the Interval Scheduling Problem, is a classic optimization problem that involves scheduling a set of jobs with start and finish times to maximize the number of jobs completed without overlapping."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a step-by-step explanation of the Job Scheduling Problem:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Problem Definition: "})," Given a set of jobs, each with a start time and finish time, the objective is to select a subset of jobs that do not overlap and maximize the number of jobs selected."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Sorting: "})," Sort the jobs based on their finish times in non-decreasing order. This sorting step ensures that the jobs with earlier finish times are considered first."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Greedy Approach: "}),"Apply a greedy approach to select the jobs. Start with an empty set of selected jobs and iteratively consider each job in the sorted order."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"Select the first job from the sorted list and add it to the selected jobs set."}),(0,$e.jsx)("li",{className:"pt-2",children:"For each subsequent job, if its start time is greater than or equal to the finish time of the previously selected job, add it to the selected jobs set."}),(0,$e.jsx)("li",{className:"pt-2",children:"Continue this process until all jobs have been considered."})]}),(0,$e.jsx)("li",{className:"pt-2",children:"The selected jobs set represents the maximum set of non-overlapping jobs that can be scheduled."}),(0,$e.jsx)("li",{className:"pt-2",children:"Implementation in C++:"})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's the C++ code implementation of the Job Scheduling Problem using the greedy approach:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  #include <algorithm>\n  \n  // Structure to represent a job\n  struct Job {\n      int start_time;\n      int finish_time;\n  };\n  \n  // Function to compare jobs based on finish times\n  bool compareJobs(const Job& job1, const Job& job2) {\n      return job1.finish_time < job2.finish_time;\n  }\n  \n  // Function to find the maximum set of non-overlapping jobs\n  std::vector<Job> findMaxJobs(std::vector<Job>& jobs) {\n      // Sort jobs based on finish times\n      std::sort(jobs.begin(), jobs.end(), compareJobs);\n  \n      std::vector<Job> maxJobs;\n      maxJobs.push_back(jobs[0]);  // Select the first job\n  \n      int n = jobs.size();\n      int lastSelected = 0;\n  \n      // Iterate through the remaining jobs\n      for (int i = 1; i < n; i++) {\n          // Check if the current job is compatible with the last selected job\n          if (jobs[i].start_time >= jobs[lastSelected].finish_time) {\n              maxJobs.push_back(jobs[i]);  // Select the compatible job\n              lastSelected = i;  // Update the last selected job\n          }\n      }\n  \n      return maxJobs;\n  }\n  \n  int main() {\n      std::vector<Job> jobs = {\n          {1, 3},\n          {2, 5},\n          {4, 7},\n          {6, 9},\n          {8, 10}\n      };\n  \n      std::vector<Job> maxJobs = findMaxJobs(jobs);\n  \n      // Print the maximum set of non-overlapping jobs\n      std::cout << "Maximum set of non-overlapping jobs:\n";\n      for (const Job& job : maxJobs) {\n          std::cout << "Start Time: " << job.start_time << ", Finish Time: " << job.finish_time << "\n";\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, we define a structure Job to represent a job with start time and finish time. The compareJobs function is used to compare jobs based on their finish times for sorting."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The findMaxJobs function takes a vector of jobs as input and implements the greedy approach to find the maximum set of non-overlapping jobs. It sorts the jobs based on their finish times, selects the first job, and iterates through the remaining jobs, selecting compatible jobs that do not overlap with the previously selected job."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main function, we provide a sample set of jobs, call the findMaxJobs function to find the maximum set of non-overlapping jobs, and then print the start and finish times of the selected jobs."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The time complexity and space complexity of the Job Scheduling Problem implementation using the greedy approach are as follows:"}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Time Complexity:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"Sorting the jobs based on finish times requires O(n log n) time, where n is the number of jobs. This is because the sorting step has a time complexity of O(n log n) in the worst case."}),(0,$e.jsx)("li",{className:"pt-2",children:"Iterating through the sorted jobs to select compatible jobs takes O(n) time, as each job is processed once."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Therefore, the overall time complexity of the Job Scheduling Problem implementation is O(n log n), dominated by the sorting step."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"The space complexity is O(n) since we need to store the sorted jobs in a vector and the maximum set of non-overlapping jobs in another vector."}),(0,$e.jsx)("li",{className:"pt-2",children:"Additionally, a constant amount of extra space is required for variables used in the algorithm."})]})]})})})},ys=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Divide and Conquer"}),(0,$e.jsx)("p",{className:"text-justify pt-8",children:"Divide and Conquer is a problem-solving paradigm that involves breaking a problem into smaller subproblems, solving them recursively, and combining their solutions to obtain the final result. The main steps in a divide and conquer algorithm are:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Divide: "}),"Break the problem into smaller subproblems. This step involves dividing the input into smaller parts that can be solved independently."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Conquer: "}),"Solve the subproblems recursively. This step involves solving the smaller subproblems by applying the same algorithm recursively until they become simple enough to solve directly."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Combine: "}),"Combine the solutions of the subproblems to obtain the final result. This step involves merging or combining the solutions of the smaller subproblems to obtain the solution for the original problem."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Now let's see an example of a divide and conquer algorithm implemented in C++."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:[(0,$e.jsx)("strong",{children:"Binary Search: "}),"Binary search is a classic example of a divide and conquer algorithm. It is used to search for an element in a sorted array by repeatedly dividing the search space in half."]}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  \n  // Recursive binary search function\n  int binarySearch(const std::vector<int>& arr, int target, int left, int right) {\n      if (left <= right) {\n          int mid = left + (right - left) / 2;\n  \n          // If the target is found, return its index\n          if (arr[mid] == target) {\n              return mid;\n          }\n  \n          // If the target is smaller, search in the left half\n          if (arr[mid] > target) {\n              return binarySearch(arr, target, left, mid - 1);\n          }\n  \n          // If the target is larger, search in the right half\n          return binarySearch(arr, target, mid + 1, right);\n      }\n  \n      // If the target is not found, return -1\n      return -1;\n  }\n  \n  // Wrapper function for binary search\n  int search(const std::vector<int>& arr, int target) {\n      int n = arr.size();\n      return binarySearch(arr, target, 0, n - 1);\n  }\n  \n  int main() {\n      std::vector<int> arr = {2, 4, 6, 8, 10, 12, 14};\n      int target = 8;\n  \n      int index = search(arr, target);\n  \n      if (index != -1) {\n          std::cout << "Element found at index " << index << std::endl;\n      } else {\n          std::cout << "Element not found" << std::endl;\n      }\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, we have a sorted array arr and a target element target that we want to search for. The binarySearch function implements the recursive binary search algorithm. It takes the array, target element, left index, and right index as parameters."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Inside the binarySearch function, we calculate the middle index and compare the middle element with the target element. If they are equal, we return the middle index. If the middle element is greater than the target, we recursively search in the left half of the array. Otherwise, we recursively search in the right half of the array."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The search function is a wrapper function that initializes the left and right indices and calls the binarySearch function."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main function, we create a sorted array and search for a target element using the search function. If the element is found, we print its index; otherwise, we indicate that the element is not found."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The time complexity of the binary search algorithm is O(log n), where n is the size of the input array. This is because the search space is divided in half in each recursive step."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The space complexity of the algorithm is O(log n) as well, due to the recursive calls that consume space on the call stack."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Divide and conquer algorithms, like binary search, can provide efficient solutions to a wide range of problems by leveraging the divide, conquer, and combine steps to break down complex problems into simpler ones."})]})})})},vs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Backtracking Algorithm"}),(0,$e.jsx)("p",{className:"text-justify pt-8",children:"Backtracking is a technique used to solve problems by incrementally building a solution and exploring different possibilities. It is particularly useful when dealing with problems that have a large search space, where exploring all possible solutions is impractical."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The basic idea behind backtracking is to incrementally build a solution by making choices at each step and then evaluating whether the chosen path leads to a valid solution. If the current path leads to a dead end or violates certain constraints, the algorithm backtracks and undoes the previous choice, exploring a different path."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an explanation of the backtracking algorithm and an example implementation in C++."}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Problem Definition: "}),"Define the problem and its constraints. Identify the decision variables and the conditions that must be satisfied."]}),(0,$e.jsx)("li",{className:"pt-2",children:(0,$e.jsx)("strong",{children:"Backtracking Algorithm:"})}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"Start with an empty or partially complete solution."}),(0,$e.jsx)("li",{className:"pt-2",children:"Make a choice at the current step."}),(0,$e.jsx)("li",{className:"pt-2",children:"Check if the choice is valid and satisfies the problem constraints."}),(0,$e.jsx)("li",{className:"pt-2",children:"If the choice is valid, move to the next step."}),(0,$e.jsx)("li",{className:"pt-2",children:"If the choice is invalid or leads to a dead end, backtrack to the previous step and undo the choice."}),(0,$e.jsx)("li",{className:"pt-2",children:"Repeat the above steps until a valid solution is found or all possibilities have been explored."})]}),(0,$e.jsx)("li",{className:"pt-2",children:(0,$e.jsx)("strong",{children:"Implementation in C++: "})})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's consider the N-Queens problem as an example, where the goal is to place N queens on an N x N chessboard such that no two queens can attack each other."}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <vector>\n\n// Function to check if a queen can be placed at a given position\nbool isSafe(const std::vector<int>& queens, int row, int col) {\n    for (int i = 0; i < row; ++i) {\n        // Check if the queens in previous rows attack the current position\n        if (queens[i] == col || queens[i] - col == i - row || queens[i] - col == row - i) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Backtracking function to solve the N-Queens problem\nvoid solveNQueens(int N, int row, std::vector<int>& queens) {\n    if (row == N) {\n        // Base case: All queens have been placed, print the solution\n        for (int i = 0; i < N; ++i) {\n            for (int j = 0; j < N; ++j) {\n                if (queens[i] == j) {\n                    std::cout << "Q ";\n                } else {\n                    std::cout << "- ";\n                }\n            }\n            std::cout << std::endl;\n        }\n        std::cout << std::endl;\n        return;\n    }\n\n    // Try placing the queen in each column of the current row\n    for (int col = 0; col < N; ++col) {\n        if (isSafe(queens, row, col)) {\n            queens[row] = col;  // Place the queen at (row, col)\n            solveNQueens(N, row + 1, queens);  // Move to the next row\n        }\n    }\n}\n\nint main() {\n    int N = 4;  // Number of queens and size of the chessboard\n\n    std::vector<int> queens(N);  // Vector to store the column position of queens\n\n    solveNQueens(N, 0, queens);\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this code, we define the isSafe function, which checks whether a queen can be placed at a given position (row, col) on the chessboard without attacking any other queens. The function checks the column, diagonal, and anti-diagonal conditions."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The solveNQueens function is the backtracking function that solves the N-Queens problem. It takes the number of queens (N), the current row, and the vector queens as parameters. It uses recursion to explore all possible placements of queens."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Inside the solveNQueens function, if the current row equals N, it means all queens have been placed, and a valid solution is found. We print the solution and return."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Otherwise, we iterate over each column in the current row and check if a queen can be placed at that position. If it is safe, we place the queen at (row, col) and recursively move to the next row by calling solveNQueens again."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In the main function, we initialise  the number of queens and create a vector to store the column positions of the queens. We call solveNQueens to find all valid solutions for the N-Queens problem."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The time complexity of the backtracking algorithm can vary depending on the problem. In the case of the N-Queens problem, the time complexity is typically O(N!), where N is the number of queens or the size of the chessboard. This is because, in the worst case, the algorithm explores all possible configurations of queens."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The space complexity of the algorithm is O(N) to store the column positions of the queens and the call stack used in the recursive calls."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Backtracking algorithms provide a flexible and efficient approach to solve problems with combinatorial or exponential search spaces, allowing us to explore different paths and find valid solutions efficiently."})]})})})},Ns=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"String Algorithm"}),(0,$e.jsx)("p",{className:"text-justify pt-8",children:"String algorithms are a set of computational methods and techniques specifically designed for manipulating and analyzing strings of characters. These algorithms are used in various fields such as text processing, bioinformatics, data compression, natural language processing, and more. Here are some common string algorithms:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-6",children:[(0,$e.jsx)("strong",{children:"String Matching Algorithms: "}),"These algorithms determine if a given pattern exists within a larger text or string. Some popular string matching algorithms include brute force, Knuth-Morris-Pratt (KMP), Boyer-Moore, and Rabin-Karp."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Longest Common Subsequence(LCS): "})," This algorithm finds the longest subsequence that two or more strings have in common. It is widely used in bioinformatics, DNA sequencing, and text comparison."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Levenshtein Distance: "}),"This algorithm calculates the minimum number of single-character edits (insertions, deletions, or substitutions) required to transform one string into another. It is useful for applications like spell checking, DNA sequence alignment, and approximate string matching."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Tries: "}),"A trie (also called a prefix tree) is a tree-like data structure used for efficient retrieval and storage of strings. It is particularly useful for tasks like auto-complete, searching for strings with a common prefix, and dictionary lookups."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"String Compression Algorithms: "}),"These algorithms aim to reduce the size of strings to save storage space or improve transmission efficiency. Examples include Huffman coding, Lempel-Ziv-Welch (LZW) compression, and Run-Length Encoding (RLE)."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"Regular Expression Matching: "})," Regular expressions (regex) provide a powerful language for pattern matching and manipulation of strings. Algorithms are used to efficiently match and search for patterns defined by regular expressions."]}),(0,$e.jsxs)("li",{className:"pt-2",children:[(0,$e.jsx)("strong",{children:"String Sorting Algorithms: "}),"These algorithms arrange strings in a specific order, such as lexicographically (alphabetical order) or based on a custom sorting criteria. Popular sorting algorithms like quicksort, mergesort, and radix sort can be adapted for sorting strings."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"String Matching: "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Let's take a look at an implementation of the Knuth-Morris-Pratt (KMP) algorithm for string matching in Python:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<int> computeLPS(string pattern) {\n    int m = pattern.length();\n    vector<int> lps(m, 0);\n    int length = 0;\n    int i = 1;\n\n    while (i < m) {\n        if (pattern[i] == pattern[length]) {\n            length++;\n            lps[i] = length;\n            i++;\n        } else {\n            if (length != 0) {\n                length = lps[length - 1];\n            } else {\n                lps[i] = 0;\n                i++;\n            }\n        }\n    }\n\n    return lps;\n}\n\nvector<int> kmpSearch(string text, string pattern) {\n    int n = text.length();\n    int m = pattern.length();\n    vector<int> lps = computeLPS(pattern);\n    vector<int> matches;\n\n    int i = 0, j = 0;\n    while (i < n) {\n        if (pattern[j] == text[i]) {\n            i++;\n            j++;\n\n            if (j == m) {\n                matches.push_back(i - j);\n                j = lps[j - 1];\n            }\n        } else {\n            if (j != 0) {\n                j = lps[j - 1];\n            } else {\n                i++;\n            }\n        }\n    }\n\n    return matches;\n}\n\nint main() {\n    string text = "ABABDABACDABABCABAB";\n    string pattern = "ABABCABAB";\n    vector<int> result = kmpSearch(text, pattern);\n\n    if (result.empty()) {\n        cout << "Pattern not found in the text." << endl;\n    } else {\n        cout << "Pattern found at indices: ";\n        for (int i : result) {\n            cout << i << " ";\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Explanation: "}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"The computeLPS function calculates the Longest Proper Prefix which is also a Suffix (LPS) array for the given pattern, similar to the previous explanation."}),(0,$e.jsx)("li",{className:"pt-2",children:"The kmpSearch function performs the string matching using the KMP algorithm. It iterates through the text and pattern, comparing characters and adjusting indices based on matches or mismatches. The LPS array is used to determine the next index to check in the pattern when a mismatch occurs."}),(0,$e.jsx)("li",{className:"pt-2",children:"The main function demonstrates the usage of the kmpSearch function. It searches for the pattern in the given text and prints the indices where the pattern is found, or a message if the pattern is not found."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Complexity:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"The time complexity of the KMP algorithm in C++ is also O(n + m), where n is the length of the text and m is the length of the pattern. Each character in the text and pattern is compared at most once."}),(0,$e.jsx)("li",{className:"pt-2",children:"The space complexity of the algorithm is O(m) for the LPS array, similar to the previous explanation."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Longest Increasing Subsequence "}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an implementation of the Longest Increasing Subsequence (LIS) algorithm in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n#include <vector>\nusing namespace std;\n\nint lis(vector<int>& nums) {\n    int n = nums.size();\n    vector<int> dp(n, 1);  // dp[i] represents the length of the LIS ending at index i\n\n    for (int i = 1; i < n; i++) {\n        for (int j = 0; j < i; j++) {\n            if (nums[i] > nums[j]) {\n                dp[i] = max(dp[i], dp[j] + 1);\n            }\n        }\n    }\n\n    int maxLength = 0;\n    for (int i = 0; i < n; i++) {\n        maxLength = max(maxLength, dp[i]);\n    }\n\n    return maxLength;\n}\n\nint main() {\n    vector<int> nums = {10, 9, 2, 5, 3, 7, 101, 18};\n    int length = lis(nums);\n\n    cout << "Length of the Longest Increasing Subsequence: " << length << endl;\n\n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Explanation:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"The lis function takes a vector of integers nums as input and calculates the length of the Longest Increasing Subsequence (LIS) in nums."}),(0,$e.jsx)("li",{className:"pt-2",children:"The algorithm uses dynamic programming to solve the problem. It initializes an auxiliary array dp of the same size as nums, where dp[i] represents the length of the LIS ending at index i."}),(0,$e.jsx)("li",{className:"pt-2",children:"It iterates through nums from left to right. For each element at index i, it compares it with all the elements before it (at indices j from 0 to i-1). If nums[i] is greater than nums[j], it means it can be a part of a longer increasing subsequence. In that case, it updates dp[i] to the maximum value between its current value and dp[j] + 1"}),(0,$e.jsx)("li",{className:"pt-2",children:"After completing the iteration, the algorithm finds the maximum value in the dp array, which represents the length of the longest increasing subsequence."}),(0,$e.jsx)("li",{className:"pt-2",children:"Finally, the main function demonstrates the usage of the lis function. It creates a vector of integers nums, calls the lis function on it, and prints the length of the longest increasing subsequence."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Complexity:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-2",children:"The time complexity of the LIS algorithm implemented above is O(n^2), where n is the size of the input vector nums. This is because there are two nested loops that iterate through nums, resulting in a quadratic time complexity."}),(0,$e.jsx)("li",{className:"pt-2",children:"The space complexity is O(n) because of the additional array dp used to store the lengths of the LIS ending at each index."})]})]})})})},Es=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. Two Pointers :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Two pointers is a popular algorithmic technique that involves using two pointers to traverse an array or a sequence in a specific manner. It is commonly used to solve problems that involve searching, finding pairs, or maintaining a specific window of elements. Here's a detailed explanation of the two pointers technique in C++ with a real-life related example:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Two Pointers Technique: The two pointers technique involves using two pointers that traverse the array from different ends or start from different positions to solve a given problem efficiently. By moving the pointers strategically based on certain conditions, we can solve various problems in an optimized manner."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Example Scenario: Let's consider a real-life related example scenario to explain the two pointers technique. Imagine a student who is managing their expenses over a period of time. They have a list of expenses for each day, and they want to find a consecutive range of days where their expenses were within a specific budget."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"C++ Implementation: Here's a sample implementation in C++ that demonstrates the two pointers technique to solve the student's expense tracking problem:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  using namespace std;\n\n  bool isExpensesWithinBudget(vector<int>& expenses, int budget) {\n    int left = 0;               // Left pointer representing the start of the window\n    int right = 0;              // Right pointer representing the end of the window\n    int sum = 0;                // Sum of expenses within the window\n\n    while (right < expenses.size()) {\n        sum += expenses[right];\n\n        while (sum > budget) {\n            sum -= expenses[left];\n            left++;\n        }\n\n        if (sum == budget) {\n            // Found a consecutive range of days with expenses equal to the budget\n            return true;\n        }\n\n        right++;\n    }\n\n    // No consecutive range of days with expenses equal to the budget found\n    return false;\n  }\n\n  int main() {\n    vector<int> expenses = {12, 5, 8, 3, 10, 6};    // Expenses for each day\n    int budget = 21;                               // Budget for the consecutive range of days\n\n    bool result = isExpensesWithinBudget(expenses, budget);\n\n    if (result) {\n        cout << "There exists a consecutive range of days with expenses equal to the budget." << endl;\n    } else {\n        cout << "No consecutive range of days with expenses equal to the budget found." << endl;\n    }\n\n    return 0;\n  } \n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Explanation:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, we have an array"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"expenses "})," ","representing the expenses for each day, and an integer"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" budget"})," ","representing the budget for the consecutive range of days."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["The"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"isExpensesWithinBudget"})," ","function takes the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"expenses "})," vector and",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" budget"})," as inputs and returns a boolean value indicating whether there exists a consecutive range of days with expenses equal to the budget."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["The two pointers,"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" left"})," and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" right"}),", are initially set to 0. They represent the start and end of the window."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We maintain a"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"sum"})," variable to keep track of the total expenses within the window."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["The algorithm iterates through the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" expenses"})," array using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" right"}),"pointer. It adds the expenses at the current position to the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" sum"}),"."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["If the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" sum"})," ","exceeds the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" budget"})," , we move the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" left"})," ","pointer and subtract the expenses at that position from the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" sum"})," . This way, we shrink the window from the left until the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"sum "})," becomes less than or equal to the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" budget"})," ."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["If the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" sum"})," . becomes equal to the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" budget"}),", it means we have found a consecutive range of days with expenses equal to the budget, and we return"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" true"})," ."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["If the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"right "})," ","pointer reaches the end of the array and no consecutive range is found, we return"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" false"})," ."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" main"})," ","function demonstrates the usage of the",(0,$e.jsxs)("span",{className:"code-text italic text-sm",children:[" ","isExpensesWithinBudget"]})," ","function. It creates a vector of expenses and a budget, calls the function, and prints the result accordingly."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Real-life related example: In the student expense tracking scenario, the two pointers technique is used to find a consecutive range of days where the student's expenses match the budget. By utilizing the two pointers to maintain a window of expenses and adjusting the window based on the conditions, we efficiently determine whether such a range exists or not."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Complexity: The time complexity of the two pointers technique depends on the specific problem being solved. In this example, the time complexity is O(N), where N is the number of days/expenses, as we iterate through the expenses array once."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The space complexity is O(1) as we only use a few additional variables that don't depend on the size of the input."}),(0,$e.jsx)("br",{})]})})})},Ss=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"2. Sliding Window Technique :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The sliding window technique is a popular algorithmic approach used to solve problems that involve finding a subarray or substring of a specific length or satisfying certain conditions. It involves maintaining a window or a range of elements within the given array or string and efficiently sliding or expanding the window to solve the problem. Here's a detailed explanation of the sliding window technique in C++ with a real-life related example:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Sliding Window Technique: The sliding window technique involves using two pointers, typically the start and end pointers, to represent the range or window of elements within the given array or string. The window is initially set to cover a specific length or a starting range of elements. By moving or sliding the window based on certain conditions, we can solve various problems in an optimized manner."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Example Scenario: Let's consider a real-life related example scenario to explain the sliding window technique. Imagine a student who wants to find the maximum sum of a subarray of a specific length within their exam scores. They want to find the highest total score they achieved in any consecutive range of exams."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"C++ Implementation: Here's a sample implementation in C++ that demonstrates the sliding window technique to solve the student's maximum subarray sum problem:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  using namespace std;\n  \n  int maxSubarraySum(vector<int>& scores, int k) {\n    int n = scores.size();\n    int maxSum = 0;\n    int currentSum = 0;\n    // Calculate the sum of the first window\n    for (int i = 0; i < k; i++) {\n      currentSum += scores[i];\n    }\n    maxSum = currentSum;\n    // Slide the window and update the maximum sum\n    for (int i = k; i < n; i++) {\n    currentSum += scores[i] - scores[i - k];\n    maxSum = max(maxSum, currentSum);\n  }\n    return maxSum;\n  }\n  int main() {\n    vector<int> scores = {90, 87, 76, 92, 88, 82, 95};\n    int k = 3; // Length of the subarray\n    int maxSum = maxSubarraySum(scores, k);\n    cout << "Maximum subarray sum: " << maxSum << endl;\n    return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4 font-bold",children:"Explanation:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["In this example, we have a vector"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"scores"})," ","representing the exam scores, and an integer"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"k "}),"representing the length of the subarray."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["The"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"maxSubarraySum "}),"function takes the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" scores"})," vector and k as inputs and returns the maximum sum of a subarray of length ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" k"}),"."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We initialize"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" maxSum"})," and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"currentSum"})," ","variables to keep track of the maximum sum and the current sum of the window, respectively."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We calculate the sum of the first window by iterating through the scores array for the first"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" k"})," elements."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" maxSum"})," is initially set to"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" currentSum"}),"."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We slide the window from left to right by iterating from"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" k"})," to"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" n-1"}),", where n is the size of the scores array."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["In each iteration, we update"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" currentSum"})," by adding the current element and subtracting the element that is no longer part of the window."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["We update ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"maxSum"})," ","by taking the maximum value between"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"maxSum"})," and",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"currentSum "}),"in each iteration."]}),(0,$e.jsxs)("li",{className:"pt-4",children:["Finally, we return"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" maxSum"})," as the maximum sum of a subarray of length"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" k"}),"."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Real-life related example: In the student's maximum subarray sum scenario, the sliding window technique is used to find the highest total score achieved in any consecutive range of exams. By efficiently sliding the window and updating the sum, the algorithm finds the maximum subarray sum in an optimized manner."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Complexity: The time complexity of the sliding window technique depends on the specific problem being solved. In this example, the time complexity is O(N), where N is the number of exam scores, as we iterate through the scores array once."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The space complexity is O(1) as we only use a few additional variables that don't depend on the size of the input."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By relating the sliding window technique to the student's exam scores, it helps to illustrate how this algorithmic approach can be applied in real-life scenarios, making it more relatable and interesting for students."}),(0,$e.jsx)("br",{})]})})})},js=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"NP-completeness Algorithms :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"NP-completeness is a concept in computer science that refers to a class of problems that are difficult to solve efficiently. These problems belong to the complexity class NP (nondeterministic polynomial time) and are considered some of the most challenging computational problems. While it's not possible to provide a specific example in C++ due to the nature of NP-complete problems, I can explain NP-completeness and provide a relatable real-life example."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"NP-Completeness: NP-completeness is a property of computational problems that indicates they are both in the class NP and difficult to solve. NP stands for nondeterministic polynomial time, which refers to problems that can be verified in polynomial time, given a potential solution. However, finding an actual solution for these problems in polynomial time remains an open question."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In 1971, Stephen Cook introduced the concept of NP-completeness and proved the Cook-Levin theorem, showing that the Boolean satisfiability problem (SAT) is NP-complete. Since then, many other problems have been proven to be NP-complete by reducing them to SAT or other known NP-complete problems."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Real-Life Example: While it's challenging to provide a specific NP-complete problem example in C++, here's a real-life scenario that helps illustrate NP-completeness:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Consider a student scheduling problem. Imagine a student who needs to select a set of courses from a university's course catalog for an upcoming semester. Each course has prerequisites, time slots, and limited seat availability. The student wants to find an optimal combination of courses that satisfies all prerequisites, does not overlap in time slots, and maximizes the number of courses taken."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"This problem can be modeled as an NP-complete problem because::"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"The student needs to select a combination of courses (solution) that satisfies multiple constraints (prerequisites, time slots, seat availability)."}),(0,$e.jsx)("li",{className:"pt-4",children:"Verifying a solution is relatively easy, as we can check if all prerequisites are satisfied, no time conflicts exist, and the number of courses taken is maximum."}),(0,$e.jsx)("li",{className:"pt-4",children:"However, finding the optimal combination that satisfies all constraints is challenging, as the search space grows exponentially with the number of courses."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"While the specific algorithm to solve the NP-complete student scheduling problem efficiently remains an open question, various heuristics, approximation algorithms, and optimization techniques are commonly employed to find reasonably good solutions within a reasonable time frame."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In summary, NP-completeness is a concept that defines a class of computationally challenging problems that belong to the complexity class NP. While providing a concrete example in C++ is difficult due to the nature of NP-complete problems, illustrating the concept with a real-life scenario, such as the student scheduling problem, can help students understand the concept and its relevance in solving complex problems efficiently."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"I can provide an example of a problem that is widely known to be NP-complete and show how it can be represented in code. One such problem is the Subset Sum problem."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Subset Sum problem is defined as follows: Given a set of integers and a target sum, determine whether there exists a subset of the integers that sums up to the target sum."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of how you can represent the Subset Sum problem in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  using namespace std;\n  bool subsetSum(vector<int>& nums, int target) {\n    int n = nums.size();\n    vector<vector<bool>> dp(n + 1, vector<bool>(target + 1, false));\n    // Base case: If the target sum is 0, an empty subset is the solution\n    for (int i = 0; i <= n; i++) {\n      dp[i][0] = true;\n    }\n  // Dynamic programming approach to fill the table\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= target; j++) {\n        if (j < nums[i - 1]) {\n        dp[i][j] = dp[i - 1][j];\n      } else {\n          dp[i][j] = dp[i - 1][j] || dp[i - 1][j - nums[i - 1]];\n        }\n      }\n    }\n    return dp[n][target];\n}\n  int main() {\n  vector<int> nums = {3, 1, 5, 9, 12};\n  int target = 8;\n  bool result = subsetSum(nums, target);\n  if (result) {\n    cout << "There exists a subset that sums up to the target." <<\n    endl;\n  } else {\n  cout << "No subset sums up to the target." << endl;\n  }\n  return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this code, the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"subsetSum"})," function takes a vector of integers"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nums"}),"and a target sum"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"target"})," as inputs. It uses a dynamic programming approach to solve the Subset Sum problem."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The code initializes a 2D boolean table"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dp"})," with dimensions (n+1) x (target+1), where n is the size of"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nums"}),". Each cell"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dp[i][j]"}),"represents whether there exists a subset of the first i elements in",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nums"})," that sums up to j."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The code then fills the table using a bottom-up dynamic programming approach. It iterates through each element in"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nums"})," and each possible ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"target"})," ","sum from 1 to target. The cell"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dp[i][j]"})," is filled based on whether including or excluding the current element"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nums[i-1]"})," can lead to a subset sum equal to j."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Finally, the code returns the value of"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dp[n][target]"}),", which indicates whether there exists a subset of"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nums"})," that sums up to the target."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Although the above code provides a solution to the Subset Sum problem, it's important to note that this problem is known to be NP-complete. This means that as the size of the input grows, the running time of the algorithm will also grow exponentially, making it impractical for large inputs."})]})})})},Ts=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Computational Geometry Algorithms :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Computational Geometry is a branch of computer science that focuses on the study of algorithms and data structures for solving geometric problems. It involves the manipulation, analysis, and computation of geometric objects such as points, lines, polygons, and curves. Computational Geometry algorithms are used in various applications, including computer graphics, robotics, geographic information systems (GIS), and computer-aided design (CAD). Here are some important computational geometry algorithms:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10 ",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Convex Hull: The Convex Hull algorithm is used to find the smallest convex polygon that contains a given set of points in the plane. The most commonly used algorithm for finding the Convex Hull is the Graham's scan algorithm, which has a time complexity of O(n log n) for n points."}),(0,$e.jsx)("li",{className:"pt-4",children:"Line Intersection: The Line Intersection algorithm determines whether two lines in the plane intersect and, if they do, calculates the point of intersection. One popular algorithm for line intersection is the Bentley\u2013Ottmann algorithm, which has a time complexity of O((n + k) log n), where n is the number of input line segments, and k is the number of intersections."}),(0,$e.jsx)("li",{className:"pt-4",children:"Polygon Triangulation: Polygon Triangulation involves dividing a polygon into triangles. Triangulation algorithms are used in various applications, such as mesh generation, graphics rendering, and computational physics. One well-known algorithm for triangulating simple polygons is the Ear Clipping algorithm, which has a time complexity of O(n^2) for n vertices."}),(0,$e.jsx)("li",{className:"pt-4",children:"Closest Pair: The Closest Pair algorithm finds the pair of points with the smallest distance among a set of points in the plane. The divide-and-conquer approach is commonly used for this problem, with the most famous algorithm being the O(n log n) time complexity algorithm based on the merge sort technique."}),(0,$e.jsx)("li",{className:"pt-4",children:"Voronoi Diagram: The Voronoi Diagram is a partitioning of a plane into regions based on the distance to a set of points. Each region consists of all points closer to a particular input point than to any other input point. Algorithms for constructing Voronoi Diagrams include Fortune's algorithm and the incremental algorithm, with time complexities of O(n log n) and O(n^2), respectively."}),(0,$e.jsx)("li",{className:"pt-4",children:"Delaunay Triangulation: The Delaunay Triangulation is a triangulation of a set of points in a plane, such that no point is inside the circumcircle of any triangle. The Delaunay Triangulation has several desirable properties and is widely used in various applications. Algorithms for constructing Delaunay Triangulations include the Bowyer\u2013Watson algorithm and the incremental algorithm, with time complexities of O(n^2) and O(n log n), respectively."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of a computational geometry algorithm in C++: the Convex Hull algorithm using Graham's scan:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <vector>\n  #include <algorithm>\n  #include <stack>\n  using namespace std;\n  struct Point {\n    int x, y;\n    Point(int _x, int _y) : x(_x), y(_y) {}\n  };\n  // Orientation function to determine the orientation of three points\n  int orientation(const Point& p, const Point& q, const Point& r) {\n  int val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  if (val == 0) {\n    return 0; // Collinear\n  } else if (val > 0) {\n    return 1; // Clockwise\n  } else {\n    return 2; // Counterclockwise\n  }\n}\n  // Comparison function to sort points based on polar angle\n  bool comparePoints(const Point& p1, const Point& p2) {\n  int o = orientation(Point(0, 0), p1, p2);\n  if (o == 0) {\n    // If two points are collinear, choose the one that is farther from the origin\n  return (p1.x * p1.x + p1.y * p1.y) < (p2.x * p2.x + p2.y * p2.y);\n  } else {\n    return (o == 2); // Sort in counterclockwise order\n  }\n}\n  // Convex Hull algorithm using Graham\'s scan\n  vector<Point> convexHull(vector<Point>& points) {\n\n  int n = points.size();\n  if (n < 3) {\n    return {}; // Convex hull not possible with less than 3 points\n  }\n  // Find the point with the lowest y-coordinate (ties broken by lowest x-coordinate)\n  int minY = points[0].y;\n  int minIdx = 0;\n  for (int i = 1; i < n; i++) {\n    int y = points[i].y;\n  if ((y < minY) || (y == minY && points[i].x < points[minIdx].x)) {\n    minY = y;\n    minIdx = i;\n  }\n}\n  // Swap the lowest point with the first point\n  swap(points[0], points[minIdx]);\n  // Sort the points based on polar angle with respect to the\n  lowest point\n  sort(points.begin() + 1, points.end(), comparePoints);\n  // Initialize the stack to hold the convex hull points\n  stack<Point> st;\n  st.push(points[0]);\n  st.push(points[1]);\n  // Compute the convex hull by iterating over the remaining points\n  for (int i = 2; i < n; i++) {\n    while (st.size() >= 2) {\n      Point p2 = st.top();\n    st.pop();\n    Point p1 = st.top();\n    if (orientation(p1, p2, points[i]) == 2) {\n      st.push(p2);\n      break;\n    }\n}\n  st.push(points[i]);\n  }\n  // Convert the stack to a vector and return the convex hull points\n  vector<Point> convexHullPoints;\n  while (!st.empty()) {\n    convexHullPoints.push_back(st.top());\n    st.pop();\n  }\n  return convexHullPoints;\n}\n  // Helper function to print the points in the convex hull\n  void printConvexHull(const vector<Point>& convexHullPoints) {\n    for (const Point& p : convexHullPoints) {\n      cout << "(" << p.x << ", " << p.y << ") ";\n    }\n  cout << endl;\n}\n  int main() {\n  vector<Point> points = {{0, 3}, {2, 2}, {1, 1}, {2, 1},{3, 0}, {0, 0}, {3, 3}};\n  vector<Point> convexHullPoints = convexHull(points);\n  cout << "Convex Hull Points: ";\n  printConvexHull(convexHullPoints);\n  return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we define a"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"Point"})," struct to represent 2D points with"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"x"})," and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"y"})," coordinates. The"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"orientation"})," ","function calculates the orientation of three points (collinear, clockwise, or counterclockwise)."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"comparePoints"})," ","function is used as a comparison function to sort the points in counterclockwise order based on their polar angle with respect to the lowest point."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"convexHull"})," ","function implements Graham's scan algorithm to find the convex hull of a set of points. It first finds the point with the lowest y-coordinate and then sorts the remaining points based on their polar angle. It uses a stack to compute the convex hull by checking the orientation of each point with the top two points on the stack."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Finally, the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main"})," ","function demonstrates the usage of the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"convexHull"}),"function by finding the convex hull of a set of points and printing the resulting convex hull point"]})]})})})},ws=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Euclidean Algorithm :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The Euclidean Algorithm is a fundamental algorithm in Number Theory that allows us to find the greatest common divisor (GCD) of two integers efficiently. It is named after the ancient Greek mathematician Euclid. The GCD of two numbers is the largest positive integer that divides both numbers without leaving a remainder."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The Euclidean Algorithm is based on the following key observation: if we have two integers, a and b, with a ",">"," b, then the GCD of a and b is the same as the GCD of b and the remainder of a divided by b. In other words, GCD(a, b) = GCD(b, a % b)."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Using this observation, we can iteratively apply the Euclidean Algorithm to reduce the problem of finding the GCD of two numbers to finding the GCD of smaller and smaller pairs of numbers until the remainder becomes zero. At that point, the GCD is the non-zero value from the previous step."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a C++ implementation of the Euclidean Algorithm:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  // Euclidean Algorithm to find the GCD of two numbers\n  int gcd(int a, int b) {\n    if (b == 0) {\n      return a;\n    }\n  return gcd(b, a % b);\n}\n  int main() {\n  int a = 48;\n  int b = 36;\n  int result = gcd(a, b);\n  std::cout << "GCD of " << a << " and " << b << " is: " << result <<\n  std::endl;\n  return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we define the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"gcd"})," function that takes two integers,",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"a"})," and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"b"}),", and returns their GCD using the Euclidean Algorithm. The base case is when"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"b"})," becomes zero, in which case we return"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"a"}),". Otherwise, we recursively call"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"gcd"})," with"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"b"})," and the remainder of ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"a"}),"divided by ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"b"}),"."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main"})," function demonstrates the usage of the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"gcd "}),"function by finding the GCD of two numbers, 48 and 36, and printing the result."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"A daily-life related example of the Euclidean Algorithm is finding the GCD of two numbers to simplify fractions. For instance, consider a recipe that requires mixing 3/4 cup of flour and 1/2 cup of sugar. To scale up the recipe, you may want to find the largest measuring cup size that evenly divides both quantities. In this case, the GCD of 3 and 2 is 1, indicating that there are no common factors. Hence, the recipe cannot be scaled up using whole numbers of cups."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Modular Arithmetic :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Modular arithmetic is a branch of number theory that deals with the arithmetic operations performed on remainders obtained when dividing one number by another. It involves the study of numbers within a fixed range, often referred to as a modulus or modulo. Modular arithmetic has various applications in cryptography, computer science, and algorithms."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In modular arithmetic, two numbers are said to be congruent modulo m if they have the same remainder when divided by m. We denote this as a \u2261 b (mod m), which reads "a is congruent to b modulo m". The modulus m defines the range within which all calculations are performed.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some key concepts and operations in modular arithmetic:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Addition and Subtraction: In modular arithmetic, addition and subtraction are performed on the remainders of the numbers. To add or subtract two numbers modulo m, you add or subtract them as usual and take the remainder when divided by m. For example, (5 + 7) % 3 = 2, which means that 5 + 7 is congruent to 2 modulo 3."}),(0,$e.jsx)("li",{className:"pt-4",children:"Multiplication: Multiplication in modular arithmetic involves taking the remainder of the product when divided by m. To multiply two numbers modulo m, you multiply them as usual and take the remainder when divided by m. For example, (5 * 7) % 3 = 1, which means that 5 * 7 is congruent to 1 modulo 3."}),(0,$e.jsx)("li",{className:"pt-4",children:"Exponentiation: Exponentiation in modular arithmetic involves taking the remainder of the power when divided by m. To find a^b modulo m, you calculate a^b as usual and take the remainder when divided by m. This operation is especially useful in cryptography and number theory algorithms."}),(0,$e.jsx)("li",{className:"pt-4",children:"Inverses: In modular arithmetic, the inverse of a number a modulo m is another number b such that a * b \u2261 1 (mod m). Not all numbers have inverses modulo m. If a number has an inverse, it is said to be invertible or relatively prime to m. The Extended Euclidean Algorithm is commonly used to find the inverse of a number modulo m."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Modular arithmetic finds applications in various areas, including:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Cryptography: Modular arithmetic is the foundation for many cryptographic algorithms, such as the RSA encryption algorithm and the Diffie-Hellman key exchange protocol."}),(0,$e.jsx)("li",{children:"Hash Functions: Modular arithmetic is used in the computation of hash functions, which are used to map data of arbitrary size to fixed-size values."}),(0,$e.jsx)("li",{children:"Congruence Testing: Modular arithmetic is used in testing congruences and finding solutions to linear congruences."}),(0,$e.jsx)("li",{children:"Calendar Calculations: Modular arithmetic is used to calculate the day of the week, date calculations, and handling recurring patterns in calendars."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of performing modular arithmetic in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  // Addition modulo m\n  int addMod(int a, int b, int m) {\n    return (a + b) % m;\n  }\n  // Subtraction modulo m\n  int subtractMod(int a, int b, int m) {\n    return (a - b + m) % m;\n  }\n  // Multiplication modulo m\n  int multiplyMod(int a, int b, int m) {\n    return (a * b) % m;\n  }\n  // Exponentiation modulo m\n  int powerMod(int a, int b, int m) {\n    int result = 1;\n    a %= m;\n    while (b > 0) {\n      if (b % 2 == 1) {\n        result = (result * a) % m;\n    }\n  a = (a * a) % m;\n\n  b /= 2;\n  }\n  return result;\n}\n  int main() {\n  int a = 5;\n  int b = 7;\n  int m = 3;\n  std::cout << "Addition: " << addMod(a, b, m) << std::endl;\n  std::cout << "Subtraction: " << subtractMod(a, b, m) << std::endl;\n  std::cout << "Multiplication: " << multiplyMod(a, b, m) <<std::endl;\n  std::cout << "Exponentiation: " << powerMod(a, b, m) << std::endl;\n  return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define functions to perform addition, subtraction, multiplication, and exponentiation modulo m. The functions take three parameters: the two numbers to operate on (a and b) and the modulus m. The functions return the result of the operation performed modulo m."}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main "}),"function demonstrates the usage of the modular arithmetic functions by performing addition, subtraction, multiplication, and exponentiation modulo 3 on the numbers 5 and 7."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By relating modular arithmetic to practical applications, such as cryptography and calendar calculations, students can appreciate its importance and understand how it is used in various fields of study and everyday life."})]})})})},Is=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Hashing Algorithms :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Hashing algorithms are an essential part of computer science and cryptography. They are used to transform data of arbitrary size into fixed-size values, known as hash values or hash codes. Hashing algorithms have various applications, including data integrity verification, password storage, data indexing, and digital signatures."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The primary goal of a hashing algorithm is to generate a unique hash value for each unique input. It should be computationally efficient, producing a fixed-size output regardless of the input size. Additionally, a good hashing algorithm should have the following properties:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Deterministic: Given the same input, the hashing algorithm should always produce the same hash value."}),(0,$e.jsx)("li",{className:"pt-2",children:"Fast Computation: The hashing algorithm should be computationally efficient and provide a constant-time operation, regardless of the input size."}),(0,$e.jsx)("li",{className:"pt-2",children:"Uniform Distribution: The hash values should be uniformly distributed across the entire range of possible values to minimize collisions."}),(0,$e.jsx)("li",{className:"pt-2",children:"Non-invertible: It should be computationally infeasible to determine the original input data from the hash value alone. This property ensures the security and integrity of sensitive information."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Common Hashing Algorithms:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"MD5 (Message Digest Algorithm 5): MD5 is a widely used hash function that produces a 128-bit hash value. However, MD5 is considered weak for cryptographic purposes due to vulnerabilities and collision attacks."}),(0,$e.jsx)("li",{className:"pt-2",children:"SHA-1 (Secure Hash Algorithm 1): SHA-1 produces a 160-bit hash value and was widely used in the past. However, it has been deprecated for cryptographic applications due to vulnerabilities."}),(0,$e.jsx)("li",{className:"pt-2",children:"SHA-256 (Secure Hash Algorithm 256-bit): SHA-256 is a member of the SHA-2 family and produces a 256-bit hash value. It is widely used in cryptographic applications, including digital signatures and password storage."}),(0,$e.jsx)("li",{className:"pt-2",children:"SHA-3 (Secure Hash Algorithm 3): SHA-3 is the latest member of the Secure Hash Algorithm family, standardized in 2015. It provides hash functions with different output sizes, including SHA-3-256, SHA-3-384, and SHA-3-512."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a C++ example using the SHA-256 hashing algorithm from the OpenSSL library:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <iostream>\n  #include <openssl/sha.h>\n  \n  std::string sha256(const std::string& data) {\n    unsigned char hash[SHA256_DIGEST_LENGTH];\n    SHA256_CTX sha256Context;\n    SHA256_Init(&sha256Context);\n    SHA256_Update(&sha256Context, data.c_str(), data.length());\n    SHA256_Final(hash, &sha256Context);\n    std::string hashString;\n    for (int i = 0; i < SHA256_DIGEST_LENGTH; i++) {\n      hashString += hash[i];\n    }\n    return hashString;\n  }\n    int main() {\n    std::string data = "Hello, World!";\n    std::string hashValue = sha256(data);\n    std::cout << "Original Data: " << data << std::endl;\n    std::cout << "SHA-256 Hash Value: ";\n    for (char ch : hashValue) {\n      std::cout << std::hex << (int)(unsigned char)ch;\n    }\n    std::cout << std::endl;\n    return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we define the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"sha256"})," function that takes a string as input and returns its SHA-256 hash value. It uses the SHA-256 functions from the OpenSSL library to perform the hash computation. The resulting hash value is stored in a string of characters."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main"})," function demonstrates the usage of the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"sha256"}),' function by hashing the string "Hello, World!" using the SHA-256 algorithm and printing the resulting hash value.']}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"It's important to note that this example uses the OpenSSL library for simplicity. In real-world applications, you should use well-established and tested libraries that provide secure and efficient implementations of hashing algorithms."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Hashing algorithms have numerous applications, such as ensuring data integrity, storing passwords securely, and creating unique identifiers. By understanding hashing algorithms and their properties, students can appreciate their importance in various fields, including cybersecurity and database management."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Collision Resolution:"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Collision resolution is a fundamental concept in computer science and hash table data structures. When using hash functions to map keys to values, collisions occur when two or more keys are mapped to the same hash value. Collision resolution techniques are used to handle these collisions and ensure the correct retrieval and storage of values."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"There are several collision resolution strategies that can be employed, and one common approach is called chaining. Chaining involves creating a linked list or any other appropriate data structure at each hash table slot. When a collision occurs, the new key-value pair is appended to the list associated with that slot."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In this example, we define a HashTable class that implements a hash table using chaining as the collision resolution strategy. The class maintains a vector of linked lists, where each slot in the vector represents a potential hash table entry. The insert, search, and remove methods demonstrate the basic operations of the hash table."}),(0,$e.jsx)(Gt,{children:'\n  \n  #include <iostream>\n  #include <list>\n  #include <vector>\n  class HashTable {\n    private:\n    int numSlots; // Number of slots in the hash table\n    std::vector<std::list<int>> table; // Hash table as a vector of linked lists\n    int hashFunction(int key) {\n    // Simple hash function: key mod numSlots\n      return key % numSlots;\n  }\n  public:\n  HashTable(int size) {\n    numSlots = size;\n    table.resize(numSlots);\n  }\n  void insert(int key) {\n  int slot = hashFunction(key);\n  table[slot].push_back(key);\n}\n  void search(int key) {\n  int slot = hashFunction(key);\n  std::list<int>& slotList = table[slot];\n  // Linear search within the slot\'s linked list\n  for (int value : slotList) {\n    if (value == key) {\n    std::cout << "Key " << key << " found!" << std::endl;\n    return;\n  }\n}\n  std::cout << "Key " << key << " not found!" << std::endl;\n}\n  void remove(int key) {\n  int slot = hashFunction(key);\n  std::list<int>& slotList = table[slot];\n  // Linear search within the slot\'s linked list\n  for (auto it = slotList.begin(); it != slotList.end(); ++it) {\n    if (*it == key) {\n    slotList.erase(it);\n    std::cout << "Key " << key << " removed!" << std::endl;\n    return;\n  }\n}\n  std::cout << "Key " << key << " not found!" << std::endl;\n  }\n};\n  int main() {\n  // Create a hash table with 10 slots\n\n  HashTable hashTable(10);\n  // Insert some keys\n  hashTable.insert(5);\n  hashTable.insert(15);\n  hashTable.insert(25);\n  // Search for a key\n  hashTable.search(15);\n  // Remove a key\n  hashTable.remove(15);\n  // Search for the removed key\n  hashTable.search(15);\n  return 0;\n}'}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The hashFunction method is a simple hash function that calculates the slot index by taking the key modulo the number of slots in the hash table. This is a basic example, and in practice, more advanced hash functions are used to distribute the keys evenly across the hash table."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'The insert method calculates the hash slot for the key, and the key is appended to the linked list at that slot. The search method performs a linear search within the linked list to find the key. If the key is found, a corresponding message is printed. Otherwise, a "not found" message is printed. The remove method also performs a linear search to find and remove the key from the linked list.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By understanding collision resolution techniques like chaining, students can appreciate the importance of handling collisions in hash table implementations and ensure efficient retrieval and storage of dataere's a detailed explanation of collision resolution using chaining in C++:"})]})})})},Cs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Recursion :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Recursion is a programming concept where a function calls itself to solve a problem by breaking it down into smaller, simpler subproblems. It is a powerful technique used in many algorithms and can provide elegant solutions to a wide range of problems. Recursion involves two main components: the base case and the recursive case."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The base case is the simplest form of the problem that can be directly solved without further recursion. It acts as the termination condition for the recursive calls, preventing an infinite loop. When the base case is reached, the recursion stops, and the function returns a result."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The recursive case defines how the problem is broken down into smaller subproblems. In the recursive case, the function calls itself one or more times with modified parameters, moving closer to the base case with each recursive call. The results of the recursive calls are then combined to solve the original problem."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of recursion in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int factorial(int n) {\n    // Base case: factorial of 0 or 1 is 1\n    if (n == 0 || n == 1) {\n      return 1;\n  }\n    // Recursive case: factorial of n is n multiplied by factorial of n-1\n    else {\n      return n * factorial(n - 1);\n    }\n  }\n  int main() {\n    int num = 5;\n    int result = factorial(num);\n    std::cout << "Factorial of " << num << " is: " << result <<\n    std::endl;\n    return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we define a function"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"subsetSum"})," ","factorial that calculates the factorial of a given number using recursion. The factorial of a number n is the product of all positive integers from 1 to n."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"factorial"})," ","function, we have a base case when"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"n "})," is"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" 0"})," or"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" 1"}),". In this case, the function returns 1 as the factorial of"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" 0"})," or"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"1"})," is"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"1"})," ."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["For any other value of"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"n"})," , we have a recursive case. The function calls itself with the parameter"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"n-1"})," and multiplies it by ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"n"})," . This recursive call continues until the base case is reached, and the function returns the final result."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main "})," ","function, we call the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"factorial"})," function with ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" num "}),"equal to"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" 5 "}),"and store the result in the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"result"})," variable. We then print the factorial of"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" num"}),"."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Recursion finds applications in many algorithms, such as tree traversals, graph traversals, sorting algorithms like quicksort and mergesort, and many more. By understanding recursion, students can grasp the power of breaking down complex problems into simpler subproblems and appreciate its usefulness in solving various real-life scenarios."})]})})})},Os=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bitwise Operations,Shift,Mask,Counting :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bit manipulation involves performing operations on individual bits of binary numbers. It is a powerful technique used in computer programming to optimize code, perform low-level operations, and solve various problems efficiently. Understanding bit manipulation can help students gain insights into how computers represent and manipulate data at the lowest level."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In C++, bitwise operators are used to perform bit manipulation. The common bitwise operators are:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["AND ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"&"})," : Performs a bitwise AND operation on two numbers, producing a result where each bit is set if and only if the corresponding bits of both numbers are set."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["OR ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"|"})," : Performs a bitwise OR operation on two numbers, producing a result where each bit is set if either of the corresponding bits of the two numbers is set."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["XOR ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"^"})," : Performs a bitwise XOR (exclusive OR) operation on two numbers, producing a result where each bit is set if and only if the corresponding bits of the two numbers are different."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["NOT ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"~"})," : Performs a bitwise NOT operation on a number, flipping all its bits."]})]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Bitwise operators are applied to the binary representation of numbers at the bit level. For example, the number"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"5"})," in binary is",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101"}),", and the number 3 in binary is"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"011"}),". Here's an example that demonstrates bit manipulation using bitwise operators in C++:"]}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int main() {\n    int a = 5; // 101 in binary\n    int b = 3; // 011 in binary\n    int bitwiseAnd = a & b;\n    int bitwiseOr = a | b;\n    int bitwiseXor = a ^ b;\n    int bitwiseNotA = ~a;\n    std::cout << "Bitwise AND: " << bitwiseAnd << std::endl;\n    std::cout << "Bitwise OR: " << bitwiseOr << std::endl;\n    std::cout << "Bitwise XOR: " << bitwiseXor << std::endl;\n    std::cout << "Bitwise NOT of a: " << bitwiseNotA << std::endl;\n    return 0;\n  }\n  \n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we perform various bitwise operations on the numbers ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"a"})," and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"b"}),". We use the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"&"})," operator for bitwise AND, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"|"})," ","operator for bitwise OR,"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"^"})," operator for bitwise XOR, and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"~"})," ","operator for bitwise NOT. The results of the operations are stored in separate variables and printed."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Students can find daily life applications of bit manipulation in various scenarios, such as:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Bitwise operations are used in low-level programming to efficiently manipulate device registers, memory-mapped I/O, and perform data compression."}),(0,$e.jsx)("li",{className:"pt-2",children:"Bit manipulation is employed in network protocols to pack and unpack flags, options, and fields within headers."}),(0,$e.jsx)("li",{className:"pt-2",children:"Bitwise operations are used in cryptography algorithms, such as encryption and hashing, to perform bitwise permutations, substitutions, and transformations."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By understanding bit manipulation, students can gain insights into the internal working of computers, optimize code for performance, and solve problems more efficiently, especially in areas like embedded systems, cryptography, and networking."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("br",{}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bitwise Operations,Shift,Mask,Counting :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitwise operations, shift operations, masking, and counting are fundamental techniques used in computer programming for manipulating individual bits or groups of bits in binary numbers. These operations are efficient and provide a way to perform low-level operations on binary data, such as setting or clearing specific bits, extracting or modifying certain bit patterns, and counting the number of set bits."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"1. Bitwise Operations:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["Bitwise AND ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"&"})," : Performs a bitwise AND operation on two numbers, producing a result where each bit is set if and only if the corresponding bits of both numbers are set."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["Bitwise OR ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"|"})," : Performs a bitwise OR operation on two numbers, producing a result where each bit is set if either of the corresponding bits of the two numbers is set."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["Bitwise XOR ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"^"})," : Performs a bitwise XOR (exclusive OR) operation on two numbers, producing a result where each bit is set if and only if the corresponding bits of the two numbers are different."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["Bitwise NOT ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"~"})," : Performs a bitwise NOT operation on a number, flipping all its bits."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"2. Shift Operations:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:["Left Shift"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"<<"})," : Shifts the bits of a number to the left by a specified number of positions. This effectively multiplies the number by 2 raised to the power of the shift amount."]}),(0,$e.jsxs)("li",{className:"pt-2",children:["Right Shift"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:">>"})," : Shifts the bits of a number to the right by a specified number of positions. For unsigned numbers, this is equivalent to division by 2 raised to the power of the shift amount. For signed numbers, the sign bit is preserved."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"3. Masking:"}),(0,$e.jsx)("ul",{className:"list-decimal px-10",children:(0,$e.jsxs)("li",{className:"pt-4",children:["Masking involves using bitwise AND (",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"&"}),") operations with a binary pattern to selectively manipulate specific bits in a number. By applying a mask, certain bits can be set to 0 or 1 while leaving the rest unchanged."]})}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"4. Counting:"}),(0,$e.jsx)("ul",{className:"list-decimal px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Counting the number of set bits (bits with a value of 1) in a binary number is a common task in programming. Efficient algorithms, such as the Brian Kernighan's algorithm, use bitwise operations to count the set bits in a number."})}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's a simple example in C++ that demonstrates these bitwise operations:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int main() {\n    unsigned int num = 45; // Binary: 00101101\n    // Bitwise AND\n    unsigned int resultAnd = num & 12; // Binary: 00001100\n    std::cout << "Bitwise AND: " << resultAnd << std::endl;\n    // Bitwise OR\n    unsigned int resultOr = num | 12; // Binary: 00101101\n    std::cout << "Bitwise OR: " << resultOr << std::endl;\n    // Bitwise XOR\n    unsigned int resultXor = num ^ 12; // Binary: 00100001\n    std::cout << "Bitwise XOR: " << resultXor << std::endl;\n    // Bitwise NOT\n    unsigned int resultNot = ~num; // Binary: 11010010\n    std::cout << "Bitwise NOT: " << resultNot << std::endl;\n    // Left Shift\n    unsigned int resultLeftShift = num << 2; // Binary: 10110100\n  \n    std::cout << "Left Shift: " << resultLeftShift << std::endl;\n    // Right Shift\n    unsigned int resultRightShift = num >> 2; // Binary: 00001011\n    std::cout << "Right Shift: " << resultRightShift << std::endl;\n    // Masking\n    unsigned int mask = 0b00001111; // Binary: 00001111\n    unsigned int resultMask = num & mask; // Binary: 00001101\n    std::cout << "Masking: " << resultMask << std::endl;\n    // Counting Set Bits\n    unsigned int count = 0;\n    unsigned int temp = num;\n    while (temp > 0) {\n      temp = temp & (temp - 1);\n      count++;\n    }\n    std::cout << "Set Bit Count: " << count << std::endl;\n    return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we perform various bitwise operations on the number",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" num"})," and print the results. We demonstrate bitwise AND, OR, XOR, NOT, left shift, right shift, masking, and counting set bits using the Brian Kernighan's algorithm."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitwise operations and techniques like shifting, masking, and counting find applications in various areas, including:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Low-level programming, such as device drivers and embedded systems."}),(0,$e.jsx)("li",{className:"pt-4",children:"Networking and network protocols for packing and unpacking data."}),(0,$e.jsx)("li",{className:"pt-4",children:"Data compression and encryption algorithms."}),(0,$e.jsx)("li",{className:"pt-4",children:"Graphics and image processing."}),(0,$e.jsx)("li",{className:"pt-4",children:"Bit-level optimizations for performance improvements."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Understanding these techniques can enhance a student's programming skills and enable them to solve problems more efficiently, particularly when working with binary data, optimization, or low-level operations."})]})})})},Rs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bitwise Manipulation of Integers :"}),(0,$e.jsx)("br",{}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["Bitwise manipulation of integers involves performing operations on the individual bits of the binary representation of the integers. This technique allows for efficient manipulation and extraction of specific bits or patterns within the binary representation. Bitwise operations in C++ are performed using the bitwise operators"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"& "}),","," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"|"}),","," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"^ "}),",",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"~ "}),", and the shift operators ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"<<"}),"and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:">>"}),"."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here are some common bitwise operations on integers:"}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["1. Bitwise AND"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(&) "}),":"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Performs a bitwise AND operation on corresponding bits of two integers."}),(0,$e.jsx)("li",{className:"pt-2",children:"The result is 1 if both bits are 1; otherwise, it is 0."}),(0,$e.jsxs)("li",{className:"pt-2",children:["Example: ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"5 & 3"})," ","performs a bitwise AND on binary representations",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),"and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"011"}),", resulting in ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"001"})," (decimal 1)."]})]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["2. Bitwise OR ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(|)"}),":"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Performs a bitwise OR operation on corresponding bits of two integers."}),(0,$e.jsx)("li",{className:"pt-2",children:"The result is 1 if either of the bits is 1; otherwise, it is 0."}),(0,$e.jsxs)("li",{className:"pt-2",children:["Example: ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"5 | 3 "})," ","performs a bitwise OR on binary representations"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),"and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"011 "}),", resulting in ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"111"})," (decimal 7)."]})]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["3. Bitwise XOR"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(^) "}),":"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Performs a bitwise XOR (exclusive OR) operation on corresponding bits of two integers."}),(0,$e.jsx)("li",{className:"pt-2",children:"The result is 1 if the bits are different; otherwise, it is 0."}),(0,$e.jsxs)("li",{className:"pt-2",children:["Example: ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"5 ^ 3"})," ","performs a bitwise XOR on binary representations",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),"and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"011"}),", resulting in ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"110 "}),"(decimal 6)."]})]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["4. Bitwise NOT ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(~)"}),":"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Performs a bitwise NOT operation on an integer, flipping all the bits."}),(0,$e.jsxs)("li",{className:"pt-2",children:["Example: ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"~5 "}),"performs a bitwise NOT on binary representation"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),", resulting in ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"11111110 "}),"(decimal -6)."]})]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["5. Left Shift"," ",(0,$e.jsxs)("span",{className:"code-text italic text-sm",children:["<<"," "]}),":"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Shifts the bits of an integer to the left by a specified number of positions."}),(0,$e.jsx)("li",{className:"pt-2",children:"The vacant bits on the right are filled with zeros."}),(0,$e.jsxs)("li",{className:"pt-2",children:["Example:"," ",(0,$e.jsxs)("span",{className:"code-text italic text-sm",children:["5 ","<<"," 2"]})," ","shifts the bits of binary representation"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),"two positions to the left, resulting in"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"10100 "}),"(decimal 20)."]})]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["6. Right Shift"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),">>",":"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Shifts the bits of an integer to the right by a specified number of positions."}),(0,$e.jsx)("li",{className:"pt-2",children:"The vacant bits on the left are filled based on the sign bit for signed integers."}),(0,$e.jsxs)("li",{className:"pt-2",children:["Example:"," ",(0,$e.jsxs)("span",{className:"code-text italic text-sm",children:["5 ",">>"," 2"]})," ","shifts the bits of binary representation"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"101 "}),"two positions to the right, resulting in"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"1"})," (decimal 1)."]})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example that demonstrates bitwise manipulation of integers in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  int main() {\n    int num1 = 5;\n    int num2 = 3;\n    int bitwiseAnd = num1 & num2;\n    int bitwiseOr = num1 | num2;\n    int bitwiseXor = num1 ^ num2;\n    int bitwiseNot = ~num1;\n    int leftShift = num1 << 2;\n    int rightShift = num1 >> 2;\n    std::cout << "Bitwise AND: " << bitwiseAnd << std::endl;\n    std::cout << "Bitwise OR: " << bitwiseOr << std::endl;\n    std::cout << "Bitwise XOR: " << bitwiseXor << std::endl;\n    std::cout << "Bitwise NOT: " << bitwiseNot << std::endl;\n    std::cout << "Left Shift: " << leftShift << std::endl;\n    std::cout << "Right Shift: " << rightShift << std::endl;\n    return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, we perform various bitwise operations on the integers ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"num1 "})," and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"num2 "}),". We use the bitwise operators"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"&"}),","," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"|"}),","," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"^"}),", and"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"~"}),"for bitwise AND, OR, XOR, and NOT operations, respectively. We also use the shift operators"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"<<"})," and"," ",(0,$e.jsxs)("span",{className:"code-text italic text-sm",children:[">>"," "]})," for left shift and right shift operations."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitwise manipulation of integers is commonly used in areas such as:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Low-level programming, including embedded systems and device drivers."}),(0,$e.jsx)("li",{className:"pt-2",children:"Network programming for handling network protocols and bitwise flags."}),(0,$e.jsx)("li",{className:"pt-2",children:"Data compression algorithms, such as Huffman coding and run-length encoding."}),(0,$e.jsx)("li",{className:"pt-2",children:"Cryptography for bitwise operations on encryption and decryption algorithms."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By understanding bitwise manipulation, students can gain insights into the binary representation of integers and optimize code for performance-critical operations. It is a useful skill when dealing with low-level programming, optimization, and algorithmic problems."})]})})})},As=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Bitwise Tricks, Optimization, and Bitboards :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitwise tricks, optimization, and bitboards are advanced techniques used in computer programming to optimize performance, minimize memory usage, and efficiently manipulate large sets of bits. These techniques leverage bitwise operations and the binary representation of data to achieve significant speed and memory improvements in various applications."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"1. Bitwise Tricks:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Counting Set Bits: Brian Kernighan's algorithm and other bitwise techniques can efficiently count the number of set bits (bits with a value of 1) in an integer. This is useful in tasks such as population count or finding parity."}),(0,$e.jsx)("li",{className:"pt-2",children:"Finding the Most Significant Bit (MSB): Bit shifting and bitwise operations can be used to determine the position of the leftmost set bit in an integer, known as the most significant bit."}),(0,$e.jsx)("li",{className:"pt-2",children:"Swapping Values: XOR bitwise operation can be used to swap the values of two variables without using a temporary variable. This trick exploits the property that a XOR a results in 0."}),(0,$e.jsx)("li",{className:"pt-2",children:"Checking Power of Two: By using bitwise operations, it is possible to determine whether an integer is a power of two. This is useful in various algorithms and optimizations."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"2. Optimization with Bitwise Operations:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Bitwise operations can be used to perform arithmetic operations, such as addition, subtraction, and multiplication, on binary numbers efficiently."}),(0,$e.jsx)("li",{className:"pt-4",children:"Bit masking techniques can extract specific bits or groups of bits from an integer by applying bitwise AND operations with appropriate masks."}),(0,$e.jsx)("li",{className:"pt-4",children:"Bit manipulation can be used to optimise code by avoiding costly conditional statements or loops, replacing them with bitwise operations."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"3. Bitboards:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Bitboards are a technique used in board game programming, especially chess and other board games played on grids. A bitboard represents the game state using a binary representation, where each bit represents a specific position or attribute on the board."}),(0,$e.jsx)("li",{className:"pt-4",children:"Bitboards allow for efficient and compact storage of game states, enabling fast move generation, legal move checking, and evaluation functions."}),(0,$e.jsx)("li",{className:"pt-4",children:"Bitwise operations, such as bitwise AND, OR, XOR, and shifts, are used extensively in bitboard-based algorithms for move generation, evaluation, and game search."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Here's an example of using bitboards in chess programming:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <bitset>\n  // Define a chess board bitboard\n  typedef std::bitset<64> Bitboard;\n  int main() {\n    // Initialize an empty chess board\n    Bitboard board(0);\n    // Set a piece at square e4\n    board.set(28);\n    // Print the bitboard representation\n    std::cout << board << std::endl;\n    // Check if square d4 is occupied\n    bool isOccupied = board.test(27);\n    std::cout << "Is square d4 occupied? " << std::boolalpha <<\n    isOccupied << std::endl;\n    // Shift the bitboard one rank up\n    Bitboard shiftedBoard = board << 8;\n    std::cout << "Shifted board: " << shiftedBoard << std::endl;\n    return 0;\n  }\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, a bitboard is represented using a"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"std::bitset"})," with a size of 64, corresponding to a standard chessboard. Operations such as setting a piece, testing if a square is occupied, and shifting the board are performed using bitwise operations."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Bitwise tricks, optimization, and bitboards are frequently used in performance-critical applications, such as game programming, graphics, network protocols, and cryptography. Understanding these techniques can greatly enhance a student's programming skills and enable them to optimise code and tackle complex problems more efficiently."})]})})})},ks=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Time complexity & Space complexity :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Time complexity and space complexity are two important measures used to analyze the efficiency and resource usage of an algorithm. They provide insights into how the algorithm's performance scales with input size and help in making informed decisions regarding algorithm selection and optimization. Here's a brief explanation of time complexity and space complexity, along with their advantages in programming:"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"1. Time Complexity:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Time complexity measures the amount of time taken by an algorithm to run as a function of the input size."}),(0,$e.jsx)("li",{className:"pt-2",children:"It helps in understanding how the algorithm's performance degrades as the input size increases."}),(0,$e.jsx)("li",{className:"pt-2",children:"Time complexity is expressed using big O notation, which provides an upper bound on the growth rate of the algorithm's running time."}),(0,$e.jsx)("li",{className:"pt-2",children:"For example, an algorithm with a time complexity of O(n) means that the running time grows linearly with the input size, while O(n^2) indicates quadratic growth."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"2. Advantages:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Allows programmers to compare the efficiency of different algorithms for solving the same problem."}),(0,$e.jsx)("li",{className:"pt-2",children:"Helps identify bottlenecks and performance issues in algorithms."}),(0,$e.jsx)("li",{className:"pt-2",children:"Guides algorithm selection based on the desired scalability and performance requirements."}),(0,$e.jsx)("li",{className:"pt-2",children:"Enables estimation of the running time for large input sizes without actually executing the algorithm."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"3. Space Complexity:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Space complexity measures the amount of memory required by an algorithm to solve a problem as a function of the input size."}),(0,$e.jsx)("li",{className:"pt-2",children:"It helps in understanding the algorithm's memory usage and resource requirements."}),(0,$e.jsx)("li",{className:"pt-2",children:"Space complexity is also expressed using big O notation, indicating the upper bound on the amount of memory used by the algorithm."}),(0,$e.jsx)("li",{className:"pt-2",children:"For example, an algorithm with a space complexity of O(n) means that the memory usage grows linearly with the input size."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"4. Advantages:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Helps in analyzing and optimizing memory usage, especially in resource-constrained environments."}),(0,$e.jsx)("li",{className:"pt-2",children:"Enables estimation of the memory requirements for large input sizes."}),(0,$e.jsx)("li",{className:"pt-2",children:"Guides data structure and algorithm choices based on available memory resources."}),(0,$e.jsx)("li",{className:"pt-2",children:"Identifies potential memory leaks or excessive memory usage in programs."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"By analyzing the time and space complexities of algorithms, programmers can make informed decisions regarding algorithm design, selection, and optimization. These complexities serve as a basis for evaluating and comparing algorithms, ensuring that the chosen solution is efficient and scalable for a given problem and input size. Additionally, understanding the resource requirements of an algorithm allows programmers to optimize memory usage and identify potential performance bottlenecks, resulting in more efficient and robust code."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Studying algorithms is highly beneficial and useful in daily life for several reasons:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Problem Solving: Algorithms provide structured approaches to problem-solving. They teach you how to break down complex problems into smaller, more manageable parts and devise efficient solutions. This skill is valuable in various aspects of life, such as planning, decision-making, and troubleshooting."}),(0,$e.jsx)("li",{className:"pt-2",children:"Efficiency and Optimization: Algorithms help in optimizing processes and improving efficiency. By understanding algorithms, you can analyze and improve the efficiency of everyday tasks, such as organizing data, searching for information, sorting items, and managing resources. This can save time, reduce effort, and enhance productivity."}),(0,$e.jsx)("li",{className:"pt-2",children:"Critical Thinking and Analytical Skills: Studying algorithms sharpens your critical thinking and analytical skills. It trains your mind to think logically, analyze problems, and devise systematic approaches to find solutions. These skills are transferable to many real-life situations, including personal, academic, and professional endeavors."}),(0,$e.jsx)("li",{className:"pt-2",children:"Software Development: Algorithms form the foundation of software development. They are crucial for designing efficient algorithms, data structures, and software systems. Whether you're a programmer or someone who uses software applications, understanding algorithms allows you to make informed choices, optimize code, and develop efficient solutions."}),(0,$e.jsx)("li",{className:"pt-2",children:"Decision-Making and Planning: Algorithms help in making informed decisions and planning strategies. They provide frameworks for analyzing data, evaluating options, and selecting the best course of action. From financial planning to project management, algorithms assist in optimizing resource allocation, minimizing risks, and achieving desired outcomes."}),(0,$e.jsx)("li",{className:"pt-2",children:"Pattern Recognition: Algorithms teach you to recognize patterns and structures in data. This skill is useful in various domains, such as data analysis, market research, scientific research, and problem detection. By identifying patterns, you can extract meaningful insights, make predictions, and identify opportunities or anomalies."}),(0,$e.jsx)("li",{className:"pt-2",children:"Logical Reasoning: Studying algorithms enhances your logical reasoning abilities. It trains you to identify cause-and-effect relationships, understand dependencies, and draw logical conclusions. These skills are valuable in decision-making, argumentation, and understanding complex systems."}),(0,$e.jsx)("li",{className:"pt-2",children:"Personal Development: Learning algorithms fosters intellectual growth, problem-solving abilities, and a systematic approach to tackling challenges. It nurtures qualities like perseverance, attention to detail, creativity, and adaptability. These attributes contribute to personal development and lifelong learning."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In summary, studying algorithms equips you with problem-solving skills, enhances efficiency and optimization, improves critical thinking, aids decision-making and planning, facilitates software development, develops pattern recognition abilities, strengthens logical reasoning, and contributes to personal development. These benefits extend beyond computer science and find application in daily life, helping you navigate challenges, make informed choices, and excel in various endeavors."})]})})})},Ds=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Selection Sort :"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a collection of toys in your room that you want to sort based on their size from smallest to largest using the Selection Sort algorithm. Here's how the algorithm works:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Why do we use Selection Sort?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"1. Selection Sort helps us organise things in a specific order. In this case, we want to arrange the toys by size. By using Selection Sort, we can compare the toys and swap them if they are in the wrong order until they are arranged correctly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Time Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'2. Selection Sort requires going through the toys multiple times to find the smallest toy and place it in the correct position. The time it takes to sort the toys using Selection Sort increases as the number of toys grows. For example, if you have 10 toys, it may take about 45 comparisons to sort them. The number of comparisons can be calculated as (n^2)/2, where "n" is the number of toys.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"Space Complexity:"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"3. Selection Sort is an \"in-place\" sorting algorithm, which means it doesn't require any extra space to sort the toys. You can arrange the toys in your room without needing any additional containers. So, we say that Selection Sort has a space complexity of O(1), which means it doesn't need any extra memory proportional to the number of toys."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example of Selection Sort implemented in C++ using the toy sorting scenario:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  \n  void selectionSort(int toys[], int size) {\n      // Iterate through the toys\n      for (int i = 0; i < size - 1; i++) {\n          int smallestIndex = i;\n          // Find the index of the smallest toy\n          for (int j = i + 1; j < size; j++) {\n              if (toys[j] < toys[smallestIndex]) {\n                  smallestIndex = j;\n              }\n          }\n          // Swap the smallest toy with the current toy\n          int temp = toys[smallestIndex];\n          toys[smallestIndex] = toys[i];\n          toys[i] = temp;\n      }\n  }\n  \n  int main() {\n      int toys[] = {5, 2, 8, 3}; // Each number represents the size of a toy\n      int size = sizeof(toys) / sizeof(toys[0]);\n  \n      // Print the toys before sorting\n      std::cout << "Toys before sorting: ";\n      for (int i = 0; i < size; i++) {\n          std::cout << toys[i] << " ";\n      }\n      std::cout << std::endl;\n  \n      // Apply Selection Sort to arrange the toys\n      selectionSort(toys, size);\n  \n      // Print the toys after sorting\n      std::cout << "Toys after sorting: ";\n      for (int i = 0; i < size; i++) {\n          std::cout << toys[i] << " ";\n      }\n      std::cout << std::endl;\n  \n      return 0;\n  }\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we have an array representing the sizes of four toys: [5, 2, 8, 3]. After applying Selection Sort, the array will be sorted in ascending order based on toy size: [2, 3, 5, 8]."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code uses two loops to go through the toys. In each iteration, it finds the index of the smallest toy from the unsorted part of the array and swaps it with the current toy. It repeats this process until the toys are arranged in the correct order."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"I hope this explanation and code example help you understand Selection Sort with a life-related scenario in a simplified way!"})]})})})},Ps=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Number Theory :"}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Number Theory is a branch of mathematics that deals with the properties and relationships of numbers. It has applications in various fields, including computer science, cryptography, and algorithms. Understanding Number Theory can help students develop problem-solving skills and gain insights into the fundamental properties of numbers. Here, I'll provide an explanation of Number Theory concepts and provide a C++ example with a daily-life related problem to make it more interesting and relatable."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Number Theory Concepts:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Prime Numbers: Prime numbers are positive integers greater than 1 that have no divisors other than 1 and themselves. They play a crucial role in various Number Theory algorithms and applications, such as cryptography and prime factorization."}),(0,$e.jsx)("li",{className:"pt-4",children:"GCD and LCM: The Greatest Common Divisor (GCD) of two integers is the largest positive integer that divides both numbers without leaving a remainder. The Least Common Multiple (LCM) of two integers is the smallest positive integer that is divisible by both numbers. GCD and LCM are useful for various tasks, such as simplifying fractions and solving linear Diophantine equations."}),(0,$e.jsx)("li",{className:"pt-4",children:"Modular Arithmetic: Modular arithmetic deals with the remainders obtained when dividing one number by another. It is often used in cryptography, hashing algorithms, and finding patterns in sequences. Modular arithmetic operations include addition, subtraction, multiplication, and exponentiation."}),(0,$e.jsx)("li",{className:"pt-4",children:"Primality Testing: Primality testing algorithms determine whether a given number is prime or composite. These algorithms are important in cryptography, random number generation, and number factorization."})]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Daily-Life Related Example: Let's consider a daily-life related example to illustrate Number Theory concepts. Imagine you are designing a secure messaging application that requires generating a unique identification number (ID) for each user. The ID should be a large prime number to ensure uniqueness and security."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"To generate such an ID, you can utilize Number Theory algorithms. One approach is to use a primality testing algorithm, such as the Miller-Rabin primality test, to check if a randomly generated number is prime. If the number is not prime, you increment it until a prime number is found. Additionally, you can use modular arithmetic operations to handle large numbers efficiently and securely."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"C++ Implementation: Here's an example of generating a large prime number for the user ID in C++:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n  #include <random>\n  #include <cmath>\n  using namespace std;\n  // Primality testing using the Miller-Rabin algorithm\n  bool isPrime(long long n, int k) {\n    if (n <= 1) return false;\n    if (n <= 3) return true;\n    if (n % 2 == 0) return false;\n    long long d = n - 1;\n    while (d % 2 == 0) {\n      d /= 2;\n    }\n  for (int i = 0; i < k; i++) {\n    long long a = 2 + rand() % (n - 3);\n    long long x = pow(a, d);\n    x %= n;\n    if (x == 1 || x == n - 1) continue;\n      while (d != n - 1) {\n        x *= x;\n        x %= n;\n        d *= 2;\n        if (x == 1) return false;\n          if (x == n - 1) break;\n      }\n    if (x != n - 1) return false;\n  }\n  return true;\n}\n  // Generate a random prime number\n  long long generatePrime(int bitLength) {\n    random_device rd;\n    mt19937_64 gen(rd());\n    uniform_int_distribution<long long> dist(1ULL << (bitLength - 1),\n    (1ULL << bitLength) - 1);\n    long long prime = dist(gen);\n    while (!isPrime(prime, 20)) {\n      prime++;\n    }\n  return prime;\n}\n  int main() {\n  int bitLength = 1024; // Desired bit length of the prime number\n  long long prime = generatePrime(bitLength);\n  cout << "Generated Prime Number: " << prime << endl;\n  return 0;\n}\n  '}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["In this example, the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"isPrime"})," function implements the Miller-Rabin primality testing algorithm to check if a number is prime. The"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"generatePrime"})," ","function uses a random number generator to generate a large random number within the desired bit length. It then increments the number until a prime number is found using the"," ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"isPrime"}),"function."]}),(0,$e.jsxs)("p",{className:"text-justify pt-4",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"main"})," function demonstrates the usage of the functions by generating a large prime number and printing it as the user ID for the messaging application."]})]})})})},Ms=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 text-md text-justify",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Top-Down Approach (Recursive Approach)"}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"The top-down approach, also known as the recursive approach, is a problem-solving technique where you break down a complex problem into smaller subproblems and solve them recursively. It involves solving the problem at hand by dividing it into smaller instances of the same problem until reaching a base case, which is a trivial problem that can be solved directly."}),(0,$e.jsx)("br",{}),(0,$e.jsx)("p",{className:"",children:"To illustrate this approach with a real-life example, let's consider the problem of calculating the factorial of a number. The factorial of a non-negative integer n, denoted as n!, is the product of all positive integers less than or equal to n. For example, 5! = 5 * 4 * 3 * 2 * 1 = 120."}),(0,$e.jsx)("p",{className:"pt-4",children:"We can solve this problem using a top-down approach in C++. Here's an example code that calculates the factorial recursively:"}),(0,$e.jsx)(Gt,{children:'\n  #include <iostream>\n\n// Function to calculate the factorial\nint factorial(int n) {\n    // Base case: factorial of 0 is 1\n    if (n == 0) {\n        return 1;\n    }\n    // Recursive case: calculate factorial of n by multiplying it with factorial(n-1)\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int number;\n    std::cout << "Enter a non-negative integer: ";\n    std::cin >> number;\n    \n    // Calculate and display the factorial\n    int result = factorial(number);\n    std::cout << "Factorial of " << number << " is " << result << std::endl;\n    \n    return 0;\n}\n  '}),(0,$e.jsx)("p",{className:"pt-4",children:"In the above code, the factorial function takes an integer n as input. It checks for the base case when n is equal to 0 and returns 1. Otherwise, it recursively calls the factorial function with the argument n-1 and multiplies it with n. The recursive calls continue until reaching the base case."}),(0,$e.jsx)("p",{className:"pt-4",children:'This recursive approach breaks down the factorial calculation into smaller subproblems by reducing the value of n at each step. It simplifies the problem by reusing the solution to a smaller instance of the same problem. Eventually, the base case is reached, and the recursion "unwinds," combining the solutions of smaller subproblems to compute the factorial of the original number.'}),(0,$e.jsx)("p",{className:"pt-4",children:"The time complexity of the top-down approach for calculating the factorial is O(n), where n is the input number. This is because the recursive function makes n recursive calls, each time reducing the value of n by 1, until reaching the base case where n is 0. Therefore, the number of recursive calls is directly proportional to n."}),(0,$e.jsx)("p",{className:"pt-4",children:"The space complexity of the top-down approach is O(n) as well. This is because each recursive call requires additional space on the call stack to store its local variables and return address. In this case, since the maximum depth of the recursion is n (when n is the input number), the space required on the call stack is proportional to n."})]})})})},Ls=[{id:1,path:"/IoT/IoT-Introduction-To-IoT",name:"Introduction To IoT ",subRoutes:[{path:"/IoT/IoT-Intro-Definition",name:"Definition and basic concepts of IoT"},{path:"/IoT/IoT-Intro-Historical",name:"Historical background and evolution of IoT"},{path:"/IoT/IoT-Intro-Importance",name:"Importance and applications of IoT in various industries"}]},{id:2,path:"/IoT/Architecture",name:"IoT Architecture ",subRoutes:[{path:"/IoT/IoT-Architect-Overview",name:"Overview of IoT architecture layers "},{path:"/IoT/IoT-Architect-Sensor",name:"Sensor and actuator technologies"},{path:"/IoT/IoT-Architect-Communication",name:"Communication protocols for IoT "},{path:"/IoT/IoT-Architect-Gateway",name:"IoT gateway and edge computing"}]},{id:3,path:"/IoT/Devices-and-Platforms",name:"IoT Devices and Platforms",subRoutes:[{path:"/IoT/IoT-Devices-Hardware",name:"IoT hardware components "},{path:"/IoT/IoT-Devices-Development",name:"IoT development boards "},{path:"/IoT/IoT-Devices-Platforms",name:"IoT platforms for device management and data processing "}]},{id:4,path:"/IoT/Networking",name:"IoT Networking",subRoutes:[{path:"/IoT/IoT-Networking-Wireless",name:"Wireless communication technologies for IoT "},{path:"/IoT/IoT-Networking-Topology",name:"IoT network topologies "},{path:"/IoT/IoT-Networking-Security",name:"IoT security considerations and protocols"}]},{id:5,path:"/IoT/Data-Management-and-Analytics",name:"IoT Data Management and Analytics",subRoutes:[{path:"/IoT/IoT-DM-Data-Collection",name:"Data collection, storage, and preprocessing for IoT"},{path:"/IoT/IoT-DM-Dat-Analytics",name:"Data analytics techniques for extracting insights from IoT data"},{path:"/IoT/IoT-DM-Real-Time",name:"Real-time processing and stream analytics for IoT applications"}]},{id:6,path:"/IoT/Applications",name:"IoT Applications",subRoutes:[{path:"/IoT/IoT-Application-SmartHomes",name:"Smart homes and home automation systems"},{path:"/IoT/IoT-Application-Industrial",name:"Industrial IoT (IIoT) and Industry 4.0"},{path:"/IoT/IoT-Application-Smartcities",name:"Smart cities and infrastructure"},{path:"/IoT/IoT-Application-Healthcare",name:"Healthcare applications of IoT"},{path:"/IoT/IoT-Application-Agriculture",name:"Agriculture and environmental monitoring with IoT"}]},{id:7,path:"/IoT/Challenge-and-Future-Trends",name:"Challenge and Future Trends",subRoutes:[{path:"/IoT/IoT-Challenge-Privacy",name:"Privacy and security concerns in IoT"},{path:"/IoT/IoT-Challenge-Scalability",name:"Scalability and interoperability challenges"},{path:"/IoT/IoT-Challenge-Edge-Computing",name:"Edge computing and fog computing in IoT"},{path:"/IoT/IoT-Challenge-Artificial",name:"Artificial Intelligence and machine learning in IoT"},{path:"/IoT/IoT-Challenge-Emerge",name:"Emerging trends and future directions in IoT"}]},{id:8,path:"/IoT/Security",name:"IoT Security",subRoutes:[{path:"/IoT/IoT-Security-Importance",name:"Importance of IoT security to protect devices and data"},{path:"/IoT/IoT-Security-Common",name:"Common security risks and vulnerabilities in IoT systems"},{path:"/IoT/IoT-Security-Secure",name:"Secure communication protocols and encryption techniques"},{path:"/IoT/IoT-Security-Authentic",name:"Authentication and access control mechanisms for IoT devices"},{path:"/IoT/IoT-Security-Best",name:"Best practices for securing IoT deployments"}]},{id:9,path:"/IoT/Edge-Computing-In-IoT",name:"Edge Computing in IoT",subRoutes:[{path:"/IoT/IoT-Ecomputing-Intro",name:"Introduction to edge computing "},{path:"/IoT/IoT-Ecomputing-Adv",name:"Advantages of processing data at the edge of the network"},{path:"/IoT/IoT-Ecomputing-Edge-Dev",name:"Edge devices and gateways for local data processing"},{path:"/IoT/IoT-Ecomputing-Edge-Analytics",name:"Edge analytics and decision-making in real-time IoT applications"},{path:"/IoT/IoT-Ecomputing-Hybrid",name:"Hybrid architectures combining cloud and edge computing for IoT"}]},{id:10,path:"/IoT/IoT-Standards-and-Interoperability",name:"IoT Standards and Interoperability",subRoutes:[{path:"/IoT/IoT-Standards-Overview",name:"Overview of IoT standards and protocols "},{path:"/IoT/IoT-Standards-Importance",name:"Importance of interoperability for seamless communication between devices"},{path:"/IoT/IoT-Standards-Data-Exc",name:"IoT data exchange formats "},{path:"/IoT/IoT-Standards-Industry",name:"Industry initiatives and organisations promoting IoT standards"},{path:"/IoT/IoT-Standards-Challenges",name:"Challenges and efforts to achieve greater interoperability in IoT ecosystems"}]},{id:11,path:"/IoT/IoT-And-Artificial-Intelligence",name:"IoT and Artificial Intelligence (AI)",subRoutes:[{path:"/IoT/IoT-AI-Intersection",name:"Intersection of IoT and AI technologies"},{path:"/IoT/IoT-AI-Machine",name:"Machine learning and deep learning for IoT data analytics"},{path:"/IoT/IoT-AI-Predictive",name:"Predictive maintenance and anomaly detection in IoT systems"},{path:"/IoT/IoT-AI-Intelligent",name:"Intelligent decision-making and automation using AI in IoT applications"},{path:"/IoT/IoT-AI-Edge",name:"Edge AI and distributed intelligence in IoT environments"}]},{id:12,path:"/IoT/IoT-and-Sustainability",name:"IoT and Sustainability",subRoutes:[{path:"/IoT/IoT-Substain-Role",name:"Role of IoT in creating sustainable and smart cities"},{path:"/IoT/IoT-Substain-Energy",name:"Energy efficiency and resource optimization through IoT applications"},{path:"/IoT/IoT-Substain-Environmental",name:"Environmental monitoring and conservation using IoT sensors"},{path:"/IoT/IoT-Substain-Smart",name:"Smart grids and energy management systems in IoT"},{path:"/IoT/IoT-Substain-IoT-Enabled",name:"IoT-enabled waste management and recycling solutions"}]}],Fs=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1],r=E((0,t.useState)(!1),2),o=r[0],l=r[1];return window.addEventListener("scroll",(function(){window.scrollY>=50?l(!0):l(!1)})),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{className:"h-12 top-0 sticky w-full z-10 bg-blue-600 text-white dark:bg-blue-900 flex items-center",children:[(0,$e.jsx)(Kn,{className:"text-4xl ml-8 md:hidden",onClick:function(){return i(!s)}}),(0,$e.jsx)(Xn,{})]}),(0,$e.jsxs)("div",{className:"flex h-full",children:[(0,$e.jsxs)("section",{className:o?"bg-white dark:bg-slate-800 text-color-mode fixed top-12 h-[92%] mb-10 hidden md:block overflow-y-auto":"bg-white dark:bg-slate-800 text-color-mode fixed top-32 h-[80%] mb-10 hidden md:block overflow-y-auto",children:[(0,$e.jsx)("h4",{className:"py-2 text-xl px-2",children:"IoT Tutorial"}),Ls.map((function(e,t){return e.subRoutes?(0,$e.jsx)(ra,{item:e,setOpen:i},e.name):(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2  hover:text-blue-400 hover:bg-white",activeclassName:"active",children:(0,$e.jsx)("div",{className:"",children:e.name})},t)}))]}),(0,$e.jsx)("section",{className:"mx-4 md:ml-[17rem] lg:ml-[18rem] w-inherit  md:w-3/5 my-10 rounded-xl text-color-mode bg-lightModeElement/20 dark:bg-darkModeElement",children:n}),(0,$e.jsx)("section",{className:"hidden lg:block text-red-600 mt-14",children:(0,$e.jsx)("h1",{className:"",children:"Place Ads Here"})})]}),(0,$e.jsx)("div",{children:s&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-full top-32 left-0 bg-slate-400 overflow-y-scroll",children:Ls.map((function(e,t){return e.subRoutes?(0,$e.jsx)(ra,{item:e,setOpen:i},e.name):(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return i(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})})})]})},Us=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)(Fs,{children:(0,$e.jsx)(Ae,{})})})},Bs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Definition and basic concepts of IoT"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'The Internet of Things (IoT) refers to a network of physical objects or "things" that are connected to the Internet and can communicate with each other and with people. To understand this better, imagine you have a toy car that can be controlled using your smartphone. When you press the "forward" button on your phone, the car moves forward. When you press the "stop" button, the car stops. This is an example of a simple IoT device. A car is a physical object, and it can communicate with your phone through the Internet.'}),(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold",children:[" ","Now, let's break down the basic concepts of IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Things:"}),' "Things" in IoT can be any physical objects that have sensors or actuators (things that can measure or control something). Examples of things include smartwatches, thermostats, lights, and even household appliances like refrigerators or washing machines. These objects are embedded with special chips or modules that enable them to connect to the internet.']}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Connectivity:"})," Connectivity is what allows these things to communicate with each other and with people. Just like you can send a message to your friend using your phone, IoT devices can send and receive information over the internet. This connectivity can be wired (using cables) or wireless (using Wi-Fi, Bluetooth, or other wireless technologies)."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Sensors and Actuators:"}),"Sensors are like the senses of IoT devices. They can detect and measure things like temperature, humidity, light, motion, and more. Actuators, on the other hand, are like the hands of IoT devices. They can control or manipulate things, such as turning on a light or opening a door. These sensors and actuators allow IoT devices to interact with the physical world."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data:"}),"IoT devices collect data from the environment using their sensors. For example, a weather station IoT device might collect data about temperature, humidity, and wind speed. This data can then be sent to a central server or cloud storage for analysis and processing."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Cloud Computing:"}),"The cloud refers to a network of powerful computers that can store and process large amounts of data. IoT devices often send their data to the cloud for analysis and storage. This allows for advanced processing and enables devices to access data and services from anywhere in the world."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Applications:"}),"IoT has a wide range of applications in various fields, such as smart homes, agriculture, healthcare, transportation, and more. For example, in a smart home, IoT devices can be used to control lights, thermostats, and security systems, making our lives more convenient and efficient."]})]}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold",children:"Now, let's dive into a simple example and code snippet to demonstrate how an IoT device can work:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a plant that needs to be watered regularly. You can create an IoT device using a moisture sensor, a small water pump, and a microcontroller like an Arduino. The moisture sensor measures the level of moisture in the soil, and if it's below a certain threshold, the microcontroller triggers the water pump to start watering the plant."}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold",children:"Here's a simplified version of the code for this IoT device using Arduino:"}),(0,$e.jsx)(Gt,{children:"\n  // Include the necessary libraries\n#include <Wire.h>\n// Define the moisture sensor pin\nint moisturePin = A0;\n// Define the water pump pin\nint pumpPin = 2;\nvoid setup() {\n// Set the pump pin as an output\n  pinMode(pumpPin, OUTPUT);\n}\nvoid loop() {\n// Read the moisture level from the sensor\n  int moistureLevel = analogRead(moisturePin);\n// Check if the moisture level is below the threshold\n  if (moistureLevel < 500) {\n// Activate the water pump\n    digitalWrite(pumpPin, HIGH);\n    delay(5000); // Water for 5 seconds\n    digitalWrite(pumpPin, LOW); // Turn off the pump\n  }\ndelay(1000); // Wait for 1 second before checking again\n}\n"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This code sets up the pins for the moisture sensor and water pump. In the loop() function, it reads the moisture level from the sensor. If the moisture level is below a certain threshold (in this case, 500), it activates the water pump for 5 seconds and then turns it off."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By connecting this IoT device to the internet and storing the data in the cloud, you can monitor the moisture level of your plant remotely and even receive notifications on your smartphone when it needs to be watered."})]})})})},Gs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Historical background and evolution of IoT"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Historical Background: The concept of IoT has its roots in the early development of the internet and the increasing connectivity of devices. In the 1980s and 1990s, computers started becoming more common, and the internet began to grow. During this time, people started to connect computers together to share information and communicate."}),(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold",children:[" ","Evolution of IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Internet and Connectivity:"}),"The internet played a crucial role in the evolution of IoT. As more devices became capable of connecting to the internet, the idea of connecting physical objects to enhance their functionality emerged."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" RFID Technology:"}),"One of the early technologies that contributed to the development of IoT was Radio Frequency Identification (RFID). RFID tags are small chips that can be attached to objects to identify and track them using radio waves. They are commonly used in inventory management systems and access control. For example, some libraries use RFID tags to track books."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Sensor Technology:"}),"Advancements in sensor technology played a significant role in the evolution of IoT. Sensors are devices that can detect and measure physical properties like temperature, humidity, light, motion, and more. As sensors became smaller, cheaper, and more energy-efficient, they started being incorporated into various objects."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Smart Devices:"}),"The proliferation of smart devices, such as smartphones, tablets, and wearable gadgets, further accelerated the development of IoT. These devices are equipped with sensors, actuators, and connectivity features, making them capable of interacting with the physical world and exchanging data over the internet."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Cloud Computing:"}),"The rise of cloud computing, which refers to the storage and processing of data on remote servers accessed via the internet, has been crucial for IoT. Cloud platforms provide scalable and reliable storage for the massive amounts of data generated by IoT devices. They also enable advanced data analysis and machine learning algorithms to extract valuable insights from the data."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsxs)("span",{class:"font-semibold",children:["Interconnectivity and Standards:"," "]}),"To enable seamless communication and interoperability between different IoT devices and platforms, various standards and protocols have been developed. These standards ensure that devices from different manufacturers can work together. Examples include Wi-Fi, Bluetooth, Zigbee, and MQTT (Message Queuing Telemetry Transport)."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Applications:"}),"IoT has found applications in various fields, including smart homes, agriculture, healthcare, transportation, and more. For example, in a smart home, IoT devices can be used to control lights, thermostats, security systems, and even kitchen appliances."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that explaining the code for the entire evolution of IoT would be impractical as it involves a vast and complex body of work. However, I can provide you with a simple example of an IoT project using Arduino, which will help you understand how devices can be connected and controlled. Let's continue with that:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold",children:"Imagine you have a smart light bulb that can be controlled using a smartphone app. You can turn it on and off, adjust the brightness, and change the color. Here's a simplified example of the code using Arduino:"}),(0,$e.jsx)(Gt,{children:'// Include the necessary libraries\n  #include <WiFi.h>\n  #include <Adafruit_NeoPixel.h>\n  // Define Wi-Fi credentials\n  const char* ssid = "YourNetworkSSID";\n  const char* password = "YourNetworkPassword";\n  // Define the number of LEDs in the NeoPixel strip\n  const int numPixels = 1;\n  // Create an instance of the NeoPixel library\n  Adafruit_NeoPixel strip(numPixels, 4, NEO_GRB + NEO_KHZ800);\n  void setup() {\n    // Connect to Wi-Fi\n    WiFi.begin(ssid, password);\n    while (WiFi.status() != WL_CONNECTED) {\n      delay(1000);\n    }\n  // Initialize the NeoPixel strip\n    strip.begin();\n    strip.show();\n  }\n  void loop() {\n  // Code for controlling the light bulb goes here\n  }\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we include the necessary libraries for Wi-Fi and controlling NeoPixel LEDs. We define the Wi-Fi credentials to connect to your network. We create an instance of the NeoPixel library, specifying the number of LEDs and the pin to which they are connected. In the setup() function, we connect to Wi-Fi and initialize the NeoPixel strip. The loop() function is where you would write the code for controlling the light bulb, such as turning it on and off or changing its color."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Remember that this is a simplified example, and an actual IoT project would involve more complex code, hardware, and integration with cloud services."})]})})})},Hs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Importance and applications of IoT in various industries"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Importance of IoT:"})," The Internet of Things (IoT) has become increasingly important because it offers numerous benefits and opportunities."]}),(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold",children:[" ","Here are some key points to understand its significance:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Automation and Efficiency:"}),"IoT enables automation, where devices can perform tasks without human intervention. This leads to increased efficiency, reduced human effort, and improved productivity"]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Data Collection and Analysis:"})," ","IoT devices collect vast amounts of data from the environment using sensors. This data can be analyzed to gain valuable insights, make informed decisions, and improve processes."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Improved Safety and Security:"})," ","IoT devices can enhance safety and security in various industries. For example, in transportation, IoT sensors can monitor vehicle conditions to detect faults and prevent accidents."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Remote Monitoring and Control:"}),"With IoT, devices can be monitored and controlled remotely. This allows for real-time monitoring, troubleshooting, and adjustments from anywhere, improving convenience and saving time."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Cost Savings:"}),"IoT can lead to cost savings by optimizing resource usage, reducing waste, and automating processes. For example, smart energy meters can monitor electricity usage and help save energy costs."]})]}),(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold",children:[" ","Applications of IoT in Various Industries:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Smart Home:"})," IoT enables the creation of smart homes where devices are connected and can be controlled remotely. Examples include smart thermostats to control heating and cooling, smart lighting systems, security cameras, and voice-controlled assistants like Amazon Alexa or Google Assistant."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Healthcare:"})," IoT has revolutionized healthcare with applications such as remote patient monitoring, wearable fitness trackers, and smart medical devices. For instance, IoT-enabled devices can monitor vital signs, track medication schedules, and alert doctors in case of emergencies."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Agriculture:"})," IoT can help farmers monitor and optimize agricultural processes. Soil moisture sensors can indicate when to water crops, smart weather stations can provide accurate weather data for planning, and drones can be used for crop monitoring and spraying pesticides."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Transportation:"})," IoT has made transportation more efficient and safer. Smart traffic management systems can optimize traffic flow, connected vehicles can communicate with each other to avoid accidents, and logistics companies can track shipments in real-time using IoT-enabled sensors."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Manufacturing:"})," IoT is transforming manufacturing processes through Industrial IoT (IIoT). It enables predictive maintenance of machines, real-time monitoring of production lines, and inventory management systems. This improves productivity, reduces downtime, and minimizes costs."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Retail:"})," IoT has introduced smart retail concepts. For example, smart shelves can track inventory and alert store managers when restocking is needed. Beacons can send personalized offers to shoppers' smartphones, and smart payment systems enable seamless transactions."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that providing code for every industry application would be impractical due to the vastness and complexity of IoT projects in those domains. However, I can provide simple code snippets for a few examples to give you an idea of how IoT devices can work. Let's continue:"}),(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold",children:"Smart Home - Controlling Lights using Arduino and Bluetooth:"}),(0,$e.jsx)(Gt,{children:"\n  // Include the necessary libraries\n  #include <SoftwareSerial.h>\n  // Define Bluetooth module pins\n  #define RX_PIN 2\n  #define TX_PIN 3\n  // Define the pin for controlling the light\n  #define LIGHT_PIN 4\n  SoftwareSerial bluetooth(RX_PIN, TX_PIN); // Create a Bluetooth object\n  void setup() {\n  // Set the light pin as an output\n    pinMode(LIGHT_PIN, OUTPUT);\n    digitalWrite(LIGHT_PIN, LOW); // Turn off the light\n  // Set up communication with the Bluetooth module\n    bluetooth.begin(9600);\n  }\n  \n  void loop() {\n    if (bluetooth.available()) {\n      char command = bluetooth.read();\n      if (command == '1') {\n        digitalWrite(LIGHT_PIN, HIGH); // Turn on the light\n      } else if (command == '0') {\n        digitalWrite(LIGHT_PIN, LOW); // Turn off the light\n      }\n    }\n  }\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this example, we use an Arduino board and a Bluetooth module to control a light. The code sets up the Bluetooth module for communication and defines the pin for controlling the light. In the loop() function, the code checks for incoming commands from the Bluetooth module. If the command is '1', it turns on the light, and if the command is '0', it turns off the light.",(0,$e.jsx)("h4",{className:"p-2 m-2 text-lg font-bold",children:"Smart Agriculture - Monitoring Soil Moisture using Arduino and Soil Sensor:"}),(0,$e.jsx)(Gt,{children:'\n  // Define the pin for the soil moisture sensor\n  #define SOIL_PIN A0\n  void setup() {\n  // Set up serial communication for debugging\n    Serial.begin(9600);\n  }\n  void loop() {\n  // Read the moisture level from the soil sensor\n    int moistureLevel = analogRead(SOIL_PIN);\n  // Map the moisture level to a percentage\n    int percentage = map(moistureLevel, 0, 1023, 0, 100);\n  // Print the moisture level\n    Serial.print("Moisture level: ");\n    Serial.print(percentage);\n    Serial.println("%");\n    delay(1000); // Wait for 1 second before reading again\n  }\n  \n  '})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this example, we use an Arduino board and a soil moisture sensor to monitor the moisture level in the soil. The code reads the analog value from the sensor and maps it to a percentage. It then prints the moisture level in percentage through the serial communication, which can be viewed on a computer."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These code examples demonstrate simple implementations of IoT concepts in specific applications. However, keep in mind that actual IoT projects involve more complex code and hardware integration."})]})})})},zs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Overview of IoT architecture layers (perception layer, network layer, middleware layer, application layer)"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's see an example to understand how these layers work together:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 font-semibold",children:"Imagine you have a smart garden system. In your garden, you have IoT devices like soil moisture sensors, temperature sensors, and sprinklers. Here's how the layers work in this scenario:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Perception Layer:"})," The soil moisture sensors detect the moisture level in the soil, and the temperature sensors measure the temperature in the garden. They convert this information into electronic signals that can be understood by the other layers."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Network Layer:"})," The sensors are connected to a central hub or a gateway device through a wireless network like Wi-Fi. The central hub acts as a bridge between the sensors and the internet. It collects the data from the sensors and sends it to the middleware layer using the internet connection."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Middleware Layer:"})," The middleware layer receives the data from the central hub and processes it. It might analyze the data to determine if the plants need watering or adjust the sprinklers based on the temperature readings. It can also store the data for future analysis or send notifications to your smartphone if something needs your attention."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Application Layer:"})," In this example, the application layer could be a smartphone app that you use to monitor and control your smart garden. The app receives the processed data from the middleware layer and displays it in an easy-to-understand format. You can check the moisture level and temperature of your garden, and even remotely control the sprinklers to water the plants."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"So, in summary, the IoT architecture has different layers that work together to enable the collection, communication, processing, and application of data from IoT devices. The perception layer collects data, the network layer connects devices, the middleware layer processes and manages the data, and the application layer allows us to interact with the system through software applications."})]})})})},Ys=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Sensor and Actuator Technologies"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Sensors:"}),"Sensors are devices that can detect and measure things from the environment. They are like our senses, but for machines. Here are a few examples of sensors commonly used in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Temperature Sensor:"})," A temperature sensor measures the temperature of the surroundings. It can tell us if it's hot or cold. It can be used in weather stations, smart thermostats, or even in a smart garden system to monitor the temperature of the soil."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Light Sensor:"})," A light sensor detects the amount of light in the environment. It can tell us if it's bright or dark. It is used in automatic lights that turn on when it gets dark outside or in smart window blinds that adjust based on the brightness of the sunlight."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Motion Sensor:"})," A motion sensor can detect movement. It can tell if someone is moving or if there is any activity in an area. Motion sensors are commonly used in security systems to detect intruders and in automatic doors that open when someone approaches."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Proximity Sensor:"})," A proximity sensor can detect how close an object is to it. It can tell if something is near or far away. Proximity sensors are used in automatic hand sanitizer dispensers that dispense sanitizer when you put your hand close to it without touching."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Actuators:"})," Actuators are devices that can perform actions based on the instructions they receive. They are like the hands and feet of machines. Here are a few examples of actuators commonly used in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Motors:"})," Motors are actuators that can spin or rotate. They can be used to move things like robot arms, wheels on a robot, or even automatic curtains that open and close."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"LEDs:"})," LEDs (Light-Emitting Diodes) are actuators that produce light. They can be used in smart bulbs that can change colors or in smart notification lights that indicate different things with different colors."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Solenoids:"})," Solenoids are actuators that create a pushing or pulling force. They are used in door locks, where they can lock or unlock the door when instructed to do so."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Speakers:"})," Speakers are actuators that produce sound. They are used in smart speakers like Amazon Echo or Google Home, which can play music, answer questions, or even tell jokes."]})]}),(0,$e.jsx)("h4",{className:"p-2 mt-4 text-lg font-bold rounded-md card-bg w-full",children:"Now, let's see an example to understand how sensors and actuators work together:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a smart home system. In your living room, you have a motion sensor and smart lights. Here's how they work together:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Motion Sensor:"})," The motion sensor detects movement in the room. When it senses someone entering the room, it sends a signal to the smart home system."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Smart Lights:"})," The smart lights are connected to the smart home system. When the system receives a signal from the motion sensor indicating that someone has entered the room, it instructs the smart lights to turn on."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Action:"})," The smart lights receive the instruction from the smart home system and turn on, illuminating the room. This way, when you walk into the living room, the lights automatically turn on without you having to flip a switch."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"So, in summary, sensors are devices that can detect and measure things like temperature, light, motion, or proximity. Actuators, on the other hand, are devices that can perform actions like moving, emitting light or sound, or locking/unlocking. In an IoT system, sensors provide input to the system by detecting and measuring the environment, while actuators receive instructions from the system and perform actions based on those instructions. This allows IoT devices to sense and interact with the world around them."})]})})})},qs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Communication protocols for IoT (e.g., MQTT, CoAP, HTTP)"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"MQTT (Message Queuing Telemetry Transport):"}),"MQTT is a lightweight and efficient protocol designed for IoT devices to communicate with each other and with servers or applications. It works on a publish-subscribe model, where devices can publish messages to a central server (broker) and other devices can subscribe to receive those messages. Here's a simplified explanation of how MQTT works:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a temperature sensor in your room, and you want to send the temperature readings to a central server."}),(0,$e.jsx)("li",{className:"pt-4",children:"The temperature sensor would connect to the MQTT broker, which is like a central hub that receives and distributes messages."}),(0,$e.jsx)("li",{className:"pt-4",children:"The sensor would publish a message with the temperature data to the broker."}),(0,$e.jsx)("li",{className:"pt-4",children:"Any device or application that has subscribed to receive temperature data would receive the message from the broker."}),(0,$e.jsx)("li",{className:"pt-4",children:"For example, an application on your smartphone might be subscribed to receive temperature updates. It would receive the message and display the current temperature on your phone."})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"CoAP (Constrained Application Protocol):"})," ","CoAP is another lightweight protocol designed for IoT devices, particularly for those with limited resources such as low-power devices or devices with constrained network connectivity. It is built on top of the UDP (User Datagram Protocol) for efficient communication. Here's a simplified explanation of how CoAP works:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Let's say you have a smart thermostat that can be controlled remotely."}),(0,$e.jsx)("li",{className:"pt-4",children:"The thermostat would send a CoAP request to a server to change the temperature setting."}),(0,$e.jsx)("li",{className:"pt-4",children:"The server would receive the request and send a CoAP response back to the thermostat confirming the change."}),(0,$e.jsx)("li",{className:"pt-4",children:"The thermostat would then adjust the temperature accordingly."})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"HTTP (Hypertext Transfer Protocol):"}),"HTTP is a well-known protocol used for communication between web browsers and servers. It is not specifically designed for IoT but can be used in IoT applications as well. Here's a simplified explanation of how HTTP works:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Imagine you have a smart camera that captures images and you want to view those images on your computer."}),(0,$e.jsx)("li",{className:"pt-4",children:"The server would receive the request, store the image, and send an HTTP response back to the camera indicating that the image has been successfully received."}),(0,$e.jsx)("li",{className:"pt-4",children:"The server would receive the request and send a CoAP response back to the thermostat confirming the change."}),(0,$e.jsx)("li",{className:"pt-4",children:"On your computer, you would open a web browser and send an HTTP GET request to the server to retrieve the stored image."}),(0,$e.jsx)("li",{className:"pt-4",children:"The server would respond with the image, and your browser would display it on your computer screen."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that providing actual code examples for each protocol would be extensive. However, you can find code examples and tutorials online that demonstrate how to implement these protocols in various programming languages."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, MQTT, CoAP, and HTTP are communication protocols that allow IoT devices to send and receive data. MQTT and CoAP are designed specifically for IoT and are lightweight, efficient, and suitable for constrained devices. HTTP is a more general-purpose protocol widely used in web communication that can also be utilized in IoT applications."})]})})})},Vs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT gateway and edge computing"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"IoT Gateway:"}),"An IoT gateway is a device that acts as a bridge between IoT devices and the internet. It helps connect and manage the communication between IoT devices and cloud-based services or applications. Here's a simplified explanation of how an IoT gateway works:"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold"})," Connecting Devices: Imagine you have several IoT devices in your home, such as smart lights, a temperature sensor, and a security camera. Each of these devices uses different communication protocols and may have limited resources."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"The IoT gateway connects to these devices using various communication technologies like Wi-Fi, Bluetooth, or Zigbee."}),(0,$e.jsx)("li",{className:"pt-4",children:"It understands the different protocols used by each device and translates the data from those devices into a format that can be understood by other devices or cloud services."})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data Processing and Filtering:"})," ","The IoT gateway can process and filter the data coming from the IoT devices before sending it to the cloud. This is useful when there is a lot of data being generated, and it helps reduce the amount of unnecessary data sent to the cloud."]}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"For example, if your temperature sensor is sending temperature readings every second, the gateway can filter and send only the significant changes in temperature to the cloud."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Security and Local Control:"}),"The IoT gateway provides an additional layer of security by acting as a barrier between the IoT devices and the internet. It can authenticate and encrypt the data to ensure that only authorized devices can access it."]}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"Additionally, the IoT gateway can enable local control of the devices, allowing you to interact with them even if there is no internet connection. For example, you can use a smartphone app connected to the gateway to control the smart lights directly."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Edge computing:"}),'Edge computing is a concept related to IoT that focuses on processing and analyzing data closer to where it is generated, rather than sending it all to the cloud. This can be done using computing resources located at the "edge" of the network, such as the IoT devices themselves or the IoT gateway. Here\'s a simplified explanation of how edge computing works:']}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Data Processing at the Edge:"}),"Instead of sending all the data from the IoT devices to the cloud for processing, edge computing allows some of the processing to happen closer to where the data is generated."]}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"For example, if you have a smart camera that detects faces, instead of sending every video frame to the cloud for face recognition, the camera itself can analyze the frames and send only the relevant information, such as when a face is detected."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Real-Time Decision Making:"}),"Edge computing enables real-time decision making by reducing the latency or delay in processing data. Since the data is processed closer to the source, the response time is faster."]}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"For example, if you have a smart camera that detects faces, instead of sending every video frame to the cloud for face recognition, the camera itself can analyze the frames and send only the relevant information, such as when a face is detected."})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:" Bandwidth Optimization:"}),": By processing data at the edge, only the important or summarized data needs to be sent to the cloud, reducing the amount of data transferred over the network."]}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsx)("li",{className:"pt-4",children:"For example, in a smart factory with hundreds of sensors, edge computing can filter out unnecessary data and only send alerts or critical information to the cloud, saving bandwidth."})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that providing actual code examples for IoT gateway and edge computing would be extensive. However, you can find code examples and tutorials online that demonstrate how to implement these concepts in various programming languages."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, an IoT gateway acts as a bridge between IoT devices and the internet, managing the communication and providing additional functionalities like data processing, security, and local control. Edge computing focuses on processing and analyzing data closer to where it is generated, enabling real-time decision making, bandwidth optimization, and reducing latency in IoT systems."})]})})})},Ws=function(){return(0,$e.jsxs)("div",{children:[" ",(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT platforms for device management and data processing (e.g., AWS IoT, Google Cloud IoT, Microsoft Azure IoT)"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. AWS IoT (Amazon Web Services IoT):"})," ","AWS IoT is a platform provided by Amazon Web Services that helps you connect, manage, and analyze IoT devices and their data. Here's a simplified explanation of AWS IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"AWS IoT provides a secure and scalable infrastructure for connecting and managing IoT devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"It offers device management features, allowing you to securely register and organize your IoT devices in the cloud."}),(0,$e.jsx)("li",{className:"pt-4",children:"AWS IoT provides software development kits (SDKs) that help developers write code to connect and interact with IoT devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"It supports various communication protocols like MQTT, which allows devices to publish and subscribe to messages."}),(0,$e.jsx)("li",{className:"pt-4",children:"AWS IoT also provides services for data processing, storage, and analytics, allowing you to analyze and gain insights from the data generated by your IoT devices."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, you can use AWS IoT to connect and control a smart thermostat from a mobile app, store temperature data in the cloud, and analyze the data to identify patterns."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold",children:"Here's a simple Python code example that demonstrates how to publish a message to AWS IoT using the AWS SDK:"}),(0,$e.jsx)(Gt,{children:"\n  import boto3\n  # Create an AWS IoT client\n  iot_client = boto3.client('iot-data', region_name='us-east-1')\n  # Publish a message to a topic\n  response = iot_client.publish(\n      topic='mytopic',\n      qos=1,\n      payload='Hello, IoT!'\n  )\n  # Print the response\n  print(response)\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Google Cloud IoT:"})," Google Cloud IoT is a platform provided by Google Cloud that enables you to connect, manage, and process data from IoT devices. Here's a simplified explanation of Google Cloud IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Google Cloud IoT offers device registry and management features, allowing you to register and manage your IoT devices in the cloud."}),(0,$e.jsx)("li",{className:"pt-4",children:"It supports multiple communication protocols like MQTT and HTTP, making it easy for devices to send and receive data."}),(0,$e.jsx)("li",{className:"pt-4",children:"Google Cloud IoT Core is a service that provides a scalable infrastructure for securely connecting and managing devices at scale."}),(0,$e.jsx)("li",{className:"pt-4",children:"It integrates with other Google Cloud services, such as Pub/Sub for messaging, Cloud Functions for serverless processing, and BigQuery for data analytics."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, you can use Google Cloud IoT to collect data from a fleet of smart vehicles, process the data in real-time, and visualize it on a dashboard."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold",children:"Here's a simple Python code example that demonstrates how to send a telemetry event to Google Cloud IoT using the Google Cloud IoT Python library:"}),(0,$e.jsx)(Gt,{children:"\n  from google.cloud import iot_v1\n  # Create a client\n  client = iot_v1.DeviceManagerClient()\n  # Define the device path\n  device_path = client.device_path('my-project', 'my-region', 'my-registry', 'my-device')\n  # Create the telemetry event\n  event_data = 'Temperature: 25\xb0C'\n  # Publish the event\n  client.send_command_to_device(\n      request={\n          'name': device_path,\n          'binary_data': event_data.encode('utf-8')\n      }\n  )\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Microsoft Azure IoT: "}),"Microsoft Azure IoT is a platform provided by Microsoft Azure that helps you build, deploy, and manage IoT solutions. Here's a simplified explanation of Microsoft Azure IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Azure IoT Hub is a central component of Azure IoT that enables secure communication and management of IoT devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"It provides device management features, allowing you to provision, configure, and monitor your IoT devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"Azure IoT Hub supports various communication protocols like MQTT and HTTP, making it easy for devices to connect and send data."}),(0,$e.jsx)("li",{className:"pt-4",children:"It integrates with other Azure services like Azure Functions, Azure Stream Analytics, and Azure Machine Learning, enabling you to process and analyze data from IoT devices."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, you can use Azure IoT Hub to collect sensor data from a network of weather stations, store the data in Azure Storage, and visualize it on a web-based dashboard."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold",children:"Here's a simple code example using Azure IoT SDK for Python that demonstrates how to send a message to Azure IoT Hub:"}),(0,$e.jsx)(Gt,{children:"\n  from azure.iot.device import IoTHubDeviceClient\n  # Create an IoT Hub device client\n  device_client = IoTHubDeviceClient.create_from_connection_string('<your_connection_string>')\n  # Connect to IoT Hub\n  device_client.connect()\n  # Send a message\n  message = 'Hello, IoT!'\n  device_client.send_message(message)\n  # Disconnect from IoT Hub\n  device_client.disconnect()\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that the code examples provided are simplified and may require additional setup and configuration. Additionally, it's important to review the official documentation and resources provided by each platform for a more comprehensive understanding of their features and capabilities."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, AWS IoT, Google Cloud IoT, and Microsoft Azure IoT are platforms that provide infrastructure, tools, and services for managing IoT devices and processing data generated by those devices. They offer features like device management, communication protocols, and integration with other cloud services to build scalable and secure IoT solutions."})]})})]})},Qs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT hardware components (microcontrollers, sensors, actuators)"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Microcontrollers:"})," ","Microcontrollers are like tiny computers that can be programmed to control various electronic devices. They are the brains of IoT devices. Here's a simplified explanation of how microcontrollers work:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Think of a microcontroller as a brain that can receive input, make decisions, and produce output."}),(0,$e.jsx)("li",{className:"pt-4",children:"It consists of a small computer chip with a processor (CPU), memory, and input/output (I/O) pins."}),(0,$e.jsx)("li",{className:"pt-4",children:"Programmers write code to instruct the microcontroller on what actions to take based on the input it receives."}),(0,$e.jsx)("li",{className:"pt-4",children:"The microcontroller can control sensors and actuators, process data, and communicate with other devices."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, you can use a microcontroller to program a smart light bulb to turn on or off based on certain conditions, like a motion sensor detecting movement."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Sensors:"}),'Sensors are devices that can detect and measure things from the environment. They act as the "senses" of an IoT device. Here are a few examples of sensors commonly used in IoT:']}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Temperature Sensor: Measures the temperature of the surroundings."}),(0,$e.jsx)("li",{className:"pt-4",children:"Light Sensor: Detects the amount of light in the environment."}),(0,$e.jsx)("li",{className:"pt-4",children:"Motion Sensor: Detects movement or activity in an area."}),(0,$e.jsx)("li",{className:"pt-4",children:"Proximity Sensor: Detects how close an object is to it."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Sensors convert the physical measurements into electrical signals that can be understood by the microcontroller. The microcontroller can then use this data to make decisions or perform actions."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Actuators: "}),'Actuators are devices that can perform actions based on the instructions they receive. They are like the "hands and feet" of an IoT device. Here are a few examples of actuators commonly used in IoT:']}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Motors: Actuators that can spin or rotate. They can be used to move things like robot arms, wheels on a robot, or even automatic curtains that open and close."}),"LEDs: Actuators that produce light. They can be used in smart bulbs that can change colors or in smart notification lights.",(0,$e.jsx)("li",{className:"pt-4",children:"Solenoids: Actuators that create a pushing or pulling force. They are used in door locks, where they can lock or unlock the door when instructed to do so."}),(0,$e.jsx)("li",{className:"pt-4",children:"Speakers: Actuators that produce sound. They are used in smart speakers that can play music or provide voice instructions."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The microcontroller sends signals to the actuators, instructing them to perform specific actions. For example, the microcontroller can turn on an LED when a sensor detects darkness."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that providing actual code examples for each component would be extensive. However, you can find code examples and tutorials online that demonstrate how to program microcontrollers, interface with sensors, and control actuators using various programming languages and development platforms."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, microcontrollers are the brains of IoT devices that can be programmed to control sensors and actuators. Sensors detect and measure things from the environment, while actuators perform actions based on the instructions received from the microcontroller. Together, these components enable IoT devices to sense and interact with the world around them."})]})})})},$s=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT development boards (Arduino, Raspberry Pi)"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Arduino:"})," Arduino is a popular IoT development board that is widely used by beginners and professionals alike. It is designed to be easy to use and is a great platform for learning about electronics and programming. Here's a simplified explanation of Arduino:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Arduino boards consist of a microcontroller, a small computer chip that can be programmed to control various electronic devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"Arduino boards have input/output (I/O) pins that allow you to connect sensors and actuators easily."}),(0,$e.jsx)("li",{className:"pt-4",children:"You can write code (known as sketches) using the Arduino programming language, which is based on C/C++."}),(0,$e.jsx)("li",{className:"pt-4",children:"The Arduino software provides a user-friendly interface for writing and uploading code to the board."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, you can program an Arduino board to control an LED (actuator) based on the input from a button (sensor)."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold",children:"Here's a simple Arduino code example that turns an LED on when a button is pressed:"}),(0,$e.jsx)(Gt,{children:"\n  // Define pin numbers\n  const int buttonPin = 2;\n  const int ledPin = 13;\n  // Setup function\n  void setup() {\n  // Set the button pin as input\n    pinMode(buttonPin, INPUT);\n  // Set the LED pin as output\n    pinMode(ledPin, OUTPUT);\n  }\n  // Loop function\n  void loop() {\n  // Read the state of the button\n    int buttonState = digitalRead(buttonPin);\n  // If the button is pressed, turn on the LED\n    if (buttonState == HIGH) {\n      digitalWrite(ledPin, HIGH);\n    } else {\n      digitalWrite(ledPin, LOW);\n    }\n  }\n  \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Raspberry Pi:"})," Raspberry Pi is another popular IoT development board that is more like a miniature computer. It is capable of running a full operating system and supports various programming languages. Here's a simplified explanation of Raspberry Pi:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Raspberry Pi boards have a more powerful processor, memory, and storage compared to Arduino boards."}),(0,$e.jsx)("li",{className:"pt-4",children:"They have multiple USB ports, HDMI ports, and network connectivity options."}),(0,$e.jsx)("li",{className:"pt-4",children:"Raspberry Pi boards can run operating systems like Linux, which allows you to use a wide range of programming languages and software."}),(0,$e.jsx)("li",{className:"pt-4",children:"You can connect sensors and actuators to the Raspberry Pi's GPIO (General Purpose Input/Output) pins."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, you can program a Raspberry Pi board to control a robotic arm (actuator) based on the input from a camera (sensor)."}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold",children:"Here's a simple Python code example that captures an image from a camera connected to a Raspberry Pi:"}),(0,$e.jsx)(Gt,{children:"import picamera\n  # Create a camera object\n  camera = picamera.PiCamera()\n  # Set the resolution\n  camera.resolution = (640, 480)\n  # Capture an image\n  camera.capture('image.jpg')\n  # Close the camera\n  camera.close()"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that providing a comprehensive tutorial with complete code examples for each development board would be extensive. However, you can find many online resources, tutorials, and beginner-friendly projects for both Arduino and Raspberry Pi, including step-by-step instructions and sample code."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, Arduino and Raspberry Pi are popular IoT development boards that allow you to program and control electronic devices. Arduino is simpler and suitable for beginners, while Raspberry Pi offers more advanced capabilities with its computer-like features. Both boards provide a great platform for learning about electronics and programming in the context of IoT."})]})})})},Ks=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Wireless communication technologies for IoT (Wi-Fi, Bluetooth, Zigbee, LoRaWAN)"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Wi-Fi:"})," Think of Wi-Fi as a special kind of invisible network that allows your devices, like phones, tablets, and computers, to talk to each other without any wires. It's similar to how you connect to the internet at home."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Wi-Fi uses radio waves to send and receive information between devices. These radio waves are like invisible signals that travel through the air. Your devices have special parts inside them that can send and receive these signals."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Wi-Fi has different channels or frequencies it can use to send signals. It's like having different radio stations where each station plays different music. Wi-Fi devices need to be set to the same channel to talk to each other."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Bluetooth: "})," Bluetooth is another wireless technology that allows devices to connect and talk to each other over short distances. It's like a magic wire that connects devices without actually needing any physical wires."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Bluetooth is commonly used for things like wireless headphones, speakers, and connecting your phone to your car. It uses radio waves just like Wi-Fi, but it operates at a different frequency."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"One cool thing about Bluetooth is that it can connect to multiple devices at the same time. So you can connect your phone to a speaker and a smartwatch all at once."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Zigbee: "}),"Zigbee is a wireless technology specifically designed for smart homes and other IoT devices. It's like a secret language that devices in your home can use to talk to each other."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Zigbee devices form a network where they can send messages to each other. It's like a big group chat where devices share information. This helps devices work together to make your home smarter and more convenient."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Zigbee devices use very little power, so they can run on small batteries for a long time. They can also talk to devices that are far away, thanks to a special feature called mesh networking. It's like having many little helpers that can pass messages along to reach faraway devices."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. LoRaWAN:"}),"LoRaWAN is a wireless technology that is used for connecting devices that are far away from each other, like sensors on a farm or in a city. It's like a super long-range walkie-talkie for devices."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"LoRaWAN uses radio waves just like Wi-Fi and Bluetooth, but it can travel much longer distances. It's perfect for connecting devices that are spread out over a large area."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"One interesting thing about LoRaWAN is that it can send small amounts of data over long distances while using very little power. This is important for devices that need to run on batteries for a long time."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are the main wireless communication technologies used in IoT. They each have their special features that make them useful for different situations. Just like how you choose different tools for different tasks, IoT devices use different wireless technologies based on what they need to do."})]})})})},Xs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT network topologies (star, mesh, hybrid)"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Star Topology:"}),'Imagine a star with many points connected to a central point. That\'s how a star network looks. In an IoT star network, the central point is called the "hub" or "gateway," and all the other devices connect directly to it.']}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Think of the hub as the boss or leader of the network. It's like a superhero that can communicate with all the devices connected to it. Whenever a device wants to send or receive information, it talks to the hub first, and the hub makes sure the information gets to the right place."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The advantage of a star network is that it's simple and easy to understand. If one device has a problem, it doesn't affect the other devices. However, if the hub stops working, then all the devices connected to it might lose their connection."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Mesh Topology: "})," Imagine a spider's web with many threads connecting different points. That's how a mesh network looks. In an IoT mesh network, devices are like the threads in the web, and they can connect to multiple other devices around them."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In a mesh network, devices can talk directly to each other without always needing to go through a central hub. It's like passing messages from one friend to another until it reaches the right destination. This makes the network very flexible and resilient."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"If one device stops working or if there's an obstacle, the other devices can find different paths to send information. It's like finding a new route if one road is blocked. This way, the network can keep working even if some devices are not functioning."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Hybrid Topology:"}),"A hybrid network is a combination of different network topologies. It's like having multiple superheroes with different powers working together to create a strong network."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In an IoT hybrid network, some devices might be connected in a star topology, where they communicate through a central hub. Meanwhile, other devices might be connected in a mesh topology, where they can talk directly to each other."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The advantage of a hybrid network is that it combines the strengths of different topologies. It can provide the simplicity and centralized control of a star network while also offering the flexibility and resilience of a mesh network."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Different IoT applications might require different network topologies based on their needs. Some applications work well with a star network, while others benefit from the flexibility of a mesh network. A hybrid network allows us to choose the best topology for each situation."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Remember, these topologies are like different ways of arranging devices to communicate with each other. Just like how you can build different structures with LEGO blocks, IoT networks can be built using different topologies depending on what we want to achieve."})]})})})},Zs=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT security considerations and protocols"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. IoT Security Considerations: :"}),"IoT Security Considerations: When we talk about IoT security, we want to make sure that our IoT devices and the data they handle are protected from unauthorized access or malicious activities. Here are some important considerations:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:" Authentication:"}),"It's like having a secret password or a special key to unlock a door. In IoT, devices need to prove their identity to ensure that only trusted devices can access the network. This prevents unauthorized devices from joining or tampering with the network."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Encryption: "}),"Imagine sending secret messages that only the intended recipient can read. Encryption is like turning messages into secret codes that can only be decoded with the right key. It ensures that even if someone intercepts the communication, they won't be able to understand it."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Access Control:"}),"It's like having locks on certain doors to restrict who can enter. Access control in IoT means controlling who can access and control the devices or data. It ensures that only authorized users or devices can interact with the IoT system."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Data Integrity:"}),"Data integrity is like making sure a message doesn't get changed during delivery. In IoT, we want to ensure that the data sent by devices is not modified or tampered with during transmission. This helps maintain the accuracy and trustworthiness of the information."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Updates and Patches: "}),"Just like how you update your computer or smartphone with the latest software, IoT devices also need to be updated with security patches and software updates. This helps fix any vulnerabilities or weaknesses in the device's software."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:" IoT Security Protocols:"})," Now, let's talk about some common security protocols used in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsxs)("span",{className:"font-semibold",children:["Transport Layer Security (TLS):"," "]}),"TLS is like having a secure tunnel for communication. It encrypts the data transmitted between devices to ensure that it remains confidential and protected from eavesdropping or tampering. TLS is commonly used in web browsers and secure communication channels."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Secure Shell (SSH):"}),"SSH is like having a secure way to access and control a device remotely. It provides encrypted communication between devices, allowing authorized users to securely access and manage IoT devices from anywhere."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Message Queuing Telemetry Transport (MQTT):"}),"MQTT is like a language that devices use to talk to each other securely. It's a lightweight messaging protocol that ensures data integrity and authentication. It's commonly used in IoT applications to exchange information between devices and servers."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Hypertext Transfer Protocol Secure (HTTPS):"}),"HTTPS is like a secure version of regular web browsing. It encrypts the communication between web browsers and servers, protecting sensitive information such as passwords or credit card details. HTTPS is important when accessing IoT dashboards or web-based interfaces."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Remember, IoT security is all about protecting our devices and data from unauthorized access. It's like having locks and keys to keep our belongings safe. By implementing security measures and using secure protocols, we can ensure that our IoT systems are secure and our information remains private."})]})})})},Js=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Data collection, storage, and preprocessing for IoT"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Data Collection:"})," In the world of IoT, there are many devices (like sensors, cameras, etc.) that collect data from the environment. For example, a temperature sensor might measure the temperature of a room, or a motion sensor might detect movement in a hallway. These devices are connected to the internet and send the data they collect to a central system called a server."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Here's a simple Python code snippet to demonstrate data collection using a temperature sensor:"}),(0,$e.jsx)(Gt,{children:'\n  import random\n  def get_temperature():\n      # Simulating temperature reading\n      temperature = random.randint(20, 30)\n      return temperature\n  temperature = get_temperature()\n  print("Temperature:", temperature)\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we use the random module to generate a random temperature between 20 and 30 degrees Celsius. The get_temperature function returns this random temperature, simulating a temperature sensor. We then print the temperature value."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Data Storage:"})," Once the data is collected from different IoT devices, we need to store it somewhere so that we can analyze it later. There are different ways to store data, but for simplicity, let's use a simple file to store our temperature data."]}),(0,$e.jsx)(Gt,{children:"import random\n  def get_temperature():\n      temperature = random.randint(20, 30)\n      return temperature\n  def save_temperature(temperature):\n      with open('temperature_data.txt', 'a') as file:\n          file.write(str(temperature) + '\n')\n  temperature = get_temperature()\n  save_temperature(temperature)"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we introduce a new function called save_temperature that takes the temperature value as an argument and appends it to a file named temperature_data.txt. Each temperature is written on a new line, allowing us to store multiple temperature readings."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Data Preprocessing:"})," Before we can analyze the data, it's often necessary to preprocess it. Preprocessing involves cleaning, transforming, and organizing the data in a way that makes it easier to work with. In our example, let's say we want to calculate the average temperature from the data we collected."]}),(0,$e.jsx)(Gt,{children:"\n  def preprocess_data():\n      temperatures = []\n  \n      with open('temperature_data.txt', 'r') as file:\n          lines = file.readlines()\n          for line in lines:\n              temperature = float(line.strip())\n              temperatures.append(temperature)\n  \n      return temperatures\n  \n  def calculate_average_temperature(temperatures):\n      total = sum(temperatures)\n      average = total / len(temperatures)\n      return average\n  \n  temperatures = preprocess_data()\n  average_temperature = calculate_average_temperature(temperatures)\n  print(\"Average Temperature:\", average_temperature)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we define the preprocess_data function that reads the temperature data from the file we created earlier. Each line in the file is converted to a float value (since the data was stored as strings) and added to a list called temperatures. Then, we define the calculate_average_temperature function that takes the list of temperatures, sums them up, and divides the sum by the number of temperatures to calculate the average. Finally, we print the average temperature."})]})})})},ei=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Data analytics techniques for extracting insights from IoT data"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Descriptive Analytics:"}),"Descriptive analytics focuses on summarizing and describing the data we have collected. It helps us understand what has happened in the past or what is currently happening. One common technique used in descriptive analytics is data visualization, which means representing data in the form of charts, graphs, or other visual representations."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's continue with our example of temperature data and use data visualization to analyze it:"}),(0,$e.jsx)(Gt,{children:"\n  import matplotlib.pyplot as plt\n  \n  def preprocess_data():\n      temperatures = []\n  \n      with open('temperature_data.txt', 'r') as file:\n          lines = file.readlines()\n          for line in lines:\n              temperature = float(line.strip())\n              temperatures.append(temperature)\n  \n      return temperatures\n  \n  def plot_temperature_data(temperatures):\n      plt.plot(temperatures)\n      plt.xlabel('Time')\n      plt.ylabel('Temperature')\n      plt.title('Temperature Data')\n      plt.show()\n  \n  temperatures = preprocess_data()\n  plot_temperature_data(temperatures)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we reuse the preprocess_data function from the previous example to read the temperature data from the file. Then, we define a new function called plot_temperature_data that uses the matplotlib library to create a line plot of the temperature data. We set the x-axis as time and the y-axis as temperature, add labels to the axes, and give the plot a title. Finally, we display the plot using the plt.show() function."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Diagnostic Analytics:"}),'Diagnostic analytics aims to answer the question "Why did it happen?" It involves analyzing the data to understand the causes and reasons behind certain events or patterns. One commonly used technique in diagnostic analytics is anomaly detection, which helps identify abnormal or unexpected data points.']}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's modify our previous code to include an anomaly detection technique called z-score:"}),(0,$e.jsx)(Gt,{children:'\n  import statistics\n  \n  def detect_anomalies(temperatures):\n      average = statistics.mean(temperatures)\n      standard_deviation = statistics.stdev(temperatures)\n      anomalies = []\n  \n      for temperature in temperatures:\n          z_score = (temperature - average) / standard_deviation\n          if abs(z_score) > 3:  # Threshold for anomaly detection\n              anomalies.append(temperature)\n  \n      return anomalies\n  \n  temperatures = preprocess_data()\n  anomalies = detect_anomalies(temperatures)\n  print("Anomalies:", anomalies)\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we use the statistics module to calculate the average and standard deviation of the temperature data. The z-score of each temperature is calculated by subtracting the average and dividing by the standard deviation. If the absolute value of the z-score exceeds a certain threshold (in this case, 3), the temperature is considered an anomaly and added to the anomalies list. Finally, we print the anomalies."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Predictive Analytics:"}),"Predictive analytics focuses on predicting future outcomes based on historical data. It uses machine learning algorithms to learn patterns from the data and make predictions. Let's use a simple linear regression algorithm to predict future temperature values."]}),(0,$e.jsx)(Gt,{children:'\n  from sklearn.linear_model import LinearRegression\n  \n  def predict_temperature(temperatures, future_time):\n      X = [[i] for i in range(len(temperatures))]\n      y = temperatures\n  \n      model = LinearRegression()\n      model.fit(X, y)\n  \n      future_X = [[len(temperatures) + future_time]]\n      future_temperature = model.predict(future_X)\n  \n      return future_temperature[0]\n  \n  temperatures = preprocess_data()\n  future_temperature = predict_temperature(temperatures, future_time=5)\n  print("Predicted Future Temperature (after 5 time units):", future_temperature)\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we use the LinearRegression class from the sklearn (scikit-learn) library to create a linear regression model. We set the past time values (X) as the sequence of numbers 0, 1, 2, ..., and the corresponding temperature values (y) as the actual temperatures. The model is trained on this historical data. Then, we use the model to predict the future temperature by providing a new X value (which represents the future time). Finally, we print the predicted future temperature."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are simplified examples of descriptive, diagnostic, and predictive analytics techniques applied to IoT data. In real-world scenarios, more advanced techniques and algorithms can be used, and the data analysis process can be more complex."})]})})})},ti=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Real-time processing and stream analytics for IoT applications"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Real-Time Processing:"}),"Real-time processing refers to the ability to process data as soon as it arrives, without any significant delay. In the context of IoT, this means analyzing and acting upon the data collected from IoT devices in real-time. Real-time processing is crucial for applications that require immediate action or quick decision-making."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's consider an example where we want to monitor the temperature in a room and receive an alert if it exceeds a certain threshold:"}),(0,$e.jsx)(Gt,{children:'import time\n\n  def monitor_temperature():\n      while True:\n          temperature = get_temperature()  # Assume get_temperature() is a function to retrieve the current temperature\n          if temperature > 25:\n              send_alert("Temperature is too high!")\n          time.sleep(1)  # Wait for 1 second before checking again\n  \n  def send_alert(message):\n      print("ALERT:", message)\n  \n  monitor_temperature()'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we have a function called monitor_temperature that continuously checks the current temperature using a function get_temperature(). If the temperature exceeds a threshold (in this case, 25 degrees), it calls the send_alert function to print an alert message. The program then waits for 1 second using time.sleep(1) before checking the temperature again. This creates a continuous loop for real-time monitoring of the temperature."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Stream Analytics:"}),"Stream analytics involves processing and analyzing data streams in real-time. A data stream is a continuous flow of data, often generated by IoT devices. Stream analytics allows us to extract meaningful insights, detect patterns, and make decisions based on the data as it arrives."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's modify our previous example to calculate the average temperature of a data stream:"}),(0,$e.jsx)(Gt,{children:'\n  def process_temperature_stream():\n      total = 0\n      count = 0\n  \n      while True:\n          temperature = get_temperature()\n          total += temperature\n          count += 1\n          average = total / count\n          print("Average Temperature:", average)\n          time.sleep(1)\n  \n  process_temperature_stream()\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we have a function called process_temperature_stream that continuously receives temperature readings from get_temperature() and maintains a running total and count of the temperatures. It calculates the average temperature by dividing the total by the count and prints it. The program then waits for 1 second before processing the next temperature reading."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These examples illustrate how real-time processing and stream analytics can be used in IoT applications. In real-world scenarios, more advanced techniques and tools, such as stream processing frameworks or complex algorithms, can be used to handle large-scale data streams."})]})})})},ni=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Smart homes and home automation systems"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"A smart home is a house equipped with technology that allows you to control and automate various devices and systems. The goal of a smart home is to make your life easier, more convenient, and more efficient by automating tasks and providing remote control capabilities."}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's discuss a few examples of smart home applications and explain how they work:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Smart Lighting:"}),"In a smart lighting system, you can control the lights in your home using a smartphone or voice commands. You can turn the lights on or off, adjust the brightness, and even change the color of the lights. This is made possible by using smart light bulbs or smart switches that can connect to your home Wi-Fi network."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Here's an example code snippet to control smart lights using Python:"}),(0,$e.jsx)(Gt,{children:'import requests\n  def turn_on_light():\n      requests.get("http://192.168.1.100/api/lights/1/on")  # Send request to turn on light\n  def turn_off_light():\n      requests.get("http://192.168.1.100/api/lights/1/off")  # Send request to turn off light\n  turn_on_light()  # Turn on the light'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'In this code, we use the requests library to send HTTP requests to a smart lighting system. By calling the turn_on_light function, we send a request to turn on the light with the specified IP address (e.g., "192.168.1.100"). Similarly, the turn_off_light function sends a request to turn off the light. The smart lighting system interprets these requests and performs the corresponding action.'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Smart Thermostat:"}),"A smart thermostat allows you to control the temperature of your home remotely. You can set the desired temperature, schedule temperature changes throughout the day, and even let the thermostat learn your preferences over time. Smart thermostats can help save energy and make your home more comfortable."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Here's a simplified example of controlling a smart thermostat using Python:"}),(0,$e.jsx)(Gt,{children:'\n  import requests\n  \n  def set_temperature(temperature):\n      requests.put("http://192.168.1.200/api/thermostat", json={"temperature": temperature})  # Send request to set temperature\n  \n  set_temperature(22)  # Set the temperature to 22 degrees Celsius\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we use the requests library to send a PUT request to a smart thermostat system. The request includes a JSON payload that specifies the desired temperature. The thermostat system receives this request and adjusts the temperature accordingly."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Smart Security:"}),"A smart security system helps protect your home by providing features such as remote monitoring, motion detection, and alarm systems. You can receive notifications on your phone when someone enters your home or when there's a security breach. You can also monitor your home through security cameras from anywhere in the world."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Here's a simplified example of accessing a security camera feed using Python:"}),(0,$e.jsx)(Gt,{children:"\n  import cv2\n  def monitor_security_camera():\n      camera = cv2.VideoCapture(0)  # Access the camera with ID 0 (typically the built-in webcam)\n  \n      while True:\n          ret, frame = camera.read()  # Read a frame from the camera\n          cv2.imshow(\"Security Camera\", frame)  # Display the frame\n  \n          if cv2.waitKey(1) & 0xFF == ord('q'):  # Press 'q' to quit\n              break\n  \n      camera.release()\n      cv2.destroyAllWindows()\n  \n  monitor_security_camera()\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we use the cv2 (OpenCV) library to access the camera feed. The VideoCapture function is used to open the camera with ID 0, which usually corresponds to the built-in webcam. We then continuously read frames from the camera and display them using cv2.imshow. Pressing 'q' will break the loop and stop displaying the camera feed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are simplified examples of smart home applications and how they can be controlled or accessed using programming. In real-world scenarios, smart home systems involve more complexity and use specialized protocols and technologies."})]})})})},ai=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Industrial IoT (IIoT) and Industry 4.0"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Industrial IoT (IIoT):"})," ","Industrial IoT (IIoT) refers to the application of IoT technologies in industrial settings, such as factories, manufacturing plants, and other industrial environments. It involves connecting various devices, machines, and systems together to improve efficiency, productivity, and safety in industries."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's consider an example of IIoT in a manufacturing plant:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine a toy factory that produces remote-controlled cars. In a traditional setup, workers manually assemble each car and perform quality checks. However, with IIoT, the factory can automate and optimize various processes."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:" Automated Assembly Line:"})," ","In the IIoT setup, robotic arms are used to perform the assembly of remote-controlled cars. These robotic arms are equipped with sensors to detect the correct positioning and alignment of different parts. They are connected to a central control system that coordinates their actions. This automation reduces human effort and increases production speed."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Machine Monitoring:"})," IIoT also enables real-time monitoring of machines and equipment. Sensors are placed on critical machines to collect data such as temperature, vibration, and energy consumption. This data is sent to a central monitoring system that continuously analyzes the machine's health and performance. If any abnormalities or malfunctions are detected, the system can automatically alert maintenance personnel to take necessary actions."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Predictive Maintenance:"})," ","With IIoT, predictive maintenance becomes possible. The sensor data collected from machines can be analyzed to identify patterns and indicators of potential failures. By detecting early signs of wear and tear or performance degradation, maintenance can be scheduled proactively to prevent unexpected breakdowns. This increases the reliability and uptime of machines and reduces maintenance costs."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Industry 4.0:"})," Industry 4.0 is a term used to describe the fourth industrial revolution, which is characterized by the integration of digital technologies and IoT in industrial processes. It represents a shift towards the use of advanced automation, data exchange, and analytics in manufacturing and other industrial sectors."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's explore a few key aspects of Industry 4.0:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Cyber-Physical Systems:"}),"Industry 4.0 relies on the integration of cyber-physical systems (CPS). CPS are systems that combine physical components (such as machines or robots) with digital technologies (such as sensors, actuators, and software). These components communicate with each other and with humans through the internet, enabling real-time data exchange and control."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Big Data and Analytics:"}),"Industry 4.0 leverages the power of big data and analytics. With the increased connectivity of machines and systems, a massive amount of data is generated in industrial environments. This data is analyzed using advanced algorithms and machine learning techniques to extract valuable insights and optimize processes. For example, analyzing production data can help identify bottlenecks, optimize workflows, and improve overall efficiency."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Human-Machine Collaboration:"}),"In Industry 4.0, humans and machines work together in a collaborative manner. Machines handle repetitive and mundane tasks, while humans focus on higher-level decision-making, problem-solving, and creativity. Humans interact with machines through intuitive interfaces, such as touchscreens or voice commands, to monitor and control the production process."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While it's challenging to provide specific code examples for IIoT and Industry 4.0 due to their complexity, I hope this explanation helps you understand these concepts at a high level. In the real world, IIoT and Industry 4.0 implementations involve a combination of hardware, software, networking, and data analysis techniques."})]})})})},si=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Smart cities and infrastructure"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Smart cities and infrastructure refer to the use of IoT technologies to improve the quality of life, sustainability, and efficiency of urban areas. They involve integrating various systems, devices, and services to create a connected and intelligent urban environment."}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Let's explore some examples of smart city applications and explain how they work:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Smart Traffic Management:"})," ","In a smart city, traffic management systems are used to optimize traffic flow, reduce congestion, and improve safety. These systems use sensors, cameras, and data analysis to monitor traffic conditions in real-time and make intelligent decisions."]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Imagine a scenario where there is heavy traffic on a particular road:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Traffic Sensors: "}),"Sensors installed on the road can detect the number of vehicles, their speed, and congestion levels. This data is sent to a central control system."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Intelligent Traffic Lights:"}),"The central control system analyzes the traffic data and adjusts the timing of traffic lights accordingly. For example, if one road is heavily congested, the system can extend the green signal for that road and reduce it for less busy roads, optimizing traffic flow."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Variable Message Signs:"}),"Variable message signs placed along the road can display real-time information about traffic conditions, suggesting alternate routes or providing alerts about accidents or road closures."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Smart Waste Management:"})," ","Smart waste management systems aim to optimize waste collection and disposal processes, reducing costs and environmental impact. They use IoT technologies to monitor waste levels in containers and optimize waste collection routes."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Smart Waste Bins:"}),"Waste bins are equipped with sensors that monitor the fill-level of the bin. When the bin reaches a certain threshold, it sends a signal to the waste management system."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Optimal Collection Routes:"}),"The waste management system analyzes the fill-level data from multiple bins and optimizes collection routes for garbage trucks. It identifies the most efficient route to collect waste from multiple bins, reducing fuel consumption and optimizing manpower."]}),(0,$e.jsx)("li",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-semibold"})})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"3. Smart Lighting:"}),"Smart lighting systems in a smart city use IoT technologies to improve energy efficiency and provide enhanced lighting experiences."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Intelligent Lighting Control:"}),"Streetlights are equipped with sensors that detect ambient light levels and motion. They automatically adjust the brightness of the lights based on the detected conditions. For example, lights can dim when there are no people around and brighten when motion is detected."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Remote Control and Monitoring:"}),"Streetlights can be remotely controlled and monitored through a central system. This allows authorities to turn lights on or off, schedule lighting patterns, and detect faults or failures in the system."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While providing specific code examples for smart cities and infrastructure is challenging due to their complexity and scale, I hope this explanation gives you a general understanding of how IoT technologies can be used to create smart cities. Smart cities involve the integration of various technologies, data analysis, and intelligent decision-making to improve the urban environment and enhance the quality of life for its residents."})]})})})},ii=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Healthcare applications of IoT"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"IoT (Internet of Things) technologies have numerous applications in healthcare, improving patient care, monitoring, and overall well-being. Here are some examples:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Remote Patient Monitoring:"}),"IoT enables the remote monitoring of patients' health conditions, allowing doctors to keep track of their well-being from a distance."]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Imagine a scenario where a patient has a wearable device, such as a smartwatch:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Heart Rate Monitoring:"}),"The smartwatch continuously measures the patient's heart rate and sends the data to a smartphone or a centralized system. The collected data can be analyzed over time to identify patterns or trends, assisting healthcare professionals in diagnosing and managing the patient's condition."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Alerting Abnormalities:"}),"If the heart rate goes above or below a certain threshold, the system can send an alert to the doctor or a family member, indicating a potential health issue."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Human-Machine Collaboration:"}),"If the heart rate goes above or below a certain threshold, the system can send an alert to the doctor or a family member, indicating a potential health issue."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Smart Pill Dispensers:"}),"IoT-based smart pill dispensers help patients manage their medications effectively."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Medication Schedule:"}),"The smart dispenser is programmed with the patient's medication schedule. It reminds the patient when to take specific pills through visual or auditory alerts."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Medication Tracking:"}),"The dispenser keeps track of the pills consumed by the patient. It can send notifications to the patient or a caregiver if a dose is missed or delayed."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Refill Notifications:"}),"When the medication supply is running low, the dispenser can automatically notify the patient or a pharmacy to ensure a timely refill."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Telemedicine:"}),"IoT facilitates telemedicine, enabling remote consultations and medical care."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Video Conferencing:"}),"Patients can have virtual appointments with doctors through video conferencing platforms. They can discuss symptoms, receive medical advice, or get prescriptions without physically visiting a healthcare facility."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Remote Diagnostics:"}),"With the help of IoT-enabled devices, doctors can remotely diagnose certain conditions. For example, a dermatologist can analyze images of a patient's skin condition sent via a smartphone app and provide recommendations."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Health Tracking:"}),"Patients can use IoT devices to monitor their health parameters, such as blood pressure, blood glucose levels, or sleep patterns. They can share this data with doctors for better assessment and personalized care."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While providing specific code examples for healthcare IoT applications is challenging, as they involve a combination of hardware and software, I hope this explanation gives you a general understanding of how IoT technologies are used in healthcare. IoT applications in healthcare aim to improve patient monitoring, enhance medication management, and enable remote consultations, ultimately leading to better healthcare outcomes."})]})})})},ri=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Agriculture and environmental monitoring with IoT"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Agriculture:"}),"IoT technologies have revolutionized agriculture, helping farmers monitor and optimize crop growth, improve productivity, and conserve resources. Here are some examples:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Soil Moisture Monitoring:"}),"Sensors are placed in the soil to measure moisture levels. This data helps farmers determine when and how much to water their crops, ensuring optimal growth and reducing water waste."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Crop Monitoring:"}),"IoT devices, such as drones or remote sensors, are used to monitor crop health. They capture images or collect data about plant growth, nutrient levels, and pest infestations. Farmers can then take timely action, such as applying fertilizers or pesticides, to protect the crops."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Automated Irrigation Systems:"}),"IoT-based irrigation systems use sensors and weather data to automatically adjust the watering schedule and amount. This ensures that crops receive the right amount of water at the right time, conserving water resources and reducing manual effort."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Environmental Monitoring: "}),"IoT technologies are also used to monitor and preserve the environment. They help collect data about air quality, water quality, and other environmental factors. Here are some examples:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Air Quality Monitoring:"}),"Sensors placed in various locations measure parameters like particulate matter, pollutant gases, and humidity. This data helps identify areas with poor air quality and implement measures to improve it."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Water Quality Monitoring:"}),"Sensors are deployed in bodies of water, such as rivers or lakes, to measure water quality parameters like temperature, pH levels, and dissolved oxygen. This information helps assess the health of aquatic ecosystems and identify pollution sources."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Wildlife Conservation:"}),"IoT devices, such as GPS collars or tags, are used to track the movement and behavior of wildlife. This data helps researchers understand animal habits, migration patterns, and conservation needs, contributing to wildlife protection efforts."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 font-semibold",children:"While providing specific code examples for agriculture and environmental monitoring IoT applications is challenging, I can give you a simplified example using Python for soil moisture monitoring in agriculture:"})]})})})},oi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Privacy and security concerns in IoT"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The Internet of Things (IoT) refers to the network of physical devices, vehicles, appliances, and other objects embedded with sensors, software, and connectivity to exchange data with other devices and systems over the Internet. These devices can collect and share data to make our lives easier, but they also raise concerns about privacy and security."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"1. Privacy Concerns in IoT:"}),"When we talk about privacy in the context of IoT, we're concerned about the protection of personal information and the ability to control who has access to it. Here are a few reasons why privacy can be a challenge in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data Collection:"}),"IoT devices often collect various types of data, such as location, health information, and personal preferences. This data can be used to create detailed profiles about individuals, which may lead to privacy violations if it falls into the wrong hands."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data Sharing:"}),"IoT devices may share data with other devices or companies for various purposes. If this data is not properly protected or if it's shared without the user's consent, it can compromise privacy."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data Breaches:"}),"IoT devices can be vulnerable to hacking or security breaches. If a hacker gains access to an IoT device, they can potentially access personal information or use the device for malicious purposes."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To address these privacy concerns, it's important to have strict data protection regulations and guidelines for IoT device manufacturers. Additionally, users should be informed about the data collected by IoT devices and can control how their data is used and shared."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"1. Security Concerns in IoT:"}),"Security in IoT refers to protecting devices, data, and networks from unauthorized access or malicious activities. Here are a few security challenges in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Device Vulnerabilities:"}),"IoT devices are often resource-constrained, meaning they have limited processing power and memory. This makes them more susceptible to security vulnerabilities and attacks."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Weak Authentication:"}),"Some IoT devices may have weak or default passwords, making it easier for hackers to gain unauthorized access. Strong authentication mechanisms, such as unique passwords and two-factor authentication, should be implemented to enhance security."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Lack of Encryption:"}),"Encryption is a method of encoding data so that only authorized parties can access it. Without proper encryption, the data transmitted between IoT devices and servers can be intercepted and manipulated by hackers."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To address security concerns in IoT, manufacturers should follow best practices for secure device design, such as regular software updates and patches. Users should also be educated about the importance of strong passwords and the risks associated with insecure IoT devices."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Future Trends:"}),"As technology evolves, several trends are emerging to enhance privacy and security in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Blockchain Technology:"}),"Blockchain is a decentralized and tamper-resistant technology that can be used to secure IoT data and transactions. It provides transparency and immutability, making it harder for hackers to tamper with data."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Edge Computing:"}),"Edge computing involves processing data locally on the IoT device itself or in a nearby server, instead of sending it to a centralized cloud server. This reduces the amount of data transmitted over the network, improving privacy and security."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Artificial Intelligence (AI) for Security:"}),"AI can be used to detect anomalies and patterns in IoT device behavior, helping to identify potential security threats. It can also provide real-time threat intelligence and automate security responses."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Researchers, policymakers, and manufacturers need to work together to develop and implement these future trends in a way that prioritizes privacy and security while reaping the benefits of IoT technology."})]})})})},li=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Scalability and interoperability challenges"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"1. Scalability Challenges in IoT:"}),"Scalability in IoT refers to the ability of the system to handle an increasing number of devices, data, and users without sacrificing performance. Here are a few challenges when it comes to scalability:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Device Overload:"}),"As the number of IoT devices increases, the system needs to handle a larger volume of data generated by these devices. If the system is not designed to handle this increased load, it may become slow or unresponsive."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Network Congestion:"}),"With more devices connected to the network, there is a risk of congestion, where too much data is being transmitted at the same time. This can lead to delays or failures in communication between devices."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Storage and Processing:"}),"IoT devices generate a significant amount of data that needs to be stored and processed. If the system lacks the necessary storage and processing capabilities, it may struggle to handle the increasing data load."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To address scalability challenges, developers use various techniques such as distributed computing, load balancing, and cloud infrastructure. These technologies help distribute the workload across multiple devices and servers, ensuring that the system can handle a large number of devices and data efficiently."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"2. Interoperability Challenges in IoT:"}),"Interoperability in IoT refers to the ability of different devices, systems, and platforms to work together seamlessly. Here are a few challenges related to interoperability:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Device Diversity:"}),"IoT devices come in various shapes, sizes, and brands, and they often use different communication protocols or data formats. This makes it difficult for devices to understand and communicate with each other."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data Integration:"}),"IoT devices generate data in different formats and structures. To make sense of this data, it's necessary to integrate and combine information from multiple devices. However, if the data formats are incompatible, it becomes challenging to achieve seamless integration."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Standards and Compatibility:"}),"The lack of common standards and protocols across different IoT devices and platforms makes it difficult for them to work together. This can lead to fragmentation and limited interoperability."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To overcome interoperability challenges, standardization efforts are underway. Organizations are developing common protocols and frameworks, such as MQTT and CoAP, to enable better communication between devices. Additionally, technologies like APIs (Application Programming Interfaces) facilitate data exchange and interoperability between different platforms and devices."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Future Trends:"}),"As technology In the future, the several trends can address scalability and interoperability challenges in IoT:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"5G Connectivity:"}),"The deployment of 5G networks provides faster and more reliable connectivity, allowing IoT devices to transmit data more efficiently. This helps improve scalability and reduces network congestion."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Edge Computing:"}),"Edge computing, as mentioned earlier, involves processing data closer to the source (IoT device) rather than relying on a centralized cloud server. This reduces the dependency on a single server, improves response time, and enhances scalability."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"AI and Machine Learning:"}),"Artificial intelligence and machine learning techniques can help optimize the performance and scalability of IoT systems. These technologies can analyze data patterns, predict device behavior, and make intelligent decisions to manage system resources efficiently."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to have a collaborative approach among manufacturers, developers, and standardization bodies to ensure scalability and interoperability in the IoT ecosystem. This way, we can create a seamless network of interconnected devices that can work together effectively."})]})})})},ci=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Edge computing and fog computing in IoT"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"1. Edge Computing:"}),"Edge computing is a concept in which data processing and analysis are performed closer to the source of data, which is typically the IoT device itself. It brings the computational power and intelligence closer to where the data is generated. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem: "}),"Imagine you have a smart home with various IoT devices like lights, cameras, and sensors. These devices generate a lot of data that needs to be analyzed and acted upon. Sending all that data to a centralized cloud server for processing can be slow and inefficient."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Solution:"}),"With edge computing, each IoT device has some computing capabilities of its own. Instead of sending all the data to a remote server, the device can perform some processing and decision-making locally."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Benefits:"}),"Edge computing reduces reliance on a centralized cloud server and improves response time. It allows devices to act quickly based on real-time data, without having to wait for instructions from a remote server. This is especially useful for time-sensitive applications like autonomous vehicles or real-time monitoring systems."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[" ",(0,$e.jsx)("span",{className:"semi-bold",children:"Example:"}),"Let's say you have a smart doorbell that detects motion and sends a notification to your phone. With edge computing, the doorbell can analyze the motion data locally and send you an immediate notification, without needing to send the data to a remote server for analysis."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"2. Fog Computing:"}),"Fog computing is similar to edge computing, but it involves a slightly larger-scale network of devices. It extends the capabilities of edge computing by adding an intermediate layer between the IoT devices and the cloud. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"}),"As the number of IoT devices increases, the amount of data generated also increases. This can put a strain on the cloud servers, leading to delays and potential bottlenecks."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Solution:"}),"Fog computing introduces a network of intermediate nodes, called fog nodes or fog devices, which are distributed closer to the IoT devices. These fog nodes have more computational power and storage capacity compared to the devices themselves."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Benefits:"}),"By leveraging fog nodes, data processing, and analysis can be performed closer to the devices, reducing the amount of data that needs to be sent to the cloud. This helps alleviate network congestion, reduces latency, and improves overall system performance."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Example:"}),"Let's consider a smart city scenario. Streetlights equipped with sensors can detect traffic flow, air quality, and other data. With fog computing, nearby fog nodes can collect and process this data, making intelligent decisions locally. For example, adjusting the timing of traffic lights to optimize traffic flow, without needing to send all the data to a centralized cloud server."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Future Trends:"}),"Both edge computing and fog computing are becoming increasingly important in the IoT ecosystem. They offer several benefits and enable new applications. Here are a few future trends:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Intelligent IoT Devices:"}),"With edge computing, IoT devices can become smarter and more autonomous. They can analyze data locally, make intelligent decisions, and communicate with other devices without relying heavily on the cloud."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Real-time Applications:"}),"Edge and fog computing enable real-time applications, such as autonomous vehicles, remote healthcare monitoring, and industrial automation. These applications require quick responses and low latency, which can be achieved by processing data closer to the source."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Distributed Machine Learning:"}),"By leveraging the computational capabilities of edge and fog nodes, machine learning algorithms can be deployed closer to the devices. This allows devices to learn and adapt based on local data, without needing to constantly transmit data to a central server."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Overall, edge computing and fog computing are exciting trends that enhance the capabilities of IoT devices and improve the efficiency of IoT systems. They bring computing power closer to where it's needed, enabling faster and smarter decision-making."})]})})})},di=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Artificial Intelligence and machine learning in IoT"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Artificial Intelligence (AI):"}),"Artificial Intelligence refers to the ability of machines or computer systems to perform tasks that typically require human intelligence. AI enables machines to learn from data, reason, make decisions, and even exhibit behaviors that mimic human intelligence. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" The Problem:"}),"Machines, like IoT devices, often need to make decisions or perform tasks based on the data they receive. Traditional programming techniques may not be sufficient to handle complex or changing situations."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Solution:"}),"AI techniques allow machines to learn and adapt from data, making them more intelligent and capable of handling various scenarios. Instead of being explicitly programmed for every situation, machines can learn patterns and make decisions based on that learning."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Benefits: "}),"AI in IoT enables devices to become smarter and more autonomous. They can analyze data, identify patterns, and make intelligent decisions without constant human intervention. This can lead to improved efficiency, better predictions, and enhanced automation."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Example:"}),"Let's consider a smart thermostat that adjusts the temperature based on user preferences and weather conditions. With AI, the thermostat can learn from user behavior, such as when they prefer a cooler or warmer temperature, and adjust the temperature accordingly."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Machine Learning (ML):"}),"Machine Learning is a subset of AI that focuses on algorithms and models that enable machines to automatically learn from data and improve their performance. It involves training a machine learning model using data and then using that model to make predictions or take actions. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"}),"Machines need to make predictions or decisions based on data, but we may not know the exact rules or patterns in the data."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Solution:"}),"Machine learning algorithms analyze and learn from data to identify patterns and make predictions. The algorithms automatically adjust their parameters to improve performance as they receive more data."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Benefits:"}),"Machine learning enables IoT devices to make predictions or decisions based on patterns in the data. It allows devices to adapt and improve over time without explicit programming."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Example:"}),'Let\'s consider a smart camera that detects objects. By training a machine learning model with thousands of images labeled as "cat" or "dog," the camera can learn to recognize cats and dogs in real time.']})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Future Trends:"}),"The combination of AI and machine learning with IoT opens up exciting possibilities. Here are a few future trends: In summary, AI and machine learning bring intelligence and adaptability to IoT devices. They enable devices to learn from data, make decisions, and provide personalized experiences. This combination opens up a world of possibilities for smarter, more efficient, and autonomous IoT systems."]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:(0,$e.jsx)("span",{class:"font-semibold",children:"Intelligent Decision-Making:"})}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Predictive Maintenance:"}),"By analyzing historical data from IoT devices, machine learning algorithms can predict when a device is likely to fail or require maintenance. This allows proactive maintenance, reducing downtime and costs."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Anomaly Detection: "}),"Machine learning algorithms can learn normal patterns of behavior from IoT device data. They can then detect anomalies or abnormal behavior that may indicate a security breach or a malfunctioning device."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Personalized Experiences:"}),"AI algorithms can analyze user preferences and behavior to personalize the experiences provided by IoT devices. For example, a smart speaker can learn a user's music preferences and recommend songs accordingly."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"AI and machine learning algorithms can help IoT devices make more intelligent decisions based on real-time data. For example, autonomous vehicles can use machine learning models to analyze sensor data and make decisions about navigation and safety."})]})})})},ui=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Emerging Trends and future directions in IoT"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Smart Cities:"}),"Smart cities are an emerging trend in IoT where various technologies are used to make cities more efficient, sustainable, and livable. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Idea:"}),"The concept of a smart city involves using IoT devices and sensors to gather data about different aspects of the city, such as transportation, energy consumption, waste management, and public safety."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Benefits:"}),"By analyzing this data, city planners can make informed decisions to improve the quality of life for residents. For example, optimizing traffic flow, reducing energy consumption, or improving public services."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Examples:"}),"Smart traffic lights that adjust timing based on real-time traffic data, smart waste bins that notify when they need to be emptied, or smart sensors that monitor air quality in the city."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Wearable Technology:"})," Wearable technology refers to devices that can be worn on the body, such as smartwatches, fitness trackers, or augmented reality glasses. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Idea:"}),"Wearable devices are equipped with sensors to collect data about the wearer's activities, health, and environment."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Benefits:"}),"Wearables can provide personalized health and fitness monitoring, track daily activities, and even offer augmented reality experiences."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Examples:"}),"A smartwatch that tracks your steps, heart rate, and sleep patterns, or augmented reality glasses that overlay digital information on the real world."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Precision Agriculture:"}),"Precision agriculture is the use of IoT technologies in farming to optimize crop production, reduce resource wastage, and increase efficiency. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Idea:"}),"IoT devices such as sensors, drones, and autonomous machinery are used to collect data about soil conditions, weather patterns, and crop health."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Benefits:"}),"Farmers can make data-driven decisions about irrigation, fertilization, and pest control, leading to increased crop yields and reduced environmental impact."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Examples:"}),"Soil moisture sensors that determine when to water crops, drones that monitor plant health and detect diseases, or autonomous robots that perform precise planting and harvesting."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Industrial IoT (IIoT):"}),"Industrial IoT refers to the use of IoT technologies in industrial settings to optimize processes, monitor equipment, and improve safety. Here's a simple breakdown:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Idea:"}),"IoT devices and sensors are deployed in factories, warehouses, or manufacturing plants to collect data about equipment performance, energy usage, and worker safety."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Benefits:"}),"IIoT enables predictive maintenance, real-time monitoring of production lines, and optimization of energy consumption, leading to cost savings and improved efficiency."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Examples:"}),"Sensors that detect machine vibrations to predict equipment failures, cameras that monitor worker safety, or smart energy meters that track energy usage in a factory."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("span",{class:"font-semibold",children:"Future Directions:"})}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"5G Networks:"}),"The deployment of 5G networks will provide faster and more reliable connectivity, enabling seamless communication between a large number of IoT devices."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Edge Computing:"}),"Edge computing, as discussed earlier, will continue to play a crucial role in IoT by processing data closer to the source, reducing latency, and enabling real-time decision-making."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Artificial Intelligence and Machine Learning:"}),"AI and machine learning will continue to advance in IoT, enabling devices to learn, adapt, and make intelligent decisions based on data patterns."]}),(0,$e.jsx)("li",{className:"pt-4",children:"Data Security and Privacy: As IoT devices become more prevalent, ensuring the security and privacy of data will be a significant focus, with advancements in encryption, authentication, and access control."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While providing code examples for each emerging trend is not feasible, the implementation of these trends involves a combination of hardware and software technologies, programming languages like Python or C++, and IoT-specific frameworks and platforms."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, emerging trends in IoT include the development of smart cities, wearable technology, precision agriculture, and industrial IoT. The future directions involve advancements in 5G networks, edge computing, AI and machine learning, and data security. These trends and directions aim to make our lives easier, more connected, and sustainable through the power of IoT technologies."})]})})})},pi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Importance of IoT security to protect devices and data"]}),(0,$e.jsxs)("h3",{className:"p-2 text-lg font-bold",children:["Protecting Devices and Data:"," "]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"}),"IoT devices, such as smart speakers, cameras, and thermostats, are connected to the internet and collect and transmit data. If not properly secured, these devices can be vulnerable to attacks by malicious individuals or hackers."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Importance of Security:"})," IoT security is crucial to protect devices and data from unauthorized access or misuse. Here's why it's important:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Device Protection:"}),"Security measures help prevent unauthorized access to IoT devices, ensuring they function as intended and protecting personal information stored on them."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Data Privacy:"}),"IoT devices often collect sensitive data, such as personal information or home activities. Security measures safeguard this data from being intercepted or misused."]})]}),(0,$e.jsx)("ul",{className:"list-disc px-10",children:(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Preventing Attacks:"}),"A compromised IoT device can be used to launch attacks on other devices or networks. Security measures help prevent such attacks, maintaining a safe and reliable IoT ecosystem."]})}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" Common Security Challenges:"}),"a Weak Passwords: Many IoT devices come with default passwords that are easily guessable or not changed by users. This makes them vulnerable to unauthorized access."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Lack of Software Updates:"}),"IoT devices may not receive regular software updates, leaving them exposed to known vulnerabilities that can be exploited by hackers."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Insecure Communication:"}),"Inadequate encryption and authentication methods can expose data transmitted between devices and cloud servers, making it susceptible to eavesdropping."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Security Measures for Kids:"}),"Strong Passwords: Kids can understand the importance of setting strong passwords for their devices and accounts. A strong password should be unique, with a mix of letters, numbers, and special characters."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Software Updates:"}),"Kids can learn to keep their devices up to date by installing software updates as they become available. Updates often include security patches to fix vulnerabilities."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Network Security:"}),"Kids can be taught about the importance of securing their home Wi-Fi network by setting a strong password and enabling encryption, such as WPA2, to protect IoT devices connected to the network."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Parental Controls:"}),"Parents can set up parental control features on IoT devices to limit access to certain content or restrict communication with unknown users."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Code Example: Here's a simple code example that demonstrates the importance of using strong passwords for IoT devices"}),(0,$e.jsx)(Gt,{children:'\n  # Setting a strong password for an IoT device\n  password = "MyP@ssw0rd!"  # A strong password with a mix of characters\n  # Later, when accessing the device\n  entered_password = input("Enter your password: ")\n  # Comparing the entered password with the stored password\n  if entered_password == password:\n      print("Access granted!")\n  else:\n      print("Access denied. Please try again.")\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:'In this example, the device owner sets a strong password ("MyP@ssw0rd!") for the IoT device. When accessing the device, the entered password is compared to the stored password. If the entered password matches the stored password, access is granted; otherwise, access is denied.'}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In conclusion, IoT security is crucial to protect devices and data from unauthorized access and misuse. By following security best practices such as using strong passwords, keeping devices updated, and securing network connections, we can ensure a safer and more secure IoT ecosystem."})]})})})},mi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Common security risks and vulnerabilities in IoT systems"]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Weak Passwords:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"})," Many IoT devices come with default passwords that are either easy to guess or not changed by users. Weak passwords make it easier for hackers to gain unauthorized access to devices and control them."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Importance of Strong Passwords:"}),"Strong passwords are harder to guess or crack, making it more difficult for hackers to gain access. Kids can understand the importance of setting strong passwords to protect their devices."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Lack of Software Updates:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"}),"IoT devices may not receive regular software updates from manufacturers. These updates often include security patches to fix vulnerabilities that hackers could exploit."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Importance of Software Updates:"}),"Software updates ensure that devices have the latest security improvements. It's like getting a shield that protects against new threats and vulnerabilities."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Insecure Communication:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" The Problem:"}),"Insecure communication can expose data transmitted between IoT devices and cloud servers. Hackers can intercept this data and gain access to sensitive information."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsxs)("span",{class:"font-semibold",children:[" ","Importance of Secure Communication:"]}),"Secure communication ensures that data is encrypted and protected during transmission, making it difficult for hackers to intercept and decipher."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Lack of Authentication and Authorization:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:" The Problem:"}),"IoT devices may not have proper authentication and authorization mechanisms in place. This means that anyone can access and control the device, even if they are not authorized."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsxs)("span",{class:"font-semibold",children:[" ","Importance of Authentication and Authorization:"]}),"Authentication ensures that only authorized users can access and control devices. Authorization defines what actions users can perform, to prevent unauthorized access."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Physical Security:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"}),"IoT devices that are not physically secure can be easily tampered with or stolen. This can lead to unauthorized access or manipulation of the device."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Importance of Physical Security:"}),"Ensuring that devices are physically secure, such as placing them in locked areas or using tamper-proof enclosures, protects them from physical attacks."]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Code Vulnerabilities:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"The Problem:"}),"IoT devices and their supporting software can have vulnerabilities in their code. These vulnerabilities can be exploited by hackers to gain unauthorized access or control."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsxs)("span",{class:"font-semibold",children:[" ","Importance of Secure Coding Practices:"," "]}),"Developers should follow secure coding practices to minimize vulnerabilities in IoT systems. This includes validating user inputs, using secure libraries, and applying coding best practices."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"It's important to note that addressing these security risks and vulnerabilities requires a combination of efforts from device manufacturers, developers, and users. Manufacturers should build security features into their devices, developers should follow secure coding practices, and users should take steps to protect their devices."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"In summary, common security risks and vulnerabilities in IoT systems include weak passwords, lack of software updates, insecure communication, lack of authentication and authorization, physical security concerns, and code vulnerabilities. By understanding these risks and taking appropriate security measures, we can ensure a safer and more secure IoT ecosystem."})]})})})},hi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Secure communication protocols and encryption techniques"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:" Communication Protocols:"}),"Secure communication protocols ensure that data transmitted between IoT devices and other components are protected from unauthorized access or interception. Here are a couple of examples:"]}),(0,$e.jsxs)("p",{className:"font-semibold",children:[" ","HTTPS (Hypertext Transfer Protocol Secure):"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"HTTPS is a protocol used for secure communication over the Internet."}),(0,$e.jsx)("li",{className:"pt-4",children:"It encrypts data sent between a web browser and a website, making it difficult for hackers to intercept and understand the information."}),(0,$e.jsx)("li",{className:"pt-4",children:"HTTPS is often represented by a lock symbol in the browser's address bar, indicating that the connection is secure."})]}),(0,$e.jsx)("p",{className:"font-semibold",children:"2. Secure Socket Layer/Transport Layer Security (SSL/TLS):"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"SSL and its successor TLS are protocols used to secure communication between devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"They encrypt the data exchanged between devices, making it unreadable to unauthorized individuals."}),(0,$e.jsx)("li",{className:"pt-4",children:"SSL/TLS ensures that the information remains private and secure during transmission."})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Encryption Techniques"}),"Encryption is a process of encoding data in a way that makes it unreadable to unauthorized individuals. Here are a couple of encryption techniques used in IoT security:"]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Secret Codes:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Secret codes involve replacing letters or words with other symbols or characters."}),(0,$e.jsx)("li",{className:"pt-4",children:"For example, a simple secret code could be shifting each letter of a message by a certain number of positions in the alphabet."}),(0,$e.jsx)("li",{className:"pt-4",children:"By using secret codes, only those who know the key or rule can understand the message."})]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Passwords and PINs:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Passwords and PINs are like secret codes used to protect our personal information and devices."}),(0,$e.jsx)("li",{className:"pt-4",children:"They act as a key to access the information or device, and only the person who knows the correct password or PIN can gain access."}),(0,$e.jsx)("li",{className:"pt-4"}),(0,$e.jsx)("li",{className:"pt-4",children:"It's important to choose strong and unique passwords or PINs that are not easily guessed."})]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Encryption Algorithms:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Encryption algorithms are complex mathematical formulas used to scramble data into unreadable forms."}),(0,$e.jsx)("li",{className:"pt-4",children:"To encrypt the data, a secret key is used, which is a unique piece of information known only to the sender and the receiver."}),(0,$e.jsx)("li",{className:"pt-4",children:"The encrypted data can only be decrypted back into its original form using the same secret key."}),(0,$e.jsx)("li",{className:"pt-4",children:"There are various encryption algorithms used, such as AES (Advanced Encryption Standard) and RSA (Rivest-Shamir-Adleman)."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, secure communication protocols like HTTPS and SSL/TLS ensure that data transmitted between devices remains private and secure. Encryption techniques, such as secret codes, passwords/PINs, and encryption algorithms, are used to protect data by encoding it in a way that only authorized individuals can understand. These techniques help ensure that our IoT devices and the data they transmit are kept safe from unauthorized access."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that the actual implementation of secure communication protocols and encryption techniques involves more complex algorithms and coding practices, but understanding the importance of these concepts is a great first step toward grasping IoT security."})]})})})},fi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Authentication and access control mechanisms for IoT devices"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Authentication: "}),"Authentication is the process of verifying the identity of a user or device to ensure that only authorized individuals or devices can access a system or resource. Here are a couple of common authentication mechanisms:"]}),(0,$e.jsx)("p",{className:"font-semibold",children:". Password-based Authentication:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Password-based authentication involves the use of a secret password that only the authorized user knows."}),(0,$e.jsx)("li",{className:"pt-4",children:"When logging in to a device or system, the user enters their password, and the system verifies if it matches the stored password."}),(0,$e.jsx)("li",{className:"pt-4",children:"It's important to choose strong and unique passwords that are not easily guessable."})]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Biometric Authentication:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"Biometric authentication uses unique physical characteristics or behavioral traits of individuals to verify their identity."}),(0,$e.jsx)("li",{className:"pt-4",children:"Examples of biometrics include fingerprints, facial recognition, or voice recognition."}),(0,$e.jsx)("li",{className:"pt-4",children:"The device compares the captured biometric data with stored data to authenticate the user."})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Access Control Mechanisms:"}),"Access control mechanisms determine what actions or resources a user or device can access within a system. Here are a couple of common access control mechanisms:"]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Role-based Access Control (RBAC):"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"RBAC assigns different roles to users or devices, and each role has a set of permissions associated with it."}),(0,$e.jsx)("li",{className:"pt-4",children:"Users or devices are granted access based on their assigned role."}),(0,$e.jsx)("li",{className:"pt-4",children:"For example, an administrator role may have full access, while a guest role may have limited access to certain features."})]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Access Control Lists (ACL):"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"ACL is a list of permissions that defines what actions or resources a specific user or device can access."}),(0,$e.jsx)("li",{className:"pt-4",children:"It specifies who can read, write, or modify certain resources."}),(0,$e.jsx)("li",{className:"pt-4",children:"Access rights can be granted or denied based on the permissions specified in the ACL."})]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Two-Factor Authentication (2FA):"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"2FA adds an extra layer of security by requiring two different types of authentication."}),(0,$e.jsx)("li",{className:"pt-4",children:"For example, in addition to a password, a user may be required to enter a verification code sent to their mobile device."}),(0,$e.jsx)("li",{className:"pt-4",children:"This provides an additional level of protection against unauthorized access."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, authentication verifies the identity of users or devices, while access control mechanisms determine what actions or resources they can access. Password-based authentication, biometric authentication, RBAC, ACL, and 2FA are some common mechanisms used to ensure only authorized access to IoT devices and systems."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Please note that the actual implementation of authentication and access control mechanisms involves more complex coding practices and integration with backend systems. Understanding the importance of these concepts is a great first step toward grasping IoT security."})]})})})},gi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Best practices for securing IoT deployments"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Change Default Passwords:"}),"Many IoT devices come with default passwords that are easily guessable. It's important to change these passwords to strong and unique ones that are not easily guessed by others. This helps prevent unauthorized access to the device."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Keep Software Up to Date:"}),"Regularly update the software/firmware of IoT devices. Manufacturers often release updates to fix security vulnerabilities and improve device performance. Updating the software ensures that your devices have the latest security protections."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Secure Wi-Fi Networks:"}),"Use a strong and unique password for your Wi-Fi network. This prevents unauthorized users from connecting to your network and gaining access to your IoT devices. It's also a good idea to use encryption, such as WPA2 or WPA3, to secure your Wi-Fi network."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Segment Your Network:"}),"If you have multiple IoT devices, consider segmenting your network. This means separating your IoT devices from other devices like computers or smartphones. By doing so, even if one device is compromised, it won't affect the security of other devices on your network."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Disable Unnecessary Features:"}),"Some IoT devices come with features that you may not need or use. It's a good practice to disable any unnecessary features or services as they might introduce potential vulnerabilities. Review the device's settings and disable any features that are not essential."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Enable Two-Factor Authentication (2FA):"}),"If supported by your IoT devices, enable two-factor authentication. This adds an extra layer of security by requiring a second form of verification, such as a code sent to your mobile device, in addition to a password. It makes it harder for hackers to gain unauthorized access."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Regularly Monitor and Update:"}),"Keep an eye on your IoT devices and monitor their activity. Check for any suspicious behavior or signs of compromise. If you receive notifications or updates from the device manufacturer, make sure to read and follow them. Stay informed about any security patches or updates."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{class:"font-semibold",children:"Educate Yourself and Others:"}),"Learn about IoT security best practices and educate others in your family or community. Share the importance of strong passwords, software updates, and other security measures. Encourage everyone to follow these practices to protect their IoT devices."]}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Remember, while these best practices can significantly enhance the security of your IoT deployments, it's important to note that securing IoT devices involves a combination of efforts from device manufacturers, developers, and users. By following these best practices, you can help create a safer and more secure IoT environment."}),(0,$e.jsx)("p",{className:"text-justify pt-4",children:"Please note that the actual implementation of these best practices involves more detailed steps and considerations. Understanding the importance of these concepts is a great first step toward grasping IoT security."})]})})})},xi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Introduction to edge computing and its Role in IoT"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Edge computing is a distributed computing paradigm that brings computation and data storage closer to the devices or sensors generating the data. In the context of the Internet of Things (IoT), edge computing plays a crucial role in improving efficiency and reducing latency in data processing and analysis."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To explain edge computing and Role in IoT to a kid, let's use an analogy of a classroom. Imagine you are sitting in a classroom with your friends, and your teacher gives you a math problem to solve. Traditionally, you would raise your hand, and the teacher would come to your desk, take your paper, solve the problem, and give you the answer. This process takes time, and you have to wait for the teacher to solve each problem individually."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's introduce edge computing to our classroom analogy. Instead of waiting for the teacher to solve each problem, imagine if you had a mini-computer at your desk that could solve the math problems instantly. This mini-computer is like the edge device in edge computing, which is located closer to you, the data source."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the context of IoT, devices such as sensors, cameras, and smart devices generate a massive amount of data. This data is usually sent to a central server or the cloud for processing and analysis. However, transmitting data to a remote server introduces latency, which means it takes time for the data to reach the server and get processed. This delay can be problematic for time-sensitive applications or real-time decision-making."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Edge computing solves this problem by placing mini-computers called edge devices closer to the data source, such as your din the classroom analogy. These edge devices can perform data processing and analysis locally, without relying on a distant server or the cloud. By doing so, edge computing reduces latency, improves response time, and allows for real-time data analysis."}),(0,$e.jsx)("p",{className:"font-semibold",children:"Now, let's take a closer look at how edge computing works in IoT:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:" Data Collection:"}),"IoT devices, such as sensors or cameras, collect data from the environment. For example, a temperature sensor in a smart thermostat measures the room temperature."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Edge Devices:"}),"The data collected by IoT devices is sent to nearby edge devices instead of directly sending it to a remote server or the cloud. These edge devices can be small computers, microcontrollers, or specialized devices designed for edge computing."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Data Processing: "}),"The edge devices process the data locally. They can perform various operations on the data, such as filtering, aggregating, or analyzing it. In our classroom analogy, the mini-computer at your desk solves the math problem locally."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Decision-making: "}),"After processing the data, edge devices can make real-time decisions based on the analyzed data. For example, in a smart home security system, an edge device can analyze camera footage and identify potential intruders, triggering an alarm."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Data Transmission:"}),"Not all data needs to be sent to the cloud or a central server. Edge devices can selectively send only relevant or summarized data to the cloud, reducing the amount of data transmitted and the associated network bandwidth requirements."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Cloud Integration:"}),"While edge computing reduces the reliance on the cloud, it still maintains a connection to the cloud for certain tasks. The cloud can provide additional storage, advanced analytics, or long-term data archiving. It acts as a complement to the edge devices' capabilities."]})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Overall, edge computing in IoT brings computation and decision-making closer to the data source, enabling faster response times, reduced network traffic, and improved efficiency in data processing."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In edge computing, programming languages such as Python, JavaScript, or C++ are commonly used to develop software for edge devices. This code allows edge devices to perform tasks like data collection, processing, analysis, and decision-making. For example, in our classroom analogy, the mini-computer at your desk would need a program that can solve math problems."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code on the edge devices can be customized based on the specific requirements of the IoT application. It can include algorithms, machine learning models, and communication protocols to interact with other devices or the cloud."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"However, it's important to note that the specific code implementation varies depending on the edge device, programming language, and the IoT platform or framework being used. The exact code for edge computing applications can be quite complex and may require a deeper understanding of programming concepts."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, edge computing is a distributed computing approach that br computation closer to the data source in IoT. It reduces latency, improves response time, and enables real-time decision-making. Code plays a crucial role in programming edge devices to collect, process, and analyze data, allowing them to make informed decisions based on the analyzed information."})]})})})},_i=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Advantages of processing data at the edge of the network"]}),(0,$e.jsx)("p",{className:"font-semibold",children:"Advantages of Processing Data at the Edge of the Network in IoT:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Processing data at the edge of the network, also known as edge computing, offers several advantages in IoT applications. Let's explore these advantages using our classroom analogy to make it easier for a kid to understand."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Reduced Latency:"}),"Imagine you have a question for the teacher, but instead of asking directly, you need to pass a note to your friend sitting in the back row, who then passes it to another friend, and finally, it reaches the teacher. This process takes time, and you have to wait for the answer. This is similar to sending data to a remote server or the cloud for processing. However, with edge computing, the mini-computer at your desk can instantly solve the problem without the need for passing notes. This reduces the time it takes to get an answer, which is called latency. In IoT, reduced latency enables real-time responses and faster decision-making. Sometimes, you may need to work on your math problems even if the teacher is not in the classroom. With the mini-computer at your desk, you can continue solving problems offline. Similarly, edge devices in IoT can continue collecting and processing data even when there is no network connectivity. This allows the system to operate autonomously and provides resilience against network outages."]}),(0,$e.jsx)("li",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-semibold",children:"Improved Reliability:"})}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Bandwidth Optimization: "}),"Sending large amounts of data to a remote server or the cloud consumes network bandwidth, similar to passing many notes around the classroom. This can cause congestion and slow down the overall process. In edge computing, the mini-computer at your desk can filter and summarize the data before sending it to the cloud. It's like condensing multiple notes into one and sending only the essential information. This optimizes the bandwidth usage and reduces the network traffic, making the system more efficient."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Enhanced Privacy and Security: "}),"Data privacy and security are important considerations in IoT. When data is processed at the edge, it stays within the local network environment. This means that sensitive information, like your math problem, doesn't leave your desk. It doesn't need to be transmitted over the network, reducing the risk of unauthorized access or data breaches. By keeping data local, edge computing enhances privacy and security."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Offline Operations:"}),"Sometimes, the network connection to a remote server or the cloud may not be reliable. It's like when your friend passes the note to the teacher, but someone accidentally drops it on the way. With edge computing, the mini-computer at your desk doesn't rely on external connections. It can process data locally, ensuring that the analysis and decision-making happen even if the network connection is intermittent or unavailable. This improves the overall reliability of the system."]})]}),(0,$e.jsx)("p",{className:"font-semibold pt-4 p-2 text-justify",children:"Now, let's take a closer look at the code involved in edge computing. While providing a complete code example might be challenging, here's a simplified illustration:"}),(0,$e.jsx)(Gt,{children:'# Sample Python code for an edge device in IoT\n  # Data Collection\n  temperature = read_temperature_sensor()\n  # Data Processing\n  if temperature > 25:\n      print("It\'s hot!")\n  else:\n      print("It\'s cool.")\n  # Decision-making\n  if temperature > 30:\n      turn_on_air_conditioner()\n  elif temperature < 15:\n      turn_on_heater()\n  else:\n      maintain_current_state()\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, we assume that the edge device is equipped with a temperature sensor. The code reads the temperature value from the sensor (data collection), processes it to determine if it's hot or cool (data processing), and makes a decision based on the temperature value (decision-making)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to note that the actual code implementation depends on the specific programming language, the hardware platform, and the IoT framework being used. This example is a simplified representation to provide an understanding of how code can be involved in edge computing."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, processing data at the edge of the network in IoT offers advantages such as reduced latency, improved reliability, bandwidth optimization, enhanced privacy and security, and the ability to operate offline. Code plays a crucial role in enabling data collection, processing, and decision-making on edge devices, allowing for faster and more efficient IoT applications."})]})})})},bi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Edge devices and gateways for local data processing"]}),(0,$e.jsx)("p",{className:"font-semibold text-justify p-2 pt-4",children:"Edge Devices and Gateways for Local Data Processing in IoT:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In IoT, edge devices and gateways play a crucial role in enabling local data processing at the edge of the network. Let's dive into these concepts using our classroom analogy to make it easier for a kid to understand."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Edge Devices:"}),"Edge devices are small computing devices or sensors that are located closer to the data source in an IoT network. They can be compared to mini-computers at each desk in our classroom analogy. Edge devices have the capability to collect, process, and analyze data locally, without relying on a remote server or the cloud."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, in a smart home scenario, edge devices could include smart thermostats, motion sensors, or smart locks. Each of these devices can collect data, such as temperature readings or motion detection, and perform local data processing to make real-time decisions or trigger actions."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Gateways:"}),"Gateways act as intermediaries between edge devices and the central server or the cloud. They are responsible for aggregating data from multiple edge devices and forwarding it to the appropriate destination. Think of a gateway as a student who collects all the notes from different desks and hands them to the teacher."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Gateways can perform various tasks such as data filtering, protocol translation, and secure communication. They ensure that the data collected by edge devices is efficiently transmitted to the desired destination while maintaining reliability and security."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, in a smart building system, gateways can collect data from multiple sensors and devices spread across different floors or areas. They can aggregate this data and transmit it to the central server or cloud for further processing or analysis."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 font-semibold",children:"Now, let's take a closer look at how code can be involved in edge devices and gateways in IoT:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Code for Edge Devices: "}),"The code on edge devices allows them to collect, process, and analyze data locally. Here's a simplified example using Python:"]}),(0,$e.jsx)(Gt,{children:'\n  # Sample Python code for an edge device in IoT\n  \n  # Data Collection\n  temperature = read_temperature_sensor()\n  \n  # Data Processing\n  if temperature > 25:\n      print("It\'s hot!")\n  else:\n      print("It\'s cool.")\n  \n  # Decision-making\n  if temperature > 30:\n      turn_on_air_conditioner()\n  elif temperature < 15:\n      turn_on_heater()\n  else:\n      maintain_current_state()\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, the edge device reads the temperature value from a temperature sensor (data collection), processes it to determine if it's hot or cool (data processing), and makes a decision based on the temperature value (decision-making)."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Code for Gateways:"}),"The code on gateways focuses on tasks like data aggregation, protocol conversion, and secure communication. Here's a simplified example using Python:"]}),(0,$e.jsx)(Gt,{children:"\n  # Sample Python code for a gateway in IoT\n  \n  # Data Aggregation\n  data = []\n  \n  def collect_data_from_edge_device(device_id):\n      device_data = read_data_from_device(device_id)\n      data.append(device_data)\n  \n  # Protocol Conversion\n  def convert_data_to_another_format(data):\n      # Convert data to another format (e.g., JSON)\n      converted_data = convert_to_json(data)\n      return converted_data\n  \n  # Secure Communication\n  def transmit_data_to_cloud(converted_data):\n      encrypted_data = encrypt(converted_data)\n      send_data_to_cloud(encrypted_data)\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, the gateway collects data from different edge devices and stores it in the data list (data aggregation). It then converts the collected data to another format, such as JSON (protocol conversion). Finally, the data is encrypted and transmitted securely to the cloud (secure communication)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to note that these examples provide a simplified understanding of the code involved in edge devices and gateways. The actual implementation can vary based on the specific programming language, hardware platform, and IoT framework being used."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, edge devices are small computing devices or sensors located closer to the data source, capable of local data processing. Gateways act as intermediaries, aggregating and transmitting data from edge devices to the central server or cloud. Code on edge devices and gateways enable data collection, processing, and communication, allowing for efficient and localized data processing in IoT applications."})]})})})},yi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Edge analytics and decision-making in real-time IoT applications"]}),(0,$e.jsx)("p",{className:"font-semibold text-justify p-2 pt-4",children:"Edge Analytics and Decision-Making in Real-Time IoT Applications:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Edge analytics and decision-making are key components of edge computing in IoT. They involve processing and analyzing data at the edge devices in real-time, allowing for faster insights and immediate actions. Let's explore these concepts using our classroom analogy to make it easier for a kid to understand."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Edge Analytics:"}),"Edge analytics refers to the process of analyzing data locally at the edge devices in real-time. It's like solving a math problem right at your desk without waiting for the teacher to come and solve it. Edge devices are equipped with computational power and algorithms to perform various analytics tasks on the data they collect."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For example, imagine you have a smart weather station as an edge device in our classroom analogy. It collects data on temperature, humidity, and air pressure. With edge analytics, the smart weather station can analyze this data locally and provide real-time insights, such as predicting weather conditions or identifying trends."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Decision-Making:"}),"In real-time IoT applications, edge devices make decisions based on the analyzed data. Just as you would make decisions based on the solutions to math problems you solve at your desk. These decisions can trigger actions or control other devices connected to the IoT network."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For instance, let's consider a smart irrigation system in a garden. The edge device, which is a soil moisture sensor, analyzes the moisture level in the soil. If the moisture level is low, indicating that the plants need water, the edge device can trigger the irrigation system to water the plants."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 font-semibold",children:"For instance, let's consider a smart irrigation system in a garden. The edge device, which is a soil moisture sensor, analyzes the moisture level in the soil. If the moisture level is low, indicating that the plants need water, the edge device can trigger the irrigation system to water the plants."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Code for Edge Analytics:"}),"The code on edge devices enables data analysis and generates meaningful insights. Here's a simplified example using Python:"]}),(0,$e.jsx)(Gt,{children:'\n  # Sample Python code for edge analytics in IoT\n  # Data Collection\n  temperature = read_temperature_sensor()\n  humidity = read_humidity_sensor()\n  # Edge Analytics\n  if temperature > 25 and humidity > 60:\n      print("It\'s hot and humid!")\n  elif temperature < 20 and humidity < 40:\n      print("It\'s cool and dry.")\n  else:\n      print("Weather conditions are moderate.")\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, the edge device collects data from temperature and humidity sensors (data collection). It then performs analytics by evaluating conditions based on temperature and humidity values (edge analytics). Finally, it generates insights or notifications about the weather conditions."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Code for Decision-Making:"}),"The code for decision-making involves taking actions based on the analyzed data. Here's a simplified example using Python:"]}),(0,$e.jsx)(Gt,{children:"\n  # Sample Python code for decision-making in IoT\n  \n  # Data Analysis\n  temperature = read_temperature_sensor()\n  \n  # Decision-making\n  if temperature > 30:\n      turn_on_fan()\n  else:\n      maintain_current_state()\n  \n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, the edge device analyzes the temperature value (data analysis) and makes a decision based on the threshold condition. If the temperature is above 30 degrees, it triggers the fan to turn on (decision-making). Otherwise, it maintains the current state."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to note that these examples provide a simplified understanding of the code involved in edge analytics and decision-making. The actual implementation can vary based on the specific programming language, hardware platform, and the IoT framework being used."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, edge analytics and decision-making in real-time IoT applications involve processing and analyzing data locally at the edge devices. Code on the edge devices enables data analysis and decision-making based on specific conditions or thresholds. This allows for faster insights and immediate actions, enhancing the efficiency and responsiveness of IoT systems."})]})})})},vi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Hybrid architectures combining cloud and edge computing for IoT"]}),(0,$e.jsx)("p",{className:"font-semibold text-justify p-2 pt-4",children:"Hybrid Architectures Combining Cloud and Edge Computing for IoT:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Hybrid architectures combine the power of both cloud computing and edge computing in IoT applications. They leverage the strengths of each approach to create a more efficient and effective system. Let's explore these concepts using our classroom analogy to make it easier for a kid to understand."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"1. Cloud Computing:"}),"Cloud computing is like having a teacher's desk where all the important resources, information, and expertise are stored. When you have a complex math problem or need guidance, you can go to the teacher's desk and ask for help. In IoT, the cloud represents powerful remote servers that can store and process vast amounts of data."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Cloud computing offers advantages such as scalability, extensive storage, and advanced analytics capabilities. However, it may suffer from latency issues and may not be suitable for real-time decision-making."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"2. Edge Computing: "}),"Edge computing, as we discussed earlier, is like having mini-computers at each desk in the classroom. These mini-computers can perform computations and make decisions right at the source of the data. Edge computing reduces latency and enables real-time processing and decision-making."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Edge devices are closer to the data source, which allows for faster response times and local data processing. However, they may have limited computational power and storage capacity compared to the cloud."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 font-semibold",children:"Now, let's understand how hybrid architectures combine cloud and edge computing in IoT:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In a hybrid architecture, some data processing tasks are performed at the edge devices, while others are offloaded to the cloud. The division of tasks is based on factors such as the criticality of the task, resource constraints, and the need for real-time decision-making."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 font-semibold",children:"Here's how the hybrid architecture works:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Data Collection:"}),"Edge devices collect data from sensors or other sources, just like students collect information from their desks."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Local Processing:"}),"The edge devices perform initial data processing and analysis locally, similar to solving math problems at your desk. This includes tasks like filtering, aggregating, and summarizing the data. Local processing helps in reducing latency and enabling quick responses."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Selective Data Offloading:"}),"Some data or processed information is selectively sent to the cloud for further analysis or storage. This is like when you encounter a challenging math problem that you can't solve at your desk. You take it to the teacher's desk for additional assistance."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Cloud Processing and Analytics:"}),"The cloud receives the offloaded data and performs more complex computations, advanced analytics, or long-term storage. The cloud has more computational resources and advanced algorithms, making it suitable for in-depth analysis and large-scale processing."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Decision-Making and Actions:"}),"Based on the analysis and insights gained from the cloud, decisions and, actions are communicated back to the edge devices. This allows the edge devices to take appropriate actions in real-time, similar to getting instructions from the teacher's desk and acting accordingly."]})]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Code for Hybrid Architectures:"})," ","The code for hybrid architectures involves programming both the edge devices and the cloud server. Here's a simplified example to illustrate the process:"]}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Edge Device Code:"}),(0,$e.jsx)(Gt,{children:'\n  # Sample Python code for an edge device in a hybrid architecture\n  # Data Collection\n  temperature = read_temperature_sensor()\n  # Local Processing\n  if temperature > 25:\n      print("It\'s hot!")\n  else:\n      print("It\'s cool.")\n  # Selective Data Offloading\n  if temperature > 30:\n      offload_data_to_cloud(temperature)\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, the edge device collects the temperature data (data collection) and performs local processing to determine if it's hot or cool (local processing). If the temperature exceeds a certain threshold, the data is selectively offloaded to the cloud for further analysis (selective data offloading)."}),(0,$e.jsx)("h3",{className:"p-2 text-lg font-bold",children:"Cloud Server Code:"}),(0,$e.jsx)(Gt,{children:'\n  # Sample Python code for a cloud server in a hybrid architecture\n  \n  # Data Processing and Analytics\n  def process_data_from_edge(temperature):\n      if temperature > 30:\n          print("Heatwave alert! Take necessary precautions.")\n  \n  # Receiving Offloaded Data\n  def receive_data_from_edge(temperature):\n      process_data_from_edge(temperature)\n  \n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code snippet, the cloud server receives the offloaded temperature data (receiving offloaded data) and performs further processing and analytics, such as issuing an alert for a heatwave (data processing and analytics)."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"It's important to note that these examples provide a simplified understanding of the code involved in hybrid architectures. The actual implementation can vary based on the specific programming language, hardware platform, and IoT framework being used."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In summary, hybrid architectures combine the strengths of both cloud computing and edge computing in IoT. Edge devices perform local processing and decision-making, while the cloud handles complex analytics and long-term storage. The code on edge devices and the cloud server enable data collection, local processing, selective data offloading, and cloud processing, leading to efficient and effective IoT systems."})]})})})},Ni=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Overview of IoT standards and protocols (e.g., MQTT, CoAP, OPC UA)"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" IoT (Internet of Things) refers to a network of physical devices, vehicles, appliances, and other objects embedded with sensors, software, and connectivity capabilities. These devices can communicate with each other and exchange data over the internet. To ensure seamless communication between different IoT devices, there are certain standards and protocols in place."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Standards provide a set of rules and guidelines that define how devices should communicate and interact with each other. Protocols, on the other hand, are a set of rules that govern the format, timing, sequencing, and error control of data transmission."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here are three commonly used IoT standards and protocols:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. MQTT (Message Queuing Telemetry Transport):"})," MQTT is a lightweight publish-subscribe messaging protocol commonly used in IoT applications. It is designed for resource-constrained devices and low-bandwidth, high-latency networks. MQTT follows a publish-subscribe model, where devices can publish messages to topics, and other devices can subscribe to those topics to receive the messages. This allows for efficient and scalable communication between devices. MQTT messages are organized in a hierarchical topic structure, making it easy to categorize and filter data."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example of how MQTT works:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Imagine you have a smart home system with different devices like lights, temperature sensors, and motion sensors. The lights publish messages to the topic "smart_home/lights" whenever they turn on or off. A mobile app subscribed to the topic "smart_home/lights" receives these messages and updates the user interface accordingly.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code Example (Python):"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To use MQTT in Python, you'll need the paho-mqtt library. Here's a simple example of how to publish and subscribe to MQTT topics:"}),(0,$e.jsx)(Gt,{children:'\n  import paho.mqtt.client as mqtt\n  \n  # Define MQTT broker and topic\n  broker = "mqtt.example.com"\n  topic = "smart_home/lights"\n  \n  # Callback function when a message is received\n  def on_message(client, userdata, message):\n      print("Received message:", message.payload.decode())\n  \n  # Create MQTT client instance\n  client = mqtt.Client()\n  \n  # Set callback function\n  client.on_message = on_message\n  \n  # Connect to MQTT broker\n  client.connect(broker, 1883)\n  \n  # Subscribe to the topic\n  client.subscribe(topic)\n  \n  # Start the MQTT loop\n  client.loop_start()\n  \n  # Publish a message\n  client.publish(topic, "Light turned on")\n  \n  # Disconnect from the MQTT broker\n  client.disconnect()\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"CoAP (Constrained Application Protocol):"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" CoAP is another lightweight protocol designed for resource-constrained devices and low-power networks. It is suitable for IoT devices with limited processing power and memory. CoAP follows a similar client-server model to HTTP, where devices can make requests (GET, POST, PUT, DELETE) to resources identified by URIs (Uniform Resource Identifiers). CoAP supports UDP (User Datagram Protocol) as the underlying transport protocol, making it more efficient for constrained environments."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's an example of how CoAP works:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Let\'s say you have a temperature sensor in your garden that periodically measures the temperature. Using CoAP, you can make a GET request to the URI "/temperature" of the sensor to retrieve the current temperature value. The sensor responds with the temperature data in the CoAP response.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code Example (Python):"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To use CoAP in Python, you'll need the aiocoap library. Here's a simple example of how to make a CoAP GET request:"}),(0,$e.jsx)(Gt,{children:"\n  import asyncio\n  from aiocoap import *\n  \n  async def main():\n      protocol = await Context.create_client_context()\n      request = Message(code=GET, uri='coap://example.com/temperature')\n      response = await protocol.request(request).response\n      print(\"Temperature:\", response.payload.decode())\n  \n  asyncio.get_event_loop().run_until_complete(main())\n    "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"1. OPC UA (Object Linking and Embedding for Process Control Unified Architecture):"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:" OPC UA is a more comprehensive and complex standard for industrial automation and control systems. It provides a platform-independent framework for secure and reliable communication between devices and applications in industrial environments. OPC UA defines a set of services and protocols for data exchange, event notification, alarms, and historical data access. It supports various transport protocols, including TCP, HTTPS, and MQTT, making it flexible and interoperable."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"OPC UA is widely used in industries such as manufacturing, energy, and transportation to enable interoperability between different devices and systems."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"OPC UA is more suitable for advanced IoT applications and may be less accessible for a kid-friendly tutorial."})]})})})},Ei=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Importance of interoperability for seamless communication between devices"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Interoperability refers to the ability of different devices, systems, or software to communicate, exchange data, and work together effectively. In the world of IoT, where numerous devices with different manufacturers, technologies, and functionalities coexist, interoperability plays a crucial role. Here's why it's important:"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. Device Compatibility:"})," Interoperability ensures that devices from different manufacturers can communicate and work together seamlessly. For example, if you have a smart home system with devices from different brands, interoperability allows you to control and monitor those devices using a single app or platform. Without interoperability, you would need separate apps for each device, leading to a fragmented and inconvenient user experience."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2. Data Exchange:"})," IoT devices generate a vast amount of data, and interoperability enables the exchange and sharing of this data among different devices and systems. For instance, a weather station can share its data with an irrigation system, enabling the system to adjust watering schedules based on current weather conditions. Interoperability ensures that data can flow freely, enabling smarter decision-making and automation."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3. Scalability and Flexibility:"})," Interoperability enables easy integration and expansion of IoT systems. When new devices or technologies are introduced, interoperability ensures that they can seamlessly integrate with existing systems. This scalability allows for future growth and adaptability to changing requirements without major disruptions. It also fosters innovation by encouraging the development of new devices and solutions that can work with existing ecosystems."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"4. Vendor Independence: "}),"Interoperability reduces dependency on a single vendor or technology. It promotes an open ecosystem where devices from different vendors can interoperate, giving users the freedom to choose the best devices or solutions that meet their specific needs. This fosters healthy competition and prevents vendor lock-in, ensuring a more diverse and vibrant IoT market."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code examples are not necessary to explain the importance of interoperability to a kid-friendly audience. Instead, let's use a relatable analogy:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a bunch of puzzle pieces from different puzzle sets. Each puzzle piece represents a different device in an IoT system. Interoperability is like having standardized connectors on the puzzle pieces that allow you to connect them and create a bigger, unified picture."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Without interoperability, the puzzle pieces would have different connectors that don't fit together. You would need separate puzzles for each set of pieces, making it difficult to create a complete picture. But with interoperability, all the puzzle pieces can fit together regardless of their origin, enabling you to create a beautiful and cohesive picture."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the world of IoT, interoperability ensures that devices can connect, communicate, and work together like puzzle pieces, creating a seamless and harmonious ecosystem."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Remember, the puzzle analogy is a simplified explanation, but it helps convey the concept of interoperability in a kid-friendly way."})]})})})},Si=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"IoT data exchange formats (e.g., JSON, XML)"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"When devices in an IoT system communicate with each other, they need a common way to structure and represent data. This is where data exchange formats come into play. Two common formats used for data exchange in IoT are JSON (JavaScript Object Notation) and XML (eXtensible Markup Language)."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. JSON (JavaScript Object Notation):"})," JSON is a lightweight and human-readable data format. It is widely used in web development and IoT applications because of its simplicity and ease of use. JSON represents data in key-value pairs and supports various data types such as strings, numbers, booleans, arrays, and objects."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's understand JSON with a real-life example:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a smart garden system with different sensors. The temperature sensor measures the current temperature, and the humidity sensor measures the humidity level. JSON can represent the data from these sensors as follows:"}),(0,$e.jsx)(Gt,{children:'\n    {\n      "temperature": 25,\n      "humidity": 65\n    }\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Here, "temperature" and "humidity" are the keys, and their corresponding values are 25 and 65, respectively. The JSON structure helps organize and transmit the data in a standardized way.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code Example:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"JSON doesn't require any specific code for understanding its structure. However, here's an example in Python that shows how to work with JSON data:"}),(0,$e.jsx)(Gt,{children:'\n    import json\n    \n    # JSON data\n    data = \'\'\'\n    {\n      "temperature": 25,\n      "humidity": 65\n    }\n    \'\'\'\n    \n    # Parse JSON data\n    parsed_data = json.loads(data)\n    \n    # Access temperature value\n    temperature = parsed_data["temperature"]\n    print("Temperature:", temperature)\n    \n    # Access humidity value\n    humidity = parsed_data["humidity"]\n    print("Humidity:", humidity)\n    '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"XML (eXtensible Markup Language):"})," XML is a flexible and widely adopted data format. It uses tags to define the structure of the data, making it suitable for representing complex data hierarchies. XML is more verbose compared to JSON but offers more options for defining custom data structures and metadata."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's understand XML with a real-life example:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Consider a smart car system that collects various data, such as the car's speed, fuel level, and GPS coordinates. XML can represent this data as follows:"}),(0,$e.jsx)(Gt,{children:"\n    <car>\n      <speed>60</speed>\n      <fuelLevel>70</fuelLevel>\n      <gps>\n        <latitude>37.7749</latitude>\n        <longitude>-122.4194</longitude>\n      </gps>\n    </car>\n    \n  "}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["Here, XML uses tags like ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"<car>"}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:" &ly;speed>"}),",  ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"<fuelLevel>"}),",  ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"<gps>"}),", ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"<latitude>"}),", and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:" <longitude>"})," to define the data structure and hierarchy."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code Example:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"XML doesn't require any specific code for understanding its structure. However, here's an example in Python that shows how to work with XML data using the ElementTree module:"}),(0,$e.jsx)(Gt,{children:'\n    import xml.etree.ElementTree as ET\n    \n    # XML data\n    data = \'\'\'\n    <car>\n      <speed>60</speed>\n      <fuelLevel>70</fuelLevel>\n      <gps>\n        <latitude>37.7749</latitude>\n        <longitude>-122.4194</longitude>\n      </gps>\n    </car>\n    \'\'\'\n    \n    # Parse XML data\n    root = ET.fromstring(data)\n    \n    # Access speed value\n    speed = root.find("speed").text\n    print("Speed:", speed)\n    \n    # Access fuel level value\n    fuel_level = root.find("fuelLevel").text\n    print("Fuel Level:", fuel_level)\n    \n    # Access GPS coordinates\n    latitude = root.find("gps/latitude").text\n    longitude = root.find("gps/longitude").text\n    print("GPS Coordinates:", latitude, longitude)\n    '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Both JSON and XML are widely used in IoT applications for data exchange. JSON is simpler and more popular due to its lightweight nature, while XML offers more flexibility and is often used in scenarios that require complex data structures."})]})})})},ji=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Industry initiatives and organizations promoting IoT standards"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2. Open Connectivity Foundation (OCF):"})," The Open Connectivity Foundation is an industry consortium focused on promoting interoperability among IoT devices and systems. Their goal is to create a standard framework that allows devices from different manufacturers to communicate and work together seamlessly. The OCF provides specifications and guidelines for device discovery, data sharing, and security. They have a certification program to ensure compliance with their standards. Devices that are certified by the OCF can easily connect and communicate with other certified devices, regardless of their brand."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The OCF's work helps create a unified IoT ecosystem, where devices like smart lights, thermostats, and cameras can all interact and be controlled from a single platform or app."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3. AllSeen Alliance:"})," The AllSeen Alliance was an industry initiative that aimed to promote interoperability among IoT devices through the development of an open-source software framework called AllJoyn. AllJoyn provided a set of tools and libraries that enabled devices to discover each other, communicate, and share data."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The AllSeen Alliance brought together companies from different industries to collaborate on IoT standards. By adopting the AllJoyn framework, device manufacturers could create products that seamlessly worked with other AllJoyn-enabled devices."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"However, it's worth mentioning that the AllSeen Alliance has now merged with the Open Connectivity Foundation to form a unified organization known as the Open Connectivity Foundation (OCF)."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"4. Bluetooth Special Interest Group (SIG): "}),"The Bluetooth SIG is an organization responsible for developing and maintaining the Bluetooth wireless technology standard. Bluetooth is widely used in IoT devices for short-range wireless communication."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The Bluetooth SIG ensures that devices from different manufacturers can connect and communicate with each other using the Bluetooth standard. They define the technical specifications and profiles that devices must follow to achieve interoperability."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Bluetooth technology is commonly used in devices such as smartphones, smartwatches, and Bluetooth-enabled speakers. It allows these devices to communicate and exchange data seamlessly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code examples are not necessary to explain industry initiatives and organizations to a kid-friendly audience. Instead, let's use an analogy: Imagine you have a team of superheroes with different superpowers. Each superhero represents a different IoT device. Industry initiatives and organizations are like the organizations that bring these superheroes together, teach them to work as a team, and develop a common language for communication."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The Open Connectivity Foundation, AllSeen Alliance (now merged with OCF), and Bluetooth SIG are like the headquarters or training centers for these superheroes. They provide guidelines, tools, and certifications to ensure that the superheroes can collaborate and save the day together, regardless of their superpower or the city they come from."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the world of IoT, industry initiatives and organizations play a crucial role in fostering collaboration and standardization, making it easier for devices to work together and provide a better user experience."})]})})})},Ti=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Challenges and efforts to achieve greater interoperability in IoT ecosystems"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1. Device Fragmentation: "}),"One of the major challenges in achieving interoperability is device fragmentation. There are countless IoT devices available in the market, each with different manufacturers, technologies, and communication protocols. This fragmentation makes it difficult for devices to understand and work with each other."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Efforts to overcome this challenge include the development of standardized communication protocols, such as MQTT and CoAP, which we discussed earlier. These protocols provide a common language for devices to communicate, enabling interoperability across different devices and platforms."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Think of it like this: Imagine a group of friends who speak different languages. To communicate and work together, they need to agree on a common language that everyone understands. Similarly, IoT devices need standardized protocols to speak the same language and collaborate effectively."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2. Security and Privacy:"})," Another challenge in achieving interoperability is ensuring security and privacy. With numerous devices connected to the internet, there is a risk of unauthorized access, data breaches, and misuse of personal information. Efforts to address security and privacy concerns include the development of secure communication protocols, encryption techniques, and authentication mechanisms. For example, the MQTT protocol supports secure connections using Transport Layer Security (TLS) to protect data during transmission."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Additionally, organizations and regulatory bodies establish guidelines and standards for data protection and privacy, which manufacturers and developers need to adhere to when creating IoT solutions."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Let's use an analogy: Think of your bedroom as your personal space. To ensure security and privacy, you may have a lock on your door, and you only allow trusted friends to enter. Similarly, IoT devices need security measures like locks and authentication to protect data and ensure that only authorized parties can access it."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3. Standards and Collaboration:"})," Achieving greater interoperability requires collaboration among different stakeholders, including device manufacturers, software developers, and industry organizations. They need to come together and agree on common standards and guidelines to ensure compatibility and seamless communication between devices."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Industry initiatives and organizations, such as the Open Connectivity Foundation (OCF) and Bluetooth SIG, work towards developing and promoting these standards. They encourage manufacturers to adopt and implement these standards, fostering a more interoperable IoT ecosystem."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Think of it as a team of superheroes coming together to defeat a common enemy. Each superhero has its superpower, but they need to collaborate and follow a set of rules to work together effectively."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Code examples are not necessary to explain the challenges and efforts to achieve greater interoperability to a kid-friendly audience. Instead, let's simply summarize the key points:"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine you have a group of friends who want to build a massive Lego city together. The challenge is that everyone has their own unique Lego blocks and instructions. To overcome this, they need to agree on common instructions and ways to connect their Lego blocks. They also need to ensure that no one messes with their creations without permission."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To address these challenges, they start by creating a set of rules and standards that everyone follows. They also use special locks to secure their buildings and keep them safe. By collaborating, following the rules, and ensuring security, they can build an amazing Lego city where all their creations work together seamlessly."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In the world of IoT, challenges like device fragmentation, security, and standards are similar. By establishing common standards, ensuring security measures, and collaborating, we can create an IoT ecosystem where devices from different manufacturers and technologies can communicate and work together effectively."})]})})})},wi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Intersection of IoT and AI technologies"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"What is IoT?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'The Internet of Things (IoT) refers to a network of physical objects or "things" that are embedded with sensors, software, and other technologies to connect and exchange data with each other and with the Internet. These objects can be everyday items like household appliances, cars, or even toys.'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:(0,$e.jsx)("b",{children:"What is AI?"})}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Artificial Intelligence (AI) is the field of computer science that focuses on creating machines or computer systems capable of performing tasks that typically require human intelligence. AI enables computers to learn from data, reason, make decisions, and solve problems."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("b",{children:"Intersection of IoT and AI:"})," When IoT and AI technologies come together, it opens up a world of possibilities. Here are a few examples:"]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("b",{children:"Smart Homes: "}),"Imagine having a house where your lights, thermostat, and appliances are all connected to the internet and can be controlled through your smartphone. AI algorithms can analyze data from various sensors in your home to learn your preferences and automate tasks. For example, it can adjust the temperature based on your behavior or turn off lights when no one is in the room"]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("b",{children:"Smart Cars:"})," AI can enhance the capabilities of IoT-enabled cars. For instance, sensors in a self-driving car can collect data about the environment, such as traffic conditions, pedestrians, and other vehicles. AI algorithms can analyze this data to make decisions, such as when to accelerate, brake, or change lanes."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("b",{children:"Personal Assistants:"})," Devices like Amazon's Alexa or Google Assistant are examples of AI-powered personal assistants that can connect to IoT devices in your home. You can ask them to turn on the lights, play music, or order groceries, and they will communicate with the IoT devices to carry out these tasks."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("b",{children:"Health Monitoring:"})," IoT devices like fitness trackers or smartwatches can collect data about your heart rate, sleep patterns, or exercise routines. AI algorithms can analyze this data to provide personalized health recommendations, such as suggesting exercise routines or alerting you if your heart rate is too high."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("b",{children:"Understanding the Code:"})," Writing actual code for IoT and AI applications can be complex, but I can provide you with a simplified example using Python. Let's consider a smart home scenario where we want to automate temperature control using IoT sensors and AI."]})]}),(0,$e.jsx)(Gt,{children:' \n  # Import the necessary libraries\n  import random\n  \n  # Function to simulate temperature data from IoT sensors\n  def get_temperature():\n      return random.randint(20, 30)  # Generate a random temperature between 20 and 30 degrees Celsius\n  \n  # Function to control the temperature using AI\n  def control_temperature(current_temperature):\n      desired_temperature = 25  # We want to maintain the temperature at 25 degrees Celsius\n  \n      if current_temperature > desired_temperature:\n          print("Lowering temperature...")\n          # Code to communicate with the IoT thermostat and lower the temperature\n      Elif current_temperature < desired_temperature:\n          print("Increasing temperature...")\n          # Code to communicate with the IoT thermostat and increase the temperature\n      else:\n          print("Temperature is optimal. No action needed.")\n  \n  # Main program\n  while True:\n      current_temperature = get_temperature()  # Get the current temperature from IoT sensors\n      print("Current temperature:", current_temperature)\n      control_temperature(current_temperature)  # Control the temperature using AI\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this code, we have a function ",(0,$e.jsx)("span",{className:"code-text  text-m",children:" get_temperature()"})," that simulates the temperature data from IoT sensors. The function ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"control_temperature()"})," uses an AI algorithm to compare the current temperature with a desired temperature and takes appropriate actions based on the comparison."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In the main program, we continuously loop to get the current temperature, display it, and control the temperature using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"control_temperature()"})," function."]})]})})})},Ii=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Machine learning and deep learning for IoT data analytics"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1.Machine Learning:"})," Machine learning is a type of artificial intelligence that enables computers to learn from data and make predictions or decisions without being explicitly programmed. It's like teaching a computer to recognize patterns and make sense of information on its own."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2.Deep Learning: "}),"Deep learning is a subset of machine learning that is inspired by the structure and function of the human brain. It involves using artificial neural networks, which are complex networks of interconnected nodes called neurons, to learn and understand data. Deep learning is particularly good at handling large amounts of data and finding intricate patterns."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3.IoT Data Analytics: "}),"IoT devices generate massive amounts of data from various sensors and sources. IoT data analytics involves extracting valuable insights and knowledge from this data to make informed decisions or take appropriate actions."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"4.Machine Learning for IoT Data Analytics:"})," Machine learning can be applied to IoT data analytics to uncover patterns, trends, or anomalies in the data. Here's a simplified example to demonstrate how machine learning can be used:"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine we have a smart garden with sensors that measure soil moisture, temperature, and sunlight. We want to predict when to water the plants based on this data."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"We collect historical data from the sensors, including the soil moisture levels, temperature, and sunlight over time."}),(0,$e.jsx)("li",{className:"pt-4",children:"We use this data to train a machine-learning model. The model learns the relationship between the sensor data and the watering needs of the plants."}),(0,$e.jsx)("li",{className:"pt-4",children:"Once the model is trained, we can input new sensor data (current readings) into the model, and it will predict whether the plants need watering or not."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's a simplified code example using Python to demonstrate this:"}),(0,$e.jsx)(Gt,{children:' \n  # Import the necessary libraries\n  from sklearn.model_selection import train_test_split\n  from sklearn.tree import DecisionTreeClassifier\n  \n  # Sensor data: soil moisture, temperature, sunlight (input)\n  sensor_data = [[0.6, 25, 500], [0.3, 22, 300], [0.8, 28, 800], [0.4, 23, 400]]\n  # Watering needs (output)\n  watering_needs = [1, 0, 1, 0]  # 1 means watering needed, 0 means no watering needed\n  \n  # Split the data into training and testing sets\n  X_train, X_test, y_train, y_test = train_test_split(sensor_data, watering_needs, test_size=0.2)\n  \n  # Create a decision tree classifier\n  clf = DecisionTreeClassifier()\n  \n  # Train the model\n  clf.fit(X_train, y_train)\n  \n  # Predict watering needs for new sensor data\n  new_sensor_data = [[0.5, 24, 350]]\n  prediction = clf.predict(new_sensor_data)\n  \n  # Display the prediction\n  if prediction[0] == 1:\n      print("Watering needed for the plants.")\n  else:\n      print("No watering needed for the plants.")\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we have sensor data as the input (soil moisture, temperature, and sunlight) and the corresponding watering needs as the output. We split the data into training and testing sets, create a decision tree classifier, and train the model using the training data. Then, we can use the trained model to predict the watering needs for new sensor data."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"5. Deep Learning for IoT Data Analytics: "}),"Deep learning, with its ability to handle complex patterns, can be used for more advanced IoT data analytics tasks. For example, it can be applied to image recognition tasks using IoT cameras or speech recognition tasks using IoT microphones."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To explain the concept to a kid, let's take the example of a smart camera that detects different types of animals in the backyard. The camera captures images, and we want to use deep learning to recognize the animals."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"We collect a large dataset of images containing various animals, such as cats, dogs, and birds."}),(0,$e.jsx)("li",{className:"pt-4",children:"We use this dataset to train a deep learning model, such as a convolutional neural network (CNN). The model learns to recognize patterns in the images that distinguish different animals."}),(0,$e.jsx)("li",{className:"pt-4",children:"Once the model is trained, we can input new images into the model, and it will predict the type of animal in the image."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Writing code for deep learning is more complex, but the basic idea involves creating and training a neural network. Here's a simplified example using the Keras library in Python:"}),(0,$e.jsx)(Gt,{children:" \n  # Import the necessary libraries\n  import numpy as np\n  from keras.models import Sequential\n  from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense\n  \n  # Image data: animal images (input)\n  animal_images = np.array([...])  # Array of animal images\n  # Animal labels (output)\n  animal_labels = np.array([0, 1, 1, 2, ...])  # 0 for cats, 1 for dogs, 2 for birds, ...\n  \n  # Create a sequential model\n  model = Sequential()\n  \n  # Add convolutional and pooling layers\n  model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(64, 64, 3)))\n  model.add(MaxPooling2D(pool_size=(2, 2)))\n  model.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\n  model.add(MaxPooling2D(pool_size=(2, 2)))\n  \n  # Flatten the image data\n  model.add(Flatten())\n  \n  # Add a fully connected layer and output layer\n  model.add(Dense(128, activation='relu'))\n  model.add(Dense(3, activation='softmax'))  # 3 output classes (cats, dogs, birds)\n  \n  # Compile the model\n  model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n  \n  # Train the model\n  model.fit(animal_images, animal_labels, epochs=10)\n  \n  # Predict animal type for a new image\n  new_image = np.array([...])  # New image to predict the animal type\n  prediction = model.predict_classes(new_image)\n  \n  # Display the prediction\n  if prediction[0] == 0:\n      print(\"The animal in the image is a cat.\")\n  elif prediction[0] == 1:\n      print(\"The animal in the image is a dog.\")\n  else:\n      print(\"The animal in the image is a bird.\")\n  "}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we create a sequential model using the Keras library and add layers to define the architecture of the neural network. We compile the model, train it using the image data and labels, and then use the trained model to predict the animal type for a new image."})]})})})},Ci=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Predictive maintenance and anomaly detection in IoT systems"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1.Predictive Maintenance:"})," Predictive maintenance is a technique used in IoT systems to predict when a machine or device is likely to fail or require maintenance. By analyzing data from sensors and devices, we can identify patterns or indicators that suggest a potential failure. This helps us schedule maintenance before a breakdown occurs, reducing downtime and costs."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2.Anomaly Detection: "}),"Anomaly detection is the process of identifying patterns or data points that deviate significantly from the norm or expected behavior. In an IoT system, anomalies could indicate potential issues or abnormalities in the system's performance, such as a sensor malfunction or unusual behavior in a connected device."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3.Predictive Maintenance and Anomaly Detection in IoT:"})," Combining predictive maintenance and anomaly detection in IoT systems can help us proactively identify and address potential problems. Here's a simplified example to demonstrate how it works:"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine we have a smart refrigerator that monitors temperature, humidity, and compressor usage. We want to predict when the refrigerator might malfunction or when its performance is abnormal."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"We collect historical data from the refrigerator's sensors, including temperature, humidity, and compressor usage over time."}),(0,$e.jsx)("li",{className:"pt-4",children:"We use this data to train a machine learning model for predictive maintenance. The model learns the normal patterns of sensor data when the refrigerator is functioning well."}),(0,$e.jsx)("li",{className:"pt-4",children:"Once the model is trained, we can input new sensor data into the model, and it will predict whether the refrigerator is likely to malfunction or if its performance is abnormal."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's a simplified code example using Python to demonstrate this:"}),(0,$e.jsx)(Gt,{children:'\n  # Import the necessary libraries\n  from sklearn.ensemble import IsolationForest\n  \n  # Sensor data: temperature, humidity, compressor usage (input)\n  sensor_data = [[4, 40, 2000], [5, 45, 2200], [3, 38, 2100], [6, 42, 2300]]\n  # Label: 1 for normal, -1 for anomaly\n  labels = [1, 1, 1, -1]\n  \n  # Create an isolation forest model\n  model = IsolationForest()\n  \n  # Train the model\n  model.fit(sensor_data)\n  \n  # Predict anomalies for new sensor data\n  new_sensor_data = [[7, 47, 2400]]\n  prediction = model.predict(new_sensor_data)\n  \n  # Display the prediction\n  if prediction[0] == -1:\n      print("Anomaly detected in the refrigerator.")\n  else:\n      print("Refrigerator is functioning normally.")\n  '}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"In this code, we have sensor data as the input (temperature, humidity, and compressor usage) and labels indicating whether the data is normal or an anomaly. We create an isolation forest model and train it using the sensor data. Then, we can use the trained model to predict anomalies for new sensor data."})]})})})},Oi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Intelligent decision-making and automation using AI in IoT applications"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1.Intelligent Decision-Making: "}),"Intelligent decision-making refers to the ability of IoT systems to analyze data and make informed choices or take actions based on that analysis. By using AI techniques, IoT devices can learn from data, reason, and make decisions similar to how humans do."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2.Automation:"})," Automation involves the automatic execution of tasks or actions without human intervention. In IoT applications, AI can enable automation by analyzing data and triggering actions based on predefined rules or algorithms."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3.Intelligent Decision-Making and Automation in IoT: "}),"Combining intelligent decision-making with automation in IoT applications can lead to more efficient and smarter systems. Here's a simplified example to demonstrate how it works:"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine we have a smart lighting system in a house that uses AI for intelligent decision-making and automation."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"The lighting system has sensors that detect the amount of natural light in a room."}),(0,$e.jsx)("li",{className:"pt-4",children:"The AI algorithm analyzes the sensor data and decides whether to turn on or off the lights based on the lighting conditions."}),(0,$e.jsx)("li",{className:"pt-4",children:"Additionally, the system can learn from user preferences and adjust the lighting based on their habits. For example, it may dim the lights in the evening to create a cozy atmosphere."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's a simplified code example using Python to demonstrate this:"}),(0,$e.jsx)(Gt,{children:' \n  # Import the necessary libraries\n  \n  # Function to detect natural light level\n  def detect_light_level():\n      # Code to detect light level using sensors\n      light_level = 50  # Assume the light level is 50 (scale of 0-100)\n      return light_level\n  \n  # Function to control lights based on AI decision-making\n  def control_lights(light_level):\n      if light_level < 30:\n          print("Turning on the lights.")\n          # Code to control the lights and turn them on\n      elif light_level > 70:\n          print("Turning off the lights.")\n          # Code to control the lights and turn them off\n      else:\n          print("Maintaining the current lighting.")\n  \n  # Main program\n  while True:\n      current_light_level = detect_light_level()  # Get the current light level from sensors\n      print("Current light level:", current_light_level)\n      control_lights(current_light_level)  # Control the lights based on AI decision-making\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this code, we have a function ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"detect_light_level()"})," that simulates detecting the light level using sensors. The function ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"control_lights()"})," uses AI decision-making to analyze the light level and decide whether to turn on, turn off, or maintain the current lighting. In the main program, we continuously loop to get the current light level, display it, and control the lights using the ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"control_lights()"})," function."]})]})})})},Ri=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"Edge AI and distributed intelligence in IoT environments"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"1.Edge AI:"})," Edge AI refers to the deployment of artificial intelligence algorithms and models on edge devices, such as IoT devices, instead of relying on a centralized cloud or server for processing. This allows for real-time data analysis and decision-making at the edge of the network, closer to where the data is generated."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"2.Distributed Intelligence: "}),"Distributed intelligence refers to the concept of distributing computational power and decision-making across multiple devices or nodes in a network. Instead of relying on a single central system, intelligence is shared among multiple devices, enabling collaborative decision-making and efficient resource utilization."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("b",{children:"3.Edge AI and Distributed Intelligence in IoT: "}),"By combining edge AI and distributed intelligence in IoT environments, we can achieve smarter, faster, and more efficient systems. Here's a simplified example to demonstrate how it works:"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine we have a smart home with various IoT devices, including smart speakers, security cameras, and temperature sensors."}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsx)("li",{className:"pt-4",children:"With edge AI, each IoT device has its own AI capabilities, allowing it to process data and make decisions locally."}),(0,$e.jsx)("li",{className:"pt-4",children:"For example, a security camera can analyze video footage in real-time to detect and identify people or objects of interest. It can then trigger actions like sending an alert to the homeowner or recording the video for later use."}),(0,$e.jsx)("li",{className:"pt-4",children:"Meanwhile, the temperature sensors can analyze temperature patterns and adjust the thermostat accordingly, without needing to rely on a central system or cloud."})]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Here's a simplified code example using Python to demonstrate this:"}),(0,$e.jsx)(Gt,{children:' \n  # Import the necessary libraries\n  \n  # Function for object detection using AI on a security camera\n  def object_detection(camera_image):\n      # Code for object detection using AI\n      detected_objects = ["person", "cat"]  # Assume the AI detects a person and a cat\n      return detected_objects\n  \n  # Function for temperature control using AI on temperature sensors\n  def temperature_control(temperature):\n      # Code for temperature control using AI\n      if temperature > 25:\n          print("Lowering the thermostat.")\n          # Code to lower the thermostat temperature\n      elif temperature < 20:\n          print("Raising the thermostat.")\n          # Code to raise the thermostat temperature\n      else:\n          print("Maintaining the current temperature.")\n  \n  # Main program\n  while True:\n      camera_image = capture_camera_image()  # Capture the current image from the security camera\n      detected_objects = object_detection(camera_image)  # Detect objects using AI\n      print("Detected objects:", detected_objects)\n  \n      temperature = read_temperature()  # Read the current temperature from the sensors\n      print("Current temperature:", temperature)\n      temperature_control(temperature)  # Control the temperature using AI\n  \n      time.sleep(1)  # Pause for 1 second before repeating the loop\n  '}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:["In this code, we have functions ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"object_detection()"})," and ",(0,$e.jsx)("span",{className:"code-text  text-m",children:"temperature_control()"})," that simulate AI capabilities on the security camera and temperature sensors, respectively. The main program continuously loops to capture the camera image, detect objects using AI, read the temperature from the sensors, and control the temperature using AI."]})]})})})},Ai=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Role of IoT in creating sustainable and smart cities"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine a city where everything is connected and can communicate with each other, just like people do. This is what IoT is all about. IoT connects different devices, sensors, and objects to the internet, allowing them to share information and work together."}),(0,$e.jsx)("p",{className:"font-bold text-justify p-2 pt-4",children:"Now, let's see how IoT can help create sustainable and smart cities:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Efficient Energy Management:"}),"IoT can help manage energy resources in a smart city. For example, streetlights can be equipped with smart sensors that detect when it's dark enough to turn on the lights. This way, streetlights only use electricity when needed, saving energy. Similarly, buildings can use smart thermostats that adjust the temperature based on occupancy, reducing unnecessary energy consumption."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Smart Waste Management:"}),"IoT can help make waste management more efficient. Smart bins equipped with sensors can detect when they are full and need to be emptied. This helps prevent overflowing bins and reduces the number of garbage trucks driving around unnecessarily, saving fuel and reducing pollution."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Intelligent Transportation:"}),"IoT can improve transportation systems in cities. Traffic lights can be connected to a central system that analyzes traffic patterns and adjusts the timing of the lights accordingly. This helps reduce congestion and allows for smoother traffic flow, saving time and reducing air pollution caused by idling vehicles."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Environmental Monitoring:"}),"IoT can be used to monitor and protect the environment in a smart city. Sensors placed in rivers, lakes, and forests can collect data on water quality, air pollution levels, and the health of plants and animals. This information can help scientists and authorities take necessary actions to preserve and protect the environment."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Water Management:"}),"IoT can help manage water resources more efficiently. Sensors can be placed in water distribution networks to monitor water usage and detect leaks. This helps prevent the wastage of water and ensures that the water supply is used effectively."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To implement these IoT-based solutions, programmers and engineers write code that enables devices and sensors to communicate with each other and with the central systems. They use programming languages like Python, JavaScript, or C++ to develop software that controls IoT devices and processes the data they generate."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"However, writing code for IoT systems can be complex, and it involves various technical concepts like networking, data processing, and security. To fully understand and write code for IoT applications, it's essential to have a solid understanding of computer science and programming concepts."})]})]})})})},ki=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Energy efficiency and resource optimization through IoT applications"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Smart Homes:"}),"Imagine a house where all the devices are connected to the internet and can talk to each other. For example, a smart thermostat can sense the temperature and adjust the air conditioner or heater accordingly, ensuring that energy is not wasted by running them when they are not needed. Smart lights can turn on or off automatically based on the presence of people in a room, saving electricity."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'To make this happen, programmers write code that allows the smart devices in the house to communicate with each other and respond to different conditions. For example, they may use Python, JavaScript, or other programming languages to create rules like "If the temperature is above 75\xb0F, turn on the air conditioner" or "If no one is in the room, turn off the lights."'}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Energy Monitoring:"}),"IoT can also help monitor energy usage in homes and buildings. Smart energy monitors can be installed to measure how much electricity is being used at any given time. This data can be sent to a central system that displays it on a dashboard, making it easy for people to see how much energy they are consuming. By being aware of their energy usage, people can make changes to reduce waste and save energy."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Smart Grids:"}),"IoT can optimize the distribution of electricity through smart grids. A smart grid is an intelligent electrical grid that uses sensors and communication technology to monitor and control the flow of electricity. It can identify areas of high demand and automatically adjust the electricity supply to meet that demand efficiently. This helps prevent power outages, reduces energy waste, and ensures a stable and reliable power supply."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To implement a smart grid, engineers and programmers develop complex software systems that collect data from sensors placed on power lines, transformers, and other components of the electrical grid. This data is analyzed to make decisions about power distribution and to optimize the grid's performance."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Water Management:"}),"IoT can also be used to optimize water usage. For example, smart irrigation systems can monitor the moisture levels in the soil and only water the plants when needed. This prevents over-watering and conserves water resources. Similarly, smart water meters can be installed to measure water consumption in real time, helping people track their usage and identify opportunities for conservation."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The code for IoT applications involved in energy efficiency and resource optimization is typically more complex and requires a deeper understanding of programming concepts. However, to get started, kids can explore block-based programming languages like Scratch or Blockly, which allow them to create simple interactive programs and learn the basics of logic and sequencing."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding how IoT applications work and how they can be programmed, kids can develop an interest in coding and technology, and maybe even come up with their ideas to contribute to a more sustainable future."})]})})})},Di=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Environmental monitoring and conservation using IoT sensors"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Air Quality Monitoring:"}),"IoT sensors can be used to monitor air quality in different areas. These sensors measure parameters like pollutants (such as carbon dioxide and particulate matter), temperature, humidity, and air pressure. The sensors collect this data and send it to a central system for analysis."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To visualize this, let's imagine a small device with sensors that can be placed outdoors. The sensors measure the quality of the air by detecting harmful gases or particles in the atmosphere. The data is transmitted wirelessly to a computer or a smartphone, where it can be displayed on a dashboard or an app."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By examining the data collected over time, scientists and environmentalists can understand the air quality in different locations and take action to improve it. For example, if the sensor detects high levels of pollution in a particular area, authorities can implement measures to reduce emissions and protect people's health."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Water Quality Monitoring:"}),"IoT sensors can also be used to monitor the quality of water in rivers, lakes, and oceans. These sensors measure factors like temperature, pH level, dissolved oxygen, and the presence of pollutants. The sensors collect the data and transmit it for analysis."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To illustrate this, imagine a small device equipped with sensors that can be placed in a river. The sensors can measure various water parameters, such as temperature and the presence of certain chemicals. This data is sent wirelessly to a computer or a smartphone, where it can be analyzed and displayed."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By monitoring water quality, scientists and environmentalists can identify pollution sources, detect changes in the ecosystem, and take necessary steps to preserve water resources and protect aquatic life."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Wildlife Tracking:"}),"IoT sensors can also be used to track and monitor wildlife. Small sensors or tags can be attached to animals to collect data on their movements, behavior, and habitat. This information is then transmitted to a central system for analysis."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"For instance, imagine a sensor attached to a bird that can track its location and record its flight patterns. The sensor collects data on the bird's migration routes, feeding habits, and nesting behavior. This data is then transmitted to a computer or a smartphone, where scientists can study and understand the bird's behavior."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By tracking wildlife, researchers can gain insights into their habits, migratory patterns, and population dynamics. This information helps in making informed conservation decisions to protect endangered species and their habitats."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While actual code implementation for these IoT sensor applications can be complex, kids can explore hands-on projects using microcontrollers like Arduino or Raspberry Pi to create simple sensor-based systems. They can learn to connect sensors, collect data, and display it using basic programming concepts."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By understanding how IoT sensors can be used for environmental monitoring and conservation, kids can develop an appreciation for the natural world and contribute to protecting our planet."})]})})})},Pi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Environmental monitoring and conservation using IoT sensors"]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Imagine a city where electricity is distributed through a network of power lines, just like roads connect different places. In a regular electrical grid, electricity flows from power plants to houses and buildings. But in a smart grid, we add special devices and sensors that make the grid smarter and more efficient."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Smart Meters:"}),"In a smart grid, each house or building is equipped with a smart meter. A smart meter measures the amount of electricity being used and can send that information to a central system. This helps people and utility companies keep track of their energy usage in real time."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To understand this, imagine a small device attached to your house's electricity meter. This device can communicate wirelessly with a computer or a smartphone, sending information about how much electricity your house is using at any given moment."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By having this information readily available, people can make more informed decisions about their energy usage. They can adjust their behavior to conserve energy and save money on their electricity bills."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Communication Networks:"}),"In a smart grid, there are communication networks that connect different parts of the grid. These networks allow devices, like the smart meters we talked about, to exchange information with each other and with a central control system."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Think of these communication networks as pathways that allow the smart devices in the grid to talk to each other. They use wireless technologies, similar to how you use your Wi-Fi to connect your devices to the internet."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Central Control System:"}),"In a smart grid, there is a central control system that manages the flow of electricity and makes decisions based on the data it receives from the smart meters and other sensors."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"This central control system acts like a brain that receives information from different parts of the grid. It analyzes the data and makes decisions to optimize the grid's performance. For example, if it detects high demand in a particular area, it can adjust the electricity supply to meet that demand efficiently."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Energy Management:"}),"The central control system in a smart grid uses algorithms and rules to manage energy more effectively. These algorithms are like sets of instructions that help the system make decisions."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'Imagine a set of rules programmed into the central control system. These rules could say things like "If the electricity demand is high, distribute power more efficiently to prevent blackouts" or "If there is excess electricity being generated, store it in batteries for later use."'}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using these rules, the central control system can balance the electricity supply and demand, reduce waste, and make the grid more reliable and efficient."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While the actual code implementation for smart grids is complex, kids can learn about the basic concepts of electricity and circuits, and they can experiment with small-scale projects using microcontrollers like Arduino or Raspberry Pi. They can build simple circuits and program the microcontroller to control and monitor energy usage."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Understanding smart grids and energy management systems in IoT helps kids appreciate the importance of efficient energy usage and conservation. It also encourages them to think creatively about how technology can contribute to a more sustainable future."})]})})})},Mi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:[" ","Environmental monitoring and conservation using IoT sensors"]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Smart Waste Bins:"}),"Imagine a city with smart waste bins that use IoT technology. These bins have sensors that can detect when they are getting full. When the sensor detects that the bin is almost full, it sends a signal to the waste management system to schedule a pickup."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To understand this, picture a waste bin with a small device attached to it. This device contains a sensor that measures how full the bin is. When the bin reaches a certain capacity, the sensor sends a wireless signal to a central system, notifying it that the bin needs to be emptied."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By using smart waste bins, waste management companies can optimize their routes and only collect bins when necessary. This reduces unnecessary trips, saves fuel, and reduces carbon emissions."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Waste Sorting:"}),"IoT can also help with waste sorting. Smart bins can have different compartments or sensors that identify the type of waste being disposed of, such as paper, plastic, or glass. This information is sent to the waste management system for proper sorting and recycling."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To visualize this, think of a waste bin with different sections or sensors that can recognize the type of waste you're putting into the bin. For example, if you put a plastic bottle in a smart bin, the sensor can detect that it's plastic and send that information to the waste management system."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"The waste management system can then use this information to sort the waste properly. It can identify which materials are recyclable and ensure they are sent to the appropriate recycling facilities."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-semibold",children:"Recycling Tracking:"}),"IoT can also help track and monitor the recycling process. RFID (Radio-Frequency Identification) tags or QR codes can be placed on recycling bins and containers. These tags or codes can be scanned to track the movement of recyclable materials from collection to processing."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"To understand this, imagine a recycling bin with a small tag or code on it. When the bin is collected, the tag or code is scanned, and that information is recorded in a database. This helps track the recycling journey, from collection to sorting to processing."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"By tracking recycling, waste management companies and recycling facilities can monitor their processes, measure recycling rates, and identify areas for improvement."}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"While actual code implementation for IoT-enabled waste management and recycling solutions can be complex, kids can engage in hands-on activities to understand the concepts. They can create models of smart waste bins using cardboard or other materials and experiment with sensors and switches to simulate the detection of waste levels."})]})})})},Li=[{id:1,path:"/NumPy/NumPy-Introduction",name:"Introduction To NumPy "},{id:2,path:"/NumPy/NumPy-Getting-Started",name:"NumPy Getting Started"},{id:3,path:"/NumPy/NumPy-Creating-Arrays",name:"NumPy Creating Arrays"},{id:4,path:"/NumPy/NumPy-Array-Indexing",name:"NumPy Array Indexing"},{id:5,path:"/NumPy/NumPy-Array-Slicing",name:"NumPy Array slicing"},{id:6,path:"/NumPy/NumPy-Data-Types",name:"NumPy Data Types"},{id:7,path:"/NumPy/NumPy-Array-Copy",name:"NumPy Array Copy"},{id:8,path:"/NumPy/NumPy-Array-Shape",name:"NumPy Array Shape"},{id:9,path:"/NumPy/NumPy-Array-Reshaping",name:"NumPy Array Reshaping"},{id:10,path:"/NumPy/NumPy-Array-Iterating",name:"NumPy Array Iterating"},{id:11,path:"/NumPy/NumPy-Joining-Array",name:"NumPy Joining Array"},{id:12,path:"/NumPy/NumPy-Splitting-Array",name:"NumPy Splitting Array"},{id:13,path:"/NumPy/NumPy-Searching-Arrays",name:"NumPy Searching Arrays"},{id:14,path:"/NumPy/NumPy-Sorting-Arrays",name:"NumPy Sorting Arrays"},{id:15,path:"/NumPy/NumPy-Filter-Array",name:"NumPy Filter Array"}],Fi=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1],r=E((0,t.useState)(!1),2),o=r[0],l=r[1];return window.addEventListener("scroll",(function(){window.scrollY>=50?l(!0):l(!1)})),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{className:"h-12 top-0 sticky w-full z-10 bg-blue-600 text-white dark:bg-blue-900 flex items-center",children:[(0,$e.jsx)(Kn,{className:"text-4xl ml-4 md:hidden",onClick:function(){return i(!s)}}),(0,$e.jsx)(Xn,{})]}),(0,$e.jsxs)("div",{className:"flex h-fit",children:[(0,$e.jsxs)("section",{className:o?"bg-white dark:bg-slate-800 text-color-mode fixed top-12 h-[92%] mb-10 hidden md:block overflow-y-auto":"bg-white dark:bg-slate-800 text-color-mode fixed top-32 h-[80%] mb-10 hidden md:block overflow-y-auto",children:[(0,$e.jsx)("h4",{className:"py-4 text-xl px-2",children:"NumPy Tutorial"}),Li.map((function(e,t){return(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 hover:text-white hover:bg-blue-500",activeclassName:"active",children:(0,$e.jsx)("div",{className:"",children:e.name})},t)}))]}),(0,$e.jsx)("section",{className:"mx-4 md:ml-[17rem] lg:ml-[18rem] w-inherit  md:w-3/5 my-10 rounded-xl text-color-mode bg-lightModeElement/20 dark:bg-darkModeElement",children:n}),(0,$e.jsx)("section",{className:"hidden lg:block text-red-600 mt-14",children:(0,$e.jsx)("h1",{className:"",children:"Place Ads Here"})})]}),(0,$e.jsx)("div",{children:s&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-full top-32 left-0 bg-slate-400 overflow-y-scroll",children:Li.map((function(e,t){return(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return i(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})})})]})},Ui=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)(Fi,{children:(0,$e.jsx)(Ae,{})})})},Bi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"The Difference Between Copy and View"})}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["In NumPy, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"copy()"})," creates an independent copy of an array with its own memory, while ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"view()"})," creates a new array object that shares the same data buffer with the original array. Changes to the copy do not affect the original array, but modifications to the view are reflected in the original array. ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"copy()"})," requires additional memory, while ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"view()"})," has minimal memory consumption."]}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:[(0,$e.jsx)("span",{className:"font-bold",children:"Copy:"})," "]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"When you create a copy of an array, a completely new and independent array is created. This means that any changes made to the copy will not affect the original array, and vice versa."}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Example:"}),(0,$e.jsx)(Gt,{children:'import numpy as np\n\n  # Create an array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Create a copy of the array\n  arr_copy = arr.copy()\n  \n  # Modify the copy\n  arr_copy[0] = 10\n  \n  # Print the copy and the original array\n  print("Copy:", arr_copy)\n  print("Original Array:", arr)\n  '}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"Copy: [10  2  3  4  5]\nOriginal Array: [1 2 3 4 5]"}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["In this example, we create an array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3, 4, 5]."})," Then, we use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"copy()"})," method to create a copy of the array, which is assigned to the variable ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr_copy"}),". When we modify the copy by changing the value at index 0 to 10, the original array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," remains unchanged."]}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:(0,$e.jsx)("span",{className:"font-bold",children:"View:"})}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" A view is a new array object that refers to the same data as the original array. This means that any changes made to the view will affect the original array, and vice versa"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Example:"}),(0,$e.jsx)(Gt,{children:'import numpy as np\n\n  # Create an array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Create a view of the array\n  arr_view = arr.view()\n  \n  # Modify the view\n  arr_view[0] = 10\n  \n  # Print the view and the original array\n  print("View:", arr_view)\n  print("Original Array:", arr)'}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"View: [10  2  3  4  5]\nOriginal Array: [10  2  3  4  5]"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"In this example, we create an array arr with values [1, 2, 3, 4, 5]. Then, we use the view() method to create a view of the array, assigned to the variable arr_view. When we modify the view by changing the value at index 0 to 10, the original array arr is also modified."}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"To summarize:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{children:"Copy creates a new and independent array, and changes made to the copy do not affect the original array."}),(0,$e.jsx)("li",{children:"View refers to the same data as the original array, and changes made to the view affect the original array."})]}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2"})]})})})})},Gi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"Accessing Array Elements: "})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" NumPy provides various techniques to access elements within an array. Array indexing allows you to retrieve specific values based on their position in the array."}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"1-Dimensional Array Indexing:"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"  A 1-dimensional array, or a vector, is indexed by a single value representing the position of the element."}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 1-dimensional array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Accessing array elements\n  print(arr[0])   # Access the first element\n  print(arr[2])   # Access the third element"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"  Result:"}),(0,$e.jsx)(Gt,{children:"1\n3"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, we created a 1-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values 1, 2, 3, 4, and 5. We accessed the first element using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[0]"})," and the third element using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[2]"}),". Array indexing starts from 0, so the first element is at index 0, the second element is at index 1, and so on."]}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"2-Dimensional Array Indexing:"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"  A 2-dimensional array, or a matrix, is indexed using two values representing the row and column positions of the element."}),(0,$e.jsx)(Gt,{children:"import numpy as np\n  # Create a 2-dimensional array\n  arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n  # Accessing array elements\n  print(arr[0, 0])   # Access the element in the first row, first column\n  print(arr[1, 2])   # Access the element in the second row, third column"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"   Result:"}),(0,$e.jsx)(Gt,{children:"1\n6"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, we created a 2-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values arranged in three rows and three columns. We accessed the element in the first row and first column using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[0, 0]"})," and the element in the second row and third column using ",(0,$e.jsx)("span",{children:"arr[1, 2]"}),"."]}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"3-Dimensional Array Indexing:"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"   A 3-dimensional array is indexed using three values representing the positions of the element along each axis."}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 3-dimensional array\n  arr = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])\n  \n  # Accessing array elements\n  print(arr[0, 1, 0])   # Access the element at coordinates (0, 1, 0)\n  print(arr[1, 0, 1])   # Access the element at coordinates (1, 0, 1)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"   Result:"}),(0,$e.jsx)(Gt,{children:"3\n6\n  "}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["  Here, we created a 3-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values arranged in two 2x2 matrices. We accessed the element at coordinates (0, 1, 0) using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[0, 1, 0]"})," and the element at coordinates (1, 0, 1) using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[1, 0, 1]"}),"."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"  Negative Indexing: NumPy also supports negative indexing, where -1 represents the last element, -2 represents the second-to-last element, and so on."}),(0,$e.jsx)(Gt,{children:"import numpy as np\n  # Create a 1-dimensional array\n  arr = np.array([1, 2, 3, 4, 5])\n  # Accessing array elements using negative indexing\n  print(arr[-1])   # Access the last element\n  print(arr[-3])   # Access the third-to-last element"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"   Result:"}),(0,$e.jsx)(Gt,{children:"5\n  3"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we accessed the last element using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[-1]"})," and the third-to-last element using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr[-3]"})," in a 1-dimensional array."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"These examples demonstrate how to access elements in 1-dimensional, 2-dimensional, and 3-dimensional arrays using array indexing. You can specify the positions of the elements using positive indexing (starting from 0) or negative indexing (starting from -1)."}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"Negative Indexing"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Negative indexing in NumPy allows you to access elements of an array from the end, rather than from the beginning. It provides a convenient way to access elements relative to the last element without knowing the exact size of the array. Here's an easy and short way to use negative indexing in NumPy:"}),(0,$e.jsx)(Gt,{children:'import numpy as np\n\n  # Create an example array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Access elements using negative indexing\n  last_element = arr[-1]  # Access the last element\n  second_last_element = arr[-2]  # Access the second-to-last element\n  \n  # Print the results\n  print("Last element:", last_element)\n  print("Second-to-last element:", second_last_element)'}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we created an array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with elements ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3, 4, 5]."})," By using negative indexing, we accessed the last element of the array using ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"-1"})," and the second-to-last element using",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"-2"}),"."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"The output will be:."}),(0,$e.jsx)(Gt,{children:"Last element: 5\nSecond-to-last element: 4"})]})})})})},Hi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-4",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Array Iteration"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2 font-bold",children:" 1. Iterating 1-D Arrays:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"A 1-D NumPy array is like a list of values. You can iterate over the elements of a 1-D array using a loop. Here's an example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 1-D array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Iterate over the array\n  for element in arr:\n      print(element)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"1\n2\n3\n4\n5"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, we create a 1-D NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3, 4, 5]"}),". We then use a for loop to iterate over each element in the array and print it."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2 font-bold",children:"2. Iterating 2-D Arrays:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"A 2-D NumPy array is like a table with rows and columns. To iterate over the elements of a 2-D array, we need to use nested loops. Here's an example: "}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 2-D array\n  arr = np.array([[1, 2, 3], [4, 5, 6]])\n  \n  # Iterate over the array\n  for row in arr:\n      for element in row:\n          print(element)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"1\n2\n3\n4\n5\n6"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, we create a 2-D NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[1, 2, 3], [4, 5, 6]]"}),". We use two nested loops to iterate over each element in the array. The outer loop iterates over each row, and the inner loop iterates over each element in the row."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2 font-bold",children:" 3. Iterating 3-D Arrays:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" A 3-D NumPy array is like a collection of 2-D arrays. To iterate over the elements of a 3-D array, we need to use three nested loops. Here's an example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 3-D array\n  arr = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])\n  \n  # Iterate over the array\n  for matrix in arr:\n      for row in matrix:\n          for element in row:\n              print(element)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"1\n2\n3\n4\n5\n6\n7\n8"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we create a 3-D NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[[1, 2], [3, 4]], [[5, 6], [7, 8]]]"}),". We use three nested loops to iterate over each element in the array. The outer loop iterates over each 2-D matrix, the middle loop iterates over each row in the matrix, and the inner loop iterates over each element in the row."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2 font-bold",children:"4. Iterating Arrays Using nditer():"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer()"})," function in NumPy allows us to iterate over an array using a single loop, regardless of its dimension. It provides more flexibility and control over the iteration process. Here's an example:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 2-D array\n  arr = np.array([[1, 2, 3], [4, 5, 6]])\n  \n  # Iterate over the array using nditer()\n  for element in np.nditer(arr):\n      print(element)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"1\n2\n3\n4\n5\n6"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we create a 2-D NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[1, 2, 3], [4, 5, 6]]"}),". We use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.nditer()"})," function to iterate over the array. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer()"})," function treats the array as a 1-D array and iterates over each element."]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2 font-bold",children:[" 5. Enumerated Iteration Using",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" ndenumerate()"}),":"]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"ndenumerate()"})," function in NumPy allows us to iterate over an array and get both the index and value of each element. This is useful when we need to access the index along with the value during iteration. Here's an example:"]}),(0,$e.jsx)(Gt,{children:'import numpy as np\n\n  # Create a 2-D array\n  arr = np.array([[1, 2, 3], [4, 5, 6]])\n  \n  # Iterate over the array using ndenumerate()\n  for index, element in np.ndenumerate(arr):\n      print(f"Index: {index}, Value: {element}")'}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"Index: (0, 0), Value: 1\nIndex: (0, 1), Value: 2\nIndex: (0, 2), Value: 3\nIndex: (1, 0), Value: 4\nIndex: (1, 1), Value: 5\nIndex: (1, 2), Value: 6"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, we create a 2-D NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[1, 2, 3], [4, 5, 6]]"}),". We use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.ndenumerate()"})," function to iterate over the array. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"ndenumerate()"})," function returns both the index and the element value for each iteration, which we print out."]}),(0,$e.jsx)("p",{className:"p-2 mt-8 text-lg font-bold rounded-md card-bg w-full",children:"Iterating Array With Different Data Types"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"In NumPy, if you have an array with multiple data types, iterating over the array using a simple for loop may not give you the expected results. This is because NumPy arrays are homogeneous, meaning they have a fixed data type for all elements"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" However, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer"})," function to iterate over arrays with different data types. The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer"})," function provides a flexible way to iterate over arrays while handling data type mismatches."]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["Here's an example of how you can use ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer"})," to iterate over an array with different data types:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create an array with different data types\n  arr = np.array([1, 2.5, 'hello', True])\n  \n  # Iterate over the array\n  for element in np.nditer(arr):\n      print(element)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"1\n2.5\nhello\n1"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer"})," function allows us to iterate over the array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," even though it contains elements with different data types. Each element is accessed within the loop, and you can perform operations or access properties of each element as needed."]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" Note that ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"nditer"})," converts the elements to a common data type internally, which in this case is a string representation of each element's value."]})]})})})})},zi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Array Reshaping"})}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["Reshaping a NumPy array means changing its dimensions or rearranging its elements to create a new array. This can be done using the ",(0,$e.jsx)("span",{children:"reshape()"})," function in NumPy. Let's explore different scenarios:"]}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2 font-bold",children:"1. Reshape from 1-D to 2-D:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n# Creating a 1-dimensional array\narr1d = np.array([1, 2, 3, 4, 5])\n\n# Reshaping to a 2-dimensional array with 5 rows and 1 column\narr2d = arr1d.reshape(5, 1)\n\nprint(arr2d)"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[[1]\n  [2]\n  [3]\n  [4]\n  [5]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["In this example, we start with a 1-dimensional array ",(0,$e.jsx)("span",{children:"arr1d"})," containing numbers from 1 to 5. By using the ",(0,$e.jsx)("span",{children:"reshap()"})," function, we convert it into a 2-dimensional array ",(0,$e.jsx)("span",{children:"arr2d"})," with 5 rows and 1 column. The elements are arranged vertically."]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2 font-bold",children:"2. Reshape from 1-D to 3-D:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n  # Creating a 1-dimensional array\n  arr1d = np.array([1, 2, 3, 4, 5, 6, 7, 8])\n  # Reshaping to a 3-dimensional array with 2 layers, 2 rows, and 2 columns\n  arr3d = arr1d.reshape(2, 2, 2)\n  print(arr3d)"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[[[1 2]\n  [3 4]]\n\n[[5 6]\n  [7 8]]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["In this example, we reshape the 1-dimensional array ",(0,$e.jsx)("span",{children:"arr1d"})," into a 3-dimensional array ",(0,$e.jsx)("span",{children:"arr3d"}),". It has 2 layers, 2 rows, and 2 columns. The elements are arranged in a cube-like structure."]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2 font-bold",children:"3. Returns Copy or View"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["The ",(0,$e.jsx)("span",{children:"reshape()"})," function returns a new array with the desired shape. However, it's important to understand whether the returned array is a copy of the original array or just a view."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Creating a 1-dimensional array\n  arr1d = np.array([1, 2, 3, 4, 5])\n  \n  # Reshaping to a 2-dimensional array with 5 rows and 1 column\n  arr2d = arr1d.reshape(5, 1)\n  \n  # Modifying the first element of arr2d\n  arr2d[0] = 10\n  \n  print(arr1d)"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[10  2  3  4  5]"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["In this example, we reshape the 1-dimensional array ",(0,$e.jsx)("span",{children:"arr1d"})," into a 2-dimensional array ",(0,$e.jsx)("span",{children:"arr2d"}),". If we modify an element in ",(0,$e.jsx)("span",{children:"arr2d"}),", the corresponding element in arr1d also changes. This indicates that ",(0,$e.jsx)("span",{children:"arr2d"})," is just a view, or a different way to access the same data."]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2 font-bold",children:"4. Flattening the arrays:"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["Flattening an array means converting a multi-dimensional array into a 1-dimensional array. This can be achieved using the ",(0,$e.jsx)("span",{children:"flatten()"})," or ",(0,$e.jsx)("span",{children:"ravel()"})," function in NumPy."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Creating a 2-dimensional array\n  arr2d = np.array([[1, 2, 3], [4, 5, 6]])\n  \n  # Flattening the array\n  arr1d = arr2d.flatten()\n  \n  print(arr1d)"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[1 2 3 4 5 6]"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["In this example, we start with a 2-dimensional array ",(0,$e.jsx)("span",{children:"arr2d"}),". By using the ",(0,$e.jsx)("span",{children:"flatten()"})," function, we convert it into a 1-dimensional array ",(0,$e.jsx)("span",{children:"arr1d"}),". The elements are arranged sequentially."]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2 font-bold",children:"5. Unknown Dimension:"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["In some cases, you may want to reshape an array but have an unknown dimension. You can specify ",(0,$e.jsx)("span",{children:"-1"})," for that dimension, and NumPy will automatically calculate the correct size."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n  # Creating a 1-dimensional array\n  arr1d = np.array([1, 2, 3, 4, 5, 6])\n  # Reshaping to a 2-dimensional array with 2 rows and unknown number of \n  arr2d = arr1d.reshape(2, -1)\n  print(arr2d)"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[[1 2 3]\n  [4 5 6]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["In this example, we reshape the 1-dimensional array ",(0,$e.jsx)("span",{children:"arr1d"})," into a 2-dimensional array ",(0,$e.jsx)("span",{children:"arr2d"})," with 2 rows. By specifying ",(0,$e.jsx)("span",{children:"-1"})," for the number of columns, NumPy automatically calculates that each row should have 3 columns."]})]})})})})},Yi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-4",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Array Shaping"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:' NumPy is a powerful Python library for numerical computing. It provides a data structure called an "array," which is similar to a list or a table but with additional capabilities. One important attribute of a NumPy array is its shape, which defines the dimensions of the array.'}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Imagine you have a collection of toys. You can organize them in different ways. For example, you can put them all in a single line, stack them in a square grid, or arrange them in a cube. The shape of the arrangement tells you how many toys are in each dimension. Similarly, the shape of a NumPy array tells you the size of each dimension."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Let's look at some examples:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Creating a 1-dimensional array\n  arr1d = np.array([1, 2, 3, 4, 5])\n  print(arr1d.shape)  # Output: (5,)"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this example, we created a 1-dimensional array called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr1d"})," with five elements. When we print its shape, we get ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(5,)"}),". The shape is a tuple with a single value, indicating the size of the array along that dimension. Here, the array has 5 elements in the first (and only) dimension."]}),(0,$e.jsx)(Gt,{children:"# Creating a 2-dimensional array\n  arr2d = np.array([[1, 2, 3], [4, 5, 6]])\n  print(arr2d.shape)  # Output: (2, 3)"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this case, we created a 2-dimensional array called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr2d"})," with two rows and three columns. The shape is ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(2, 3)"}),", meaning there are two elements along the first dimension (rows) and three elements along the second dimension (columns)."]}),(0,$e.jsx)(Gt,{children:"# Creating a 3-dimensional array\n  arr3d = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])\n  print(arr3d.shape)  # Output: (2, 2, 2)"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" Here, we created a 3-dimensional array called ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr3d"})," with two layers, two rows, and two columns. The shape is ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(2, 2, 2)"}),", indicating that there are two elements along each dimension."]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" The shape of a NumPy array can be accessed using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"shape"})," attribute. It returns a tuple representing the size of each dimension."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Knowing the shape of an array is useful for various operations. For example, you can reshape an array to change its dimensions or perform mathematical operations that require arrays of the same shape."}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" To access the shape of a NumPy array, you can use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"shape"})," attribute. Here's an example:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 2D array\n  arr = np.array([[1, 2, 3], [4, 5, 6]])\n  \n  # Get the shape of the array\n  print(arr.shape)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"(2, 3)"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In the example above, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr.shape"})," returns ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"(2, 3)"}),", indicating that the array has 2 rows and 3 columns."]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" You can also use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"ndim"})," attribute to get the number of dimensions (axes) of the array:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 3D array\n  arr = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])\n  \n  # Get the number of dimensions\n  print(arr.ndim)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"3"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" In this case, ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr.ndim"})," returns ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"3"}),", indicating that the array has three dimensions."]})]})})})})},qi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"Accessing Array Slicing: "})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" Slicing arrays in NumPy allows you to extract a portion of an array by specifying a range of indices. It is a powerful way to manipulate and access subarrays efficiently. Here's a short way to perform array slicing in NumPy with a life-related example presented in points:"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-10",children:[" 1.. Import the NumPy library:   ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"import  numpy  as np"}),": "]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-10",children:"2. Create an example array representing student scores:"}),(0,$e.jsx)(Gt,{children:"scores = np.array([85, 92, 78, 87, 91, 76, 81, 90, 85, 88])"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-10",children:"3. Extract a subset of the array using slicing:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20 ",children:"Get the scores from index 2 to 5 (inclusive):"}),(0,$e.jsx)(Gt,{children:"subset1 = scores[2:6]"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20",children:"Get the scores from the beginning up to index 4 (exclusive):"}),(0,$e.jsx)(Gt,{children:"subset2 = scores[:4]"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20",children:"Get the scores from index 7 to the end:"}),(0,$e.jsx)(Gt,{children:"subset3 = scores[7:]"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20",children:"Get every other score starting from index 1:"}),(0,$e.jsx)(Gt,{children:"subset4 = scores[1::2]"}),(0,$e.jsx)(Gt,{children:'Print the resulting subarrays:\n  print("Subset 1:", subset1)\n  print("Subset 2:", subset2)\n  print("Subset 3:", subset3)\n  print("Subset 4:", subset4)'}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-20",children:["In this example, we created an array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"scores"})," representing student scores. We then used slicing to extract specific subsets of the array based on different ranges of indices."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-8",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"Subset 1: [78 87 91 76]\nSubset 2: [85 92 78 87]\nSubset 3: [90 85 88]\nSubset 4: [92 87 81 85]"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-8",children:"By utilizing array slicing, you can efficiently extract and work with subsets of data, making it easier to analyze and manipulate arrays in NumPy."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-4 font-bold",children:"1. Slicing a 1-Dimensional Array:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20",children:"A NumPy array is like a grid of values, and you can access specific elements or groups of elements using slicing. Let's start with a simple example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 1-dimensional array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Slice the array from index 1 to 3 (exclusive)\n  sliced_arr = arr[1:3]\n  \n  # Print the sliced array\n  print(sliced_arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[2 3]"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-4",children:["In the code above, we create a 1-dimensional array ",(0,$e.jsx)("span",{children:"arr"})," with values ",(0,$e.jsx)("span",{children:"[1, 2, 3, 4, 5]"}),". We then use slicing to extract a portion of the array from index 1 to 3 (exclusive), which gives us the elements ",(0,$e.jsx)("span",{children:"[2, 3]"}),". The syntax for slicing is ",(0,$e.jsx)("span",{children:"start:end"}),", where ",(0,$e.jsx)("span",{children:"start"})," is the starting index (inclusive) and ",(0,$e.jsx)("span",{children:"end"})," is the ending index (exclusive)."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-4 font-bold",children:"2. Negative Slicing:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20",children:" You can also use negative indices in slicing to start from the end of the array. Let's see an example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 1-dimensional array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Slice the last three elements\n  sliced_arr = arr[-3:]\n  \n  # Print the sliced array\n  print(sliced_arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-4",children:"In the code above, we use negative slicing to get the last three elements of the array. The index -3 refers to the third-to-last element, and : indicates the rest of the elements until the end of the array."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-4 font-bold",children:"3. Slicing a 2-Dimensional Array:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-20",children:" A 2-dimensional array is like a table with rows and columns. You can slice along both dimensions to extract specific parts of the array. Here's an example:"}),(0,$e.jsx)(Gt,{children:" import numpy as np\n\n  # Create a 2-dimensional array\n  arr = np.array([[1, 2, 3],\n                  [4, 5, 6],\n                  [7, 8, 9]])\n  \n  # Slice the subarray from row 0 to 2 (exclusive) and column 1 to 3 (exclusive)\n  sliced_arr = arr[0:2, 1:3]\n  \n  # Print the sliced array\n  print(sliced_arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-4",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[[2 3]\n[5 6]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-4",children:["In the code above, we create a 2-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]"}),". We use slicing to extract a subarray that includes rows 0 to 2 (exclusive) and columns 1 to 3 (exclusive), which gives us the subarray ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[2, 3], [5, 6]]"}),". The syntax for slicing a 2-dimensional array is ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"row_start:row_end, col_start:col_end"}),"."]})]})})})})},Vi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"Creating a NumPy Nd array Object: "})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:" In NumPy, the main object used to store and manipulate data is called an ndarray (n-dimensional array). We can create ndarrays using various methods provided by NumPy."}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"1. 0-Dimensional Array (Scalar):"})}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:[" A 0-dimensional array, also known as a scalar, represents a single value. You can create a scalar array by passing a single value to the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.array()"})," function.."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 0-dimensional array (scalar)\n  arr = np.array(5)\n  print(arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Result:"}),(0,$e.jsx)(Gt,{children:"5"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we created a 0-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with a value of 5. It represents a single value, which is why it is called a scalar"]}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"2. 1-Dimensional Array: "})}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["A 1-dimensional array, also known as a vector, represents a sequence of values. You can create a 1-dimensional array by passing a Python list or tuple to the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.array()"})," function."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 1-dimensional array\n  arr = np.array([1, 2, 3, 4, 5])\n  print(arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Result:"}),(0,$e.jsx)(Gt,{children:"[1 2 3 4 5]"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["Here, we created a 1-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with the values 1, 2, 3, 4, and 5. The array represents a sequence of values arranged in a single row."]}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"3. 2-Dimensional Array: "})}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["A 2-dimensional array represents a matrix or a grid of values. You can create a 2-dimensional array by passing a list of lists or a nested list to the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.array()"})," function."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 2-dimensional array\n  arr = np.array([[1, 2, 3], [4, 5, 6]])\n  print(arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Result:"}),(0,$e.jsx)(Gt,{children:"[[1 2 3]\n  [4 5 6]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we created a 2-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with two rows and three columns. The array represents a matrix with rows and columns."]}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"4. 3-Dimensional Array: "})}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["A 3-dimensional array represents a collection of matrices or a cube of values. You can create a 3-dimensional array by passing a list of 2-dimensional arrays to the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.array()"})," function."]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 3-dimensional array\n  arr = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])\n  print(arr)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Result:"}),(0,$e.jsx)(Gt,{children:"[[[1 2]\n  [3 4]]\n  [[5 6]\n  [7 8]]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["Here, we created a 3-dimensional array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with two 2x2 matrices. The array represents a cube of values or a collection of matrices."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"These examples demonstrate the creation of NumPy arrays in different dimensions. Arrays can have any number of dimensions, depending on the data you are working with. NumPy provides powerful functions to manipulate and perform calculations on arrays of any dimension."}),(0,$e.jsx)("p",{className:"pt-4",children:(0,$e.jsx)("span",{className:"font-bold",children:"Higher Dimensional Arrays "})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Step 1: Import the NumPy library"}),(0,$e.jsx)(Gt,{children:"import numpy as np"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Step 2: Create a 3-dimensional array to represent the test scores"}),(0,$e.jsx)(Gt,{children:"# Create a 3-dimensional array with shape (num_subjects, num_years, num_classrooms)\n  test_scores = np.array([\n      [[85, 92, 88], [78, 87, 91]],\n      [[76, 81, 79], [90, 85, 88]]\n  ])"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"In this example, we have two subjects, two years, and two classrooms, with each element representing a test score."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Step 3: Accessing elements and slices"}),(0,$e.jsx)(Gt,{children:'# Access an individual element\n  score = test_scores[1, 0, 2]  # Subject 1, Year 0, Classroom 2\n  print("Test Score:", score)\n  \n  # Access slices\n  subject_scores = test_scores[0, :, :]  # Test scores for subject 0 in all years and classrooms\n  print("Subject Scores:")\n  print(subject_scores)'}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Here, we accessed an individual test score and retrieved a slice representing the scores for subject 0 across all years and classrooms."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Step 4: Reshaping the array"}),(0,$e.jsx)(Gt,{children:'# Reshape the array to a 2-dimensional array\n  reshaped_scores = test_scores.reshape((2, -1))\n  print("Reshaped Scores:")\n  print(reshaped_scores)'}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"We reshaped the array into a 2-dimensional array where the first dimension represents subjects, and the second dimension represents a combination of years and classrooms."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Step 5: Aggregations and computations"}),(0,$e.jsx)(Gt,{children:'# Calculate the average test score for each subject\n  subject_average = test_scores.mean(axis=(1, 2))\n  print("Subject Average Scores:")\n  print(subject_average)\n  \n  # Perform computations\n  total_scores = np.sum(test_scores, axis=(0, 1, 2))  # Sum of all test scores\n  maximum_scores = np.max(test_scores, axis=(0, 2))  # Maximum score in each subject and classroom\n  print("Total Scores:", total_scores)\n  print("Maximum Scores:")\n  print(maximum_scores)'}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"We calculated the average test score for each subject, computed the total scores, and found the maximum score in each subject and classroom using aggregations and computations."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"By working through these steps, you can effectively create, manipulate, and analyze higher-dimensional arrays in NumPy"})]})})})})},Wi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"Data Types in Python "})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Numeric Types"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"int:"})," Represents integers."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float:"})," Represents floating-point numbers"]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"complex:"})," Represents complex numbers"]})]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Sequence Types:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"str:"})," Represents strings of characters."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"list:"})," Represents ordered collections of elements."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"tuple:"})," Represents immutable ordered collections of elements."]})]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Mapping Type:"}),(0,$e.jsx)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dict:"})," Represents key-value pair collections."]})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Set Types:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"set:"})," Represents unordered collections of unique elements."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"frozenset:"})," Represents immutable sets."]})]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Boolean Type:"}),(0,$e.jsx)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"bool:"})," Represents boolean values (True or False)."]})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"None Type:"}),(0,$e.jsx)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"None:"})," Represents the absence of a value or a null value."]})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:(0,$e.jsx)("span",{className:"font-bold",children:"Data Types in NumPy:"})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"NumPy introduces additional data types that are optimized for numerical computations and memory efficiency. These data types are represented by objects of the numpy.dtype class. Some commonly used NumPy data types include:"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Integer Types:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"int8, int16, int32, int64:"})," Signed integer types with different bit sizes."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"uint8, uint16, uint32, uint64:"})," Unsigned integer types with different bit sizes."]})]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Floating-Point Types:"}),(0,$e.jsx)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float16, float32, float64:"})," Floating-point types with different precision."]})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Complex Types:"}),(0,$e.jsx)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"complex64, complex128:"})," Complex number types with different precision."]})}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Other Types:"}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"bool:"})," Represents boolean values (True or False)."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"object:"})," Represents Python objects."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"string_, unicode_:"})," String types"]})]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"NumPy data types provide finer control over memory usage and support various mathematical operations efficiently. They are commonly used for scientific computing, numerical analysis, and data manipulation tasks."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Note: NumPy also supports user-defined data types (structured or record arrays), allowing for more complex and specialized data representations."}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-8",children:["1. Checking the Data Type of an Array: Every element in a NumPy array has a specific data type, such as integer, float, or string. You can check the data type of an array using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dtype"})," attribute. Here's an example:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create an array\n  arr = np.array([1, 2, 3])\n  \n  # Check the data type of the array\n  print(arr.dtype)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"int64"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In the code above, we create a NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3]"}),". We then use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dtype"})," attribute to check the data type of the array, which in this case is ",(0,$e.jsx)("span",{children:"int64"})," (64-bit integer)."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"2. Converting Data Type on Existing Arrays"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-8",children:["You can convert the data type of an existing array to another data type using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"astype()"})," method. Let's see an example:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create an array with integers\n  arr = np.array([1, 2, 3])\n  \n  # Convert the data type to float\n  float_arr = arr.astype(float)\n  \n  # Check the data type of the converted array\n  print(float_arr.dtype)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"float64"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In the code above, we have an array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," with values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3]"})," of integer data type. We use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"astype()"})," method to convert the data type to float, resulting in a new array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float_arr"}),". We then check the data type of the converted array, which is ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float64"})," (64-bit floating-point number)."]}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["It's important to note that the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"astype()"})," method creates a new array with the converted data type and does not modify the original array."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:(0,$e.jsx)("span",{className:"font-bold",children:"Converting Data Type on Existing Arrays"})}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In NumPy, you can convert the data type of existing arrays using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"astype()"})," method, which allows you to specify the desired data type. Here's a simple way to convert the data type of an existing NumPy array:"]}),(0,$e.jsx)(Gt,{children:'import numpy as np\n\n  # Create an example array\n  arr = np.array([1, 2, 3, 4, 5])\n  \n  # Convert the data type\n  new_arr = arr.astype(float)\n  \n  # Print the new array and its data type\n  print("New Array:", new_arr)\n  print("Data Type:", new_arr.dtype)'}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["In this example, we start with a NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr"})," containing integer values. We use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"astype()"})," method to convert the data type to ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"float"}),", creating a new array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"new_arr"})," with the converted values. Finally, we print the new array and its data type using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"dtype"})," attribute."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"The output will be:"}),(0,$e.jsx)(Gt,{children:"New Array: [1. 2. 3. 4. 5.]\nData Type: float64"}),(0,$e.jsxs)("p",{className:"px-4 mt-4 ml-2",children:["By using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"astype()"})," method, you can easily convert the data type of existing NumPy arrays to the desired type, allowing for flexible data manipulation and computations."]})]})})})})},Qi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Filter Array"})}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Filtering arrays in NumPy means selecting specific elements from an array based on certain conditions. It allows us to extract only the elements that meet a specific criterion. Let's explore how it works with some examples."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Imagine you have a list of people's ages, and you want to filter out only those ages that are above a certain threshold. In this case, the list of ages represents your original array, and the filtering process will create a filter array that selects the ages meeting the specified condition."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Here's an example to illustrate this using NumPy:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Original array of ages\n  ages = np.array([25, 32, 19, 45, 50, 28])\n  \n  # Filter array: Select ages above 30\n  filter_array = ages > 30\n  \n  # Filtered array\n  filtered_ages = ages[filter_array]\n  \n  # Print the filtered ages\n  print(filtered_ages)"}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Output"}),(0,$e.jsx)(Gt,{children:"[32 45 50]"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"In this example, we have an array ages that represents the ages of a group of people. We want to filter out the ages that are above 30."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"To create the filter array, we use the expression ages >30. This expression generates a Boolean array with the same shape as ages, where each element is True if the corresponding age in ages is above 30, and False otherwise."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Next, we use this filter array to index the original array ages using square brackets []. This operation selects only the elements from ages corresponding to True values in the filter array, effectively filtering out the ages that don't meet the condition."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Finally, we store the filtered ages in the filtered_ages array and print it."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"This concept of filtering arrays can be useful in various real-life scenarios, such as filtering data based on certain conditions, extracting relevant information from large datasets, or performing analysis on specific subsets of data."}),(0,$e.jsxs)("ul",{children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"Filtering a 1D Array: "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Let's say we have the following array:"}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n  # Create a 1D array\n  arr = np.array([5, 2, 8, 1, 6])"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Now, let's say we want to select only the elements greater than 4 from this array. We can use a condition to filter the array:"}),(0,$e.jsx)(Gt,{children:"\n  filtered_arr = arr[arr > 4]\nprint(filtered_arr)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[5 8 6]"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"As you can see, the filtered array contains only the elements greater than 4."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2 font-bold",children:"Filtering a 2D Array:"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Let's consider a 2D array:"}),(0,$e.jsx)(Gt,{children:"\n  # Create a 2D array\narr_2d = np.array([[5, 2, 8],\n                   [1, 6, 4],\n                   [3, 9, 7]])\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Now, let's say we want to select only the elements greater than 5 from this 2D array. We can use a similar approach:"}),(0,$e.jsx)(Gt,{children:"\n  filtered_arr_2d = arr_2d[arr_2d > 5]\nprint(filtered_arr_2d)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[2 6 9]"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"The filtered column contains the elements greater than 3 from the second column of the 2D array."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"That's it! Filtering arrays in NumPy is a useful way to select specific elements based on conditions. By using conditional statements and indexing, we can extract the elements that meet our criteria."})]})]})})})},$i=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsxs)("p",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-bold",children:"1. Installing NumPy: "}),"NumPy provides efficient tools for handling and manipulating large datasets, making it a popular choice for data analysis tasks."]}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"To install NumPy, you can use the following command:"}),(0,$e.jsx)(Gt,{children:"pip install numpy"}),(0,$e.jsxs)("p",{className:"pt-4 mt-3",children:[(0,$e.jsx)("span",{className:"font-bold",children:"2. Importing NumPy: "}),"To use NumPy in your Python program, you need to import it. You can import NumPy using the following line of code."]}),(0,$e.jsx)(Gt,{children:"import numpy as np"}),(0,$e.jsxs)("p",{className:"px-4 mt-3",children:["The ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"import"})," statement allows you to access all the functionalities of NumPy under the alias ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np."})," This is a common convention used by the Python community."]}),(0,$e.jsxs)("p",{className:"pt-4 mt-3",children:[(0,$e.jsx)("span",{className:"font-bold",children:"3. Checking NumPy Version: "}),"You can check the version of NumPy installed on your system using the following code:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  print(np.__version__)"}),(0,$e.jsx)("p",{className:"px-4 mt-3",children:"Result"}),(0,$e.jsx)(Gt,{children:"1.21.0"}),(0,$e.jsxs)("p",{className:"px-4 mt-3",children:["In this example, we import NumPy and then use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"__version__ "}),"attribute to access the version information. The version number will be printed to the console."]}),(0,$e.jsx)("p",{className:"px-4 mt-3",children:"It's important to note that the version number may vary depending on the specific version of NumPy you have installed."}),(0,$e.jsx)("p",{className:"px-4 mt-3",children:"By following these steps, you can install NumPy, import it into your Python program, and check its version. Once you have NumPy installed and imported, you can start using its powerful array manipulation and mathematical functionalities."})]})})})})},Ki=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:"1. What is NumPy ? "}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:'NumPy is a Python library that stands for "Numerical Python." It provides support for large, multi-dimensional arrays and matrices, along with a collection of mathematical functions to operate on these arrays. NumPy is widely used in scientific computing, data analysis, and machine learning applications.'}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full mt-5",children:"2. Why is NumPy important ? "}),(0,$e.jsx)("div",{children:(0,$e.jsxs)("ol",{className:" px-10 py-4 text-justify",children:[(0,$e.jsx)("li",{className:"pt-4",children:"1. Efficient numerical operations: NumPy arrays are highly optimized for numerical operations, which makes computations faster and more efficient compared to regular Python lists."}),(0,$e.jsx)("li",{className:"pt-4",children:"2. Memory efficiency: NumPy arrays use less memory compared to Python lists, as they store data in a contiguous block of memory. This allows for efficient storage and manipulation of large datasets."}),(0,$e.jsx)("li",{className:"pt-4",children:"3. Mathematical operations: NumPy provides a wide range of mathematical functions that can be applied to arrays, such as trigonometric functions, logarithms, exponential functions, and more. These functions make complex calculations easier and faster."}),(0,$e.jsx)("li",{className:"pt-4",children:"4. Integration with other libraries: NumPy integrates well with other libraries in the scientific Python ecosystem, such as Pandas (for data manipulation), Matplotlib (for data visualization), and Scikit-learn (for machine learning)."})]})}),(0,$e.jsx)("h4",{className:"p-2 text-lg font-bold rounded-md card-bg w-full mt-4",children:"3. Where to use NumPy?  "}),(0,$e.jsxs)("ol",{className:" px-10 py-4 text-justify",children:[(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-bold",children:"1. Data analysis :"})," NumPy provides efficient tools for handling and manipulating large datasets, making it a popular choice for data analysis tasks."]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-bold",children:"2. Scientific computing :"})," NumPy is widely used in scientific and numerical computations, such as simulations, modeling, and optimization problems"]}),(0,$e.jsxs)("li",{className:"pt-4",children:[(0,$e.jsx)("span",{className:"font-bold",children:"3. Machine learning :"})," Many machine learning algorithms require the use of arrays for storing and manipulating data. NumPy provides the necessary tools for handling arrays efficiently, making it a fundamental library for machine learning applications."]})]})]}),(0,$e.jsxs)("div",{children:[(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"Now, let's move on to some examples to help you understand better."}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-bold",children:"Example 1: "})," Creating a NumPy Array To use NumPy, you first need to install it. You can install it using the following command:"]}),(0,$e.jsx)(Gt,{children:"pip install numpy"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 px-10",children:"Once installed, you can import NumPy into your Python program using the following line of code:"}),(0,$e.jsx)(Gt,{children:"import numpy as np"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 px-8",children:"Now, let's create a simple NumPy array:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create a 1-dimensional array\n  my_array = np.array([1, 2, 3, 4, 5])\n  print(my_array)"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 px-8",children:"Result"}),(0,$e.jsx)(Gt,{children:"[1 2 3 4 5]"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4 px-8",children:["In this example, we created a 1-dimensional NumPy array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"my_array"})," with the values 1, 2, 3, 4, and 5. We used the  ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.array()"})," function to create the array, and then we printed it using the  ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"print()"})," function."]}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4",children:[(0,$e.jsx)("span",{className:"font-bold",children:"Example 2:  "})," Mathematical Operations with NumPy NumPy provides a wide range of mathematical functions that can be applied to arrays. Let's see an example:"]}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create two arrays\n  array1 = np.array([1, 2, 3])\n  array2 = np.array([4, 5, 6])\n  \n  # Perform element-wise addition\n  result = array1 + array2\n  print(result)"}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4 px-8",children:"Result"}),(0,$e.jsx)(Gt,{children:"[5 7 9]"}),(0,$e.jsxs)("p",{className:"text-justify p-2 pt-4 px-8",children:["In this example, we created two arrays ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"array1"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"array2"}),". We then performed element-wise addition between the two arrays using the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"+"}),"  operator. The resulting array ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"result "}),"contains the sum of corresponding elements from ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"array1 "}),"and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"array2"}),"."]}),(0,$e.jsx)("p",{className:"text-justify p-2 pt-4",children:"These are just basic examples to help you get started with NumPy. There are many more things you can do with NumPy, such as array indexing, slicing, reshaping, and more. NumPy's official documentation provides extensive information and examples on how to use the library."})]})]})})})})},Xi=function(){return(0,$e.jsx)($e.Fragment,{children:(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-4",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Array Joining"})}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2 font-bold",children:"1. Joining Arrays Using Stack Functions: "}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["NumPy provides several stack functions to join arrays together. These functions include ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.concatenate(), np.vstack(), np.hstack(), and np.dstack()"}),". Here's a brief explanation of each function:"]}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.concatenate():"})," This function joins arrays along an existing axis."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.vstack():"})," This function vertically stacks arrays (along the rows)."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.hstack():"})," This function horizontally stacks arrays (along the columns)."]}),(0,$e.jsxs)("li",{children:[(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.dstack():"})," This function stacks arrays along the third dimension (depth)."]})]}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2 font-bold",children:"2. Stacking Along Rows:"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Stacking along rows means joining arrays vertically, one below the other. Here's an example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create two 1-D arrays\n  arr1 = np.array([1, 2, 3])\n  arr2 = np.array([4, 5, 6])\n  \n  # Stack the arrays along rows\n  stacked = np.vstack((arr1, arr2))\n  \n  # Print the result\n  print(stacked)"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[[1 2 3]\n  [4 5 6]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["In this example, we have two 1-D NumPy arrays ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr1"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr2"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3]"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[4, 5, 6]"}),", respectively. We use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.vstack()"})," function to vertically stack the arrays along the rows. The result is a 2-D array with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[1, 2, 3], [4, 5, 6]]"}),"."]}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2 font-bold",children:"3. Stacking Along Columns:"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Stacking along columns means joining arrays horizontally, side by side. Here's an example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create two 1-D arrays\n  arr1 = np.array([1, 2, 3])\n  arr2 = np.array([4, 5, 6])\n  \n  # Stack the arrays along columns\n  stacked = np.hstack((arr1, arr2))\n  \n  # Print the result\n  print(stacked)"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[1 2 3 4 5 6]"}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["In this example, we have two 1-D NumPy arrays ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr1"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr2"})," with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3]"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[4, 5, 6]"}),", respectively. We use the ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"np.hstack()"})," function to horizontally stack the arrays side by side. The result is a 1-D array with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[1, 2, 3, 4, 5, 6]"}),"."]}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2 font-bold",children:"4. Stacking Along Height (Depth):"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Stacking along the height or depth dimension means joining arrays along the third dimension. This is applicable to 3-D arrays. Here's an example:"}),(0,$e.jsx)(Gt,{children:"import numpy as np\n\n  # Create two 2-D arrays\n  arr1 = np.array([[1, 2], [3, 4]])\n  arr2 = np.array([[5, 6], [7, 8]])\n  \n  # Stack the arrays along height\n  stacked = np.dstack((arr1, arr2))\n  \n  # Print the result\n  print(stacked)"}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"[[[1 5]\n  [2 6]]\n\n [[3 7]\n  [4 8]]]"}),(0,$e.jsxs)("p",{className:"px-4 mt-8 ml-2",children:["In this example, we have two 2-D NumPy arrays ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr1"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"arr2"})," with the values",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:" [[1, 2], [3, 4]]"})," and ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[5, 6], [7, 8]]"}),", respectively. We use the np.dstack() function to stack the arrays along the height or third dimension. The result is a 3-D array with the values ",(0,$e.jsx)("span",{className:"code-text italic text-sm",children:"[[[1, 5], [2, 6]], [[3, 7], [4, 8]]]"}),"."]})]})})})})},Zi=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Searching Array"})}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"NumPy provides functions to search for elements or insert elements into a sorted array. This is useful when you have a sorted array and need to find the position where a specific value should be inserted or search for a specific value in the array."}),(0,$e.jsxs)("ul",{className:"list-decimal px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"searchsorted(): This function returns the index where a specified value should be inserted to maintain the sorted order of the array. The syntax for searchsorted() is as follows:"}),(0,$e.jsx)(Gt,{children:"\n  numpy.searchsorted(a, v, side='left')\n  "}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"a: The input sorted array."}),(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"v: The value to be inserted or searched."}),(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"side: This optional parameter determines whether to return the leftmost or rightmost index if the value is found. By default, it is set to 'left'."})]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Let's see an example:"}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n# Create a sorted array\narr = np.array([2, 4, 6, 8, 10])\n\n# Search for the index where 6 should be inserted\nindex = np.searchsorted(arr, 6)\n\nprint(index)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  2\n  "}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"In this example, the sorted array arr contains the values [2, 4, 6, 8, 10]. The searchsorted() function is used to find the index where the value 6 should be inserted to maintain the sorted order. The result is 2, indicating that 6 should be inserted at index 2 to keep the array sorted."}),(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"Searching from the right side: In addition to the default behavior of searching from the left side, NumPy also allows searching from the right side of the array. "})]}),(0,$e.jsxs)("p",{className:"px-4 mt-2 ml-2",children:["To search from the right side, you can specify the side parameter as 'right'. ",(0,$e.jsx)("br",{}),"Let's see an example:"]}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n# Create a sorted array\narr = np.array([2, 4, 6, 6, 8, 10])\n\n# Search for the rightmost index of 6\nindex = np.searchsorted(arr, 6, side='right')\n\nprint(index)\n  "}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n# Create a sorted array\narr = np.array([2, 4, 6, 6, 8, 10])\n\n# Search for the rightmost index of 6\nindex = np.searchsorted(arr, 6, side='right')\n\nprint(index)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output"}),(0,$e.jsx)(Gt,{children:"\n  4\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"In this example, the sorted array arr contains the values [2, 4, 6, 6, 8, 10]. The searchsorted() function is used to find the rightmost index of the value 6. The result is 4, indicating that the rightmost occurrence of 6 is at index 4."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"These NumPy functions provide a convenient way to search for values in sorted arrays and determine the appropriate insertion points to maintain the sorted order."})]})]})})})},Ji=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Sorting Array"})}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"Sorting arrays in NumPy means arranging the elements in ascending or descending order. It can be done on both one-dimensional (1D) and two-dimensional (2D) arrays. Let's explore how it works with some examples."}),(0,$e.jsxs)("ul",{className:"list-decimal px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"Sorting a 1D Array:"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" Let's say we have the following array:"}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n# Create a 1D array\narr = np.array([5, 2, 8, 1, 6])\n  "}),(0,$e.jsx)("p",{children:"To sort this array in ascending order, we can use the np.sort() function:"}),(0,$e.jsx)(Gt,{children:"\n  sorted_arr = np.sort(arr)\nprint(sorted_arr)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  [8 6 5 2 1]\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Now, the elements are sorted in descending order."}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2 font-bold",children:"Sorting a 2D Array:"}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Let's consider a 2D array:"}),(0,$e.jsx)(Gt,{children:"\n  # Create a 2D array\narr_2d = np.array([[5, 2, 8],\n                   [1, 6, 4],\n                   [3, 9, 7]])\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"To sort the elements of this 2D array along the rows (axis 1), we can use the np.sort() function with axis=1 parameter:"}),(0,$e.jsx)(Gt,{children:"\n  sorted_arr_2d_rows = np.sort(arr_2d, axis=1)\nprint(sorted_arr_2d_rows)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n  [[2 5 8]\n [1 4 6]\n [3 7 9]]\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" The elements in each row are sorted in ascending order.To sort the elements of the 2D array along the columns (axis 0), we can use the np.sort() function with axis=0 parameter:"}),(0,$e.jsx)(Gt,{children:"\n  sorted_arr_2d_cols = np.sort(arr_2d, axis=0)\nprint(sorted_arr_2d_cols)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" Output:"}),(0,$e.jsx)(Gt,{children:"\n  [[1 2 4]\n [3 6 7]\n [5 9 8]]\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" The elements in each column are sorted in ascending order."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" That's it! Sorting arrays in NumPy is quite straightforward. You can use the np.sort() function to sort both 1D and 2D arrays. By specifying the axis parameter, you can control whether the sorting is done along rows or columns."})]})]})})})},er=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)("section",{className:"p-4 md:text-base text-justify text-sm",children:(0,$e.jsxs)("article",{className:"mt-6",children:[(0,$e.jsx)("p",{className:"p-2 text-lg font-bold rounded-md card-bg w-full",children:(0,$e.jsx)("span",{className:"font-bold",children:"NumPy Splitting Array"})}),(0,$e.jsx)("p",{className:"px-4 mt-8 ml-2",children:"NumPy is a powerful library for numerical computations in Python. It provides an array object called ndarray, which is efficient for handling large amounts of numerical data. One of the useful features of NumPy is the ability to split arrays into multiple smaller arrays. This can be helpful for analyzing and manipulating data in a structured manner."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"To split a 2D array into smaller arrays, NumPy provides several functions, such as split(), hsplit(), and vsplit()."}),(0,$e.jsx)("p",{className:"px-4 mt-4 ml-2",children:"Let's explore each of them:"}),(0,$e.jsxs)("ul",{className:"list-decimal px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"split(): This function splits an array into multiple sub-arrays along a specified axis. The syntax for split() is as follows:"}),(0,$e.jsx)(Gt,{children:"\n  numpy.split(ary, indices_or_sections, axis=0)\n  "}),(0,$e.jsxs)("ul",{className:"list-disc px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"ary: The array to be split."}),(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"indices_or_sections: It can be an integer specifying the number of equal-sized sub-arrays to create, or it can be a list of indices indicating the split points."}),(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"axis: The axis along which to split the array. By default, it is 0 (split vertically)."})]}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Let's see an example:"}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n# Create a 2D array\narr = np.array([[1, 2, 3, 4],\n                [5, 6, 7, 8],\n                [9, 10, 11, 12]])\n\n# Split the array into two sub-arrays\nsubarrays = np.split(arr, 2)\n\n# Display the sub-arrays\nfor subarr in subarrays:\n    print(subarr)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output:"}),(0,$e.jsx)(Gt,{children:"\n[[1 2 3 4]\n[5 6 7 8]]\n[[ 9 10 11 12]]\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"In this example, the 2D array arr is split into two equal-sized sub-arrays along the default axis 0. The result is two 2D arrays: [[1, 2, 3, 4], [5, 6, 7, 8]] and [[9, 10, 11, 12]]."}),(0,$e.jsx)("li",{className:"px-4 mt-8 ml-2",children:" hsplit(): This function splits an array horizontally (column-wise) into multiple sub-arrays. It takes a single argument, which is the array to be split. The array is split into equal-sized sub-arrays based on the number of columns. Let's see an example:"}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n\n# Create a 2D array\narr = np.array([[1, 2, 3, 4],\n                [5, 6, 7, 8],\n                [9, 10, 11, 12]])\n\n# Split the array horizontally\nsubarrays = np.hsplit(arr, 2)\n\n# Display the sub-arrays\nfor subarr in subarrays:\n    print(subarr)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"In this example, the 2D array arr is split into two sub-arrays, each containing half of the columns. The result is two 2D arrays: [[1, 2], [5, 6], [9, 10]] and [[3, 4], [7, 8], [11, 12]]."}),(0,$e.jsx)("li",{className:"px-4 mt-8 ml-2",children:"vsplit(): This function splits an array vertically (row-wise) into multiple sub-arrays. It takes a single argument, which is the array to be split. The array is split into equal-sized sub-arrays based on the number of rows. Let's see an example:"}),(0,$e.jsx)(Gt,{children:"\n  import numpy as np\n# Create a 2D array\narr = np.array([[1, 2, 3, 4],\n                [5, 6, 7, 8],\n                [9, 10, 11, 12]])\n# Split the array vertically\nsubarrays = np.vsplit(arr, 3)\n# Display the sub-arrays\nfor subarr in subarrays:\nprint(subarr)\n  "}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:"Output"}),(0,$e.jsx)(Gt,{children:"\n[[1 2 3 4]]\n[[5 6 7 8]]\n[[ 9 10 11 12]]\n  "}),(0,$e.jsxs)("ul",{className:"list-decimal px-10 py-2 text-justify ml-5",children:[(0,$e.jsx)("li",{className:"px-4 mt-2 ml-2",children:"In this example, the 2D array arr is split into three sub-arrays, each containing one row. The result is three 2D arrays: [[1, 2, 3, 4]], [[5, 6, 7, 8]], and [[9, 10, 11, 12]]."}),(0,$e.jsx)("p",{className:"px-4 mt-2 ml-2",children:" These are the basic functions for splitting a 2D array in NumPy. By using these functions, you can split arrays into smaller parts for further analysis and manipulation."})]})]})]})})})},tr=[{id:1,name:"Pandas Introduction",path:"/Pandas/Pandas-Introduction"},{id:2,name:"Pandas Getting Started",path:"/Pandas/Pandas-Getting-started"},{id:3,name:"Pandas Series",path:"/Pandas/Pandas-Series"},{id:4,name:"Pandas DataFreames",path:"/Pandas/Pandas-DataFrames"},{id:5,name:"Pandas Read CSV",path:"/Pandas/Pandas-Read-CSV"},{id:6,name:"Pandas Read JSON",path:"/Pandas/Pandas-Read-Json"},{id:7,name:"Pandas Analysing DataFrames",path:"/Pandas/Pandas-Analysing-DataFrames"},{id:8,name:"Pandas Cleaning Data",path:"/Pandas/Pandas-Cleaning-Data"},{id:9,name:"Pandas Cleaning Empty Cells",path:"/Pandas/Pandas-Cleaning-Empty-Cells"},{id:10,name:"Pandas Cleaning Data of Wrong Format",path:"/Pandas/Pandas-Cleaning-Data-of-Wrong-Format"},{id:11,name:"Pandas Fixing Wrong Data",path:"/Pandas/Pandas-Fixing-Wrong-Data"},{id:12,name:"Pandas Removing Duplicates",path:"/Pandas/Pandas-Removing-Duplicates"},{id:13,name:"Pandas Data Correlations",path:"/Pandas/Pandas-Data-Correlations"},{id:14,name:"Pandas Plotting",path:"/Pandas/Pandas-Plotting"},{id:15,name:"Pandas DataFrame Reference",path:"/Pandas/Pandas-DataFrame-Reference"}],nr=function(e){var n=e.children,a=E((0,t.useState)(!1),2),s=a[0],i=a[1],r=E((0,t.useState)(!1),2),o=r[0],l=r[1];return window.addEventListener("scroll",(function(){window.scrollY>=50?l(!0):l(!1)})),(0,$e.jsxs)("div",{children:[(0,$e.jsxs)("section",{className:"h-12 top-0 sticky w-full z-10 bg-blue-600 text-white dark:bg-blue-900 flex items-center",children:[(0,$e.jsx)(Kn,{className:"text-4xl ml-4 md:hidden",onClick:function(){return i(!s)}}),(0,$e.jsx)(Xn,{})]}),(0,$e.jsxs)("div",{className:"flex h-fit",children:[(0,$e.jsxs)("section",{className:o?"bg-white dark:bg-slate-800 text-color-mode fixed top-12 h-[92%] mb-10 hidden md:block overflow-y-auto":"bg-white dark:bg-slate-800 text-color-mode fixed top-32 h-[80%] mb-10 hidden md:block overflow-y-auto",children:[(0,$e.jsx)("h4",{className:"py-4 text-xl px-2 font-semibold",children:"Pandas Tutorial"}),tr.map((function(e,t){return(0,$e.jsx)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 hover:bg-gray-250",activeclassName:"active",children:(0,$e.jsx)("div",{className:"",children:e.name})},t)}))]}),(0,$e.jsx)("section",{className:"mx-4 md:ml-[17rem] lg:ml-[18rem] w-inherit  md:w-3/5 my-10 rounded-xl text-color-mode bg-lightModeElement/20 dark:bg-darkModeElement",children:n}),(0,$e.jsx)("section",{className:"hidden lg:block text-red-600 mt-14",children:(0,$e.jsx)("h1",{className:"",children:"Place Ads Here"})})]}),(0,$e.jsx)("div",{children:s&&(0,$e.jsx)("section",{children:(0,$e.jsx)("div",{className:"absolute h-full top-32 left-0 bg-slate-400 overflow-y-scroll",children:tr.map((function(e,t){return(0,$e.jsxs)(Ve,{to:e.path,className:"flex w-64 items-center my-2 py-1.5 pl-2 text-white hover:text-blue-400 hover:bg-white",onClick:function(){return i(!1)},activeclassName:"active",children:[(0,$e.jsx)("div",{className:"",children:e.name}),(0,$e.jsx)("div",{className:" md:mr-2 text-xs md:text-xl",children:(0,$e.jsx)(Qn,{})})]},t)}))})})})]})},ar=function(){return(0,$e.jsx)("div",{children:(0,$e.jsx)(nr,{children:(0,$e.jsx)(Ae,{})})})},sr=function(){return(0,$e.jsx)("div",{children:"PandasDataFrames"})},ir=function(){return(0,$e.jsx)("div",{children:"PandasSeries"})},rr=function(){return(0,$e.jsx)("div",{children:"PandasGettingStarted"})},or=function(){return(0,$e.jsx)("div",{children:"PandasReadCSV"})},lr=function(){return(0,$e.jsx)("div",{children:"PandasReadJSON"})},cr=function(){return(0,$e.jsx)("div",{children:"PandasAnalysingDataFrames"})};function dr(){return(0,$e.jsx)("div",{children:"PandasIntoduction"})}var ur=function(){return(0,$e.jsx)("div",{children:"PandasCleaningData"})},pr=function(){return(0,$e.jsx)("div",{children:"PandasCleaningEmptyCels"})},mr=function(){return(0,$e.jsx)("div",{children:"PandasCleaningDataofWrongFormat"})},hr=function(){return(0,$e.jsx)("div",{children:"PandasFixingWrongData"})},fr=function(){return(0,$e.jsx)("div",{children:"PandasRemovingDuplicates"})},gr=function(){return(0,$e.jsx)("div",{children:"PandasDataCorrelatons"})},xr=function(){return(0,$e.jsx)("div",{children:"PandasPlotting"})},_r=function(){return(0,$e.jsx)("div",{children:"PandasDataFarameReference"})};var br=function(){return(0,$e.jsxs)("div",{className:"bg-white dark:bg-slate-950 h-max-screen",children:[(0,$e.jsx)(ia,{}),(0,$e.jsxs)(Pe,{children:[(0,$e.jsx)(ke,{path:"/learn/",element:(0,$e.jsx)(Ke,{})}),(0,$e.jsxs)(ke,{path:"/cpluspage",element:(0,$e.jsx)(Jn,{}),children:[(0,$e.jsx)(ke,{path:"cpp-intro",element:(0,$e.jsx)(Lt,{})}),(0,$e.jsx)(ke,{path:"vs-code-guide",element:(0,$e.jsx)(Ft,{})}),(0,$e.jsx)(ke,{path:"cpp-basic-struc",element:(0,$e.jsx)(Ut,{})}),(0,$e.jsx)(ke,{path:"cpp-var-scope-data",element:(0,$e.jsx)(Bt,{})}),(0,$e.jsx)(ke,{path:"var-comments-in-cpp",element:(0,$e.jsx)(Ht,{})}),(0,$e.jsx)(ke,{path:"basic-input-output",element:(0,$e.jsx)(zt,{})}),(0,$e.jsx)(ke,{path:"header-files-ops",element:(0,$e.jsx)(Yt,{})}),(0,$e.jsx)(ke,{path:"cpp-variables-type",element:(0,$e.jsx)(qt,{})}),(0,$e.jsx)(ke,{path:"cpp-constants-manipulators",element:(0,$e.jsx)(Vt,{})}),(0,$e.jsx)(ke,{path:"cpp-controls-if-statement",element:(0,$e.jsx)(Wt,{})}),(0,$e.jsx)(ke,{path:"cpp-for-while-do-loop",element:(0,$e.jsx)(Qt,{})}),(0,$e.jsx)(ke,{path:"cpp-break-cont-statement",element:(0,$e.jsx)($t,{})}),(0,$e.jsx)(ke,{path:"cpp-functions",element:(0,$e.jsx)(Kt,{})}),(0,$e.jsx)(ke,{path:"cpp-funtions-params",element:(0,$e.jsx)(Xt,{})}),(0,$e.jsx)(ke,{path:"cpp-return-values",element:(0,$e.jsx)(Zt,{})}),(0,$e.jsx)(ke,{path:"cpp-function-scope-lifetime",element:(0,$e.jsx)(Jt,{})}),(0,$e.jsx)(ke,{path:"cpp-inline-functions",element:(0,$e.jsx)(en,{})}),(0,$e.jsx)(ke,{path:"cpp-error-handling",element:(0,$e.jsx)(tn,{})}),(0,$e.jsx)(ke,{path:"cpp-function-libraries",element:(0,$e.jsx)(nn,{})}),(0,$e.jsx)(ke,{path:"cpp-array",element:(0,$e.jsx)(Wn,{})}),(0,$e.jsx)(ke,{path:"cpp-multidimension-array",element:(0,$e.jsx)(an,{})}),(0,$e.jsx)(ke,{path:"cpp-passing-arrays",element:(0,$e.jsx)(sn,{})}),(0,$e.jsx)(ke,{path:"cpp-dynamic-arrays",element:(0,$e.jsx)(rn,{})}),(0,$e.jsx)(ke,{path:"cpp-array-of-pointers",element:(0,$e.jsx)(on,{})}),(0,$e.jsx)(ke,{path:"cpp-array-libraries",element:(0,$e.jsx)(ln,{})}),(0,$e.jsx)(ke,{path:"cpp-strings-intro",element:(0,$e.jsx)(cn,{})}),(0,$e.jsx)(ke,{path:"cpp-string-operations",element:(0,$e.jsx)(dn,{})}),(0,$e.jsx)(ke,{path:"cpp-string-manipulation",element:(0,$e.jsx)(un,{})}),(0,$e.jsx)(ke,{path:"cpp-string-conversion",element:(0,$e.jsx)(pn,{})}),(0,$e.jsx)(ke,{path:"cpp-string-parsing",element:(0,$e.jsx)(mn,{})}),(0,$e.jsx)(ke,{path:"cpp-format-whitespaces",element:(0,$e.jsx)(Ha,{})}),(0,$e.jsx)(ke,{path:"cpp-advance-strings",element:(0,$e.jsx)(hn,{})}),(0,$e.jsx)(ke,{path:"cpp-intro-structures",element:(0,$e.jsx)(fn,{})}),(0,$e.jsx)(ke,{path:"cpp-array-structures",element:(0,$e.jsx)(gn,{})}),(0,$e.jsx)(ke,{path:"cpp-structures-and-pointers",element:(0,$e.jsx)(xn,{})}),(0,$e.jsx)(ke,{path:"cpp-structure-manipulation",element:(0,$e.jsx)(_n,{})}),(0,$e.jsx)(ke,{path:"cpp-dynamic-memory-allocation",element:(0,$e.jsx)(za,{})}),(0,$e.jsx)(ke,{path:"cpp-bitfields",element:(0,$e.jsx)(bn,{})}),(0,$e.jsx)(ke,{path:"cpp-bitfields",element:(0,$e.jsx)(bn,{})}),(0,$e.jsx)(ke,{path:"cpp-unions",element:(0,$e.jsx)(yn,{})}),(0,$e.jsx)(ke,{path:"cpp-structure-file-io",element:(0,$e.jsx)(vn,{})}),(0,$e.jsx)(ke,{path:"cpp-intro-to-pointers",element:(0,$e.jsx)(Nn,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-operations",element:(0,$e.jsx)(En,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-and-array",element:(0,$e.jsx)(Sn,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-and-functions",element:(0,$e.jsx)(Ya,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-and-structures",element:(0,$e.jsx)(jn,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-to-pointers",element:(0,$e.jsx)(Tn,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-to-strings",element:(0,$e.jsx)(wn,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-and-const",element:(0,$e.jsx)(In,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-and-oop",element:(0,$e.jsx)(Cn,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-and-except",element:(0,$e.jsx)(On,{})}),(0,$e.jsx)(ke,{path:"cpp-pointers-advanced",element:(0,$e.jsx)(Rn,{})}),(0,$e.jsx)(ke,{path:"cpp-objects",element:(0,$e.jsx)(An,{})}),(0,$e.jsx)(ke,{path:"cpp-classes",element:(0,$e.jsx)(kn,{})}),(0,$e.jsx)(ke,{path:"cpp-data-members",element:(0,$e.jsx)(Pn,{})}),(0,$e.jsx)(ke,{path:"cpp-member-functions",element:(0,$e.jsx)(Dn,{})}),(0,$e.jsx)(ke,{path:"cpp-encapsulation",element:(0,$e.jsx)(Mn,{})}),(0,$e.jsx)(ke,{path:"cpp-access-specifiers",element:(0,$e.jsx)(Ln,{})}),(0,$e.jsx)(ke,{path:"cpp-constructors",element:(0,$e.jsx)(Fn,{})}),(0,$e.jsx)(ke,{path:"cpp-destructors",element:(0,$e.jsx)(Un,{})}),(0,$e.jsx)(ke,{path:"cpp-inheritance",element:(0,$e.jsx)(Bn,{})}),(0,$e.jsx)(ke,{path:"cpp-polymorphism",element:(0,$e.jsx)(Gn,{})}),(0,$e.jsx)(ke,{path:"cpp-overloading",element:(0,$e.jsx)(zn,{})}),(0,$e.jsx)(ke,{path:"cpp-operator-overloading",element:(0,$e.jsx)(Hn,{})}),(0,$e.jsx)(ke,{path:"cpp-static-members",element:(0,$e.jsx)(Yn,{})}),(0,$e.jsx)(ke,{path:"cpp-friend-functions",element:(0,$e.jsx)(qn,{})}),(0,$e.jsx)(ke,{path:"cpp-templates",element:(0,$e.jsx)(Vn,{})}),(0,$e.jsx)(ke,{path:"python-intro",element:(0,$e.jsx)(ca,{})})]}),(0,$e.jsxs)(ke,{path:"/python",element:(0,$e.jsx)(la,{}),children:[(0,$e.jsx)(ke,{path:"intro",element:(0,$e.jsx)(ca,{})}),(0,$e.jsx)(ke,{path:"getting-started",element:(0,$e.jsx)(da,{})}),(0,$e.jsx)(ke,{path:"syntax",element:(0,$e.jsx)(ua,{})}),(0,$e.jsx)(ke,{path:"comments",element:(0,$e.jsx)(pa,{})}),(0,$e.jsx)(ke,{path:"variables",element:(0,$e.jsx)(ma,{})}),(0,$e.jsx)(ke,{path:"data-types",element:(0,$e.jsx)(ha,{})}),(0,$e.jsx)(ke,{path:"numbers",element:(0,$e.jsx)(fa,{})}),(0,$e.jsx)(ke,{path:"casting",element:(0,$e.jsx)(xa,{})}),(0,$e.jsx)(ke,{path:"operators",element:(0,$e.jsx)(ya,{})}),(0,$e.jsx)(ke,{path:"strings",element:(0,$e.jsx)(_a,{})}),(0,$e.jsx)(ke,{path:"booleans",element:(0,$e.jsx)(ba,{})}),(0,$e.jsx)(ke,{path:"lists",element:(0,$e.jsx)(va,{})}),(0,$e.jsx)(ke,{path:"tuples",element:(0,$e.jsx)(Na,{})}),(0,$e.jsx)(ke,{path:"sets",element:(0,$e.jsx)(Ea,{})}),(0,$e.jsx)(ke,{path:"dictionaries",element:(0,$e.jsx)(ga,{})}),(0,$e.jsx)(ke,{path:"recursion",element:(0,$e.jsx)(Ta,{})}),(0,$e.jsx)(ke,{path:"if-else",element:(0,$e.jsx)(Sa,{})}),(0,$e.jsx)(ke,{path:"while-loops",element:(0,$e.jsx)(ja,{})}),(0,$e.jsx)(ke,{path:"for-loops",element:(0,$e.jsx)(Ba,{})}),(0,$e.jsx)(ke,{path:"python-recursion",element:(0,$e.jsx)(Ta,{})}),(0,$e.jsx)(ke,{path:"function",element:(0,$e.jsx)(Ga,{})}),(0,$e.jsx)(ke,{path:"lambda",element:(0,$e.jsx)(wa,{})}),(0,$e.jsx)(ke,{path:"arrays",element:(0,$e.jsx)(Ia,{})}),(0,$e.jsx)(ke,{path:"classes-objects",element:(0,$e.jsx)(Ra,{})}),(0,$e.jsx)(ke,{path:"python-math",element:(0,$e.jsx)(Ca,{})}),(0,$e.jsx)(ke,{path:"python-datetime",element:(0,$e.jsx)(Ua,{})}),(0,$e.jsx)(ke,{path:"pip-package",element:(0,$e.jsx)(Oa,{})}),(0,$e.jsx)(ke,{path:"try-except",element:(0,$e.jsx)(Aa,{})}),(0,$e.jsx)(ke,{path:"user-input",element:(0,$e.jsx)(Pa,{})}),(0,$e.jsx)(ke,{path:"string-formatting",element:(0,$e.jsx)(La,{})}),(0,$e.jsx)(ke,{path:"modules",element:(0,$e.jsx)(Fa,{})}),(0,$e.jsx)(ke,{path:"scope",element:(0,$e.jsx)(Da,{})}),(0,$e.jsx)(ke,{path:"iterators",element:(0,$e.jsx)(Ma,{})}),(0,$e.jsx)(ke,{path:"file-handling",element:(0,$e.jsx)(ka,{})})]}),(0,$e.jsxs)(ke,{path:"/algorithm",element:(0,$e.jsx)(Wa,{}),children:[(0,$e.jsx)(ke,{path:"sorting-intro",element:(0,$e.jsx)(Qa,{})}),(0,$e.jsx)(ke,{path:"sorting-bubble",element:(0,$e.jsx)($a,{})}),(0,$e.jsx)(ke,{path:"sorting-selection",element:(0,$e.jsx)(Ds,{})}),(0,$e.jsx)(ke,{path:"sorting-insertion",element:(0,$e.jsx)(Ka,{})}),(0,$e.jsx)(ke,{path:"sorting-merge",element:(0,$e.jsx)(Xa,{})}),(0,$e.jsx)(ke,{path:"sorting-quick",element:(0,$e.jsx)(Za,{})}),(0,$e.jsx)(ke,{path:"sorting-radix",element:(0,$e.jsx)(Ja,{})}),(0,$e.jsx)(ke,{path:"sorting-heap",element:(0,$e.jsx)(es,{})}),(0,$e.jsx)(ke,{path:"searching-intro",element:(0,$e.jsx)(ts,{})}),(0,$e.jsx)(ke,{path:"searching-linear",element:(0,$e.jsx)(ns,{})}),(0,$e.jsx)(ke,{path:"searching-binary",element:(0,$e.jsx)(as,{})}),(0,$e.jsx)(ke,{path:"searching-interpolation",element:(0,$e.jsx)(ss,{})}),(0,$e.jsx)(ke,{path:"graph-intro",element:(0,$e.jsx)(is,{})}),(0,$e.jsx)(ke,{path:"graph-breath",element:(0,$e.jsx)(rs,{})}),(0,$e.jsx)(ke,{path:"graph-depth",element:(0,$e.jsx)(os,{})}),(0,$e.jsx)(ke,{path:"graph-topological",element:(0,$e.jsx)(ls,{})}),(0,$e.jsx)(ke,{path:"dynamic-optimal-structure",element:(0,$e.jsx)(cs,{})}),(0,$e.jsx)(ke,{path:"dynamic-memoization",element:(0,$e.jsx)(ds,{})}),(0,$e.jsx)(ke,{path:"dynamic-topdown-iterative",element:(0,$e.jsx)(us,{})}),(0,$e.jsx)(ke,{path:"dynamic-topdown-recursive",element:(0,$e.jsx)(Ms,{})}),(0,$e.jsx)(ke,{path:"dynamic-longest-sebsequence",element:(0,$e.jsx)(ps,{})}),(0,$e.jsx)(ke,{path:"dynamic-knapsackproblems",element:(0,$e.jsx)(ms,{})}),(0,$e.jsx)(ke,{path:"dynamic-coin-change",element:(0,$e.jsx)(hs,{})}),(0,$e.jsx)(ke,{path:"dynamic-edit-distance",element:(0,$e.jsx)(fs,{})}),(0,$e.jsx)(ke,{path:"greedy-choice-property",element:(0,$e.jsx)(gs,{})}),(0,$e.jsx)(ke,{path:"greedy-activity-selection",element:(0,$e.jsx)(xs,{})}),(0,$e.jsx)(ke,{path:"greedy-huffman-coding",element:(0,$e.jsx)(_s,{})}),(0,$e.jsx)(ke,{path:"greedy-job-sceduling",element:(0,$e.jsx)(bs,{})}),(0,$e.jsx)(ke,{path:"divide-conquer",element:(0,$e.jsx)(ys,{})}),(0,$e.jsx)(ke,{path:"backtracking",element:(0,$e.jsx)(vs,{})}),(0,$e.jsx)(ke,{path:"string",element:(0,$e.jsx)(Ns,{})}),(0,$e.jsx)(ke,{path:"technques-two-pointers",element:(0,$e.jsx)(Es,{})}),(0,$e.jsx)(ke,{path:"technques-sliding-window",element:(0,$e.jsx)(Ss,{})}),(0,$e.jsx)(ke,{path:"np-complete",element:(0,$e.jsx)(js,{})}),(0,$e.jsx)(ke,{path:"approximation",element:(0,$e.jsx)($a,{})}),(0,$e.jsx)(ke,{path:"computational-geo",element:(0,$e.jsx)(Ts,{})}),(0,$e.jsx)(ke,{path:"number-thoery",element:(0,$e.jsx)(Ps,{})}),(0,$e.jsx)(ke,{path:"number-eclidean-arithmetic",element:(0,$e.jsx)(ws,{})}),(0,$e.jsx)(ke,{path:"hashing",element:(0,$e.jsx)(Is,{})}),(0,$e.jsx)(ke,{path:"recursion",element:(0,$e.jsx)(Cs,{})}),(0,$e.jsx)(ke,{path:"bit-ops-shift",element:(0,$e.jsx)(Os,{})}),(0,$e.jsx)(ke,{path:"bit-mans-integer",element:(0,$e.jsx)(Rs,{})}),(0,$e.jsx)(ke,{path:"bit-tricks-ops",element:(0,$e.jsx)(As,{})}),(0,$e.jsx)(ke,{path:"time-complexity",element:(0,$e.jsx)(ks,{})})]}),(0,$e.jsxs)(ke,{path:"/IoT",element:(0,$e.jsx)(Us,{}),children:[(0,$e.jsx)(ke,{path:"IoT-Intro-Definition",element:(0,$e.jsx)(Bs,{})}),(0,$e.jsx)(ke,{path:"IoT-Intro-Historical",element:(0,$e.jsx)(Gs,{})}),(0,$e.jsx)(ke,{path:"IoT-Intro-Importance",element:(0,$e.jsx)(Hs,{})}),(0,$e.jsx)(ke,{path:"IoT-Architect-Overview",element:(0,$e.jsx)(zs,{})}),(0,$e.jsx)(ke,{path:"IoT-Architect-Sensor",element:(0,$e.jsx)(Ys,{})}),(0,$e.jsx)(ke,{path:"IoT-Architect-Communication",element:(0,$e.jsx)(qs,{})}),(0,$e.jsx)(ke,{path:"IoT-Architect-Gateway",element:(0,$e.jsx)(Vs,{})}),(0,$e.jsx)(ke,{path:"IoT-Devices-Hardware",element:(0,$e.jsx)(Qs,{})}),(0,$e.jsx)(ke,{path:"IoT-Devices-Development",element:(0,$e.jsx)($s,{})}),(0,$e.jsx)(ke,{path:"IoT-Devices-Platforms",element:(0,$e.jsx)(Ws,{})}),(0,$e.jsx)(ke,{path:"IoT-Networking-Wireless",element:(0,$e.jsx)(Ks,{})}),(0,$e.jsx)(ke,{path:"IoT-Networking-Topology",element:(0,$e.jsx)(Xs,{})}),(0,$e.jsx)(ke,{path:"IoT-Networking-Security",element:(0,$e.jsx)(Zs,{})}),(0,$e.jsx)(ke,{path:"IoT-DM-Data-Collection",element:(0,$e.jsx)(Js,{})}),(0,$e.jsx)(ke,{path:"IoT-DM-Dat-Analytics",element:(0,$e.jsx)(ei,{})}),(0,$e.jsx)(ke,{path:"IoT-DM-Real-Time",element:(0,$e.jsx)(ti,{})}),(0,$e.jsx)(ke,{path:"IoT-Application-SmartHomes",element:(0,$e.jsx)(ni,{})}),(0,$e.jsx)(ke,{path:"IoT-Application-Industrial",element:(0,$e.jsx)(ai,{})}),(0,$e.jsx)(ke,{path:"IoT-Application-Smartcities",element:(0,$e.jsx)(si,{})}),(0,$e.jsx)(ke,{path:"IoT-Application-Healthcare",element:(0,$e.jsx)(ii,{})}),(0,$e.jsx)(ke,{path:"IoT-Application-Agriculture",element:(0,$e.jsx)(ri,{})}),(0,$e.jsx)(ke,{path:"IoT-Challenge-Privacy",element:(0,$e.jsx)(oi,{})}),(0,$e.jsx)(ke,{path:"IoT-Challenge-Scalability",element:(0,$e.jsx)(li,{})}),(0,$e.jsx)(ke,{path:"IoT-Challenge-Edge-Computing",element:(0,$e.jsx)(ci,{})}),(0,$e.jsx)(ke,{path:"IoT-Challenge-Artificial",element:(0,$e.jsx)(di,{})}),(0,$e.jsx)(ke,{path:"IoT-Challenge-Emerge",element:(0,$e.jsx)(ui,{})}),(0,$e.jsx)(ke,{path:"IoT-Security-Importance",element:(0,$e.jsx)(pi,{})}),(0,$e.jsx)(ke,{path:"IoT-Security-Common",element:(0,$e.jsx)(mi,{})}),(0,$e.jsx)(ke,{path:"IoT-Security-Secure",element:(0,$e.jsx)(hi,{})}),(0,$e.jsx)(ke,{path:"IoT-Security-Authentic",element:(0,$e.jsx)(fi,{})}),(0,$e.jsx)(ke,{path:"IoT-Security-Best",element:(0,$e.jsx)(gi,{})}),(0,$e.jsx)(ke,{path:"IoT-Ecomputing-Intro",element:(0,$e.jsx)(xi,{})}),(0,$e.jsx)(ke,{path:"IoT-Ecomputing-Adv",element:(0,$e.jsx)(_i,{})}),(0,$e.jsx)(ke,{path:"IoT-Ecomputing-Edge-Dev",element:(0,$e.jsx)(bi,{})}),(0,$e.jsx)(ke,{path:"IoT-Ecomputing-Edge-Analytics",element:(0,$e.jsx)(yi,{})}),(0,$e.jsx)(ke,{path:"IoT-Ecomputing-Hybrid",element:(0,$e.jsx)(vi,{})}),(0,$e.jsx)(ke,{path:"IoT-Standards-Overview",element:(0,$e.jsx)(Ni,{})}),(0,$e.jsx)(ke,{path:"IoT-Standards-Importance",element:(0,$e.jsx)(Ei,{})}),(0,$e.jsx)(ke,{path:"IoT-Standards-Data-Exc",element:(0,$e.jsx)(Si,{})}),(0,$e.jsx)(ke,{path:"IoT-Standards-Industry",element:(0,$e.jsx)(ji,{})}),(0,$e.jsx)(ke,{path:"IoT-Standards-Challenges",element:(0,$e.jsx)(Ti,{})}),(0,$e.jsx)(ke,{path:"IoT-AI-Intersection",element:(0,$e.jsx)(wi,{})}),(0,$e.jsx)(ke,{path:"IoT-AI-Machine",element:(0,$e.jsx)(Ii,{})}),(0,$e.jsx)(ke,{path:"IoT-AI-Predictive",element:(0,$e.jsx)(Ci,{})}),(0,$e.jsx)(ke,{path:"IoT-AI-Intelligent",element:(0,$e.jsx)(Oi,{})}),(0,$e.jsx)(ke,{path:"IoT-AI-Edge",element:(0,$e.jsx)(Ri,{})}),(0,$e.jsx)(ke,{path:"IoT-Substain-Role",element:(0,$e.jsx)(Ai,{})}),(0,$e.jsx)(ke,{path:"IoT-Substain-Energy",element:(0,$e.jsx)(ki,{})}),(0,$e.jsx)(ke,{path:"IoT-Substain-Environmental",element:(0,$e.jsx)(Di,{})}),(0,$e.jsx)(ke,{path:"IoT-Substain-Smart",element:(0,$e.jsx)(Pi,{})}),(0,$e.jsx)(ke,{path:"IoT-Substain-IoT-Enabled",element:(0,$e.jsx)(Mi,{})})]}),(0,$e.jsxs)(ke,{path:"/NumPy",element:(0,$e.jsx)(Ui,{}),children:[(0,$e.jsx)(ke,{path:"NumPy-Introduction",element:(0,$e.jsx)(Ki,{})}),(0,$e.jsx)(ke,{path:"NumPy-Getting-Started",element:(0,$e.jsx)($i,{})}),(0,$e.jsx)(ke,{path:"NumPy-Creating-Arrays",element:(0,$e.jsx)(Vi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Array-Indexing",element:(0,$e.jsx)(Gi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Array-Slicing",element:(0,$e.jsx)(qi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Data-Types",element:(0,$e.jsx)(Wi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Array-Copy",element:(0,$e.jsx)(Bi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Array-Shape",element:(0,$e.jsx)(Yi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Array-Reshaping",element:(0,$e.jsx)(zi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Array-Iterating",element:(0,$e.jsx)(Hi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Joining-Array",element:(0,$e.jsx)(Xi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Splitting-Array",element:(0,$e.jsx)(er,{})}),(0,$e.jsx)(ke,{path:"NumPy-Searching-Arrays",element:(0,$e.jsx)(Zi,{})}),(0,$e.jsx)(ke,{path:"NumPy-Sorting-Arrays",element:(0,$e.jsx)(Ji,{})}),(0,$e.jsx)(ke,{path:"NumPy-Filter-Array",element:(0,$e.jsx)(Qi,{})})]}),(0,$e.jsxs)(ke,{path:"/Pandas",element:(0,$e.jsx)(ar,{}),children:[(0,$e.jsx)(ke,{path:"Pandas-Introduction",element:(0,$e.jsx)(dr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Getting-started",element:(0,$e.jsx)(rr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Series",element:(0,$e.jsx)(ir,{})}),(0,$e.jsx)(ke,{path:"Pandas-DataFrames",element:(0,$e.jsx)(sr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Read-CSV",element:(0,$e.jsx)(or,{})}),(0,$e.jsx)(ke,{path:"Pandas-Read-JSON",element:(0,$e.jsx)(lr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Analysing-DataFrames",element:(0,$e.jsx)(cr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Cleaning-Data",element:(0,$e.jsx)(ur,{})}),(0,$e.jsx)(ke,{path:"Pandas-Cleaning-Empty-Cells",element:(0,$e.jsx)(pr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Cleaning-Data-of-Wrong-Format",element:(0,$e.jsx)(mr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Fixing-Wrong-Data",element:(0,$e.jsx)(hr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Removing-Duplicates",element:(0,$e.jsx)(fr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Data-Correlations",element:(0,$e.jsx)(gr,{})}),(0,$e.jsx)(ke,{path:"Pandas-Plotting",element:(0,$e.jsx)(xr,{})}),(0,$e.jsx)(ke,{path:"Pandas-DataFrame-Reference",element:(0,$e.jsx)(_r,{})})]})]})]})};function yr(){var e=fe().pathname;return(0,t.useEffect)((function(){window.scrollTo({top:0,behavior:"smooth"})}),[e]),null}a.createRoot(document.getElementById("root")).render((0,$e.jsxs)(He,{children:[(0,$e.jsx)(yr,{}),(0,$e.jsx)(br,{})]}))}()}();
//# sourceMappingURL=main.82be48b4.js.map